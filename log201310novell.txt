.LOG
11:29 2013-10-09
1, compile A20 kernel
ref: http://linux-sunxi.org/Mainline_Kernel_Howto
ARCH=arm CROSS_COMPILE=<toolchain-prefix> LOADADDR=0x40008000 make uImage dtbs

log.sh make LOADADDR=0x40008000 uImage dtbs

2, u-boot spl boot fail
U-Boot SPL 2013.10-rc2-08390-g3d2fc4e (Oct 03 2013 - 10:06:48)
Board: Cubieboard2
DRAM: 1024 MiB
CPU: 960000000Hz, AXI/AHB/APB: 3/2/2
spl: not an uImage at 1600
spl: not an uImage at 80
### ERROR ### Please RESET the board ###

1), this is because i use the wrong u-boot binary and offset
ref: http://linux-sunxi.org/Bootable_SD_card 
Bootloader
1 dd if=spl/sunxi-spl.bin of=$card bs=1024 seek=8
2 dd if=u-boot.img of=$card bs=1024 seek=40
If using u-boot v2013.07 or earlier then the procedure is slightly different
1 dd if=spl/sunxi-spl.bin of=$card bs=1024 seek=8
2 dd if=u-boot.bin of=$card bs=1024 seek=32

3, 
http://linux-sunxi.org/Mainline_Kernel_Howto
Warning: Before giving control to the kernel the U-Boot will move the loaded binaries to some different addresses and ignore the fact, the kernel needs much more space for extracting itselt. This causes a dtb to be overwritten and failure to boot. This of course should be fixed in U-Boot but a workaround for now is to set fdt_high:
env set fdt_high ffffffff

4, try xen
U-Boot SPL 2013.10-rc2-08390-g3d2fc4e (Oct 03 2013 - 10:06:48)
Board: Cubieboard2
DRAM: 1024 MiB
CPU: 960000000Hz, AXI/AHB/APB: 3/2/2
spl: not an uImage at 1600


U-Boot 2013.10-rc2-00585-gb5a4ae8 (Oct 09 2013 - 16:31:44) Allwinner Technology

CPU:   Allwinner A20 (SUN7I)
Board: Cubieboard2
I2C:   ready
DRAM:  1 GiB
MMC:   SUNXI SD/MMC: 0
*** Warning - bad CRC, using default environment

In:    serial
Out:   serial
Err:   serial
Net:   emac
Hit any key to stop autoboot:  0 
sun7i# fatload mmc 0 45000000 xen<INTERRUPT>
sun7i# fatload mmc 0 50000000 xen-uImage        
reading xen-uImage
956136 bytes read in 88 ms (10.4 MiB/s)
sun7i# bootm 5000000
Wrong Image Format for bootm command
ERROR: can't get kernel image!
sun7i# bootm 50000000
## Booting kernel from Legacy Image at 50000000 ...
   Image Name:   
   Created:      2013-10-09   8:42:13 UTC
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    956072 Bytes = 933.7 KiB
   Load Address: 40200000
   Entry Point:  40200000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
WARNING: ignoring attempt to set core boot address 7ff88454 on core -1
WARNING: Not kicking secondary CPUs

Starting kernel ...

- UART enabled -
- CPU 00000000 booting -
- Xen starting in Hyp mode -
- Zero BSS -
- Setting up control registers -
- Turning on paging -
- Ready -
RAM: 0000000040000000 - 00000000bfffffff

MODULE[1]: 00000000402e7700 - 00000000402e96a8 
MODULE[2]: 0000000060000000 - 0000000060600000 
Placing Xen at 0x00000000bfe00000-0x00000000c0000000
Xen heap: 00000000ae000000-00000000be000000 (65536 pages)
Dom heap: 458752 pages
Looking for UART console serial0
 __  __            _  _   _  _                      _        _     _      
 \ \/ /___ _ __   | || | | || |     _   _ _ __  ___| |_ __ _| |__ | | ___ 
  \  // _ \ '_ \  | || |_| || |_ __| | | | '_ \/ __| __/ _` | '_ \| |/ _ \
  /  \  __/ | | | |__   _|__   _|__| |_| | | | \__ \ || (_| | |_) | |  __/
 /_/\_\___|_| |_|    |_|(_) |_|     \__,_|_| |_|___/\__\__,_|_.__/|_|\___|
                                                                          
(XEN) Xen version 4.4-unstable (bamvor@(none)) (arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.8-2013.04-20130417 - Linaro GCC 2013.04) 4.8.1 20130401 (prerelease)) debug=y Wed Oct  9 16:40:45 CST 2013
(XEN) Latest ChangeSet: Mon Oct 7 09:42:51 2013 +0200 git:84f04d8
(XEN) Console output is synchronous.
(XEN) Processor: 410fc074: "ARM Limited", variant: 0x0, part 0xc07, rev 0x4
(XEN) 32-bit Execution:
(XEN)   Processor Features: 00001131:00011011
(XEN)     Instruction Sets: AArch32 Thumb Thumb-2 ThumbEE Jazelle
(XEN)     Extensions: GenericTimer Security
(XEN)   Debug Features: 02010555
(XEN)   Auxiliary Features: 00000000
(XEN)   Memory Model Features: 10101105 40000000 01240000 02102211
(XEN)  ISA Features: 02101110 13112111 21232041 11112131 10011142 00000000
(XEN) WARNING: Unrecognized/unsupported device tree compatible list
(XEN) Available platform support:
(XEN)     - VERSATILE EXPRESS
(XEN)     - SAMSUNG EXYNOS5
(XEN)     - CALXEDA MIDWAY
(XEN)     - TI OMAP5
(XEN) 
(XEN) ****************************************
(XEN) Panic on CPU 0:
(XEN) Unable to find a compatible timer in the device tree
(XEN) ****************************************
(XEN) 
(XEN) Reboot in five seconds...

5, hang after
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b544>
[    7.972417] init/main.c:755<do_initcall_level>: fn<c056b544>
[    7.978012] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b548>
[    7.989537] init/main.c:755<do_initcall_level>: fn<c056b548>
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b54c>
[    8.000455] init/main.c:755<do_initcall_level>: fn<c056b54c>
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b550>
[    8.011389] init/main.c:755<do_initcall_level>: fn<c056b550>
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b554>
ï¿½    8.022318] init/main.c:755<do_initcall_level>: fn<c056b554>

c056b554 t __initcall_clk_disable_unused7s
it may be the same reasone why the native kernel boot fail. but it could not expain why there is no output. unless the console init is after the clk_disable_unused. 
using boot parameter clk_ignore_unused ignore this function.
(later, when i want to add clk_ignore_unused in native kernel, i found that there is no bootargs in sun7i dts, so no uart is set for printk, \TODO: a patch for linux-sunxi?)

6, xen: fail at mount fs
[    7.979703] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b548>
[    7.991228] init/main.c:755<do_initcall_level>: fn<c056b548>
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b54c>
[    8.002144] init/main.c:755<do_initcall_level>: fn<c056b54c>
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b550>
[    8.013077] init/main.c:755<do_initcall_level>: fn<c056b550>
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b554>
[    8.024007] init/main.c:755<do_initcall_level>: fn<c056b554>
[    8.029586] clk: Not disabling unused clocks
(XEN) DOM0: init/main.c:755<do_initcall_level>: fn<c056b558>
[    8.039141] init/main.c:755<do_initcall_level>: fn<c056b558>
(XEN) DOM0: init/main.c:794<do_basic_setup>
[    8.048608] init/main.c:794<do_basic_setup>
(XEN) DOM0: init/main.c:911<kernel_init_freeable>
[    8.057161] init/main.c:911<kernel_init_freeable>
(XEN) DOM0: init/main.c:918<kernel_init_freeable>
[    8.066756] init/main.c:918<kernel_init_freeable>
(XEN) DOM0: init/main.c:920<kernel_init_freeable>
[    8.075790] init/main.c:920<kernel_init_freeable>
(XEN) DOM0: init/main.c:930<kernel_init_freeable>
[    8.084856] init/main.c:930<kernel_init_freeable>
[    8.089589] Waiting for root device ...

7, try usb storage.

8, partition sdcard
dd if=/dev/zero of=$card bs=1M count=1
sfdisk -R $card
cat <<EOT | sfdisk --in-order -uM $card
1,100,c
,,L
EOT
mkfs.vfat ${card}1
mkfs.ext4 ${card}2

9, native kernel fail at load initrd
[    0.438615] Unpacking initramfs...
[    0.442118] Unable to handle kernel paging request at virtual address ffb90000
[    0.449414] pgd = c0004000
[    0.452203] [ffb90000] *pgd=00000000
[    0.455876] Internal error: Oops: 5 [#1] SMP ARM
[    0.460577] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.12.0-rc1-00021-g086e532-dirty #13
[    0.468827] task: ef05c000 ti: ef056000 task.ti: ef056000
[    0.474313] PC is at unpack_to_rootfs+0xc8/0x2a0
[    0.479011] LR is at unpack_to_rootfs+0x54/0x2a0
[    0.483709] pc : [<c051eb94>]    lr : [<c051eb20>]    psr: 20000153
[    0.483709] sp : ef057e90  ip : 00000000  fp : c051e778
[    0.495340] r10: c0585240  r9 : c0544378  r8 : c0544378
[    0.500642] r7 : ffb90000  r6 : 002d7c00  r5 : c05aa7f0  r4 : c0544378
[    0.507245] r3 : ef1b8000  r2 : c051eb20  r1 : 00000000  r0 : ef026000
[    0.513849] Flags: nzCv  IRQs on  FIQs off  Mode SVC_32  ISA ARM  Segment kernel
[    0.521318] Control: 10c5387d  Table: 4000406a  DAC: 00000015
[    0.527140] Process swapper/0 (pid: 1, stack limit = 0xef056240)
[    0.533223] Stack: (0xef057e90 to 0xef058000)
[    0.537662] 7e80:                                     c05442ec c058523c c0585200 ef056028
[    0.545915] 7ea0: 00000000 00000000 00000000 c0408064 c04a34e8 c0585238 c0585238 c058523c
[    0.554169] 7ec0: c0585200 ef056028 c051f234 c05442fc 00000000 c051f29c 00000005 c05442ec
[    0.562422] 7ee0: c0585200 c051db18 ef011900 c04a99dc ef0ab480 c04113fc 00000000 00000001
[    0.570675] 7f00: 00000000 c055de60 60000153 00000001 00000003 00000000 c0dca5e1 c041fb24
[    0.578928] 7f20: 000000b1 c0034e50 c04f793c 00000005 c0dca5f2 00000005 c055de50 00000005
[    0.587182] 7f40: c05442ec c0585200 c0585200 c051d4dc 000000b1 c05442fc c054c800 c051de94
[    0.595435] 7f60: 00000005 00000005 c051d4dc ffffffff ffffffff ffffffff ffffffff 00000000
[    0.603688] 7f80: c0585200 00000000 00000000 00000000 00000000 00000000 00000000 c0406db8
[    0.611942] 7fa0: 00000000 00000000 c0406d8c c000e138 00000000 00000000 00000000 00000000
[    0.620195] 7fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[    0.628448] 7fe0: 00000000 00000000 00000000 00000000 00000013 00000000 ffffffff ffffffff
[    0.636719] [<c051eb94>] (unpack_to_rootfs+0xc8/0x2a0) from [<c051f29c>] (populate_rootfs+0x68/0xb4)
[    0.645930] [<c051f29c>] (populate_rootfs+0x68/0xb4) from [<c051db18>] (do_one_initcall+0x9c/0x13c)
[    0.655055] [<c051db18>] (do_one_initcall+0x9c/0x13c) from [<c051de94>] (kernel_init_freeable+0x2dc/0x45c)
[    0.664787] [<c051de94>] (kernel_init_freeable+0x2dc/0x45c) from [<c0406db8>] (kernel_init+0x2c/0x268)
[    0.674175] [<c0406db8>] (kernel_init+0x2c/0x268) from [<c000e138>] (ret_from_fork+0x14/0x3c)
[    0.682778] Code: e35c0000 1a000052 e3560000 0a000050 (e5d73000) 
[    0.688980] ---[ end trace b5ab4f577dfa413b ]---
[    0.693750] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
[    0.693750] 

10, try xen with initrd in dt.
1), enable arch timer in sun7i.h
#define CONFIG_SYS_CLK_FREQ     24000000
2), add initrd in dt
3), fail after free memory
[    4.557412] Freeing unused kernel memory: 204K (c053a000 - c056d000)
[    4.563608] Internal error: Oops - undefined instruction: 0 [#1] SMP ARM
[    4.570245] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.12.0-rc1-00021-g086e532-dirty #14
[    4.578327] task: cf85a000 ti: cf85c000 task.ti: cf85c000
[    4.583709] PC is at early_print+0x0/0x50
[    4.587712] LR is at kernel_init+0x88/0x268
[    4.591899] pc : [<c053cc44>]    lr : [<c041e040>]    psr: 60000153
[    4.591899] sp : cf85dfa0  ip : 00000001  fp : 00000000
[    4.603312] r10: 00000000  r9 : 00000000  r8 : 00000000
[    4.608514] r7 : 00000000  r6 : 00000000  r5 : c05a3dc0  r4 : 00000000
[    4.614998] r3 : c0427038  r2 : 00000342  r1 : c04bcd34  r0 : c04bce68
[    4.621479] Flags: nZCv  IRQs on  FIQs off  Mode SVC_32  ISA ARM  Segment kernel
[    4.628812] Control: 10c5387d  Table: 4000406a  DAC: 00000015
[    4.634525] Process swapper/0 (pid: 1, stack limit = 0xcf85c240)
[    4.640495] Stack: (0xcf85dfa0 to 0xcf85e000)
[    4.644849] dfa0: 00000000 00000000 c041dfb8 c000e4b8 00000000 00000000 00000000 00000000
[    4.652949] dfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[    4.661051] dfe0: 00000000 00000000 00000000 00000000 00000013 00000000 ffffffff ffffffff
[    4.669162] Code: e7fddef0 e7fddef0 e7fddef0 e7fddef0 (e7fddef0) 
[    4.675208] ---[ end trace a4e43cf9d0a5cb21 ]---
[    4.679999] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
[    4.679999] 
(10:44 2013-10-10)
yestoday, i thought it is fail at early_print +0x50. how foolish am i. the mean is fail at the 0x0/0x50 of early_print.
"10:44 2013-10-10"end

11, \TODO
1), contact Josh and try to get him image.
or i should use the same version with Josh and Ian C.
2), try usb storage device as root.

13:27 2013-10-09
ä¹°æ¥æµè¯äºè§é¢æ­æ¾ç­åè½ï¼å¾æµçï¼æ çº¿ä¿¡å·ä¹ä¸éã
å¶å®ä¹°æ¥ä¸»è¦æ¯ä¸ºäºèªå·±å¼åç¨ï¼å·²ç»å¼åºäºä¸²å£ãæ­£å¨å®éªLinux kernelåxenã
æ»çæ¥è¯´æ¯ä¸æ¬¾æ§ä»·æ¯å¾é«ççå­ã

14:01 2013-10-09
GTD
0, 10:40

1, today
1), 30' discuss kiwi with Lidong zhong.

16:10 2013-10-09
yastéé¢è¯»ç½å¡åºè¯¥æ¯è¯»ç"/etc/sysconfig/network/if-xxx", å³ä½¿æ æéç½®æä»¶ä¹ä¼æ¾ç¤ºãä½æ¯ifconfigæ¯ä»åæ ¸è¯»åçä¿¡æ¯ï¼æä»¥ä¸ä¼ç°å®ä¸å­å¨çç½å¡ã

17:43 2013-10-09
[PATCH RFC 0/8] xen/arm: very initial cubieboard2 support.
The following patches are a very early set of cubieboard patches, based 
on latest staging, eb786f709249666e1f7364706f94be1a6c4e04da 

Several are not to be applied because they can be done better using 
infrastructure from Julien's "Allow Xen to boot with a raw Device Tree" 
patch. They are included for completeness. 

With this I can boot up until dom0 panics due to lack of a root 
filesystem. This is because upstream Linux currently lacks any useful 
storage drivers (SATA, USB host, MMC). Hopefully this will resolve 
itself soon! 

The bulk of this is the hacking around of the ns16550 driver to support 
ARM platforms and DTB. 

It's currently a bit of a faff to get going. Hopefully the following is 
helpful: 

u-boot 
====== 

https://github.com/linux-sunxi/u-boot-sunxi.git linux-sunxi/sunxi 
commit e94cff93c273b0825bea135e0f559f5580156fa6 

Plus git://git.linaro.org/people/aprzywara/u-boot.git hypmode_v4 
commit 5068b337518617586f2e51b6d616c54dbec4fa62 

Plus patches for hypmode on sunxi and to initialise CNTFRQ. 

All of which can be found in 
git://xenbits.xen.org/people/ianc/u-boot.git devel/cubieboard2 

Built with: 
make Cubieboard2_FEL CROSS_COMPILE=arm-linux-gnueabihf- 

Linux 
===== 

Linux tree: 
https://github.com/mripard/linux.git sunxi/dt-for-3.12 
commit 82abe5294aeadc42508c7944f3a9aec0eece214c 

Using in tree DTS arch/arm/boot/dts/sun7i-a20-cubieboard2.dts with the 
following patch. 

Build Image and dtbs in the usual way 

Xen 
=== 

Build in the usual way. 

Xen can use CONFIG_EARLY_PRINTK=sun7i. 

Booting 
======= 

I am using FEL boot per http://linux-sunxi.org/FEL/USBBoot and 
http://linux-sunxi.org/FEL using the fel-sdboot.sunxi on MMC 
mechanism. 

linux-sunxi tools from git://github.com/linux-sunxi/sunxi-tools.git 
commit b398456630b310dbf31c7515e8d6af37903c4975 and: 

./usb-boot ~/devel/u-boot.git/spl/u-boot-spl.bin ~/devel/u-boot.git/u-boot.bin \ 
bootxen.scr ~/devel/xen.git/xen/xen \ 
~/devel/linux.git/arch/arm/boot/dts/sun7i-a20-cubieboard2.dtb 
~/devel/linux.git/arch/arm/boot/zImage 

bootxen.scr is: 
$ cat bootxen 
setenv bootargs dtuart=serial0 earlyprint loglvl=all conswitch=x 
bootz 0x44000000 - 0x43000000 
$ mkimage -T script -A arm -d bootxen bootxen.scr 

DTS patch 
========= 


diff --git a/arch/arm/boot/dts/sun7i-a20-cubieboard2.dts b/arch/arm/boot/dts/sun7i-a20-cubieboard2.dts 
31b76f0..6c0c387 100644 
--- a/arch/arm/boot/dts/sun7i-a20-cubieboard2.dts 
+++ b/arch/arm/boot/dts/sun7i-a20-cubieboard2.dts 
@@ -18,6 +18,21 @@ 
model = "Cubietech Cubieboard2"; 
compatible = "cubietech,cubieboard2", "allwinner,sun7i-a20"; 

+ chosen { 
+ #address-cells = <1>; 
+ #size-cells = <1>; 
+ 
+ module@0 { 
+ compatible = "xen,linux-zimage", "xen,multiboot-module"; 
+ bootargs = "console=hvc0 earlyprintk "; 
+ reg = <0x50000000 0x800000>; 
+ }; 
+ }; 
+ 
+ aliases { 
+ serial0 = &uart0; 
+ }; 
+ 
soc [at] 01c0000 { 
pinctrl [at] 01c2080 { 
led_pins_cubieboard2: led_pins@0 { 
diff --git a/arch/arm/boot/dts/sun7i-a20.dtsi b/arch/arm/boot/dts/sun7i-a20.dtsi 
index f4e4524..bfc5dc2 100644 
--- a/arch/arm/boot/dts/sun7i-a20.dtsi 
+++ b/arch/arm/boot/dts/sun7i-a20.dtsi 
@@ -26,11 +26,6 @@ 
reg = <0>; 
}; 

- cpu@1 { 
- compatible = "arm,cortex-a7"; 
- device_type = "cpu"; 
- reg = <1>; 
- }; 
}; 

memory { 
@@ -55,6 +55,14 @@ 
}; 
}; 

+ timer { 
+ compatible = "arm,armv7-timer"; 
+ interrupts = <1 13 0xf08>, 
+ <1 14 0xf08>, 
+ <1 11 0xf08>, 
+ <1 10 0xf08>; 
+ }; 
+ 
soc [at] 01c0000 { 
compatible = "simple-bus"; 
#address-cells = <1>; 
@@ -94,17 +102,6 @@ 
}; 
}; 

- timer [at] 01c20c0 { 
- compatible = "allwinner,sun4i-timer"; 
- reg = <0x01c20c00 0x90>; 
- interrupts = <0 22 1>, 
- <0 23 1>, 
- <0 24 1>, 
- <0 25 1>, 
- <0 67 1>, 
- <0 68 1>; 
- clocks = <&osc24M>; 
- }; 

wdt: watchdog [at] 01c20c9 { 
compatible = "allwinner,sun4i-wdt"; 

22:34 2013-10-09
xen, arm
help from agraf and citrix.
1, Julien Grall <julien.grall@citrix.com> reply "Re: Arndale dts patch"
Hi Alexander and Bamvor,

The device tree support on Xen upstream is far better than in July. Most
of the instructions I gave you is not anymore relevant.

You can read the Arndale wiki page:
http://wiki.xen.org/wiki/Xen_ARM_with_Virtualization_Extensions/Arndale

I don't think the instructions will be very different for the A7 based
systems.

We have a #xenarm channel on Freenode. Feel free to join it and ask
questions.

Cheers,

On 10/04/2013 12:04 PM, Alexander Graf wrote:
> Hi Julien,
> 
> For next week's hackweek, Bamvor is planning to bring up Xen on ARM in OpenSUSE. IIUC he's looking at A7 based systems rather than Exynos5, but I'll let him speak about that for himself.
> 
> Bamvor, I'm sure Citrix would be more than happy to help you in your Hackweek project to get Xen on ARM up to speed for openSUSE!
> 
> 
> Alex
> 
> On 09.07.2013, at 12:21, Julien Grall wrote:
> 
>> Hi Alexander,
>>
>> As I told you on IRC, for the moment Xen is not able to remove automatically nodes
>> in the device tree.
>>
>> The patch in attachment will:
>>  - Remove non-working node with Dom0
>>  - Disable UART-2 which is used by Xen
>>  - Harcoded linux and Xen command lines
>>
>> For the latter, I have 2 patches (one for Xen, and one for Linux) to avoid that, but I did not have time
>> to test it.
>>
>> In order to boot xen on the arndale, you need to:
>>  - Apply my previous patch to only have one big u-boot memory bank
>>  - Create an uImage for Xen:
>> mkimage -A arm -T kernel -a 0x80200000 -e 0x80200000 -C none -d "$xen_src/xen/xen.bin" xen-uImage 
>>  - Modify U-boot environment to set up Xen boot command. For instance I'm using this environment:
>> setenv kernel_addr_r 0x60000000
>> setenv xen_addr_r 0x50000000
>> setenv bootcmd_load_linux_mmc 'ext2load mmc 1:0 $kernel_addr_r /zImage'
>> setenv boot_xen_mmc 'run bootcmd_load_linux_mmc; ext2load mmc 1:0 $xen_addr_r /xen-uImage; bootm $xen_addr_r -'
>> setenv bootcmd 'run boot_xen_mmc'
>>
>> The zImage NEEDS to be loaded at 0x60000000. The address is harcoded in the DTS as U-boot/Xen doesn't yet support
>> multiboot. As for Linux bare metal boot, you can give the dts directly to bootm.
>>
>> It's not possible to use an initrd with Linux. It's missing some plumbing in Xen to load
>> modules in Dom0 and tell to Linux where is the initrd. Is it a big issue for you?
>>
>> Cheers,
>>
>> -- 
>> Julien<xen-dts.patch>
> 


-- 
Julien Grall

2, reply
thanks your help in advance.
> Hi Alexander and Bamvor,
> 
> The device tree support on Xen upstream is far better than in July. Most
> of the instructions I gave you is not anymore relevant.
> 
> You can read the Arndale wiki page:
> http://wiki.xen.org/wiki/Xen_ARM_with_Virtualization_Extensions/Arndale
> 
> I don't think the instructions will be very different for the A7 based
> systems.
yes, i am following the above instruction. currently, it fail at rootfs mount
in both xen dom0 boot and native kernel boot. considering the dom0 boot is
successfull as Ian and Josh said in last month. I guess that there is something
wrong in kernel. 
> 
> We have a #xenarm channel on Freenode. Feel free to join it and ask
> questions.
i will, thanks.
> 
> Cheers,

regards

bamvor

10:32 2013-10-10
GTD
0, 9:50

1, today
1), 10:00-11:50 13:49- 20:50-23:13 xen on arm: a20. see"10:33 2013-10-10"

10:33 2013-10-10
xen, arm, sun7i
1, xen may be fail in early_print with a20 uart.
remove the early_print in xen dom0 kernel.

2, got the similar error on upstream kernel compare with yestoday result
[    0.292357] Unpacking initramfs...
[    0.295855] Unable to handle kernel paging request at virtual address ffa55000
[    0.303151] pgd = c0004000
[    0.305939] [ffa55000] *pgd=00000000
[    0.309613] Internal error: Oops: 5 [#1] SMP ARM
[    0.314314] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.12.0-rc4-00029-g0e7a3ed #2
[    0.321958] task: ef05c000 ti: ef056000 task.ti: ef056000
[    0.327445] PC is at unpack_to_rootfs+0xc8/0x2a0
[    0.332142] LR is at unpack_to_rootfs+0x54/0x2a0
[    0.336840] pc : [<c0514914>]    lr : [<c05148a0>]    psr: 20000153
[    0.336840] sp : ef057e90  ip : 00000000  fp : c05144f8
[    0.348471] r10: c0579100  r9 : c05399f8  r8 : c05399f8
[    0.353773] r7 : ffa55000  r6 : 00412a00  r5 : c059e6b0  r4 : c05399f8
[    0.360376] r3 : ef1b8000  r2 : c05148a0  r1 : 00000000  r0 : ef026000
[    0.366980] Flags: nzCv  IRQs on  FIQs off  Mode SVC_32  ISA ARM  Segment kernel
[    0.374450] Control: 10c5387d  Table: 4000406a  DAC: 00000015
[    0.380272] Process swapper/0 (pid: 1, stack limit = 0xef056240)
[    0.386355] Stack: (0xef057e90 to 0xef058000)
[    0.390794] 7e80:                                     c053996c c05790fc c05134dc ef056028
[    0.399048] 7ea0: 00000000 00000000 00000000 c04026c4 c049cd6c c05790f8 c05790f8 c05790fc
[    0.407301] 7ec0: c05134dc ef056028 c0514fb4 c05790c0 00000000 c051501c 00000005 c053996c
[    0.415554] 7ee0: c05790c0 c0513b18 ef011900 c04a3358 ef0a9c80 c040b3b4 00000000 00000001
[    0.423807] 7f00: 00000000 c0551de0 60000153 00000001 00000003 00000000 c0dbe5e1 c0419ae4
[    0.432061] 7f20: 000000b1 c0035030 c04ed6f4 00000005 c0dbe5f2 00000005 c0551dd0 00000005
[    0.440314] 7f40: c053996c c05790c0 c05134dc c053997c 000000b1 c05790c0 c054196c c0513cf8
[    0.448567] 7f60: 00000005 00000005 c05134dc ffdfffff ffffffff ffffffff ffffffff 00000000
[    0.456820] 7f80: 000090c0 00000000 00000000 00000000 00000000 00000000 00000000 c04013e0
[    0.465073] 7fa0: 00000000 00000000 c04013d4 c000e1b8 00000000 00000000 00000000 00000000
[    0.473326] 7fc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000
[    0.481579] 7fe0: 00000000 00000000 00000000 00000000 00000013 00000000 ffffffff fffffbff
[    0.489850] [<c0514914>] (unpack_to_rootfs+0xc8/0x2a0) from [<c051501c>] (populate_rootfs+0x68/0xb4)
[    0.499061] [<c051501c>] (populate_rootfs+0x68/0xb4) from [<c0513b18>] (do_one_initcall+0x9c/0x13c)
[    0.508185] [<c0513b18>] (do_one_initcall+0x9c/0x13c) from [<c0513cf8>] (kernel_init_freeable+0x140/0x1dc)
[    0.517918] [<c0513cf8>] (kernel_init_freeable+0x140/0x1dc) from [<c04013e0>] (kernel_init+0xc/0x160)
[    0.527222] [<c04013e0>] (kernel_init+0xc/0x160) from [<c000e1b8>] (ret_from_fork+0x14/0x3c)
[    0.535740] Code: e35c0000 1a000052 e3560000 0a000050 (e5d73000) 
[    0.541945] ---[ end trace aff3c26080dcb3b3 ]---
[    0.546713] Kernel panic - not syncing: Attempted to kill init! exitcode=0x0000000b
[    0.546713] 

3, try josh kernel(including rootfs).
1), try josh kernel(including rootfs).pass.
2), try my kernel(dt-for-3.12) with josh rootfs. pass.
log:
(XEN) DOM0: [    4.544097] Trying to unpack rootfs image as initramfs...
(XEN) DOM0: [    4.896439] rootfs image is not initramfs (junk in compressed archive); looks like an initrd
(XEN) DOM0: [    4.940295] Freeing initrd memory: 10240K (c8200000 - c8c00000)
(XEN) DOM0: [    4.947432] NetWinder Floating Point Emulator V0.97 (extended precision)
(XEN) DOM0: [    4.965281] NFS: Registering the id_resolver key type
(XEN) DOM0: [    4.971354] Key type id_resolver registered
(XEN) DOM0: [    4.976482] Key type id_legacy registered
(XEN) DOM0: [    4.981713] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
(XEN) DOM0: [    4.990053] io scheduler noop registered
(XEN) DOM0: [    4.994911] io scheduler deadline registered
(XEN) DOM0: [    5.000236] io scheduler cfq registered (default)
(XEN) DOM0: [    5.007141] xen:xen_evtchn: Event-channel device installed
[    5.060854] console [hvc0] enabled, bootconsole disabled
(XEN) DOM0: [    5.060854] console [hvc0] enabled, bootconsole disabled
[    5.072380] Serial: IMX driver

[    5.216771] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[    5.223023] clk: Not disabling unused clocks
[    5.233318] Freeing unused kernel memory: 5180K (c0662000 - c0b71000)

login[47]: root login on 'hvc0'
#

3), xen: try my kernel(dt-for-3.12) with my rootfs.
fail
[    4.739263] clk: Not disabling unused clocks
[    4.744347] RAMDISK: Couldn't find valid RAM disk image starting at 0.
[    4.750773] Waiting for root device ...

èªå·±åçrootfsæä¹ä¹ä¸è¡ï¼æç¤º
[    4.656094] clk: Not disabling unused clocks
[    4.663238] Freeing unused kernel memory: 2072K (c0662000 - c0868000)
Starting logging: OK
Initializing random number generator... done.
Starting network...
can't open /dev/hvc0: No such file or directory

4), when my native kernel rootfs in uImage.
it fail at 
Starting kernel ...

Uncompressing Linux... done, booting the kernel.

Error: unrecognized/unsupported machine ID (r1 = 0x000010bb).

Available machine support:

this need a workaround:
env set fdt_high ffffffff
because: http://linux-sunxi.org/Mainline_Kernel_Howto
Warning: Before giving control to the kernel the U-Boot will move the loaded binaries to some different addresses and ignore the fact, the kernel needs much more space for extracting itselt. This causes a dtb to be overwritten and failure to boot. This of course should be fixed in U-Boot but a workaround for now is to set fdt_high:

5), xen dom0 successful config
log/novell/hypervisor_and_tools/xen/arm/20131010/xen_successful
kernel version: 82abe5294 remotes/mripard/sunxi/dt-for-3.12
xen: staging: c4d3ccbf
u-boot: 
3d2fc4e8 remotes/origin/sunxi 
with remotes/aprzywara/hypmode_v4
with Ian C patch from http://lists.xen.org/archives/html/xen-devel/2013-08/msg03040.html, save in local.
(10:53 2013-10-15)
i forgot the save the dts for xen dom0...
"10:53 2013-10-15"end

6), boot xen dom0 with usb driver. 
1), without binding to a100. successful.

4, try network
# mount -v -t nfs 147.2.207.77:/home/bamvor/sda3/home /mnt 
[  255.466416] svc: failed to register lockdv1 RPC service (errno 5).
mount: mounting 147.2.207.77:/home/bamvor/sda3/home on /mnt failed: Input/output error
# 

ref: http://blog.163.com/yihui_wang/blog/static/186215490201151114941634/
mount -v -o nolock -t nfs 147.2.207.77:/home/bamvor/sda3/home /mnt

but could not reach the outside subnet. only 147.2.207.xxx is ok.

1), try to build xen tools through nfs.

5, NFS boot options.
https://www.kernel.org/doc/Documentation/filesystems/nfs/nfsroot.txt

6, (21:33 2013-10-10)
try to build xen-tools, found a network issue: http://permalink.gmane.org/gmane.linux.network/240598, could be fix: http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=1ca7ee30630e1022dbcf1b51be20580815ffab73
suggest add this in linux-sunxi.

7, nfs server, not reponsing. maybe solved by using tcp instead udp protocol and limit the package size(?) when a embedded board communcate with pc.
there is no this problem in office.

10:25 2013-10-11
GTD
0, 9:50

1, today
1), Shawn. FM, GSMæå.
2), 10:25-11:54 xen: arm: sun7i. see"10:25 2013-10-11"

10:25 2013-10-11
xen, arm, sun7i
1, try xen tools on sun7i.
1), 
# /usr/local/sbin/xenstored --pid-file /var/run/xenstored.pid
/usr/local/sbin/xenstored: error while loading shared libraries: libxenctrl.so.4.3: cannot open shared object file: No such file or directory

# echo $LD_LIBRARY_PATH
# export LD_LIBRARY_PATH=/usr/local/lib
2), 
# /etc/init.d/xencommons start
Starting C xenstored....WARNING: Failed to open connection to gnttab
FATAL: Failed to open evtchn device: No such file or directory

3), æ¨å¤©æ¢äºkernelç¼è¯è¿ä¸è¡ï¼è¦éå¯¹å½åçæ¬kernelç¼è¯æå¯ä»¥.
æåéäºï¼koè¯å®æ¯ç¼è¯kernelæ¶çæçï¼æ·è¿æ¥å°±è¡äºã 
ä½æ¯æ¨å¤©ç¼è¯çæ¶åæ²¡æå¼module:
Enable loadable module support

4), if i do not mount nfs as root, lots of sript will not run. 

2, mount nfs not work when rootfs included in kernel.
1), remove the rootfs, retry, fail, the log
[    0.000000] Kernel command line: noinitrd rootfstype=nfs console=hvc0,115200n8 debug ignore_loglevel rw rootwait earlyprintk=xen clk_ignore_unused root=/dev/nfs nfsroot=147.2.207.160:/mnt/opensuse_root,no_lock,tcp ip=147.2.207.79:147.2.207.160:147.2.207.254:255.255.255.0

[    4.597655] IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
[    4.833771] usb 1-1: new high-speed USB device number 2 using sunxi-ehci
[    6.703354] libphy: 1c0b080.mdio-mii:01 - Link is Up - 100/Full
[    6.709128] IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    6.723386] IP-Config: Complete:
[    6.726495]      device=eth0, hwaddr=16:46:82:0c:ee:f4, ipaddr=147.2.207.79, mask=255.255.255.0, gw=147.2.207.254
[    6.736775]      host=147.2.207.79, domain=, nis-domain=(none)
[    6.742439]      bootserver=147.2.207.160, rootserver=147.2.207.160, rootpath=

2), using result while mount nfs after boot.
147.2.207.160:/mnt/opensuse_root on /mnt type nfs (rw,relatime,vers=3,rsize=1048576,wsize=1048576,namlen=255,hard,nolock,proto=tcp,port=2049,timeo=70,retrans=3,sec=sys,local_lock=all,addr=147.2.207.160)
2), using result while mount nfs after boot.
147.2.207.160:/mnt/opensuse_root on /mnt type nfs (rw,relatime,vers=3,rsize=1048576,wsize=1048576,namlen=255,hard,nolock,proto=tcp,port=2049,timeo=70,retrans=3,sec=sys,local_lock=all,addr=147.2.207.160)

3, 
FATAL: Failed to initialize dom0 state: Inappropriate ioctl for device

4, ä¼¼ä¹è¶è¿è·¯ä¸è¡ï¼try to use opensuse initrd and opensuse nfs root fs.
and later try compile xen module instead of compile into kernel.
1), 
[    5.055580] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[    5.061782] clk: Not disabling unused clocks
[    5.066672] RAMDISK: gzip image found at block 0
[    5.192861] RAMDISK: incomplete write (1199 != 7747)
[    5.197693] write error
[    5.200354] Waiting for root device ...

2), enlarge the ramdisk size in kernel, got another error
[    5.066717] init/main.c:906<kernel_init_freeable>: sys_access fail
[    5.072513] init/do_mounts.c:575<prepare_namespace>: call initrd_loadinit/do_mounts_initrd.c:127<initrd_load>
[    5.082284] init/do_mounts_initrd.c:129<initrd_load>: noinitrd not setinit/do_mounts_rd.c:198<rd_load_image>
[    5.092114] RAMDISK: gzip image found at block 0
[    5.096853] init/do_mounts_rd.c:352<crd_load>[    5.317456] usb 1-1: new high-speed USB device number 2 using sunxi-ehci

[    6.334657] uncompression error
[    6.338047] init/do_mounts_initrd.c:144<initrd_load>
[    6.342709] Waiting for root device ...

3), try to use the no compress image.
fail because i do not use the ext4 format. in current kernel, ext2 and ext3 is not supported:
[    5.420060] drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
[    5.426264] clk: Not disabling unused clocks
[    5.431056] init/main.c:906<kernel_init_freeable>: sys_access fail
[    5.437108] init/do_mounts.c:575<prepare_namespace>: call initrd_load
[    5.443455] init/do_mounts_initrd.c:127<initrd_load>
[    5.448417] init/do_mounts_initrd.c:129<initrd_load>: noinitrd not set
[    5.454940] init/do_mounts_rd.c:198<rd_load_image>
[    5.459750] RAMDISK: ext2 filesystem found at block 0
[    5.464747] RAMDISK: Loading 98304KiB [1 disk] into ram disk... [    5.681270] usb 1-1: new high-speed USB device number 2 using sunxi-ehci
done.
[    7.058015] init/do_mounts_initrd.c:138<initrd_load>
[    7.251267] EXT4-fs (ram0): couldn't mount as ext3 due to feature incompatibilities
[    7.259373] EXT4-fs (ram0): mounting ext2 file system using the ext4 subsystem
[    7.267550] EXT4-fs (ram0): mounted filesystem without journal. Opts: (null)
[    7.274474] VFS: Mounted root (ext2 filesystem) on device 1:0.
[    7.280942] EXT4-fs error (device ram0): ext4_get_branch:169: inode #19: block 1734439765: comm kworker/u2:1: invalid block
[    7.292670] VFS: Cannot open root device "(null)" or unknown-block(0,0): error -6
[    7.300009] Please append a correct "root=" boot option; here are the available partitions:
[    7.308313] Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(0,0)
[    7.316422] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.12.0-rc1-00024-g31f10b1-dirty #20
[    7.324555] [<c0020100>] (unwind_backtrace+0x0/0xf4) from [<c001b9a8>] (show_stack+0x10/0x14)
[    7.332975] [<c001b9a8>] (show_stack+0x10/0x14) from [<c04e37cc>] (dump_stack+0x84/0x94)
[    7.341005] [<c04e37cc>] (dump_stack+0x84/0x94) from [<c04e1240>] (panic+0xa4/0x1f0)
[    7.348662] [<c04e1240>] (panic+0xa4/0x1f0) from [<c06e1fc8>] (mount_block_root+0x1a0/0x230)
[    7.357018] [<c06e1fc8>] (mount_block_root+0x1a0/0x230) from [<c06e224c>] (mount_root+0x108/0x110)
[    7.365887] [<c06e224c>] (mount_root+0x108/0x110) from [<c06e2f74>] (initrd_load+0x278/0x388)
[    7.374329] [<c06e2f74>] (initrd_load+0x278/0x388) from [<c06e235c>] (prepare_namespace+0x108/0x1f4)
[    7.383380] [<c06e235c>] (prepare_namespace+0x108/0x1f4) from [<c06e1c84>] (kernel_init_freeable+0x1ec/0x1fc)
[    7.393177] [<c06e1c84>] (kernel_init_freeable+0x1ec/0x1fc) from [<c04dedc8>] (kernel_init+0xc/0x160)
[    7.402302] [<c04dedc8>] (kernel_init+0xc/0x160) from [<c0018538>] (ret_from_fork+0x14/0x3c)

2), fail again, why?
[    7.224151] EXT3-fs (ram0): error: couldn't mount because of unsupported optional features (240)
[    7.233171] EXT2-fs (ram0): error: couldn't mount because of unsupported optional features (240)
[    7.243357] EXT4-fs (ram0): mounted filesystem with ordered data mode. Opts: (null)
[    7.250891] VFS: Mounted root (ext4 filesystem) on device 1:0.
[    7.269919] VFS: Cannot open root device "(null)" or unknown-block(0,0): error -6
[    7.277295] Please append a correct "root=" boot option; here are the available partitions:
[    7.285522] Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(0,0)
[    7.293693] CPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.12.0-rc1-00024-g31f10b1-dirty #21
[    7.301811] [<c0020100>] (unwind_backtrace+0x0/0xf4) from [<c001b9a8>] (show_stack+0x10/0x14)
[    7.310233] [<c001b9a8>] (show_stack+0x10/0x14) from [<c050f84c>] (dump_stack+0x84/0x94)
[    7.318247] [<c050f84c>] (dump_stack+0x84/0x94) from [<c050d080>] (panic+0xa4/0x1f0)
[    7.325934] [<c050d080>] (panic+0xa4/0x1f0) from [<c0717fc8>] (mount_block_root+0x1a0/0x230)
[    7.334276] [<c0717fc8>] (mount_block_root+0x1a0/0x230) from [<c071824c>] (mount_root+0x108/0x110)
[    7.343144] [<c071824c>] (mount_root+0x108/0x110) from [<c0718f74>] (initrd_load+0x278/0x388)
[    7.351587] [<c0718f74>] (initrd_load+0x278/0x388) from [<c071835c>] (prepare_namespace+0x108/0x1f4)
[    7.360628] [<c071835c>] (prepare_namespace+0x108/0x1f4) from [<c0717c84>] (kernel_init_freeable+0x1ec/0x1fc)
[    7.370436] [<c0717c84>] (kernel_init_freeable+0x1ec/0x1fc) from [<c050ac08>] (kernel_init+0xc/0x160)
[    7.379571] [<c050ac08>] (kernel_init+0xc/0x160) from [<c0018538>] (ret_from_fork+0x14/0x3c)

3), need limit the block
mkfs.ext3 -vm0 initrd.ext3 97280
but still fail.

5, notes: pemission denied if not su after mount nfs.
# mount -t nfs -o nolock,tcp,rsize=1024,wsize=1024 192.168.1.104:/mnt/opensuse_r
oot /mnt/
# pivot_root /mnt /mnt/initrd/
# mount -t sysfs sysfs /sys
# mount -t proc proc /proc
# chroot . /sbin/init
Couldn't find an alternative telinit implementation to spawn.
\TODO: ask help about this output.

6, xl hang
# /usr/local/sbin/xl  list
Name                                        ID   Mem VCPUs      State   Time(s)
[  949.027768] INFO: task xl:160 blocked for more than 120 seconds.
[  949.033609]       Not tainted 3.12.0-rc1-00024-g31f10b1-dirty #23
[  949.039687] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
[  949.047435] xl              D c04be768     0   160    135 0x00000001
[  949.053778] [<c04be768>] (__schedule+0x1e8/0x514) from [<c023ab4c>] (read_reply+0xb0/0x14c)
[  949.062041] [<c023ab4c>] (read_reply+0xb0/0x14c) from [<c023b480>] (xenbus_dev_request_and_reply+0x84/0x98)
[  949.071672] [<c023b480>] (xenbus_dev_request_and_reply+0x84/0x98) from [<c023d7e4>] (xenbus_file_write+0x240/0x4cc)
[  949.081982] [<c023d7e4>] (xenbus_file_write+0x240/0x4cc) from [<c00d1fe8>] (vfs_write+0xb4/0x190)
[  949.090765] [<c00d1fe8>] (vfs_write+0xb4/0x190) from [<c00d2178>] (SyS_write+0x3c/0x78)
[  949.098707] [<c00d2178>] (SyS_write+0x3c/0x78) from [<c000e6e0>] (ret_fast_syscall+0x0/0x30)

22:28 2013-10-11
watch
PA9 TX
PA10 RX

æ²¡ååº, ä¹è®¸æ¯BS1, BS2é½çæ¥äº? æå¤©ç¹å¼è¯è¯.

15:23 2013-10-12
hackweek V
open board
openbrd.org

shawn:
fflush, fsyncåæè½ä¿è¯åå°ç¡¬ç.

21:31 2013-10-12
xen, arm, sun7i
1, discuss nfs root mount fail with Boyang, got 2 suggests:
1), permission, mount as root need rw, ro will fail.
2), capture the package check where it fails.
2, for 1-1):
i was mount it in /mnt/opensuse_root which is owned by root. no sure if it will affect the nfs client as ro. 
mount it under /home/bamvor and try it again.

fail with the same error:
# chroot . /sbin/init
Couldn't find an alternative telinit implementation to spawn.

2), 
# ps aux|grep xenstore
missing btime in /proc/stat

the reason is because btime is empty. 

# date -s 20131012
Sat Oct 12 00:00:00 CEST 2013
# date -s 21:52
Sat Oct 12 21:52:00 CEST 2013

it will ok after set the date.

# ps aux|grep xenstored
root       111  0.0  0.1   2332   564 /initrd/dev/hvc0 S+ 21:53   0:00 grep xenstored
# 

2), try xen tools
(1), 
# xenstore-ls
xenstore-ls: error while loading shared libraries: libxenstore.so.3.0: cannot open shared object file: No such file or directory
# export LD_LIBRARY_PATH=/usr/local/lib
# xenstore-ls
xenstore-ls: xs_open: No such file or directory

(2), 
# /usr/local/sbin/xenstored --pid-file /var/run/xenstored.pid
# FATAL: Opening pid file /var/run/xenstored.pid: Permission denied

i fount that i could not create anything except the "/", according to 
http://yupianer.iteye.com/blog/815071
should use no_root_squash instead of root_squash in /etc/export

mount -t nfs -o nolock,tcp,rsize=10240,wsize=10240 192.168.1.104:/home/bamvor/opensuse_root /mnt

error not change
# pivot_root /mnt/ /mnt/initrd/
# cd /
# ls
bin                             etc     kiwi-hooks  opt   run      sys
boot                            home    lib         proc  sbin     tmp
bootincluded_archives.filelist  image   media       qemu  selinux  usr
dev                             initrd  mnt         root  srv      var
# ls initrd/
bin   dev  home  lib      lost+found  opt   root  sys  usr
boot  etc  init  linuxrc  mnt         proc  sbin  tmp  var
# chroot . /sbin/init
Couldn't find an alternative telinit implementation to spawn.
# 

(3), try xen-tools
# /usr/local/sbin/xenstored --pid-file /var/run/xenstored.pid
# xc: error: Could not obtain handle on privileged command interface (2 = No such file or directory): Internal error
FATAL: Failed to open connection to hypervisor: No such file or directory

this is because missing /proc/xen/privcmd(and /proc/xen) in proc. 
and i miss the important step, before start xenstored.
mount -t xenfs xenfs /proc/xen

# mkdir /proc/xen
# mount -t xenfs xenfs /proc/xen
# ls /proc/xen/
capabilities  privcmd  xenbus  xsd_kva  xsd_port

(4), another failure
# /usr/local/sbin/xenstored --pid-file /var/run/xenstored.pid
# FATAL: Failed to initialize dom0 state: Invalid argument

great, i finally got the same result in the company in yestoday.

(5), using gdb to debug it.
(gdb) n
292             rc = xc_evtchn_bind_interdomain(xce_handle, domid, port);
(gdb) s

Program received signal SIGSEGV, Segmentation fault.
0xe7f001f0 in ?? ()

((1)), re-run it
(gdb) s
101         return xce->ops->u.evtchn.bind_interdomain(xce, xce->ops_handle, domid, remote_port);
(gdb) p xce
$1 = (xc_evtchn *) 0x343c8
(gdb) p xce->ops_handle
$2 = 15
(gdb) p domid
$3 = 0
(gdb) p remote_port
$4 = 1
(gdb) s
linux_evtchn_bind_interdomain (xce=0x343c8, h=15, domid=domid@entry=0, 
    remote_port=remote_port@entry=1) at xc_linux_osdep.c:486
486         bind.remote_domain = domid;
(gdb) 

failed in 
    return ioctl(fd, IOCTL_EVTCHN_BIND_INTERDOMAIN, &bind);

the errno is 22.

    #define EINVAL      22  /* Invalid argument */

the fd is point to the 
lrwx------ 1 root root 64 Oct 12 23:15 15 -> /dev/xen/evtchn

is it because the device node is created by hand?

(6), yes, the device number is changes.
# ls /dev/xen -l
total 0
crw-------    1 root     root       10,  61 Jan  1 00:00 evtchn
crw-------    1 root     root       10,  59 Jan  1 00:00 gntalloc
crw-------    1 root     root       10,  60 Jan  1 00:00 gntdev
crw-------    1 root     root       10,  58 Jan  1 00:00 privcmd
crw-------    1 root     root       10,  63 Jan  1 00:00 xenbus
crw-------    1 root     root       10,  62 Jan  1 00:00 xenbus_backend

((1)), cmd list: init
ifconfig eth0 192.168.1.105 netmask 255.255.255.0 up
sleep 1
route add default gw 192.168.1.1
sleep 1
export server_ip=192.168.1.104
mount -t nfs -o nolock,tcp,rsize=10240,wsize=10240 ${server_ip}:/mnt/opensuse_root /mnt
pivot_root /mnt /mnt/initrd
chroot /
mount -t proc proc /proc
mount -t sysfs sysfs /sys
export LD_LIBRARY_PATH=/usr/local/lib

((2)), xen device 
cd /dev/xen
mknod evtchn c 10 61
mknod gntalloc c 10 59
mknod gntdev c 10 60
mknod privcmd c 10 58
mknod xenbus c 10 63
mknod xenbus_backend c 10 62

(15:54 2013-10-14)
follow the initrd mount result, i found that after i mount devtmpfs, the device will appear in /dev, i also mount devpts and tmpfs:
mount -t devtmpfs devtmpfs /dev
mount -t devpts devpts /dev/pts
mount -t tmpfs tmps /tmp/
"15:54 2013-10-14"end

((3)), xenfs
mount -t xenfs xenfs /proc/xen

((4)), xenstored start successful
# /usr/local/sbin/xenstored --pid-file /var/run/xenstored.pid
# xenstore-ls
tool = ""
 xenstored = ""
local = "

7), 
# /etc/init.d/xencommons start
Starting xenconsoled...
Starting QEMU as disk backend for dom0
/etc/init.d/xencommons: line 120: /usr/local/lib/xen/bin/qemu-system-i386: No such file or directory

# ps aux|grep xen
root        14  0.0  0.0      0     0 ?        S    23:49   0:00 [xenwatch]
root        15  0.0  0.0      0     0 ?        S    23:49   0:00 [xenbus]
root        19  0.0  0.0      0     0 ?        S<   23:49   0:00 [xenbus_frontend]
root        78  0.0  0.0      0     0 ?        Zs   23:51   0:00 [xenstored] <defunct>
root        79  0.0  0.1   2380   600 ?        S    23:51   0:00 /usr/local/sbin/xenstored --pid-file /var/run/xenstored.pid
root       103  0.0  0.0      0     0 ?        Zs   23:52   0:00 [xenconsoled] <defunct>
root       105  0.0  0.1   3416   524 ?        SLl  23:52   0:00 /usr/local/sbin/xenconsoled --pid-file=/var/run/xenconsoled.pid
root       111  0.0  0.1   2332   564 /initrd/dev/hvc0 S+ 23:53   0:00 grep xen
# 

(15:57 2013-10-14)
after set domain name in xenstored, xl list will show the dom0 name as "Domain-0"
    echo Setting domain 0 name...
    ${BINDIR}/xenstore-write "/local/domain/0/name" "Domain-0"
# xenstore-ls
tool = ""
 xenstored = ""
local = ""
 domain = ""
  0 = ""
   name = "Domain-0"
# xl list
sh: xl: command not found
# export PATH=$PATH:/usr/local/bin
# export PATH=$PATH:/usr/local/sbin
# xl list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0   384     1     r-----       9.2
"15:57 2013-10-14"end

8), xl list successful
# /usr/local/sbin/xl list
Name                                        ID   Mem VCPUs      State   Time(s)
(null)                                       0   384     1     r-----       4.9
# 

3, \TODO
1), try nfs root
192.168.1.104:/home/bamvor/opensuse_root on / type nfs (rw,relatime,vers=3,rsize=1024,wsize=1024,namlen=255,hard,nolock,proto=tcp,port=2049,timeo=70,retrans=3,sec=sys,local_lock=all,addr=192.168.1.104)

i need update the xen device tree. get it from company.

2), i found that i could login only after i enable the autologin:
hvc0::respawn:/sbin/getty -n -l/bin/autologin -L hvc0 115200 vt100
why?

21:56 2013-10-13
xen, arm, sun7i, compile domU kernel
1, check the dom0 config
remove the followings
CONFIG_XEN_XENBUS_FRONTEND=y
CONFIG_HVC_XEN_FRONTEND=y
CONFIG_XEN_FBDEV_FRONTEND=y
CONFIG_XEN_BLKDEV_FRONTEND=y
CONFIG_XEN_NETDEV_FRONTEND=y


--- .config	2013-10-11 18:04:07.369842503 +0800
+++ arch/arm/configs/sun7i_dom0_defconfig	2013-10-14 11:26:42.483325824 +0800
@@ -853,13 +689,13 @@
 # CONFIG_BLK_DEV_NBD is not set
 CONFIG_BLK_DEV_RAM=y
 CONFIG_BLK_DEV_RAM_COUNT=2
 CONFIG_BLK_DEV_RAM_SIZE=262144
 # CONFIG_BLK_DEV_XIP is not set
 # CONFIG_CDROM_PKTCDVD is not set
 # CONFIG_ATA_OVER_ETH is not set
 # CONFIG_MG_DISK is not set
-CONFIG_XEN_BLKDEV_FRONTEND=y
-# CONFIG_XEN_BLKDEV_BACKEND is not set
+# CONFIG_XEN_BLKDEV_FRONTEND is not set
+CONFIG_XEN_BLKDEV_BACKEND=y
 # CONFIG_BLK_DEV_RBD is not set
 
 #
@@ -882,7 +718,6 @@
 # CONFIG_HMC6352 is not set
 # CONFIG_DS1682 is not set
 # CONFIG_TI_DAC7512 is not set
-# CONFIG_ARM_CHARLCD is not set
 # CONFIG_BMP085_I2C is not set
 # CONFIG_BMP085_SPI is not set
 # CONFIG_USB_SWITCH_FSA9480 is not set
@@ -955,7 +790,6 @@
 # CONFIG_SCSI_DEBUG is not set
 # CONFIG_SCSI_DH is not set
 # CONFIG_SCSI_OSD_INITIATOR is not set
-CONFIG_HAVE_PATA_PLATFORM=y
 CONFIG_ATA=y
 # CONFIG_ATA_NONSTANDARD is not set
 CONFIG_ATA_VERBOSE_ERROR=y
@@ -984,12 +818,10 @@
 # PATA SFF controllers with BMDMA
 #
 # CONFIG_PATA_ARASAN_CF is not set
-# CONFIG_PATA_IMX is not set
 
 #
 # PIO-only SFF controllers
 #
-# CONFIG_PATA_PLATFORM is not set
 
 #
 # Generic fallback / legacy drivers
@@ -1042,14 +874,10 @@
 CONFIG_NET_VENDOR_FARADAY=y
 # CONFIG_FTMAC100 is not set
 # CONFIG_FTGMAC100 is not set
-CONFIG_NET_VENDOR_FREESCALE=y
-CONFIG_FEC=y
 CONFIG_NET_VENDOR_INTEL=y
 CONFIG_NET_VENDOR_I825XX=y
 CONFIG_NET_VENDOR_MARVELL=y
-# CONFIG_MV643XX_ETH is not set
 # CONFIG_MVMDIO is not set
-# CONFIG_MVNETA is not set
 CONFIG_NET_VENDOR_MICREL=y
 # CONFIG_KS8842 is not set
 CONFIG_KS8851=y
@@ -1072,18 +900,11 @@
 CONFIG_STMMAC_PLATFORM=y
 # CONFIG_STMMAC_DEBUG_FS is not set
 # CONFIG_STMMAC_DA is not set
-CONFIG_NET_VENDOR_TI=y
-# CONFIG_TI_DAVINCI_EMAC is not set
-# CONFIG_TI_DAVINCI_MDIO is not set
-# CONFIG_TI_DAVINCI_CPDMA is not set
-# CONFIG_TI_CPSW is not set
 CONFIG_NET_VENDOR_VIA=y
 # CONFIG_VIA_VELOCITY is not set
 CONFIG_NET_VENDOR_WIZNET=y
 # CONFIG_WIZNET_W5100 is not set
 # CONFIG_WIZNET_W5300 is not set
-CONFIG_NET_VENDOR_XILINX=y
-# CONFIG_XILINX_EMACLITE is not set
 CONFIG_PHYLIB=y
 
 #
@@ -1134,8 +955,8 @@
 # Enable WiMAX (Networking options) to see the WiMAX drivers
 #
 # CONFIG_WAN is not set
-CONFIG_XEN_NETDEV_FRONTEND=y
-# CONFIG_XEN_NETDEV_BACKEND is not set
+# CONFIG_XEN_NETDEV_FRONTEND is not set
+CONFIG_XEN_NETDEV_BACKEND=y
 # CONFIG_ISDN is not set
 
 #
@@ -1293,12 +1095,12 @@
 CONFIG_HVC_DRIVER=y
 CONFIG_HVC_IRQ=y
 CONFIG_HVC_XEN=y
-CONFIG_HVC_XEN_FRONTEND=y
+# CONFIG_HVC_XEN_FRONTEND is not set
 # CONFIG_HVC_DCC is not set
 # CONFIG_IPMI_HANDLER is not set
 CONFIG_HW_RANDOM=y
 # CONFIG_HW_RANDOM_TIMERIOMEM is not set
 # CONFIG_HW_RANDOM_ATMEL is not set
 # CONFIG_HW_RANDOM_EXYNOS is not set
 # CONFIG_R3964 is not set
 # CONFIG_RAW_DRIVER is not set
@@ -1831,16 +1567,16 @@
 #
 # Frame buffer hardware drivers
 #
 # CONFIG_FB_S1D13XXX is not set
 # CONFIG_FB_SMSCUFX is not set
 # CONFIG_FB_UDL is not set
 # CONFIG_FB_GOLDFISH is not set
 # CONFIG_FB_VIRTUAL is not set
-CONFIG_XEN_FBDEV_FRONTEND=y
+# CONFIG_XEN_FBDEV_FRONTEND is not set
 # CONFIG_FB_METRONOME is not set
 # CONFIG_FB_BROADSHEET is not set
 # CONFIG_FB_AUO_K190X is not set
 CONFIG_FB_SIMPLE=y
 # CONFIG_EXYNOS_VIDEO is not set
 # CONFIG_BACKLIGHT_LCD_SUPPORT is not set
 
@@ -1946,7 +1673,6 @@
 #
 # CONFIG_I2C_HID is not set
 CONFIG_USB_OHCI_LITTLE_ENDIAN=y
-CONFIG_USB_ARCH_HAS_EHCI=y
 CONFIG_USB_SUPPORT=y
 CONFIG_USB_COMMON=y
 CONFIG_USB_ARCH_HAS_HCD=y
@@ -1971,8 +1697,8 @@
 CONFIG_USB_EHCI_HCD=y
 CONFIG_USB_EHCI_ROOT_HUB_TT=y
 CONFIG_USB_EHCI_TT_NEWSCHED=y
 CONFIG_USB_EHCI_HCD_PLATFORM=y
-# CONFIG_USB_SUNXI_EHCI is not set
+CONFIG_USB_SUNXI_EHCI=y
 # CONFIG_USB_OXU210HP_HCD is not set
 # CONFIG_USB_ISP116X_HCD is not set
 CONFIG_USB_ISP1760_HCD=y
@@ -2279,7 +1950,6 @@
 CONFIG_XENFS=y
 CONFIG_XEN_COMPAT_XENFS=y
 CONFIG_XEN_SYS_HYPERVISOR=y
-CONFIG_XEN_XENBUS_FRONTEND=y
 CONFIG_XEN_GNTDEV=y
 CONFIG_XEN_GRANT_DEV_ALLOC=y
 CONFIG_XEN_PRIVCMD=y

2, \TODO
1), compile dom0 kernel base on julieng arndale kernel.

10:07 2013-10-14
GTD
0, 9:50-18:38

1, today
1), 30' hackweek: about the power of watch, i should do this in next week.
2), 30' personal stuff.
3), 11:19-11:40 14:00-18:37 xen: arm: sun7i: domU. see"11:18 2013-10-14"
1h: personal stuff.
4), \TODO:
(1), send email to xen-devel for help.

10:08 2013-10-14
GTD, week plan
1, week plan
1), hackweek
(1), Monday as hackweek project.
(2), in the rest day of this week, i could only use the night as my hackweek.
(3), i hope i could get the watch prototype works this week.
2), libvirt: finish ao_how with job patch.
3), send the xen-devel about ao_how patch.

10:31 2013-10-14
hackweek, watch
1, power
1), CR2032 or other button cell battery.
2), 2/3 F6 or other F6 battery
2/3 F6 about 30mm length. it could provide the more output current. but it is less safe than CR2032, because no big vendor.

11:18 2013-10-14
xen, arm, sun7i, domU
1, ref: 
Problems when creating domU on OMAP5
http://www.gossamer-threads.com/lists/xen/devel/298167

2, check the dom0 config. finished in "21:56 2013-10-13"1.

3, check the domU config.
\TODO: question. why CONFIG_XEN_BACKEND=y is in xen_domU_arndale_defconfig, comment it for now.

4, change the xenvm dst
1), ref: chen in OMAP5:
--- a/arch/arm/boot/dts/xenvm-4.2.dts
+++ b/arch/arm/boot/dts/xenvm-4.2.dts
@@ -49,13 +49,13 @@
                reg = <0 0x80000000 0 0x08000000>;
        };

-       gic: interrupt-controller@2c001000 {
+       gic: interrupt-controller@48211000 {
                compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
                #interrupt-cells = <3>;
                #address-cells = <0>;
                interrupt-controller;
-               reg = <0 0x10481000 0 0x1000>,
-                     <0 0x10482000 0 0x100>;
+               reg = <0 0x48211000 0 0x1000>,
+                     <0 0x48212000 0 0x1000>;
        };

        timer {

2), diff
i update the cpu, gic, memory base and remove motherboard.
does the gic should have the same address for hardware. i found the old gic combine with vexpress(0x2c001000) and exynos5250(0x10481000) base address, is it a typo?
	gic: interrupt-controller@2c001000 {
		compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
 		#interrupt-cells = <3>;
 		#address-cells = <0>;
 		interrupt-controller;
		reg = <0 0x10481000 0 0x1000>,
		      <0 0x10482000 0 0x100>;
 	};

diff --git a/arch/arm/boot/dts/xenvm-4.2.dts b/arch/arm/boot/dts/xenvm-4.2.dts
index 2f4136b..db12d20 100644
--- a/arch/arm/boot/dts/xenvm-4.2.dts
+++ b/arch/arm/boot/dts/xenvm-4.2.dts
@@ -26,36 +26,30 @@
 
 		cpu@0 {
 			device_type = "cpu";
-			compatible = "arm,cortex-a15";
+			compatible = "arm,cortex-a7";
 			reg = <0>;
 		};
-
-		cpu@1 {
-			device_type = "cpu";
-			compatible = "arm,cortex-a15";
-			reg = <1>;
-		};
 	};
 
 	psci {
 		compatible      = "arm,psci";
 		method          = "hvc";
-		cpu_on          = <2>;
+		cpu_on          = <1>;
 	};
 
-	memory@80000000 {
+	memory@40000000 {
 		device_type = "memory";
 		/* this field is going to be adjusted by the hypervisor */
-		reg = <0 0x80000000 0 0x08000000>;
+		reg = <0 0x40000000 0 0x08000000>;
 	};
 
-	gic: interrupt-controller@2c001000 {
-		compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
+	gic: interrupt-controller@1c481000 {
+		compatible = "arm,cortex-a7-gic", "arm,cortex-a15-gic";
 		#interrupt-cells = <3>;
 		#address-cells = <0>;
 		interrupt-controller;
-		reg = <0 0x10481000 0 0x1000>,
-		      <0 0x10482000 0 0x100>;
+		reg = <0 0x1c481000 0 0x1000>,
+		      <0 0x1c482000 0 0x1000>;
 	};
 
 	timer {
@@ -73,8 +67,4 @@
 		/* this field is going to be adjusted by the hypervisor */
 		interrupts = <1 15 0xf08>;
 	};
-
-	motherboard {
-		arm,v2m-memory-map = "rs1";
-	};
 };

5, i need enable loop in dom0 kernel. othervise i could not use the disk.
\TODO how to use initrd in xen domU?
1), domU boot successful, but i do not know how to connect to it.
# xl create domU_test -d
Parsing config from domU_test
unable to format domain config as JSON (YAJL:1)

[ 1357.167915] Failed to unmap pfn:4c61d rc:-2
[ 1357.172804] Failed to unmap pfn:4bf33 rc:-2
[ 1357.177537] Failed to unmap pfn:4c61d rc:-2
[ 1357.182305] Failed to unmap pfn:4bf33 rc:-2
[ 1357.186930] Failed to unmap pfn:4c61b rc:-2
[ 1357.194761] Failed to unmap pfn:4c61a rc:-2
Daemon running with PID 151
# 
# xl list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0   383     1     r-----      13.0
domU                                         1   128     1     ------       3.5
# xl list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0   383     1     r-----      13.1
domU                                         1   128     1     ------       6.2

2), xenstore-ls
# xenstore-ls
tool = ""
 xenstored = ""
local = ""
 domain = ""
  0 = ""
   name = "Domain-0"
   libxl = ""
    disable_udev = "1"
   backend = ""
    console = ""
     1 = ""
      0 = ""
       frontend = "/local/domain/1/console"
       frontend-id = "1"
       online = "1"
       state = "1"
       domain = "domU"
       protocol = "vt100"
  1 = ""
   vm = "/vm/9a65f38d-7e40-4491-9179-47eec5a5d54c"
   name = "domU"
   cpu = ""
    0 = ""
     availability = "online"
   memory = ""
    static-max = "131072"
    target = "131073"
    videoram = "-1"
   device = ""
    suspend = ""
     event-channel = ""
   control = ""
    shutdown = ""
    platform-feature-multiprocessor-suspend = "1"
    platform-feature-xs_reset_watches = "1"
   data = ""
   domid = "1"
   store = ""
    port = "1"
    ring-ref = "557057"
   console = ""
    backend = "/local/domain/0/backend/console/1/0"
    backend-id = "0"
    limit = "1048576"
    type = "xenconsoled"
    output = "pty"
    tty = "/dev/pts/0"
    port = "2"
    ring-ref = "557056"
vm = ""
 9a65f38d-7e40-4491-9179-47eec5a5d54c = ""
  uuid = "9a65f38d-7e40-4491-9179-47eec5a5d54c"
  name = "domU"
  image = ""
   ostype = "linux"
   kernel = "/root/zImage_dtb"
   cmdline = ""
  start_time = "1374.92"
libxl = ""
 1 = ""
  dm-version = "qemu_xen_traditional"
# 

(1), \TODO: why there is a qqemu_xen_traditional in dm-version?

3), destroy warning:
# xl destroy 1
(XEN) mm.c:1250:d0 gnttab_mark_dirty not implemented yet

13:43 2013-10-14
software skill, how to know the hostname from ip
http://stackoverflow.com/questions/657482/how-to-find-host-name-from-ip-with-out-login-to-the-host
but i do not successful.

4), add console="pty", but xl console still hang:
# xl -v create domU_test -d       
Parsing config from domU_test
unable to format domain config as JSON (YAJL:1)
libxl: detail: libxl_dom.c:195:numa_place_domain: NUMA placement candidate with 1 nodes, 1 cpus and 1629 KB free selected
domainbuilder: detail: xc_dom_allocate: cmdline="", features="(null)"
domainbuilder: detail: xc_dom_kernel_file: filename="/root/zImage_dtb"
domainbuilder: detail: xc_dom_malloc_filemap    : 2029 kB
domainbuilder: detail: xc_dom_boot_xen_init: ver 4.4, caps xen-3.0-armv7l 
domainbuilder: detail: xc_dom_parse_image: called
domainbuilder: detail: xc_dom_find_loader: trying multiboot-binary loader ... 
domainbuilder: detail: loader probe failed
domainbuilder: detail: xc_dom_find_loader: trying Linux zImage (ARM) loader ... 
domainbuilder: detail: xc_dom_probe_zimage_kernel: found an appended DTB
domainbuilder: detail: loader probe OK
domainbuilder: detail: xc_dom_parse_zimage_kernel: called
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: RAM starts at 80000
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: 0x80008000 -> 0x80203487
domainbuilder: detail: xc_dom_mem_init: mem 128 MB, pages 0x8000 pages, 4k each
domainbuilder: detail: xc_dom_mem_init: 0x8000 pages
domainbuilder: detail: xc_dom_boot_mem_init: called
domainbuilder: detail: xc_dom_malloc            : 256 kB
domainbuilder: detail: xc_dom_build_image: called
domainbuilder: detail: xc_dom_alloc_segment:   kernel       : 0x80008000 -> 0x80204000  (pfn 0x80008 + 0x1fc pages)
domainbuilder: detail: xc_dom_pfn_to_ptr_retcount: domU mapping: pfn 0x80008+0x1fc at 0xb680a000
domainbuilder: detail: xc_dom_load_zimage_kernel: called
domainbuilder: detail: xc_dom_load_zimage_kernel: kernel sed 0x80008000-0x80204000
domainbuilder: detail: xc_dom_load_zimage_kernel: copy 2077831 bytes from blob 0xb6a47000 to dst 0xb680a000
domainbuilder: detail: alloc_magic_pages: called
[ 4828.469153] Failed to unmap pfn:4c12e rc:-2
[ 4828.473412] Failed to unmap pfn:4c60e rc:-2
domainbuilder: detail: count_pgtables_arm: called
domainbuilder: detail: xc_dom_build_image  : virt_alloc_end : 0x80204000
domainbuilder: detail: xc_dom_build_image  : virt_pgtab_end : 0x0
domainbuilder: detail: xc_dom_boot_image: called
domainbuilder: detail: arch_setup_bootearly: doing nothing
domainbuilder: detail: xc_dom_compat_check: supported guest type: xen-3.0-armv7l <= matches
domainbuilder: detail: setup_pgtables_arm: called
domainbuilder: detail: clear_page: pfn 0x88000, mfn 0x88000
[ 4828.522835] Failed to unmap pfn:4c12e rc:-2
domainbuilder: detail: clear_page: pfn 0x88001, mfn 0x88001
[ 4828.532799] Failed to unmap pfn:4c60e rc:-2
domainbuilder: detail: start_info_arm: called
domainbuilder: detail: domain builder memory footprint
domainbuilder: detail:    allocated
domainbuilder: detail:       malloc             : 269 kB
domainbuilder: detail:       anon mmap          : 0 bytes
domainbuilder: detail:    mapped
domainbuilder: detail:       file mmap          : 2029 kB
domainbuilder: detail:       domU mmap          : 2032 kB
domainbuilder: detail: vcpu_arm: called
domainbuilder: detail: Initial state CPSR 0x1d3 PC 0x80008000
[ 4828.582532] Failed to unmap pfn:4c12c rc:-2
domainbuilder: detail: launch_vm: called, ctxt=0xb6f18004
[ 4828.594749] Failed to unmap pfn:4c12b rc:-2
domainbuilder: detail: xc_dom_release: called
Daemon running with PID 197
# 
# xl list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0   383     1     r-----      28.8
domU                                         2   128     1     ------       6.3
# xl console 2
# 

5), shoud i change the memory address according to the following output?
domainbuilder: detail: Initial state CPSR 0x1d3 PC 0x80008000

6), add disk in vm:
    losetup /dev/loop0 /root/domU/rootfs.ext3 

add disk in cfg:
    disk = [ 'phy:/dev/loop0,xvda,w' ]

7), i want to use ifup manage the network. but i could not change this in yast.
(1), change /etc/sysconfig/network
cubiebox:/etc/sysconfig/network # cat ifcfg-br0
BOOTPROTO='dhcp'
BRIDGE='yes'
BRIDGE_FORWARDDELAY='0'
BRIDGE_PORTS='eth0'
BRIDGE_STP='off'
BROADCAST=''
ETHTOOL_OPTIONS=''
IPADDR=''
MTU=''
NAME=''
NETMASK=''
NETWORK=''
REMOTE_IPADDR=''
STARTMODE='auto'
USERCONTROL='no'
cubiebox:/etc/sysconfig/network # diff -urN ifcfg-eth0.old1014 ifcfg-eth0
--- ifcfg-eth0.old1014  2013-03-27 01:22:00.610595001 +0100
+++ ifcfg-eth0  2013-10-14 11:33:43.391320148 +0200
@@ -1,4 +1,5 @@
-BOOTPROTO='dhcp'
+BOOTPROTO='static'
 MTU=''
+IPADDR='0.0.0.0/32'
 REMOTE_IPADDR=''
 STARTMODE='onboot'

(2), but when i try to down and up the eth0, the nfs will hang. how should i do this?
or could i create the br0 in initrd?

# brctl addbr virbr0
add bridge failed: Package not installed

cubiebox:/etc/xen/vm # gunzip < /proc/config.gz | grep BRIDGE
# CONFIG_ARCH_FOOTBRIDGE is not set
# CONFIG_BRIDGE is not set


8), 
(1), xl log
cubiebox:/etc/xen/vm # xl -v create domU_test -d 
Parsing config from domU_test
unable to format domain config as JSON (YAJL:1)
libxl: detail: libxl_dom.c:195:numa_place_domain: NUMA placement candidate with 1 nodes, 1 cpus and 1629 KB free selected
domainbuilder: detail: xc_dom_allocate: cmdline="", features="(null)"
domainbuilder: detail: xc_dom_kernel_file: filename="/root/domU/zImage_dtb"
domainbuilder: detail: xc_dom_malloc_filemap    : 2029 kB
domainbuilder: detail: xc_dom_boot_xen_init: ver 4.4, caps xen-3.0-armv7l 
domainbuilder: detail: xc_dom_parse_image: called
domainbuilder: detail: xc_dom_find_loader: trying multiboot-binary loader ... 
domainbuilder: detail: loader probe failed
domainbuilder: detail: xc_dom_find_loader: trying Linux zImage (ARM) loader ... 
domainbuilder: detail: xc_dom_probe_zimage_kernel: found an appended DTB
domainbuilder: detail: loader probe OK
domainbuilder: detail: xc_dom_parse_zimage_kernel: called
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: RAM starts at 80000
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: 0x80008000 -> 0x80203487
domainbuilder: detail: xc_dom_mem_init: mem 128 MB, pages 0x8000 pages, 4k each
domainbuilder: detail: xc_dom_mem_init: 0x8000 pages
domainbuilder: detail: xc_dom_boot_mem_init: called
domainbuilder: detail: xc_dom_malloc            : 256 kB
domainbuilder: detail: xc_dom_build_image: called
domainbuilder: detail: xc_dom_alloc_segment:   kernel       : 0x80008000 -> 0x80204000  (pfn 0x80008 + 0x1fc pages)
domainbuilder: detail: xc_dom_pfn_to_ptr_retcount: domU mapping: pfn 0x80008+0x1fc at 0xb6873000
domainbuilder: detail: xc_dom_load_zimage_kernel: called
domainbuilder: detail: xc_dom_load_zimage_kernel: kernel sed 0x80008000-0x80204000
domainbuilder: detail: xc_dom_load_zimage_kernel: copy 2077831 bytes from blob 0xb6ab0000 to dst 0xb6873000
domainbuilder: detail: alloc_magic_pages: called
domainbuilder: detail: count_pgtables_arm: called
domainbuilder: detail: xc_dom_build_image  : virt_alloc_end : 0x80204000
domainbuilder: detail: xc_dom_build_image  : virt_pgtab_end : 0x0
domainbuilder: detail: xc_dom_boot_image: called
domainbuilder: detail: arch_setup_bootearly: doing nothing
domainbuilder: detail: xc_dom_compat_check: supported guest type: xen-3.0-armv7l <= matches
domainbuilder: detail: setup_pgtables_arm: called
domainbuilder: detail: clear_page: pfn 0x88000, mfn 0x88000
domainbuilder: detail: clear_page: pfn 0x88001, mfn 0x88001
domainbuilder: detail: start_info_arm: called
domainbuilder: detail: domain builder memory footprint
domainbuilder: detail:    allocated
domainbuilder: detail:       malloc             : 269 kB
domainbuilder: detail:       anon mmap          : 0 bytes
domainbuilder: detail:    mapped
domainbuilder: detail:       file mmap          : 2029 kB
domainbuilder: detail:       domU mmap          : 2032 kB
domainbuilder: detail: vcpu_arm: called
domainbuilder: detail: Initial state CPSR 0x1d3 PC 0x80008000
domainbuilder: detail: launch_vm: called, ctxt=0xb6f81004
domainbuilder: detail: xc_dom_release: called
Daemon running with PID 231

(2), kernel message duing xl create:
# [  540.202580] Failed to unmap pfn:4c025 rc:-2
[  540.208174] Failed to unmap pfn:4c024 rc:-2
[  540.220047] Failed to unmap pfn:4c025 rc:-2
[  540.225907] Failed to unmap pfn:4c024 rc:-2
[  540.236635] Failed to unmap pfn:4c022 rc:-2
[  540.245590] Failed to unmap pfn:4c021 rc:-2

(3), 
cubiebox:/etc/xen/vm # xenstore-ls
tool = ""
 xenstored = ""
local = ""
 domain = ""
  0 = ""
   name = "Domain-0"
   libxl = ""
    disable_udev = "1"
   backend = ""
    vbd = ""
     1 = ""
      51712 = ""
       frontend = "/local/domain/1/device/vbd/51712"
       params = "/dev/loop0"
       script = "/etc/xen/scripts/block"
       physical-device = "7:0"
       frontend-id = "1"
       online = "1"
       removable = "0"
       bootable = "1"
       state = "2"
       dev = "xvda"
       type = "phy"
       mode = "w"
       device-type = "disk"
    console = ""
     1 = ""
      0 = ""
       frontend = "/local/domain/1/console"
       frontend-id = "1"
       online = "1"
       state = "1"
       domain = "domU"
       protocol = "vt100"
  1 = ""
   vm = "/vm/d03ecd47-3359-4f7b-9077-7a3f0f293cfa"
   name = "domU"
   cpu = ""
    0 = ""
     availability = "online"
   memory = ""
    static-max = "131072"
    target = "131073"
    videoram = "-1"
   device = ""
    suspend = ""
     event-channel = ""
    vbd = ""
     51712 = ""
      backend = "/local/domain/0/backend/vbd/1/51712"
      backend-id = "0"
      state = "1"
      virtual-device = "51712"
      device-type = "disk"
      protocol = "arm-abi"
   control = ""
    shutdown = ""
    platform-feature-multiprocessor-suspend = "1"
    platform-feature-xs_reset_watches = "1"
   data = ""
   domid = "1"
   store = ""
    port = "1"
    ring-ref = "557057"
   console = ""
    backend = "/local/domain/0/backend/console/1/0"
    backend-id = "0"
    limit = "1048576"
    type = "xenconsoled"
    output = "pty"
    tty = "/dev/pts/1"
    port = "2"
    ring-ref = "557056"
vm = ""
 d03ecd47-3359-4f7b-9077-7a3f0f293cfa = ""
  uuid = "d03ecd47-3359-4f7b-9077-7a3f0f293cfa"
  name = "domU"
  image = ""
   ostype = "linux"
   kernel = "/root/domU/zImage_dtb"
   cmdline = ""
  start_time = "544.66"
libxl = ""
 1 = ""
  dm-version = "qemu_xen_traditional"
cubiebox:/etc/xen/vm # 

9), try this one:
ref: http://blog.csdn.net/starshine/article/details/6990599
   ä¿®æ¹åçéç½®æä»¶åå®¹å¦ä¸ï¼

   1ï¼ifcfg-eth0

      DEVICE=eth0
      ONBOOT=yes
      BRIDGE=virbr0
      BOOTPROTO=dhcp
      TYPE=Ethernet

   2ï¼ifcfg-virbr0
      
      DEVICE=virbr0
      TYPE=Bridge 
      ONBOOT=yes
      DELAY=0
      BOOTPROTO=none
      IPADDR=10.100.0.3
      NETMASK=255.255.255.0
      GATEWAY=10.100.0.254     

10), \TODO: try libvirt?

21:58 2013-10-14
1, about xen debug tools
http://www-archive.xenproject.org/files/xensummit_intel09/xen-debugging.pdf
1), console
2), xentrace
3), gdbsx

2, debug why no console
ref: http://www.gossamer-threads.com/lists/xen/devel/301400 

3, error when compile staging.
diff --git a/xen/common/event_fifo.c b/xen/common/event_fifo.c
index eb0b97c..f2a28e4 100644
--- a/xen/common/event_fifo.c
+++ b/xen/common/event_fifo.c
@@ -17,6 +17,7 @@
 #include <xen/paging.h>
 #include <xen/mm.h>
 
+#include <xen/domain_page.h>
 #include <public/event_channel.h>
 
 static inline event_word_t *evtchn_fifo_word_from_port(struct domain *d,
diff --git a/xen/include/xen/sched.h b/xen/include/xen/sched.h
index c2588a5..25bf637 100644
--- a/xen/include/xen/sched.h
+++ b/xen/include/xen/sched.h
@@ -24,6 +24,7 @@
 #include <public/sysctl.h>
 #include <public/vcpu.h>
 #include <public/mem_event.h>
+#include <public/event_channel.h>
 
 #ifdef CONFIG_COMPAT
 #include <compat/vcpu.h>

4, guest crash
# xl -v create -d -c domU_test 
Parsing config from domU_test
unable to format domain config as JSON (YAJL:1)
libxl: detail: libxl_dom.c:195:numa_place_domain: NUMA placement candidate with 1 nodes, 1 cpus and 1629 KB free selected
domainbuilder: detail: xc_dom_allocate: cmdline="", features="(null)"
domainbuilder: detail: xc_dom_kernel_file: filename="/root/domU/zImage_dtb"
domainbuilder: detail: xc_dom_malloc_filemap: failed (on file `/root/domU/zImage_dtb')
libxl: error: libxl_dom.c:353:libxl__build_pv: xc_dom_kernel_file failed: No such file or directory
domainbuilder: detail: xc_dom_release: called
libxl: error: libxl_create.c:903:domcreate_rebuild_done: cannot (re-)build domain: -3
# xl -v create -d -c domU_test
Parsing config from domU_test
unable to format domain config as JSON (YAJL:1)
libxl: detail: libxl_dom.c:195:numa_place_domain: NUMA placement candidate with 1 nodes, 1 cpus and 1629 KB free selected
domainbuilder: detail: xc_dom_allocate: cmdline="", features="(null)"
domainbuilder: detail: xc_dom_kernel_file: filename="/root/domU/zImage_dtb"
domainbuilder: detail: xc_dom_malloc_filemap    : 2030 kB
domainbuilder: detail: xc_dom_boot_xen_init: ver 4.4, caps xen-3.0-armv7l 
domainbuilder: detail: xc_dom_parse_image: called
domainbuilder: detail: xc_dom_find_loader: trying multiboot-binary loader ... 
domainbuilder: detail: loader probe failed
domainbuilder: detail: xc_dom_find_loader: trying Linux zImage (ARM) loader ... 
domainbuilder: detail: xc_dom_probe_zimage_kernel: found an appended DTB
domainbuilder: detail: loader probe OK
domainbuilder: detail: xc_dom_parse_zimage_kernel: called
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: RAM starts at 80000
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: 0x80008000 -> 0x80203933
domainbuilder: detail: xc_dom_mem_init: mem 128 MB, pages 0x8000 pages, 4k each
domainbuilder: detail: xc_dom_mem_init: 0x8000 pages
domainbuilder: detail: xc_dom_boot_mem_init: called
domainbuilder: detail: xc_dom_malloc            : 256 kB
domainbuilder: detail: xc_dom_build_image: called
domainbuilder: detail: xc_dom_alloc_segment:   kernel       : 0x80008000 -> 0x80204000  (pfn 0x80008 + 0x1fc pages)
domainbuilder: detail: xc_dom_pfn_to_ptr_retcount: domU mapping: pfn 0x80008+0x1fc at 0xb68da000
domainbuilder: detail: xc_dom_load_zimage_kernel: called
domainbuilder: detail: xc_dom_load_zimage_kernel: kernel sed 0x80008000-0x80204000
domainbuilder: detail: xc_dom_load_zimage_kernel: copy 2079027 bytes from blob 0xb6b17000 to dst 0xb68da000
domainbuilder: detail: alloc_magic_pages: called
[  374.672591] Failed to unmap pfn:4c607 rc:-2
[  374.677774] Failed to unmap pfn:4c606 rc:-2
domainbuilder: detail: count_pgtables_arm: called
domainbuilder: detail: xc_dom_build_image  : virt_alloc_end : 0x80204000
domainbuilder: detail: xc_dom_build_image  : virt_pgtab_end : 0x0
domainbuilder: detail: xc_dom_boot_image: called
domainbuilder: detail: arch_setup_bootearly: doing nothing
domainbuilder: detail: xc_dom_compat_check: supported guest type: xen-3.0-armv7l <= matches
domainbuilder: detail: setup_pgtables_arm: called
domainbuilder: detail: clear_page: pfn 0x88000, mfn 0x88000
[  374.726799] Failed to unmap pfn:4c607 rc:-2
domainbuilder: detail: clear_page: pfn 0x88001, mfn 0x88001
[  374.736408] Failed to unmap pfn:4c606 rc:-2
domainbuilder: detail: start_info_arm: called
domainbuilder: detail: domain builder memory footprint
domainbuilder: detail:    allocated
domainbuilder: detail:       malloc             : 269 kB
domainbuilder: detail:       anon mmap          : 0 bytes
domainbuilder: detail:    mapped
domainbuilder: detail:       file mmap          : 2030 kB
domainbuilder: detail:       domU mmap          : 2032 kB
domainbuilder: detail: vcpu_arm: called
domainbuilder: detail: Initial state CPSR 0x1d3 PC 0x80008000
[  374.785408] Failed to unmap pfn:4c604 rc:-2
domainbuilder: detail: launch_vm: called, ctxt=0xb6fe8004
[  374.797618] Failed to unmap pfn:4c603 rc:-2
domainbuilder: detail: xc_dom_release: called
Daemon running with PID 143
(XEN) Guest data abort: Translation fault at level 2
(XEN)     gva=c8800004
(XEN)     gpa=000000001c481004
(XEN)     size=2 sign=0 write=0 reg=3
(XEN)     eat=0 cm=0 s1ptw=0 dfsc=6
(XEN) dom2 IPA 0x000000001c481004
(XEN) P2M @ 02ffcdc0 mfn:0xbfe6e
(XEN) 1ST[0x0] = 0x0000000095d386ff
(XEN) 2ND[0xe2] = 0x0000000000000000
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c03ab098
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: c03ccd84 R3: 00000008
(XEN)      R4: ffffffff R5: c03cc7f0 R6: 00000010 R7: c8800000
(XEN)      R8: c050da38 R9: 00100100 R10:00200200 R11:c03c5f90 R12:00000063
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: c03c5f48 LR: c03ab34c SPSR:000001d3
(XEN) ABT: SP: c03e750c LR: c03e750c SPSR:00000000
(XEN) UND: SP: c03e7518 LR: c03e7518 SPSR:00000000
(XEN) IRQ: SP: c03e7500 LR: c03e7500 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: ffffffff SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c53c7d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000008000406a
(XEN)      TTBR1: 000000008000406a
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00020000bfe6e000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN) 
(XEN)    ESR_EL2: 93830006
(XEN)  HPFAR_EL2: 00000000001c4810
(XEN)      HDFAR: c8800004
(XEN)      HIFAR: 3fe752e0
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) domain_crash_sync called from traps.c:1385
(XEN) Domain 2 (vcpu#0) crashed on cpu#0:
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c03ab098
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: c03ccd84 R3: 00000008
(XEN)      R4: ffffffff R5: c03cc7f0 R6: 00000010 R7: c8800000
(XEN)      R8: c050da38 R9: 00100100 R10:00200200 R11:c03c5f90 R12:00000063
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: c03c5f48 LR: c03ab34c SPSR:000001d3
(XEN) ABT: SP: c03e750c LR: c03e750c SPSR:00000000
(XEN) UND: SP: c03e7518 LR: c03e7518 SPSR:00000000
(XEN) IRQ: SP: c03e7500 LR: c03e7500 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: ffffffff SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c53c7d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000008000406a
(XEN)      TTBR1: 000000008000406a
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00020000bfe6e000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN) 
(XEN)    ESR_EL2: 93830006
(XEN)  HPFAR_EL2: 00000000001c4810
(XEN)      HDFAR: c8800004
(XEN)      HIFAR: 3fe752e0
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
# (XEN) mm.c:1250:d0 gnttab_mark_dirty not implemented yet

1), it is only fail with the kernel i compile at home, for the company version, it create without error but no console output
# xl -vvv create -d -c domU_test
Parsing config from domU_test
unable to format domain config as JSON (YAJL:1)
libxl: debug: libxl_create.c:1233:do_domain_create: ao 0x3cd50: create: how=(nil) callback=(nil) poller=0x3cd98
libxl: verbose: libxl_create.c:130:libxl__domain_build_info_setdefault: qemu-xen is unavailable, use qemu-xen-traditional instead: No such file or directory
libxl: debug: libxl_device.c:257:libxl__device_disk_set_backend: Disk vdev=xvda spec.backend=unknown
libxl: debug: libxl_device.c:296:libxl__device_disk_set_backend: Disk vdev=xvda, using backend phy
libxl: debug: libxl_create.c:678:initiate_domain_create: running bootloader
libxl: debug: libxl_bootloader.c:327:libxl__bootloader_run: no bootloader configured, using user supplied kernel
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x36f30: deregister unregistered
libxl: debug: libxl_numa.c:475:libxl__get_numa_candidate: New best NUMA placement candidate found: nr_nodes=1, nr_cpus=1, nr_vcpus=2, free_memkb=1629
libxl: detail: libxl_dom.c:195:numa_place_domain: NUMA placement candidate with 1 nodes, 1 cpus and 1629 KB free selected
domainbuilder: detail: xc_dom_allocate: cmdline="", features="(null)"
libxl: debug: libxl_dom.c:341:libxl__build_pv: pv kernel mapped 0 path /root/domU/zImage_dtb

domainbuilder: detail: xc_dom_kernel_file: filename="/root/domU/zImage_dtb"
domainbuilder: detail: xc_dom_malloc_filemap    : 2029 kB
domainbuilder: detail: xc_dom_boot_xen_init: ver 4.4, caps xen-3.0-armv7l 
domainbuilder: detail: xc_dom_parse_image: called
domainbuilder: detail: xc_dom_find_loader: trying multiboot-binary loader ... 
domainbuilder: detail: loader probe failed
domainbuilder: detail: xc_dom_find_loader: trying Linux zImage (ARM) loader ... 
domainbuilder: detail: xc_dom_probe_zimage_kernel: found an appended DTB
domainbuilder: detail: loader probe OK
domainbuilder: detail: xc_dom_parse_zimage_kernel: called
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: RAM starts at 80000
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: 0x80008000 -> 0x80203487
domainbuilder: detail: xc_dom_mem_init: mem 128 MB, pages 0x8000 pages, 4k each
domainbuilder: detail: xc_dom_mem_init: 0x8000 pages
domainbuilder: detail: xc_dom_boot_mem_init: called
domainbuilder: detail: xc_dom_malloc            : 256 kB
domainbuilder: detail: xc_dom_build_image: called
domainbuilder: detail: xc_dom_alloc_segment:   kernel       : 0x80008000 -> 0x80204000  (pfn 0x80008 + 0x1fc pages)
domainbuilder: detail: xc_dom_pfn_to_ptr_retcount: domU mapping: pfn 0x80008+0x1fc at 0xb683c000
domainbuilder: detail: xc_dom_load_zimage_kernel: called
domainbuilder: detail: xc_dom_load_zimage_kernel: kernel sed 0x80008000-0x80204000
domainbuilder: detail: xc_dom_load_zimage_kernel: copy 2077831 bytes from blob 0xb6a79000 to dst 0xb683c000
domainbuilder: detail: alloc_magic_pages: called
[  706.135013] Failed to unmap pfn:4bcb7 rc:-2
[  706.140190] Failed to unmap pfn:4c64d rc:-2
domainbuilder: detail: count_pgtables_arm: called
domainbuilder: detail: xc_dom_build_image  : virt_alloc_end : 0x80204000
domainbuilder: detail: xc_dom_build_image  : virt_pgtab_end : 0x0
domainbuilder: detail: xc_dom_boot_image: called
domainbuilder: detail: arch_setup_bootearly: doing nothing
domainbuilder: detail: xc_dom_compat_check: supported guest type: xen-3.0-armv7l <= matches
domainbuilder: detail: setup_pgtables_arm: called
domainbuilder: detail: clear_page: pfn 0x88000, mfn 0x88000
[  706.189320] Failed to unmap pfn:4bcb7 rc:-2
domainbuilder: detail: clear_page: pfn 0x88001, mfn 0x88001
[  706.198941] Failed to unmap pfn:4c64d rc:-2
domainbuilder: detail: start_info_arm: called
domainbuilder: detail: domain builder memory footprint
domainbuilder: detail:    allocated
domainbuilder: detail:       malloc             : 269 kB
domainbuilder: detail:       anon mmap          : 0 bytes
domainbuilder: detail:    mapped
domainbuilder: detail:       file mmap          : 2029 kB
domainbuilder: detail:       domU mmap          : 2032 kB
domainbuilder: detail: vcpu_arm: called
domainbuilder: detail: Initial state CPSR 0x1d3 PC 0x80008000
[  706.247923] Failed to unmap pfn:4bcb5 rc:-2
domainbuilder: detail: launch_vm: called, ctxt=0xb6f4a004
[  706.260095] Failed to unmap pfn:4bcb4 rc:-2
domainbuilder: detail: xc_dom_release: called
libxl: debug: libxl_device.c:257:libxl__device_disk_set_backend: Disk vdev=xvda spec.backend=phy
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x377e0 wpath=/local/domain/0/backend/vbd/3/51712/state token=3/0: register slotnum=3
libxl: debug: libxl_create.c:1246:do_domain_create: ao 0x3cd50: inprogress: poller=0x3cd98, flags=i
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x377e0 wpath=/local/domain/0/backend/vbd/3/51712/state token=3/0: event epath=/local/domain/0/backend/vbd/3/51712/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vbd/3/51712/state wanted state 2 still waiting state 1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x377e0 wpath=/local/domain/0/backend/vbd/3/51712/state token=3/0: event epath=/local/domain/0/backend/vbd/3/51712/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/3/51712/state wanted state 2 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x377e0 wpath=/local/domain/0/backend/vbd/3/51712/state token=3/0: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x377e0: deregister unregistered
libxl: debug: libxl_device.c:959:device_hotplug: calling hotplug script: /etc/xen/scripts/block add
libxl: debug: libxl_event.c:1748:libxl__ao_progress_report: ao 0x3cd50: progress report: callback queued aop=0x38948
libxl: debug: libxl_event.c:1570:libxl__ao_complete: ao 0x3cd50: complete, rc=0
libxl: debug: libxl_event.c:1160:egc_run_callbacks: ao 0x3cd50: progress report: callback aop=0x38948
libxl: debug: libxl_event.c:1542:libxl__ao__destroy: ao 0x3cd50: destroy
Daemon running with PID 186
xc: debug: hypercall buffer: total allocations:98 total releases:98
xc: debug: hypercall buffer: current allocations:0 maximum allocations:4
xc: debug: hypercall buffer: cache current size:4
xc: debug: hypercall buffer: cache hits:90 misses:4 toobig:4

5, xentrace fail
# ls -l  trace.raw 
-rw-r--r-- 1 root root 0 Oct 14  2013 trace.raw
# xentrace -S 256 -T 1 trace.raw
[  945.495447] Failed to map pfn to mfn rc:0:-3 pfn:4c180 mfn:ae03d
[  945.501336] Failed to unmap pfn:4c180 rc:-2
ERROR: Failed to mmap trace buffers (14 = Bad address)

6, gdbsx need patch
cubiebox:~/work/source/virtualization/xen/upstream/xen/tools/debugger/gdbsx # ./gdbsx -a 3 32 9999
ERROR:_check_hyp:Hyp is NOT enabled for gdbsx
ERROR: failed to attach to domain:3 errno:38

7, \TODO
try patch console_io then send email to xen. 
diff --git a/xen/drivers/char/console.c b/xen/drivers/char/console.c
index 508f845..15501b6 100644
--- a/xen/drivers/char/console.c
+++ b/xen/drivers/char/console.c
@@ -425,6 +425,7 @@ static long guest_console_write(XEN_GUEST_HANDLE_PARAM(char) buffer, int count)
             {
                 kcount = kin - kbuf;
                 cd->pbuf[cd->pbuf_idx] = '\0';
+                printk("%s%s\n", cd->pbuf, kbuf);
                 guest_printk(cd, XENLOG_G_DEBUG "%s%s\n", cd->pbuf, kbuf);
                 cd->pbuf_idx = 0;
             }
@@ -437,6 +438,7 @@ static long guest_console_write(XEN_GUEST_HANDLE_PARAM(char) buffer, int count)
             else
             {
                 cd->pbuf[cd->pbuf_idx] = '\0';
+                printk("%s%s\n", cd->pbuf, kbuf);
                 guest_printk(cd, XENLOG_G_DEBUG "%s%s\n", cd->pbuf, kbuf);
                 cd->pbuf_idx = 0;
             }

should finish before noon.

10:14 2013-10-15
GTD
0, 10:10-18:06

1, today
1), 10:15-11:40 12:56-14:42 16:46-19:18 xen: arm: sun7i: domU console. see"10:28 2013-10-15"
interruptted by "2)".
2), 50' reply to bnc#820873. discuss with Chunyan.
3), \TODO: send patch to linux-arm about a20 only include 1G memory.
4), \FINISH: ianc said that the upstream kernel for domU is works too. i could try it later.
yes.

10:28 2013-10-15
xen, arm, sun7i, domU console
1, there is no output after i use the above patch. "21:58 2013-10-14"7.
this patch should not affect this, does the dts of cubieboard2-xen changes?

2, follow the config in "10:33 2013-10-10"3-5). got the failure.
(XEN) Freed 264kB init memory.
(XEN) DOM0: Uncompressing Linux... done, booting the kernel.
(XEN) Hypervisor Trap. HSR=0x80000006 EC=0x20 IL=0 Syndrome=6
(XEN) CPU0: Unexpected Trap: Hypervisor
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     00000008
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: 48000000 R3: 4000807c
(XEN)      R4: 80000000 R5: edfe0dd0 R6: edfe0dd0 R7: 00b5e6c0
(XEN)      R8: 40000000 R9: 410fc074 R10:404cf06c R11:47e132f0 R12:47600268
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: 47e14310 LR: 40662398 SPSR:600001d3
(XEN) ABT: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) UND: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) IRQ: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN) 
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
0
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
0000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
0000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
0 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
0000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
1:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN)
(XEN)      SCTLR: 00c51878
(XEN)        TCR: 00000000
(XEN)      TTBR0: 0000000040004000
(XEN)      TTBR1: 0000000000000000
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000bfdfc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 00000000bfedf000
(XEN)
(XEN)    ESR_EL2: 80000006
(XEN)  HPFAR_EL2: 0000000000000000
(XEN)      HDFAR: 01c28014
(XEN)      HIFAR: 00000008
(XEN)
(XEN) No stack trace for 32-bit guest kernel-mode

this is because i use other soc ll debug. switch to sunxi uart0:
(XEN) *** Serial input -> DOM0 (type 'CTRL-a' three times to switch input to Xen)
(XEN) Freed 264kB init memory.
(XEN) DOM0: Uncompressing Linux...
(XEN) DOM0: 
(XEN) DOM0: uncompression error
(XEN) DOM0: 

3, it works! 
1), change the memory from 2G to 1G:
diff --git a/arch/arm/boot/dts/sun7i-a20-xen.dtsi b/arch/arm/boot/dts/sun7i-a20-xen.dtsi
index 80e04a5..d8b50be 100644
--- a/arch/arm/boot/dts/sun7i-a20-xen.dtsi
+++ b/arch/arm/boot/dts/sun7i-a20-xen.dtsi
@@ -33,7 +33,7 @@
        };
 
        memory {
-               reg = <0x40000000 0x80000000>;
+               reg = <0x40000000 0x40000000>;
        };
 
        clocks {

4, xl create log
# xl -vvv create -d domU_test 
Parsing config from domU_test
unable to format domain config as JSON (YAJL:1)
libxl: debug: libxl_create.c:1233:do_domain_create: ao 0x3cd50: create: how=(nil) callback=(nil) poller=0x3cd98
libxl: verbose: libxl_create.c:130:libxl__domain_build_info_setdefault: qemu-xen is unavailable, use qemu-xen-traditional instead: No such file or directory
libxl: debug: libxl_device.c:257:libxl__device_disk_set_backend: Disk vdev=xvda spec.backend=unknown
libxl: debug: libxl_device.c:296:libxl__device_disk_set_backend: Disk vdev=xvda, using backend phy
libxl: debug: libxl_create.c:678:initiate_domain_create: running bootloader
libxl: debug: libxl_bootloader.c:327:libxl__bootloader_run: no bootloader configured, using user supplied kernel
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x36f30: deregister unregistered
libxl: debug: libxl_numa.c:475:libxl__get_numa_candidate: New best NUMA placement candidate found: nr_nodes=1, nr_cpus=1, nr_vcpus=2, free_memkb=476
libxl: detail: libxl_dom.c:195:numa_place_domain: NUMA placement candidate with 1 nodes, 1 cpus and 476 KB free selected
domainbuilder: detail: xc_dom_allocate: cmdline="", features="(null)"
libxl: debug: libxl_dom.c:341:libxl__build_pv: pv kernel mapped 0 path /root/domU/zImage_dtb

domainbuilder: detail: xc_dom_kernel_file: filename="/root/domU/zImage_dtb"
domainbuilder: detail: xc_dom_malloc_filemap    : 2029 kB
domainbuilder: detail: xc_dom_boot_xen_init: ver 4.4, caps xen-3.0-armv7l 
domainbuilder: detail: xc_dom_parse_image: called
domainbuilder: detail: xc_dom_find_loader: trying multiboot-binary loader ... 
domainbuilder: detail: loader probe failed
domainbuilder: detail: xc_dom_find_loader: trying Linux zImage (ARM) loader ... 
domainbuilder: detail: xc_dom_probe_zimage_kernel: found an appended DTB
domainbuilder: detail: loader probe OK
domainbuilder: detail: xc_dom_parse_zimage_kernel: called
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: RAM starts at 80000
domainbuilder: detail: xc_dom_parse_zimage_kernel: xen-3.0-armv7l: 0x80008000 -> 0x80203487
domainbuilder: detail: xc_dom_mem_init: mem 128 MB, pages 0x8000 pages, 4k each
domainbuilder: detail: xc_dom_mem_init: 0x8000 pages
domainbuilder: detail: xc_dom_boot_mem_init: called
domainbuilder: detail: xc_dom_malloc            : 256 kB
domainbuilder: detail: xc_dom_build_image: called
domainbuilder: detail: xc_dom_alloc_segment:   kernel       : 0x80008000 -> 0x80204000  (pfn 0x80008 + 0x1fc pages)
domainbuilder: detail: xc_dom_pfn_to_ptr_retcount: domU mapping: pfn 0x80008+0x1fc at 0xb6855000
domainbuilder: detail: xc_dom_load_zimage_kernel: called
domainbuilder: detail: xc_dom_load_zimage_kernel: kernel sed 0x80008000-0x80204000
domainbuilder: detail: xc_dom_load_zimage_kernel: copy 2077831 bytes from blob 0xb6a92000 to dst 0xb6855000
domainbuilder: detail: alloc_magic_pages: called
[  866.756625] Failed to unmap pfn:5b7de rc:-2
[  866.760847] Failed to unmap pfn:5b7dd rc:-2
domainbuilder: detail: count_pgtables_arm: called
domainbuilder: detail: xc_dom_build_image  : virt_alloc_end : 0x80204000
domainbuilder: detail: xc_dom_build_image  : virt_pgtab_end : 0x0
domainbuilder: detail: xc_dom_boot_image: called
domainbuilder: detail: arch_setup_bootearly: doing nothing
domainbuilder: detail: xc_dom_compat_check: supported guest type: xen-3.0-armv7l <= matches
domainbuilder: detail: setup_pgtables_arm: called
domainbuilder: detail: clear_page: pfn 0x88000, mfn 0x88000
[  866.810052] Failed to unmap pfn:5b7de rc:-2
domainbuilder: detail: clear_page: pfn 0x88001, mfn 0x88001
[  866.819773] Failed to unmap pfn:5b7dd rc:-2
domainbuilder: detail: start_info_arm: called
domainbuilder: detail: domain builder memory footprint
domainbuilder: detail:    allocated
domainbuilder: detail:       malloc             : 269 kB
domainbuilder: detail:       anon mmap          : 0 bytes
domainbuilder: detail:    mapped
domainbuilder: detail:       file mmap          : 2029 kB
domainbuilder: detail:       domU mmap          : 2032 kB
domainbuilder: detail: vcpu_arm: called
domainbuilder: detail: Initial state CPSR 0x1d3 PC 0x80008000
[  866.868827] Failed to unmap pfn:5b7da rc:-2
domainbuilder: detail: launch_vm: called, ctxt=0xb6f63004
[  866.881076] Failed to unmap pfn:5b7d9 rc:-2
domainbuilder: detail: xc_dom_release: called
libxl: debug: libxl_device.c:257:libxl__device_disk_set_backend: Disk vdev=xvda spec.backend=phy
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x377c8 wpath=/local/domain/0/backend/vbd/1/51712/state token=3/0: register slotnum=3
libxl: debug: libxl_create.c:1246:do_domain_create: ao 0x3cd50: inprogress: poller=0x3cd98, flags=i
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x377c8 wpath=/local/domain/0/backend/vbd/1/51712/state token=3/0: event epath=/local/domain/0/backend/vbd/1/51712/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vbd/1/51712/state wanted state 2 still waiting state 1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x377c8 wpath=/local/domain/0/backend/vbd/1/51712/state token=3/0: event epath=/local/domain/0/backend/vbd/1/51712/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/1/51712/state wanted state 2 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x377c8 wpath=/local/domain/0/backend/vbd/1/51712/state token=3/0: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x377c8: deregister unregistered
libxl: debug: libxl_device.c:959:device_hotplug: calling hotplug script: /etc/xen/scripts/block add
libxl: debug: libxl_event.c:1738:libxl__ao_progress_report: ao 0x3cd50: progress report: ignored
libxl: debug: libxl_event.c:1570:libxl__ao_complete: ao 0x3cd50: complete, rc=0
libxl: debug: libxl_event.c:1542:libxl__ao__destroy: ao 0x3cd50: destroy
Daemon running with PID 228
xc: debug: hypercall buffer: total allocations:98 total releases:98
xc: debug: hypercall buffer: current allocations:0 maximum allocations:4
xc: debug: hypercall buffer: cache current size:4
xc: debug: hypercall buffer: cache hits:90 misses:4 toobig:4
# 
# xl list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0   511     1     r-----      12.2
domU                                         1   128     1     ------       6.9
# xl list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0   511     1     r-----      12.2
domU                                         1   128     1     ------       9.0
# 

5, xl debug-keys
1), d: dump register
(XEN) 'd' pressed -> dumping registers
(XEN) 
(XEN) *** Dumping CPU0 guest state (d0:v0): ***
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c000e2cc
(XEN) CPSR:   60000013 MODE:32-bit Guest SVC
(XEN)      R0: b6fb2004 R1: 00000000 R2: 00000001 R3: b6fb8b50
(XEN)      R4: b6fb8b50 R5: cc28d000 R6: 00000000 R7: bef922e8
(XEN)      R8: cc28d000 R9: cc2b0000 R10:df44f988 R11:bef922e8 R12:00000023
(XEN) USR: SP: bef922b4 LR: b6f1524c
(XEN) SVC: SP: cc2b1ea4 LR: c0216b28 SPSR:60000010
(XEN) ABT: SP: c058d98c LR: c0012760 SPSR:60000193
(XEN) UND: SP: c058d998 LR: c00125e0 SPSR:a0000093
(XEN) IRQ: SP: c058d980 LR: c0012400 SPSR:60000193
(XEN) FIQ: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c5387d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000005fb9406a
(XEN)      TTBR1: 000000004000406a
(XEN)       IFAR: b6f0b36c, IFSR: 00000007
(XEN)       DFAR: 00025568, DFSR: 00000017
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000402e4000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 4a000ea1
(XEN)  HPFAR_EL2: 000000000001c810
(XEN)      HDFAR: e0800854
(XEN)      HIFAR: b98790a0
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) 

2), q: 
(XEN) 'q' pressed -> dumping domain info (now=0x124:9AF19255)
(XEN) General information for domain 0:
(XEN)     refcnt=3 dying=0 pause_count=0
(XEN)     nr_pages=131070 xenheap_pages=2 shared_pages=0 paged_pages=0 dirty_cpus={} max_pages=4294967295
(XEN)     handle=00000000-0000-0000-0000-000000000000 vm_assist=00000000
(XEN) GICH_LRs (vcpu 0) mask=0
(XEN)    HW_LR[0]=1a08001b
(XEN)    HW_LR[1]=0
(XEN)    HW_LR[2]=0
(XEN)    HW_LR[3]=0
(XEN) Inflight irq=27
(XEN) Rangesets belonging to domain 0:
(XEN)     Interrupts { }
(XEN)     I/O Memory { }
(XEN) NODE affinity for domain 0: [0]
(XEN) VCPU information and callbacks for domain 0:
(XEN)     VCPU0: CPU0 [has=T] poll=0 upcall_pend = 00, upcall_mask = 00 dirty_cpus={} cpu_affinity={0-127}
(XEN)     pause_count=0 pause_flags=0
(XEN)     No periodic timer
(XEN) General information for domain 1:
(XEN)     refcnt=3 dying=0 pause_count=0
(XEN)     nr_pages=32770 xenheap_pages=2 shared_pages=0 paged_pages=0 dirty_cpus={} max_pages=33024
(XEN)     handle=b1bfb6f3-aac8-41b2-8661-647b4ab9d1e2 vm_assist=00000000
(XEN) GICH_LRs (vcpu 0) mask=0
(XEN)    VCPU_LR[0]=0
(XEN)    VCPU_LR[1]=0
(XEN)    VCPU_LR[2]=0
(XEN)    VCPU_LR[3]=0
(XEN) Rangesets belonging to domain 1:
(XEN)     Interrupts { }
(XEN)     I/O Memory { }
(XEN) NODE affinity for domain 1: [0]
(XEN) VCPU information and callbacks for domain 1:
(XEN)     VCPU0: CPU0 [has=F] poll=0 upcall_pend = 00, upcall_mask = 00 dirty_cpus={} cpu_affinity={0-127}
(XEN)     pause_count=0 pause_flags=0
(XEN)     No periodic timer
(XEN) Notifying guest 0:0 (virq 1, port 0, stat 0/1/0)
(XEN) Notifying guest 1:0 (virq 1, port 0, stat 0/0/0)

3), all:
(XEN) '*' pressed -> firing all diagnostic keyhandlers
(XEN) [d: dump registers]
(XEN) 'd' pressed -> dumping registers
(XEN) 
(XEN) *** Dumping CPU0 guest state (d0:v0): ***
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c000e2cc
(XEN) CPSR:   60000013 MODE:32-bit Guest SVC
(XEN)      R0: b6f7d004 R1: 00000000 R2: 00000001 R3: b6f83b50
(XEN)      R4: b6f83b50 R5: dfb98c00 R6: 00000000 R7: bee0d2e8
(XEN)      R8: dfb98c00 R9: cc2b0000 R10:df44f988 R11:bee0d2e8 R12:00000023
(XEN) USR: SP: bee0d2b4 LR: b6ee024c
(XEN) SVC: SP: cc2b1ea4 LR: c0216b28 SPSR:60000010
(XEN) ABT: SP: c058d98c LR: c0012760 SPSR:60000193
(XEN) UND: SP: c058d998 LR: c00125e0 SPSR:a0000093
(XEN) IRQ: SP: c058d980 LR: c0012400 SPSR:60000193
(XEN) FIQ: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c5387d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000004c2ac06a
(XEN)      TTBR1: 000000004000406a
(XEN)       IFAR: b6ed636c, IFSR: 00000007
(XEN)       DFAR: 00025568, DFSR: 00000017
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000402e4000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 4a000ea1
(XEN)  HPFAR_EL2: 000000000001c810
(XEN)      HDFAR: e0800854
(XEN)      HIFAR: b98790a0
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) 
(XEN) [0: dump Dom0 registers]
(XEN) '0' pressed -> dumping Dom0's registers
(XEN) *** Dumping Dom0 vcpu#0 state: ***
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c000e2cc
(XEN) CPSR:   60000013 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: deadbeef R2: 00000001 R3: b6f83b50
(XEN)      R4: b6f83b50 R5: dfb98c00 R6: 00000000 R7: bee0d2e8
(XEN)      R8: dfb98c00 R9: cc2b0000 R10:df44f988 R11:bee0d2e8 R12:deadbeef
(XEN) USR: SP: bee0d2b4 LR: b6ee024c
(XEN) SVC: SP: cc2b1ea4 LR: c0216b28 SPSR:60000010
(XEN) ABT: SP: c058d98c LR: c0012760 SPSR:60000193
(XEN) UND: SP: c058d998 LR: c00125e0 SPSR:a0000093
(XEN) IRQ: SP: c058d980 LR: c0012400 SPSR:60000193
(XEN) FIQ: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c5387d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000004c2ac06a
(XEN)      TTBR1: 000000004000406a
(XEN)       IFAR: b6ed636c, IFSR: 00000007
(XEN)       DFAR: 00025568, DFSR: 00000017
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000402e4000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 4a000ea1
(XEN)  HPFAR_EL2: 000000000001c810
(XEN)      HDFAR: e0800854
(XEN)      HIFAR: b98790a0
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) [H: dump heap info]
(XEN) 'H' pressed -> dumping heap info (now-0x139:9424174B)
(XEN) heap[node=0][zone=0] -> 32694 pages
(XEN) heap[node=0][zone=1] -> 0 pages
(XEN) heap[node=0][zone=2] -> 0 pages
(XEN) heap[node=0][zone=3] -> 0 pages
(XEN) heap[node=0][zone=4] -> 0 pages
(XEN) heap[node=0][zone=5] -> 0 pages
(XEN) heap[node=0][zone=6] -> 0 pages
(XEN) heap[node=0][zone=7] -> 0 pages
(XEN) heap[node=0][zone=8] -> 0 pages
(XEN) heap[node=0][zone=9] -> 0 pages
(XEN) heap[node=0][zone=10] -> 0 pages
(XEN) heap[node=0][zone=11] -> 0 pages
(XEN) heap[node=0][zone=12] -> 0 pages
(XEN) heap[node=0][zone=13] -> 0 pages
(XEN) heap[node=0][zone=14] -> 0 pages
(XEN) heap[node=0][zone=15] -> 0 pages
(XEN) heap[node=0][zone=16] -> 0 pages
(XEN) heap[node=0][zone=17] -> 0 pages
(XEN) heap[node=0][zone=18] -> 0 pages
(XEN) heap[node=0][zone=19] -> 56562 pages
(XEN) heap[node=0][zone=20] -> 0 pages
(XEN) heap[node=0][zone=21] -> 0 pages
(XEN) heap[node=0][zone=22] -> 0 pages
(XEN) heap[node=0][zone=23] -> 0 pages
(XEN) heap[node=0][zone=24] -> 0 pages
(XEN) heap[node=0][zone=25] -> 0 pages
(XEN) heap[node=0][zone=26] -> 0 pages
(XEN) heap[node=0][zone=27] -> 0 pages
(XEN) heap[node=0][zone=28] -> 0 pages
(XEN) [a: dump timer queues]
(XEN) Dumping timer queues:
(XEN) CPU00:
(XEN)   ex=   -1598us timer=002b3568 cb=00241fa0(0026475c) ns16550_poll+0/0xcc
(XEN)   ex=    7404us timer=47ff8448 cb=0021979c(00000000) csched_tick+0/0x44c
(XEN)   ex=   27408us timer=47ff8158 cb=002180a0(47ff8140) csched_acct+0/0x5e0
(XEN) [e: dump evtchn info]
(XEN) 'e' pressed -> dumping event-channel info
(XEN) Event channel information for domain 0:
(XEN) Polling vCPUs: {}
(XEN)     port [p/m]
(XEN)        1 [0/0]: s=3 n=0 x=0 d=0 p=3
(XEN)        2 [0/0]: s=5 n=0 x=0 v=2
(XEN)        3 [0/0]: s=3 n=0 x=0 d=0 p=1
(XEN)        4 [0/0]: s=5 n=0 x=0 v=3
(XEN)        5 [0/0]: s=3 n=0 x=0 d=1 p=1
(XEN)        6 [0/0]: s=3 n=0 x=0 d=1 p=2
(XEN) Event channel information for domain 1:
(XEN) Polling vCPUs: {}
(XEN)     port [p/m]
(XEN)        1 [0/0]: s=3 n=0 x=0 d=0 p=5
(XEN)        2 [0/0]: s=3 n=0 x=0 d=0 p=6
(XEN) [g: print grant table usage]
(XEN) gnttab_usage_print_all [ key 'g' pressed
(XEN)       -------- active --------       -------- shared --------
(XEN) [ref] localdom mfn      pin          localdom gmfn     flags
(XEN) grant-table for remote domain:    0 ... no active grant table entries
(XEN)       -------- active --------       -------- shared --------
(XEN) [ref] localdom mfn      pin          localdom gmfn     flags
(XEN) grant-table for remote domain:    1 (v1)
(XEN) [  0]        0 0x059cf4 0x00000001          0 0x088000 0x19
(XEN) [  1]        0 0x072c08 0x00000001          0 0x088001 0x19
(XEN) gnttab_usage_print_all ] done
(XEN) [m: memory info]
(XEN) Physical memory information:
(XEN)     Xen heap: 130776kB free
(XEN)     heap[19]: 226248kB free
(XEN)     Dom heap: 226248kB free
(XEN) [q: dump domain (and guest debug) info]
(XEN) 'q' pressed -> dumping domain info (now=0x139:A3A35ED4)
(XEN) General information for domain 0:
(XEN)     refcnt=3 dying=0 pause_count=0
(XEN)     nr_pages=131070 xenheap_pages=2 shared_pages=0 paged_pages=0 dirty_cpus={} max_pages=4294967295
(XEN)     handle=00000000-0000-0000-0000-000000000000 vm_assist=00000000
(XEN) GICH_LRs (vcpu 0) mask=3
(XEN)    VCPU_LR[0]=1a08001b
(XEN)    VCPU_LR[1]=1a080057
(XEN)    VCPU_LR[2]=0
(XEN)    VCPU_LR[3]=0
(XEN) Inflight irq=27
(XEN) Inflight irq=87
(XEN) Rangesets belonging to domain 0:
(XEN)     Interrupts { }
(XEN)     I/O Memory { }
(XEN) NODE affinity for domain 0: [0]
(XEN) VCPU information and callbacks for domain 0:
(XEN)     VCPU0: CPU0 [has=F] poll=0 upcall_pend = 00, upcall_mask = 00 dirty_cpus={} cpu_affinity={0-127}
(XEN)     pause_count=0 pause_flags=0
(XEN)     No periodic timer
(XEN) General information for domain 1:
(XEN)     refcnt=3 dying=0 pause_count=0
(XEN)     nr_pages=32770 xenheap_pages=2 shared_pages=0 paged_pages=0 dirty_cpus={} max_pages=33024
(XEN)     handle=b1bfb6f3-aac8-41b2-8661-647b4ab9d1e2 vm_assist=00000000
(XEN) GICH_LRs (vcpu 0) mask=0
(XEN)    VCPU_LR[0]=0
(XEN)    VCPU_LR[1]=0
(XEN)    VCPU_LR[2]=0
(XEN)    VCPU_LR[3]=0
(XEN) Rangesets belonging to domain 1:
(XEN)     Interrupts { }
(XEN)     I/O Memory { }
(XEN) NODE affinity for domain 1: [0]
(XEN) VCPU information and callbacks for domain 1:
(XEN)     VCPU0: CPU0 [has=F] poll=0 upcall_pend = 00, upcall_mask = 00 dirty_cpus={} cpu_affinity={0-127}
(XEN)     pause_count=0 pause_flags=0
(XEN)     No periodic timer
(XEN) Notifying guest 0:0 (virq 1, port 0, stat 0/1/0)
(XEN) Notifying guest 1:0 (virq 1, port 0, stat 0/0/0)
(XEN) [r: dump run queues]
(XEN) sched_smt_power_savings: disabled
(XEN) NOW=0x00000139ACAEF1F0
(XEN) Idle cpupool:
(XEN) Scheduler: SMP Credit Scheduler (credit)
(XEN) info:
(XEN)   ncpus              = 1
(XEN)   master             = 0
(XEN)   credit             = 300
(XEN)   credit balance     = 0
(XEN)   weight             = 0
(XEN)   runq_sort          = 15733
(XEN)   default-weight     = 256
(XEN)   tslice             = 30ms
(XEN)   ratelimit          = 1000us
(XEN)   credits per msec   = 10
(XEN)   ticks per tslice   = 3
(XEN)   migration delay    = 0us
(XEN) idlers: 00000000,00000000,00000000,00000000
(XEN) active vcpus:
(XEN) Cpupool 0:
(XEN) Scheduler: SMP Credit Scheduler (credit)
(XEN) info:
(XEN)   ncpus              = 1
(XEN)   master             = 0
(XEN)   credit             = 300
(XEN)   credit balance     = 0
(XEN)   weight             = 0
(XEN)   runq_sort          = 15733
(XEN)   default-weight     = 256
(XEN)   tslice             = 30ms
(XEN)   ratelimit          = 1000us
(XEN)   credits per msec   = 10
(XEN)   ticks per tslice   = 3
(XEN)   migration delay    = 0us
(XEN) idlers: 00000000,00000000,00000000,00000000
(XEN) active vcpus:
(XEN) CPU[00]  sort=15733, sibling=00000000,00000000,00000000,00000001, core=00000000,00000000,00000000,00000001
(XEN)   run: [32767.0] pri=0 flags=0 cpu=0
(XEN)     1: [1.0] pri=-1 flags=0 cpu=0 credit=208 [w=256]
(XEN)     2: [0.0] pri=-1 flags=0 cpu=0 credit=241 [w=256]
(XEN) [t: display multi-cpu clock info]
(XEN) Synced stime skew: max=0ns avg=0ns samples=1 current=0ns
(XEN) Synced cycles skew: max=0 avg=0 samples=1 current=0

4), hang in 
PC:     c000e2cc
(XEN) SVC: SP: cc2b1ea4 LR: c0216b28 SPSR:60000010

c000e190 T sys_oabi_socketcall
c000e328 t unwind_get_byte

c0216ac8 t i2c_check_mux_parents
c0216b34 t i2c_check_addr_busy

(1), it seems that fail in i2c_check_mux_parents. 
disable all the device driver except for block and network for xen frontend driver.
(2), after re-compile, the error message is same. re-boot system

5), 
(XEN) Guest data abort: Translation fault at level 2
(XEN)     gva=c8800004
(XEN)     gpa=000000001c481004
(XEN)     size=2 sign=0 write=0 reg=3
(XEN)     eat=0 cm=0 s1ptw=0 dfsc=6
(XEN) dom1 IPA 0x000000001c481004
(XEN) P2M @ 023dbe80 mfn:0x5edf4
(XEN) 1ST[0x0] = 0x00000000402e96ff
(XEN) 2ND[0xe2] = 0x0000000000000000
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c032ce1c
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: c034cd84 R3: 00000008
(XEN)      R4: ffffffff R5: c034c7f0 R6: 00000010 R7: c8800000
(XEN)      R8: c0487a38 R9: 00100100 R10:00200200 R11:c0345f88 R12:00000063
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: c0345f40 LR: c032d0d0 SPSR:000001d3
(XEN) ABT: SP: c036508c LR: c036508c SPSR:00000000
(XEN) UND: SP: c0365098 LR: c0365098 SPSR:00000000
(XEN) IRQ: SP: c0365080 LR: c0365080 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: ffffffff SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c53c7d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000008000406a
(XEN)      TTBR1: 000000008000406a
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 000200005edf4000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 93830006
(XEN)  HPFAR_EL2: 00000000001c4810
(XEN)      HDFAR: c8800004
(XEN)      HIFAR: 9f7ffee6
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) domain_crash_sync called from traps.c:1385
(XEN) Domain 1 (vcpu#0) crashed on cpu#0:
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c032ce1c
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: c034cd84 R3: 00000008
(XEN)      R4: ffffffff R5: c034c7f0 R6: 00000010 R7: c8800000
(XEN)      R8: c0487a38 R9: 00100100 R10:00200200 R11:c0345f88 R12:00000063
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: c0345f40 LR: c032d0d0 SPSR:000001d3
(XEN) ABT: SP: c036508c LR: c036508c SPSR:00000000
(XEN) UND: SP: c0365098 LR: c0365098 SPSR:00000000
(XEN) IRQ: SP: c0365080 LR: c0365080 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: ffffffff SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c53c7d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000008000406a
(XEN)      TTBR1: 000000008000406a
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 000200005edf4000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 93830006
(XEN)  HPFAR_EL2: 00000000001c4810
(XEN)      HDFAR: c8800004
(XEN)      HIFAR: 9f7ffee6
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) mm.c:1250:d0 gnttab_mark_dirty not implemented yet

(1), lr in:
(XEN) SVC: SP: c0345f40 LR: c032d0d0 SPSR:000001d3

c032d028 T gic_of_init
c032d11c t gpiolib_debugfs_init

(2), 
actual crash in 37c:
 374:   e1a03008        mov     r3, r8
 378:   ebfffffe        bl      48 <gic_init_bases>
                        378: R_ARM_CALL gic_init_bases

        if (parent) {
 37c:   e3570000        cmp     r7, #0
 380:   0a000005        beq     39c <gic_of_init+0xc8>

so, it fail in gic_init_bases.

(3), add hypercall console_io for debug

diff --git a/kernel/printk.c b/kernel/printk.c
index 0b31715..826c2a9 100644
--- a/kernel/printk.c
+++ b/kernel/printk.c
@@ -1674,10 +1674,13 @@ EXPORT_SYMBOL(printk_emit);
  *
  * See the vsnprintf() documentation for format string extensions over C99.
  */
+#include <xen/interface/xen.h> // for CONSOLEIO_write
+#include <asm/xen/hypercall.h>
 asmlinkage int printk(const char *fmt, ...)
 {
 	va_list args;
 	int r;
+	char buf[256];
 
 #ifdef CONFIG_KGDB_KDB
 	if (unlikely(kdb_trap_printk)) {
@@ -1688,6 +1691,11 @@ asmlinkage int printk(const char *fmt, ...)
 	}
 #endif
 	va_start(args, fmt);
+	vsnprintf(buf, sizeof(buf), fmt, args);
+	va_end(args);
+	HYPERVISOR_console_io(CONSOLEIO_write, sizeof(buf), buf);
+
+	va_start(args, fmt);
 	r = vprintk_emit(0, -1, NULL, 0, fmt, args);
 	va_end(args);
 
(XEN) Guest data abort: Translation fault at level 2
(XEN)     gva=c8800004
(XEN)     gpa=000000001c481004
(XEN)     size=2 sign=0 write=0 reg=3
(XEN)     eat=0 cm=0 s1ptw=0 dfsc=6
(XEN) dom2 IPA 0x000000001c481004
(XEN) P2M @ 02338e00 mfn:0x59c70
(XEN) 1ST[0x0] = 0x00000000719c66ff
(XEN) 2ND[0xe2] = 0x0000000000000000
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c032ce1c
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: c034cd84 R3: 00000008
(XEN)      R4: ffffffff R5: c034c7f0 R6: 00000010 R7: c8800000
(XEN)      R8: c0487a38 R9: 00100100 R10:00200200 R11:c0345f88 R12:00000063
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: c0345f40 LR: c032d0d0 SPSR:000001d3
(XEN) ABT: SP: c036508c LR: c036508c SPSR:00000000
(XEN) UND: SP: c0365098 LR: c0365098 SPSR:00000000
(XEN) IRQ: SP: c0365080 LR: c0365080 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: ffffffff SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c53c7d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000008000406a
(XEN)      TTBR1: 000000008000406a
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 0002000059c70000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 93830006
(XEN)  HPFAR_EL2: 00000000001c4810
(XEN)      HDFAR: c8800004
(XEN)      HIFAR: 9f7ffee6
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) domain_crash_sync called from traps.c:1385
(XEN) Domain 2 (vcpu#0) crashed on cpu#0:
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c032ce1c
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: c034cd84 R3: 00000008
(XEN)      R4: ffffffff R5: c034c7f0 R6: 00000010 R7: c8800000
(XEN)      R8: c0487a38 R9: 00100100 R10:00200200 R11:c0345f88 R12:00000063
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: c0345f40 LR: c032d0d0 SPSR:000001d3
(XEN) ABT: SP: c036508c LR: c036508c SPSR:00000000
(XEN) UND: SP: c0365098 LR: c0365098 SPSR:00000000
(XEN) IRQ: SP: c0365080 LR: c0365080 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: ffffffff SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c53c7d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000008000406a
(XEN)      TTBR1: 000000008000406a
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 0002000059c70000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 93830006
(XEN)  HPFAR_EL2: 00000000001c4810
(XEN)      HDFAR: c8800004
(XEN)      HIFAR: 9f7ffee6
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode


14:19 2013-10-15
virtualization, domain configuration, libvirt, xl
the running xml is saved in /var/lib/xen with userdata-d.domain_id.uuid.suffix: 
/var/lib/xen/userdata-d.domain_id.uuid.xl
/var/lib/xen/userdata-d.domain_id.uuid.libvirt-xml

10:44 2013-10-16
è¿äºå¹´æéè¿çpatch, xen, fix compile error
1, http://lists.xen.org/archives/html/xen-devel/2013-10/msg01169.html
i was thought this should be fix by user.

10:51 2013-10-16
GTD
0, 10:00-19:44

1, today
1), try print according to julieng suggest. see"10:52 2013-10-16"
2), work report.
3), reply bnc.

10:52 2013-10-16
1, #xenarm:
<julieng> bamvor: You can directly use xen_raw_printk/xen_raw_write_console.
<julieng> bamvor: The best place is vprintk_emit (kernel/printk.c"
2, try the lastest kernel as domU.
3, got the log!
1), the patch
diff --git a/kernel/printk/printk.c b/kernel/printk/printk.c
index b4e8500..060c163 100644
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@ -1488,6 +1488,7 @@ static size_t cont_print_text(char *text, size_t size)
        return textlen;
 }
 
+#include <xen/hvc-console.h>
 asmlinkage int vprintk_emit(int facility, int level,
                            const char *dict, size_t dictlen,
                            const char *fmt, va_list args)
@@ -1546,6 +1547,7 @@ asmlinkage int vprintk_emit(int facility, int level,
         * prefix which might be passed-in as a parameter.
         */
        text_len = vscnprintf(text, sizeof(textbuf), fmt, args);
+    xen_raw_console_write(text);
 
        /* mark and strip a trailing newline */
        if (text_len && text[text_len-1] == '\n') {

2), fail boot log:
(d2) 6Booting Linux on physical CPU 0x0
(d2) 5Linux version 3.12.0-rc5+ (bamvor@linux-rd.site) (gcc version 4.8.1 20130401 (prerelease) (crosstool-NG linaro-1.13.1-4.8-201
(d2) 3.04-20130417 - Linaro GCC 2013.04) ) #3 SMP Wed Oct 16 14:35:27 CST 2013
(d2) CPU: ARMv7 Processor [410fc074] revision 4 (ARMv7), cr=10c53c7d
(d2) CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
(d2) 6Machine: Dummy Virtual Machine, model: XENVM-4.2
(d2) Memory policy: ECC disabled, Data cache writealloc
(d2) 7On node 0 totalpages: 32768
(d2) 7free_area_init_node: node 0, pgdat c0382b80, node_mem_map c03a9000
(d2) 7  Normal zone: 256 pages used for memmap
(d2) 7  Normal zone: 0 pages reserved
(d2) 7  Normal zone: 32768 pages, LIFO batch:7
(d2) 6psci: probing function IDs from device-tree
(d2) 6PERCPU: Embedded 5 pages/cpu @c04ac000 s7296 r0 d13184 u32768
(d2) 7pcpu-alloc: s7296 r0 d13184 u32768 alloc=8*4096
(d2) 7pcpu-alloc: 
(d2) Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 32512
(d2) 5Kernel command line: console=hvc0 root=/dev/xvda
(d2) 6PID hash table entries: 512 (order: -1, 2048 bytes)
(d2) 6Dentry cache hash table entries: 16384 (order: 4, 65536 bytes)
(d2) 6Inode-cache hash table entries: 8192 (order: 3, 32768 bytes)
(d2) Memory: 126140K/131072K available (2728K kernel code, 133K rwdata, 520K rodata, 175K init, 147K bss, 4932K reserved, 0K highmem
(d2) )
(d2) 5Virtual kernel memory layout:
(d2)     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
(d2)     fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
(d2)     vmalloc : 0xc8800000 - 0xff000000   ( 872 MB)
(d2)     lowmem  : 0xc0000000 - 0xc8000000   ( 128 MB)
(d2)     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
(d2)       .text : 0xc0008000 - 0xc0334438   (3250 kB)
(d2)       .init : 0xc0335000 - 0xc0360c80   ( 176 kB)
(d2)       .data : 0xc0362000 - 0xc0383560   ( 134 kB)
(d2)        .bss : 0xc0383568 - 0xc03a822c   ( 148 kB)
(d2) 6Hierarchical RCU implementation.
(d2) 6  RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=2.
(d2) 6NR_IRQS:16 nr_irqs:16 16
(XEN) Guest data abort: Translation fault at level 2
(XEN)     gva=c8800004
(XEN)     gpa=000000002c001004
(XEN)     size=2 sign=0 write=0 reg=9
(XEN)     eat=0 cm=0 s1ptw=0 dfsc=6
(XEN) dom2 IPA 0x000000002c001004
(XEN) P2M @ 02634e00 mfn:0x71a70
(XEN) 1ST[0x0] = 0x0000000071a066ff
(XEN) 2ND[0x160] = 0x0000000000000000
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c0349ab0
(XEN) CPSR:   600001d3 MODE:32-bit Guest SVC
(XEN)      R0: 00000000 R1: ffffffff R2: c036ad7c R3: 00000008
(XEN)      R4: ffffffff R5: c036a7e8 R6: 00000010 R7: c8800000
(XEN)      R8: c04a9afc R9: 00100100 R10:00200200 R11:c0363f90 R12:00000063
(XEN) USR: SP: 00000000 LR: 00000000
(XEN) SVC: SP: c0363f40 LR: c0349d6c SPSR:000001d3
(XEN) ABT: SP: c0383fcc LR: c0383fcc SPSR:00000000
(XEN) UND: SP: c0383fd8 LR: c0383fd8 SPSR:00000000
(XEN) IRQ: SP: c0383fc0 LR: c0383fc0 SPSR:00000000
(XEN) FIQ: SP: 00000000 LR: ffffffff SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c53c7d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000008000406a
(XEN)      TTBR1: 000000008000406a
(XEN)       IFAR: 00000000, IFSR: 00000000
(XEN)       DFAR: 00000000, DFSR: 00000000
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 0002000071a70000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN) 
(XEN)    ESR_EL2: 93890006
(XEN)  HPFAR_EL2: 00000000002c0010
(XEN)      HDFAR: c8800004
(XEN)      HIFAR: 39a59240
(XEN) 
(XEN) No stack trace for 32-bit guest kernel-mode
(XEN) domain_crash_sync called from traps.c:1385
(XEN) Domain 2 (vcpu#0) crashed on cpu#0:
...same as above
(1), fail in gic_init_bases
(XEN) PC:     c0349ab0

c0349a30 T gic_init_bases
c0349cc4 T gic_of_init

2), add debug log and try.
(d3) 7GIC NON BANKED
(d3) 7dist_base<c8800000>, cpu_base<c8802000>
(d3) 7read c8800000 + 4
(XEN) Guest data abort: Translation fault at level 2
(XEN)     gva=c8800004
(XEN)     gpa=000000002c001004
(XEN)     size=2 sign=0 write=0 reg=10
(XEN)     eat=0 cm=0 s1ptw=0 dfsc=6
(XEN) dom3 IPA 0x000000002c001004
(XEN) P2M @ 02005d00 mfn:0x402e8
(XEN) 1ST[0x0] = 0x000000005edf46ff
(XEN) 2ND[0x160] = 0x0000000000000000

3), the gicv_init in xen code directly use the gic base address same as the hardware gic.
(d2) 6Installing knfsd (copyright (C) 1996 okir@monad.swb.de).
(d2) 6ROMFS MTD (C) 2007 Red Hat, Inc.
(d2) 6msgmni has been set to 246
(d2) 6Block layer SCSI generic (bsg) driver version 0.4 loaded (major 254)
(d2) 6io scheduler noop registered
(d2) 6io scheduler deadline registered
(d2) 6io scheduler cfq registered (default)
(d2) 6console [hvc0] enabled
(d2) 6Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
(d2) 6brd: module loaded
(d2) 6loop: module loaded
(d2) 6xen_netfront: Initialising Xen virtual ethernet driver
(d2) 6mousedev: PS/2 mouse device common for all mice
(d2) 6TCP: cubic registered
(d2) 6NET: Registered protocol family 17
[ 4164.918392] xen-blkback:ring-ref 8, event-channel 3, protocol 1 (arm-abi) persistent grants
(d2) 6blkfront: xvda: barrier or flush: disabled; persistent grants: enabled; indirect descriptors: enabled;
(d2) 3end_request: I/O error, dev xvda, sector 2
(d2) 3EXT3-fs (xvda): error: unable to read superblock
(d2) 3end_request: I/O error, dev xvda, sector 2
(d2) 3EXT2-fs (xvda): error: unable to read superblock
(d2) 3end_request: I/O error, dev xvda, sector 2
(d2) MINIX-fs: unable to read superblock
(d2) 3end_request: I/O error, dev xvda, sector 0
(d2) 3FAT-fs (xvda): unable to read boot sector
(d2) VFS: Cannot open root device "xvda" or unknown-block(202,0): error -5
(d2) Please append a correct "root=" boot option; here are the available partitions:
(d2) 0Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block(202,0)
(d2) dCPU: 0 PID: 1 Comm: swapper/0 Not tainted 3.12.0-rc5+ #4
(d2) [<c000f524>] (unwind_backtrace+0x0/0xe0) from [<c000c3e8>] (show_stack+0x10/0x14)
(d2) [<c000c3e8>] (show_stack+0x10/0x14) from [<c0290210>] (dump_stack+0x70/0x8c)
(d2) [<c0290210>] (dump_stack+0x70/0x8c) from [<c028ec84>] (panic+0x84/0x1cc)
(d2) [<c028ec84>] (panic+0x84/0x1cc) from [<c03360e0>] (mount_block_root+0x1d4/0x214)
(d2) [<c03360e0>] (mount_block_root+0x1d4/0x214) from [<c03362e4>] (mount_root+0xdc/0x100)
(d2) [<c03362e4>] (mount_root+0xdc/0x100) from [<c0336460>] (prepare_namespace+0x158/0x1ac)
(d2) [<c0336460>] (prepare_namespace+0x158/0x1ac) from [<c0335d38>] (kernel_init_freeable+0x184/0x1cc)
(d2) [<c0335d38>] (kernel_init_freeable+0x184/0x1cc) from [<c028dec0>] (kernel_init+0x8/0xe4)
(d2) [<c028dec0>] (kernel_init+0x8/0xe4) from [<c0009558>] (ret_from_fork+0x14/0x3c)

4), the above the error is because i do not mount the image to loop device. 
successful after do it, log:
# (XEN) gic dbase<1c81000>, cbase<1c82000>
[ 4300.542254] Failed to unmap pfn:4d4dd rc:-2
[ 4300.547042] Failed to unmap pfn:4c261 rc:-2
[ 4300.558873] Failed to unmap pfn:4d4dd rc:-2
[ 4300.564689] Failed to unmap pfn:4c261 rc:-2
[ 4300.575116] Failed to unmap pfn:4d4db rc:-2
[ 4300.583516] Failed to unmap pfn:4d4da rc:-2
(d3) 6Booting Linux on physical CPU 0x0
(d3) 5Linux version 3.12.0-rc5+ (bamvor@linux-rd.site) (gcc version 4.8.1 20130401 (prerelease) (crosstool-NG linaro-1.13.1-4.8-201
(d3) 3.04-20130417 - Linaro GCC 2013.04) ) #4 SMP Wed Oct 16 15:08:35 CST 2013
(d3) CPU: ARMv7 Processor [410fc074] revision 4 (ARMv7), cr=10c53c7d
(d3) CPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cache
(d3) 6Machine: Dummy Virtual Machine, model: XENVM-4.2
(d3) Memory policy: ECC disabled, Data cache writealloc
(d3) 7On node 0 totalpages: 32768
(d3) 7free_area_init_node: node 0, pgdat c0382b80, node_mem_map c03a9000
(d3) 7  Normal zone: 256 pages used for memmap
(d3) 7  Normal zone: 0 pages reserved
(d3) 7  Normal zone: 32768 pages, LIFO batch:7
(d3) 6psci: probing function IDs from device-tree
(d3) 6PERCPU: Embedded 5 pages/cpu @c04ac000 s7296 r0 d13184 u32768
(d3) 7pcpu-alloc: s7296 r0 d13184 u32768 alloc=8*4096
(d3) 7pcpu-alloc: 
(d3) Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 32512
(d3) 5Kernel command line: console=hvc0 root=/dev/xvda
(d3) 6PID hash table entries: 512 (order: -1, 2048 bytes)
(d3) 6Dentry cache hash table entries: 16384 (order: 4, 65536 bytes)
(d3) 6Inode-cache hash table entries: 8192 (order: 3, 32768 bytes)
(d3) Memory: 126140K/131072K available (2728K kernel code, 133K rwdata, 520K rodata, 175K init, 147K bss, 4932K reserved, 0K highmem
(d3) )
(d3) 5Virtual kernel memory layout:
(d3)     vector  : 0xffff0000 - 0xffff1000   (   4 kB)
(d3)     fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
(d3)     vmalloc : 0xc8800000 - 0xff000000   ( 872 MB)
(d3)     lowmem  : 0xc0000000 - 0xc8000000   ( 128 MB)
(d3)     pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
(d3)       .text : 0xc0008000 - 0xc0334438   (3250 kB)
(d3)       .init : 0xc0335000 - 0xc0360c80   ( 176 kB)
(d3)       .data : 0xc0362000 - 0xc0383560   ( 134 kB)
(d3)        .bss : 0xc0383568 - 0xc03a822c   ( 148 kB)
(d3) 6Hierarchical RCU implementation.
(d3) 6  RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=2.
(d3) 6NR_IRQS:16 nr_irqs:16 16
(d3) 7GIC NON BANKED
(d3) 7dist_base<c8800000>, cpu_base<c8802000>
(d3) 7read c8800000 + 4
(d3) 7irq_alloc_descs
(d3) 7irq_domain_add_legacy
(d3) 6Architected cp15 timer(s) running at 24.00MHz (virt).
(d3) 6Switching to timer-based delay loop
(d3) 6sched_clock: ARM arch timer >56 bits at 24000kHz, resolution 41ns
(d3) 6sched_clock: 32 bits at 100 Hz, resolution 10000000ns, wraps every 4294967286ms
(d3) 6Console: colour dummy device 80x30
(d3) 6Calibrating delay loop (skipped), value calculated using timer frequency.. 48.00 BogoMIPS (lpj=240000)
(d3) 6pid_max: default: 32768 minimum: 301
(d3) 6Mount-cache hash table entries: 512
(d3) 6CPU: Testing write buffer coherency: ok
(d3) 3/cpus/cpu@0 missing clock-frequency property
(d3) 3/cpus/cpu@1 missing clock-frequency property
(d3) 6CPU0: thread -1, cpu 0, socket 0, mpidr 80000000
(d3) 6Setting up static identity map for 0xc0294370 - 0xc02943c8
(d3) 3CPU1: failed to boot: -22
(d3) 6Brought up 1 CPUs
(d3) 6SMP: Total of 1 processors activated.
(d3) 6CPU: All CPU(s) started in SVC mode.
(d3) 6Xen 4.2 support found, events_irq=31 gnttab_frame_pfn=b0000
(d3) 6xen:grant_table: Grant tables using version 1 layout
(d3) Grant table initialized
(d3) 6NET: Registered protocol family 16
(d3) 6Xen: initializing cpu0
(d3) 6DMA: preallocated 256 KiB pool for atomic coherent allocations
(d3) 6Serial: AMBA PL011 UART driver
(d3) 6bio: create slab <bio-0> at 0
(d3) 6xen:balloon: Initialising balloon driver
(d3) 5SCSI subsystem initialized
(d3) 6Switched to clocksource arch_sys_counter
(d3) 6NET: Registered protocol family 2
(d3) 6TCP established hash table entries: 1024 (order: 1, 8192 bytes)
(d3) 6TCP bind hash table entries: 1024 (order: 1, 8192 bytes)
(d3) 6TCP: Hash tables configured (established 1024 bind 1024)
(d3) 6TCP: reno registered
(d3) 6UDP hash table entries: 256 (order: 1, 8192 bytes)
(d3) 6UDP-Lite hash table entries: 256 (order: 1, 8192 bytes)
(d3) 6NET: Registered protocol family 1
(d3) 6RPC: Registered named UNIX socket transport module.
(d3) 6RPC: Registered udp transport module.
(d3) 6RPC: Registered tcp transport module.
(d3) 6RPC: Registered tcp NFSv4.1 backchannel transport module.
(d3) 6Installing knfsd (copyright (C) 1996 okir@monad.swb.de).
(d3) 6ROMFS MTD (C) 2007 Red Hat, Inc.
(d3) 6msgmni has been set to 246
(d3) 6Block layer SCSI generic (bsg) driver version 0.4 loaded (major 254)
(d3) 6io scheduler noop registered
(d3) 6io scheduler deadline registered
(d3) 6io scheduler cfq registered (default)
(d3) 6console [hvc0] enabled
(d3) 6Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
(d3) 6brd: module loaded
(d3) 6loop: module loaded
(d3) 6xen_netfront: Initialising Xen virtual ethernet driver
(d3) 6mousedev: PS/2 mouse device common for all mice
(d3) 6TCP: cubic registered
(d3) 6NET: Registered protocol family 17
[ 4309.289405] xen-blkback:ring-ref 8, event-channel 3, protocol 1 (arm-abi) persistent grants
(d3) 6blkfront: xvda: flush diskcache: enabled; persistent grants: enabled; indirect descriptors: enabled;
(d3) 6 xvda: unknown partition table
(d3) 6kjournald starting.  Commit interval 5 seconds
(d3) 6EXT3-fs (xvda): mounted filesystem with ordered data mode
(d3) 6VFS: Mounted root (ext3 filesystem) readonly on device 202:0.
(d3) 6Freeing unused kernel memory: 172K (c0335000 - c0360000)
(d3) 6EXT3-fs (xvda): using internal journal

5), xl console could output the kernel boot log, but no login.

6), direct login through "bash --login"

7), test network pass.

4, the following patch should merge into github: 
1), domU guest kernel
diff --git a/arch/arm/boot/dts/xenvm-4.2.dts b/arch/arm/boot/dts/xenvm-4.2.dts
index 3369151..5d5689e 100644
--- a/arch/arm/boot/dts/xenvm-4.2.dts
+++ b/arch/arm/boot/dts/xenvm-4.2.dts
@@ -50,13 +50,13 @@
 		reg = <0 0x80000000 0 0x08000000>;
 	};
 
-	gic: interrupt-controller@2c001000 {
+	gic: interrupt-controller@1c81000{
 		compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
 		#interrupt-cells = <3>;
 		#address-cells = <0>;
 		interrupt-controller;
-		reg = <0 0x2c001000 0 0x1000>,
-		      <0 0x2c002000 0 0x100>;
+		reg = <0 0x01c81000 0 0x1000>,
+		      <0 0x01c82000 0 0x1000>;
 	};
 
 	timer {
diff --git a/drivers/irqchip/irq-gic.c b/drivers/irqchip/irq-gic.c
index d0e9480..acd4dde 100644
--- a/drivers/irqchip/irq-gic.c
+++ b/drivers/irqchip/irq-gic.c
@@ -48,6 +48,12 @@
 
 #include "irqchip.h"
 
+#if 1
+#define BJZ_DEBUG printk
+#else
+#define BJZ_DEBUG
+#endif
+
 union gic_base {
 	void __iomem *common_base;
 	void __percpu __iomem **percpu_base;
@@ -744,6 +750,7 @@ void __init gic_init_bases(unsigned int gic_nr, int irq_start,
 	gic = &gic_data[gic_nr];
 #ifdef CONFIG_GIC_NON_BANKED
 	if (percpu_offset) { /* Frankein-GIC without banked registers... */
+        BJZ_DEBUG(KERN_DEBUG "GIC BANKED\n");
 		unsigned int cpu;
 
 		gic->dist_base.percpu_base = alloc_percpu(void __iomem *);
@@ -757,6 +764,7 @@ void __init gic_init_bases(unsigned int gic_nr, int irq_start,
 
 		for_each_possible_cpu(cpu) {
 			unsigned long offset = percpu_offset * cpu_logical_map(cpu);
+            BJZ_DEBUG(KERN_DEBUG "cpu<%d>: dist_base<%x>, cpu_base<%x>\n", dist_base + offset, cpu_base + offset);
 			*per_cpu_ptr(gic->dist_base.percpu_base, cpu) = dist_base + offset;
 			*per_cpu_ptr(gic->cpu_base.percpu_base, cpu) = cpu_base + offset;
 		}
@@ -765,12 +773,14 @@ void __init gic_init_bases(unsigned int gic_nr, int irq_start,
 	} else
 #endif
 	{			/* Normal, sane GIC... */
+        BJZ_DEBUG(KERN_DEBUG "GIC NON BANKED\n");
 		WARN(percpu_offset,
 		     "GIC_NON_BANKED not enabled, ignoring %08x offset!",
 		     percpu_offset);
 		gic->dist_base.common_base = dist_base;
 		gic->cpu_base.common_base = cpu_base;
 		gic_set_base_accessor(gic, gic_get_common_base);
+        BJZ_DEBUG(KERN_DEBUG "dist_base<%x>, cpu_base<%x>\n", dist_base, cpu_base);
 	}
 
 	/*
@@ -796,6 +806,7 @@ void __init gic_init_bases(unsigned int gic_nr, int irq_start,
 	 * Find out how many interrupts are supported.
 	 * The GIC only supports up to 1020 interrupt sources.
 	 */
+    BJZ_DEBUG(KERN_DEBUG "read %x + %x\n", gic_data_dist_base(gic), GIC_DIST_CTR);
 	gic_irqs = readl_relaxed(gic_data_dist_base(gic) + GIC_DIST_CTR) & 0x1f;
 	gic_irqs = (gic_irqs + 1) * 32;
 	if (gic_irqs > 1020)
@@ -803,12 +814,14 @@ void __init gic_init_bases(unsigned int gic_nr, int irq_start,
 	gic->gic_irqs = gic_irqs;
 
 	gic_irqs -= hwirq_base; /* calculate # of irqs to allocate */
+    BJZ_DEBUG(KERN_DEBUG "irq_alloc_descs\n");
 	irq_base = irq_alloc_descs(irq_start, 16, gic_irqs, numa_node_id());
 	if (IS_ERR_VALUE(irq_base)) {
 		WARN(1, "Cannot allocate irq_descs @ IRQ%d, assuming pre-allocated\n",
 		     irq_start);
 		irq_base = irq_start;
 	}
+    BJZ_DEBUG(KERN_DEBUG "irq_domain_add_legacy\n");
 	gic->domain = irq_domain_add_legacy(node, gic_irqs, irq_base,
 				    hwirq_base, &gic_irq_domain_ops, gic);
 	if (WARN_ON(!gic->domain))
diff --git a/kernel/printk/printk.c b/kernel/printk/printk.c
index b4e8500..060c163 100644
--- a/kernel/printk/printk.c
+++ b/kernel/printk/printk.c
@@ -1488,6 +1488,7 @@ static size_t cont_print_text(char *text, size_t size)
 	return textlen;
 }
 
+#include <xen/hvc-console.h>
 asmlinkage int vprintk_emit(int facility, int level,
 			    const char *dict, size_t dictlen,
 			    const char *fmt, va_list args)
@@ -1546,6 +1547,7 @@ asmlinkage int vprintk_emit(int facility, int level,
 	 * prefix which might be passed-in as a parameter.
 	 */
 	text_len = vscnprintf(text, sizeof(textbuf), fmt, args);
+    xen_raw_console_write(text);
 
 	/* mark and strip a trailing newline */
 	if (text_len && text[text_len-1] == '\n') {

2), xen
diff --git a/xen/arch/arm/gic.c b/xen/arch/arm/gic.c
index 74575cd..0c7d8aa 100644
--- a/xen/arch/arm/gic.c
+++ b/xen/arch/arm/gic.c
@@ -829,7 +829,7 @@ int gicv_setup(struct domain *d)
      */
     d->arch.vgic.dbase = gic.dbase;
     d->arch.vgic.cbase = gic.cbase;
-
+    printk("gic dbase<%x>, cbase<%x>\n", (unsigned int)gic.dbase, (unsigned int)gic.cbase);
 
     d->arch.vgic.nr_lines = 0;
 
11:26 2013-10-16
mail
title: some question about domU on sun7i.

question:
XEN_DOM0 is used in domU?

12:51 2013-10-16
1, fate#316277
#3: Chunyan Liu (2013-10-15 16:59) [reply] 
xc_domain_save can supply the percentage of memory saving. We can use it. After that, there is still some other work (hvm context, qemu status, etc.) but compared to memory saving, it's very quick, I wonder how should we handle the progress of this part of work, could we reserve some percentage (e.g, 5%) at the end to wait for the completion? And, about the progress bar request, print the progress bar in the command line, or also need something in virt-manager?
#4: James Fehlig (2013-10-15 11:59) [reply]  (latest comment) 
I've never measured or analyzed the domain save/restore functions, but I think 5% for the non-memory related items is reasonable. Does the percentage of time spent saving these items increase as the machine size increases? E.g. from a 1vcpu machine to 32vcpu machine? Olaf investigated this code quite a bit for a SAP bug, so he might have an opinion.
As for the 'progress bar', the request seems to prefer logging the progress, e.g. in the libxl log stream associated with the domain. Domains created with xl have their log stream sent to /var/log/xen/xl-domname.log. The log stream of libvirt domains is /var/log/libvirt/libxl/domname.log.
That said, it would be nice to retrieve progress via libxl, so it could then be retrieved through libvirt, and consumed by libvirt-based tools. Does libxl already support retrieving progress via the libxl_asyncprogress_how parameter (see libxl.h)?  

14:12 2013-10-16
suse, sle12 schedule

----- Forwarded message from Thorsten Kukuk <kukuk@suse.de> -----

Date: Wed, 15 May 2013 10:41:15 +0200
From: Thorsten Kukuk <kukuk@suse.de>
To: Antoine Ginies <aginies@suse.de>
Subject: SLE12 schedule

Long evaluation period because of August (holiday season)
We expect that PM this time delivers a really good evaluation
and not like with SP2, which was even worse then the worse SP1 one.

7 Betas biweekly
4 RCs (3 weekly)

2013-07-12	Feature Submission Deadline
2013-08-09	Feature Eval Deadline PM
2013-08-30	Feature Eval Deadline PrjMgr
2013-09-20	Feature Eval Deadline TL
2013-09-30	Feature Feedback Deadline
2013-12-13	Alpha1
2014-01-06	Code Drop Deadline
2014-01-16	Alpha2
2014-01-30	Alpha3
2014-02-20	Beta1
2014-03-06	Beta2
2014-03-20	Beta3
2014-04-03	Beta4
2014-04-17	Beta5
2014-05-08	Beta6 /* late because of eastern and public holidays */
2014-05-22	Beta7
2014-06-18	RC1 /* ~4 weeks and Wednesday, public holidays */
2014-07-10	RC2
2014-07-31	RC3
2014-08-21	GMC
2014-08-28	GM

19:12 2013-10-16
discuss on irc, about what i could do.
1, gdbsx
2, "(XEN) No stack trace for 32-bit guest kernel-mode".
ian think it is worth to do.
i plan to check the code after tomorrow sync meeting.
3, enable ll debug in xen arm? how to start it?
ref: about arm32 address translation.
ian c did it but not post.
4, fix the missing platform warning for sunxi in xen boot.
5,  log
<bamvor> ijc: i got domU boot and login. network between dom0 and domU is ok too. what should i do next? 
<bamvor> is there something todo list in xen arm? thanks. 
<ijc> http://wiki.xen.org/wiki/Xen_ARM_TODO has a todo but it's a bit out of date
<ijc> Would be great if you could submit your patches and/or write up a howto on the wiki
<ijc> can you add your platform to http://wiki.xen.org/wiki/Xen_ARM_with_Virtualization_Extensions#Hardware please
<ijc> and maybe make a sub page http://wiki.xen.org/wiki/Xen_ARM_with_Virtualization_Extensions/WhatEverItIs
<ijc> If you sign up for the wiki and tell me your username there I can give you wite access (we have terrible problems with spam bots so write perms need to come manually :-()
<ijc> bamvor: ^
<bamvor> ok. 
<bamvor> user name: bamvor
<ijc> Done.
<bamvor> thanks. i will add a page about what i do on sun7i. 
<bamvor> and no patches is needed for running xen on sun7i. 
<ijc> cool! If you have details of e.g. which bootloader to use for your particiualr platofrm, u-boot runes etc thatwold be useful too
<bamvor> i follow your steps in Sep. 
<bamvor> how about this todo "Autogenerate DomU's device trees"? is it mean xen should generate the dts from domain.cfg and hardware? 
<ijc> bamvor, yes. I actually half did that already in a series "xen: arm: 64-bit guest support and domU FDT autogeneration" a week or two ago, sorry!
<ijc> Not applied yet though
<ijc> I should update that page...
<bamvor> yes. i have saw this before. 
<bamvor> and how about gdbsx, 
<bamvor> it is not work because of the hyp mode check. i do not know is there some other work need to do. 
<ijc> I've never used or looked at gdbsx even on x86 so I can't really advise, I suppose it would be useful to look into though. How is the hyp mode check related?
<bamvor> i do not dig into it. the error message is: 
<bamvor> # ./gdbsx  -a 22 32 9999
<bamvor> ERROR:_check_hyp:Hyp is NOT enabled for gdbsx
<bamvor> ERROR: failed to attach to domain:22 errno:38
<bamvor> which mean XEN_DOMCTL_gdbsx_unpausevcpu is not supported by xen arm. 
<bamvor> maybe somethlng should be modify like kgdb? 
<bamvor> and when i debug guest: there is a message "(XEN) No stack trace for 32-bit guest kernel-mode"." is there some code work in it? 
* nkambo has quit (Ping timeout: 246 seconds)
<ijc> bamvor: I bet gdbsx is full of x86-isms which would need clearining up if you wanted to use it.
<ijc> Fixing stack traces for different types of guest would be very useful actually
<ijc> I think we support 32-bit guests only.
<ijc> If you like you could also look at the two "Cannot handle..." in dump_guest_s1_walk...
<ijc> Or perhaps look at enabling LPAE in your dom0 kernel to see if that works.

11:36 2013-10-17
(16:30 2013-10-31)
xen, arm, allwinner, A20, sun7i; document, summary
http://wiki.xen.org/wiki?title=Xen_ARMv7_with_Virtualization_Extensions/Allwinner

this wiki talks about xen on [http://linux-sunxi.org/A20 A20](Cortex-A7 dual core, code name sun7i). [http://linux-sunxi.org/A31 A31](Cortex-A7 quad core, code name sun6i) should work as well.

== Compile u-boot ==
as described in [http://wiki.xen.org/wiki/Xen_ARM_with_Virtualization_Extensions#Firmware_Requirements Firmware_Requirements], xen need boot from non-secure hyper mode.

=== get the code ===
a worked branch is here:
    https://github.com/bjzhang/u-boot-sunxi/tree/sunxi_hyp

here is the details:
; merge the hypmode branch
    git://git.linaro.org/people/aprzywara/u-boot.git hypmode_v4
branch into
    git://github.com/linux-sunxi/u-boot-sunxi.git u-boot-sunxi
i tested hypmode_v4 with commit 3d2fc4e8 in u-boot-sunxi. hypmode_v5 should work as well.
; add [http://lists.xen.org/archives/html/xen-devel/2013-08/msg03040.html Ian Campbell patches] on it. 
; enable arm generic timer for sunxi, xen dom0 kernel need this:
    diff --git a/include/configs/sun7i.h b/include/configs/sun7i.h
    index f0d9222..473d1eb 100644
    --- a/include/configs/sun7i.h
    +++ b/include/configs/sun7i.h
    @@ -36,6 +36,8 @@
     
     #define CONFIG_ARMV7_VIRT
     
    +#define CONFIG_SYS_CLK_FREQ     24000000
    +
     #if defined(CONFIG_SYS_SECONDARY_ON)
     #define CONFIG_BOARD_POSTCLK_INIT 1
     #endif

refernce: [http://lists.xen.org/archives/html/xen-devel/2013-08/msg03040.html bootwrapper can't be compiled for cubieboard2]

=== Compile ===
for sd card
    make Cubieboard2 CROSS_COMPILE=arm-linux-gnueabihf- -j8
for usb boot
    make Cubieboard2_FEL CROSS_COMPILE=arm-linux-gnueabihf- -j8

== Building Linux Dom0 ==

First, we will build Linux for dom0 to have a device tree to provide to Xen.

You can get a tree from [https://github.com/bjzhang/linux-allwinner/tree/sun7i-xen-dom0 sun7i-xen-dom0] which is based on arokux sunxi usb branch.
the emac patch in this tree is needed for enable network in dom0.
i am confuse about what does "CONFIG XEN" mean. it  will check the kernel features for dom0 and domU kernel.
if you want to a dom0 kernel, you need to uncheck all the FRONTEND config, check CONFIG_XEN_BACKEND, and check the BACKEND config as you need:
  CONFIG_XEN_BLKDEV_BACKEND=y
  CONFIG_XEN_NETDEV_BACKEND=y

or use sunxi dom0 kernel directly
  git clone -b sun7i-xen-dom0 https://github.com/bjzhang/linux-allwinner.git sun7i-xen-dom0
  cd sun7i-xen-dom0
  make sun7i_dom0_defconfig
  make zImage
  make dtbs

The device tree is located in arch/arm/boot/dts/sun7i-a20-cubieboard2-xen.dtb

== Building Xen ==

the lastest xen should work. reference [[Xen_ARMv7_with_Virtualization_Extensions#Building_Xen_on_ARM|Build Xen on ARM]] and [[Xen_ARMv7_with_Virtualization_Extensions#Building Xen and Linux Dom0|Building Xen and Linux Dom0]] for building xen and generating the xen-uImage.
i test pass on xen commit 720f45ad: Julien Grall, xen/evtchn: Fix build on ARM

use the following build command for enable early printk for a20:
    make dist-xen XEN_TARGET_ARCH=arm32 CROSS_COMPILE=arm-linux-gnueabihf- CONFIG_EARLY_PRINTK=sun7i CONFIG_DTB_FILE=/path/to/sun7i-a20-cubieboard2-xen.dtb
and generate the xen image, note that sunxi ddr base physical base address is 0x40000000, do not use 0x80000000 for base address as other platform. 
    mkimage -A arm -T kernel -a 0x40200000 -e 0x40200000 -C none -d "xen/xen" xen-uImage

== Building linux DomU ==

xen domU kernel is supported by upstream. and remember that domU guest do not aware of which hardware it running on, it only know about the mach-virt.
if you want to a domU kernel, you need to ucheck all the BACKEND config  and check the FRONTEND config as you need: 
  CONFIG_XEN_BLKDEV_FRONTEND=y
  CONFIG_XEN_NETDEV_FRONTEND=y
  CONFIG_HVC_XEN_FRONTEND=y
  CONFIG_XEN_FBDEV_FRONTEND=y
note that '''CONFIG_XEN_XENBUS_FRONTEND''' will be automatically checked by any FRONTEND driver.

currenly, xen directly use the dom0 gic dist base and cpu base as domU gic dist and cpu base. reference gicv_setup() in xen/arch/arm/gic.c for details.
for sunxi, need chances the followings: (this patch is included in my branch)

    diff --git a/arch/arm/boot/dts/xenvm-4.2.dts b/arch/arm/boot/dts/xenvm-4.2.dts
    index 3369151..5d5689e 100644
    --- a/arch/arm/boot/dts/xenvm-4.2.dts
    +++ b/arch/arm/boot/dts/xenvm-4.2.dts
    @@ -50,13 +50,13 @@
            reg = <0 0x80000000 0 0x08000000>;
        };
     
    -	gic: interrupt-controller@2c001000 {
    +	gic: interrupt-controller@1c81000{
            compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
            #interrupt-cells = <3>;
            #address-cells = <0>;
            interrupt-controller;
    -		reg = <0 0x2c001000 0 0x1000>,
    -		      <0 0x2c002000 0 0x100>;
    +		reg = <0 0x01c81000 0 0x1000>,
    +		      <0 0x01c82000 0 0x1000>;
        };
     
        timer {

it should not need to change after ian auto-generate dts patch upstreamed.

  git clone -b sun7i_xen_domU https://github.com/bjzhang/linux-allwinner.git sun7i_xen_domU
  cd sun7i_xen_domU
  make sun7i_domU_defconfig
  make zImage
  make dtbs

== Booting Xen and Dom0 ==

To boot Xen and Dom0, you can use USB boot or sd boot.

=== Booting via PXE ===
TODO

=== Booting via USBBoot(FEL) ===
reference: http://linux-sunxi.org/FEL/USBBoot 

=== Booting directly on the SD card ===
reference [http://linux-sunxi.org/Bootable_SD_card] for how to make a bootable sdcard.

* Copy xen-uImage, zImage and the initrd the root directory of you SD card.
* save the bootcmd
  setenv bootcmd "fatload mmc 0 45000000 xen-uImage; fatload mmc 0 50000000 zImage; fatload mmc 0 60000000 initrd; bootm 45000000"
  savenv
* boot
  boot

Assume the SD card has only 1 partition with '''fat''' filesystem.

== Mount NFS after initrd boot ==
Using a [http://download.opensuse.org/repositories/devel:/ARM:/12.3:/Contrib:/sunxi/images/openSUSE-12.3-ARM-JeOS-rootfs.armv7l-1.12.1-Build71.1.tbz distrbution] is easily to compile xen tools. i use opensuse arm 12.3 rootfs for it. other distribution which support armhf is ok too.

== Create domU ==

;setup the harddisk
    losetup /dev/loop0 /root/domU/rootfs.ext3 

;domU config example
    > cat domU_test
    kernel = "/root/domU/zImage_dtb" 
    memory = "128" 
    name = "domU" 
    vcpus = 1 
    serial="pty"
    disk = [ 'phy:/dev/loop0,xvda,w' ]
    vif=[ 'mac=00:16:3e:56:af:69,bridge=virbr0,type=netfront', ]

;create
    xl create domU_test
or enable all the debug message
    xl -vvv create -d domU_testa

;connect to console
xl console domU_test

== DomU kernel debug ==
xen support varity debug method. you could use xl debug-keys for dumping information. use xen_raw_console_write for output DomU kernel output.
but gdbsx is not work for arm right now.

    diff --git a/kernel/printk/printk.c b/kernel/printk/printk.c
    index b4e8500..060c163 100644
    --- a/kernel/printk/printk.c
    +++ b/kernel/printk/printk.c
    @@ -1488,6 +1488,7 @@ static size_t cont_print_text(char *text, size_t size)
        return textlen;
     }
     
    +#include <xen/hvc-console.h>
     asmlinkage int vprintk_emit(int facility, int level,
                    const char *dict, size_t dictlen,
                    const char *fmt, va_list args)
    @@ -1546,6 +1547,7 @@ asmlinkage int vprintk_emit(int facility, int level,
         * prefix which might be passed-in as a parameter.
         */
        text_len = vscnprintf(text, sizeof(textbuf), fmt, args);
    +    xen_raw_console_write(text);
     
        /* mark and strip a trailing newline */
        if (text_len && text[text_len-1] == '\n') {

== Resources ==
[http://linux-sunxi.org/ allwinner sunxi resources]
[http://lists.xen.org/archives/html/xen-devel/2013-08/msg03040.html]

== Known Issue ==
without [http://lists.xen.org/archives/html/xen-devel/2013-09/msg02232.html sunxi platform patch], there is a warning during xen boot:
  (XEN) WARNING: Unrecognized/unsupported device tree compatible list
  (XEN) Available platform support:
  (XEN)     - VERSATILE EXPRESS
  (XEN)     - SAMSUNG EXYNOS5
  (XEN)     - CALXEDA MIDWAY
  (XEN)     - TI OMAP5

[[Category:XenARM]]
[[Category:Developers]]
[[Category:Xen 4.4]]

13:33 2013-10-17
GTD
0, 10:50-19:30

1, today
1), 14:58-19:30 write doc for xen on sunxi. see"11:36 2013-10-17".

2, next
1), write xl list --long patch.
2), investigate the backstrace on xen arm.
3), discuss with Chunyan about snapshot.

15:36 2013-10-17
(16:38 2013-10-18)
xen, arm, sun7i, know issues
1, linux: dom0: i am confuse about what does "CONFIG XEN" mean. it  will check the kernel features for dom0 and domU kernel(mix XEN_BANDEND and XXX_FRONTEND)
if you want to a dom0 kernel, you need to uncheck all the FRONTEND config, check CONFIG_XEN_BACKEND, and check the BACKEND config as you need:
CONFIG_XEN_BLKDEV_BACKEND=y
CONFIG_XEN_NETDEV_BACKEND=y

if you want to a domU kernel, you need to ucheck all the BACKEND config  and check the FRONTEND config as you need: 
CONFIG_XEN_BLKDEV_FRONTEND=y
CONFIG_XEN_NETDEV_FRONTEND=y
CONFIG_HVC_XEN_FRONTEND=y
CONFIG_XEN_FBDEV_FRONTEND=y
note that CONFIG_XEN_XENBUS_FRONTEND will be automatically checked by any FRONTEND driver.

2, without Ian sunxi platform support patch, there is a warning during xen boot, ref "11:36 2013-10-17"Know Issue.
http://lists.xen.org/archives/html/xen-devel/2013-09/msg01471.html

3, linux: dom0: need clk_ignore_unused boot dom0. \TODO: report a bug?

4, unused patch
1), try to enable nfs on a20. FAIL
From 31f10b169936533d6ecb64f057759f51f6855d57 Mon Sep 17 00:00:00 2001
From: Bamvor Jian Zhang <bjzhang@suse.com>
Date: Fri, 11 Oct 2013 14:53:33 +0800
Subject: [PATCH 3/7] try to enable nfs on a20. FAIL

---
 arch/arm/boot/dts/sun7i-a20-cubieboard2-xen.dts | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/arm/boot/dts/sun7i-a20-cubieboard2-xen.dts b/arch/arm/boot/dts/sun7i-a20-cubieboard2-xen.dts
index 5bb1886..516844c 100644
--- a/arch/arm/boot/dts/sun7i-a20-cubieboard2-xen.dts
+++ b/arch/arm/boot/dts/sun7i-a20-cubieboard2-xen.dts
@@ -20,7 +20,7 @@
 
     chosen {
         bootargs = "dom0_mem=256M sync_console console=dtuart dtuart=serial0";
-        xen,dom0-bootargs = "console=hvc0,115200n8 debug ignore_loglevel rw rootwait earlyprintk=xen clk_ignore_unused";
+        xen,dom0-bootargs = "noinitrd rootfstype=nfs console=hvc0,115200n8 debug ignore_loglevel rw rootwait earlyprintk=xen clk_ignore_unused root=/dev/nfs nfsroot=147.2.207.160:/mnt/opensuse_root,rw,relatime,vers=3,rsize=1048576,wsize=1048576,namlen=255,hard,nolock,proto=tcp,port=2049,timeo=70,retrans=3,sec=sys,local_lock=all,addr=147.2.207.160 ip=147.2.207.79:147.2.207.160:147.2.207.254:255.255.255.0";
         modules {
             module@0 {
                 compatible = "xen,linux-zimage", "xen,multiboot-module";
-- 
1.8.1.4

01:01 2013-10-18
bnc#820873 , xen, xl list
1, improve the error message in "xl list --long"

with this patch, xl will raise a proper error when execute "xl list --long"
for existed domain but no domain configuration found. it would encounter
if other toolstack(like libvirt) create the vm, xl could saw the domain
name but could not get the domain configuration.

there is a commit a76377f1 check the return value of
libxl_read_file_contents in libxl_userdata_retrieve. but skip the ENOENT.
it is almost three years before. i do not know the senario about that
commit. it seems that it is no safe to simplely remove the ENOENT. 

2, 
Hi, Ian

thanks your reply.
> Bamvor Jian Zhang writes ("[PATCH RFC] improve the error message in "xl list 
>         --long""):
> > there is a commit a76377f1 check the return value of
> > libxl_read_file_contents in libxl_userdata_retrieve. but skip the ENOENT.
> > it is almost three years before. i do not know the senario about that
> > commit. it seems that it is not safe to simplely remove the ENOENT.
> 
> ENOENT means that there is no userdata associated with the relevant
> domain and key.  This is not an error condition.
> 
> And it is deliberately possible to manipulate other toolstacks'
> domains from xl.  You get to keep all the pieces.
considering this case, the user use virt-manager for management the virtual
machine, he would not aware of xm, xl or virsh is used by virt-manager and
vm-install. and it is safe to use the xm with virt-manager because the vm
info is only stored in xend not in libvirt. after user migrate from xm to
xl, he probably use the similar way. Acctually, our customer report this
bug because libvirt libxl driver still missing some apis compare with xl.
raising this message could let user know the circumstances. 

> If you want to make
> this fail, then a safety catch might be OK but it should be in xl not
> libxl and I think the manipulation should be allowed by default.
> 
> Ian.

3, (13:52 2013-10-18)
reply to Ian J:
Bamvor Jian Zhang writes ("Re: [Xen-devel] [PATCH RFC] improve the error 
message in "xl list --long""):
> considering this case, the user use virt-manager for management the virtual
> machine, he would not aware of xm, xl or virsh is used by virt-manager and
> vm-install. and it is safe to use the xm with virt-manager because the vm
> info is only stored in xend not in libvirt. after user migrate from xm to
> xl, he probably use the similar way. Acctually, our customer report this
> bug because libvirt libxl driver still missing some apis compare with xl.
> raising this message could let user know the circumstances.

Thanks for the explanation.  I'm not sure I entirely follow, so I'm
going to try to explain in my own words what I think you're saying:

virt-manager users are used to using both xm and virsh to manage
guests.  After moving to libxl this is even more relevant because of
missing functionality in the libvirt libxl driver.  However, when a
user uses xl on domains managed by virsh, things go wrong.  You want
this to produce a better error message.

Is this right ?  If so I think some more details would be helpful to
know what goes wrong.  It might be possible to make more of this work
better, or to improve error messages some other way.

It would be possible in principle to make xl produce a warning when
operating on a domain not created with xl, by looking for the missing
userdata.  All modern versions of xl create the userdata.

Ian.

4, Jim reply to Ian J
Ian Jackson wrote:
> Bamvor Jian Zhang writes ("Re: [Xen-devel] [PATCH RFC] improve the error 
> message in "xl list --long""):
>   
>> considering this case, the user use virt-manager for management the virtual
>> machine, he would not aware of xm, xl or virsh is used by virt-manager and
>> vm-install. and it is safe to use the xm with virt-manager because the vm
>> info is only stored in xend not in libvirt. after user migrate from xm to
>> xl, he probably use the similar way. Acctually, our customer report this
>> bug because libvirt libxl driver still missing some apis compare with xl.
>> raising this message could let user know the circumstances.
>>     
>
> Thanks for the explanation.  I'm not sure I entirely follow, so I'm
> going to try to explain in my own words what I think you're saying:
>
> virt-manager users are used to using both xm and virsh to manage
> guests.  After moving to libxl this is even more relevant because of
> missing functionality in the libvirt libxl driver.  However, when a
> user uses xl on domains managed by virsh, things go wrong.  You want
> this to produce a better error message.
>   

I think that is a good summary, as I understand it.

> Is this right ?  If so I think some more details would be helpful to
> know what goes wrong.  It might be possible to make more of this work
> better, or to improve error messages some other way.
>   

A user reported the following when doing a xl long list of a domain
created by libvirt

homevhst01:~ # xl list smt
Name ID Mem VCPUs State Time(s)
smt 1 512 1 -b---- 861.4
homevhst01:~ # xl list --long smt
Domain name must be specified.

Hmm, user did provide a domain name.  This is the error Bamvor is trying
to improve.

> It would be possible in principle to make xl produce a warning when
> operating on a domain not created with xl, by looking for the missing
> userdata.

Yep, sounds reasonable to me.

Regards
Jim

5, Andrew reply to me, about patch format.
On 17/10/13 17:21, Bamvor Jian Zhang wrote:
> with this patch, xl will raise a proper error when execute "xl list --long"
> for existed domain but no domain configuration found. it would encounter
> if other toolstack(like libvirt) create the vm, xl could saw the domain
> name but could not get the domain configuration.
>
> there is a commit a76377f1 check the return value of
> libxl_read_file_contents in libxl_userdata_retrieve. but skip the ENOENT.
> it is almost three years before. i do not know the senario about that
> commit. it seems that it is not safe to simplely remove the ENOENT.
>
> Signed-off-by: Bamvor Jian Zhang <bjzhang@xxxxxxxx>
> ---
>  tools/libxl/libxl_dom.c | 6 ++++++
>  1 file changed, 6 insertions(+)
>
> diff --git a/tools/libxl/libxl_dom.c b/tools/libxl/libxl_dom.c
> index 356f920..8daf51a 100644
> --- a/tools/libxl/libxl_dom.c
> +++ b/tools/libxl/libxl_dom.c
> @@ -1655,6 +1655,12 @@ int libxl_userdata_retrieve(libxl_ctx *ctx, uint32_t 
> domid,
>          goto out;
>      }
>  
> +    if (access(filename, F_OK) != 0) {
> +        LIBXL__LOG(ctx, LIBXL__LOG_ERROR, "Unknown domain configuration. Is 
> domain id '%u' owned by another libxl toolstack?", domid);

This line is too long,  perhaps putting the start of the string on a new
line, and splitting again at the %u so the grepable parts of the string
stay contiguous.

Finally, "another libxl toolstack" is too specific (XAPI domains being a
prime example which would fall over here).  I would suggest just
"another toolstack".

~Andrew

> +        rc = ERROR_INVAL;
> +        goto out;
> +    }
> +
>      e = libxl_read_file_contents(ctx, filename, data_r ? &data : 0, 
> &datalen);
>      if (e && errno != ENOENT) {
>          rc = ERROR_FAIL;

6, base on the discuss, i should be great if i add a generic warning in xl command.
should i seperate the cmd with or without using user data?

13:42 2013-10-18
software skill, Linux, kill
1, Mastering the âKillâ Command in Linux
cn: http://www.linuxeden.com/plus/view.php?aid=144699
en: http://www.maketecheasier.com/kill-command-in-linux/

13:52 2013-10-18
GTD
0, -17:40

1, today
1), 13:40-14:18 bnc#820873 see"01:01 2013-10-18"3.
2), 15' finish hackweek project. xen on sun7i SOC. see"14:34 2013-09-30"3.
3), 14:49-15:06 work report. see"14:49 2013-10-18"
4), 16:24-17:38 deal with \TODO in this month. mainly for xen arm.

14:49 2013-10-18
work report - week 40, 41, 42
1, hack week:run xen on Cortex-A7 powered STB.
The A20(Dual Cortex-A7)/A31(Quad Cortex-A7) SOC came from allwinner, whose source code is upstreamed. and a community (linux-sunxi.org) work on allwinner series SOC.
i successful boot dom0 with opensuse 12.3 for arm(NFS mounted) and create guest with xen virtual block and network device. it is the forth arm32 SOC successful running xen.
reference my wiki for details: http://wiki.xen.org/wiki/Xen_ARMv7_with_Virtualization_Extensions/Allwinner.

2, bnc#820873: discuss this bug this Jim and upstream. will write a patch to prompt proper warning/error in xl.

3, one week: National Holiday. 

15:06 2013-10-18
GTD, week plan
1, next week
1), finish patch for bnc#820873.
2), discuss about snapshot.
3), xen: arm: domU trace.
(1), try to enable "Support for the Large Physical Address Extension".
4), xen: arm: improve sunxi platform support.
5), how about ao improvement patch? 

10:14 2013-10-21
GTD
0, 10:05

1, today
1), 10' check the email.
2), 10:16- xen patch.

10:20 2013-10-21
xen, libxl, bnc#820873, avoid operation other toolstack domain from xl
1, compile upstream code.
1), seabios build fail. try:
make tools/firmware/seabios-dir-force-update
(1), skill, how to update the qemu/seabios in tools?
    linux-rd:xen> cat Makefile  | grep force.update
    .PHONY: tools/qemu-xen-traditional-dir-force-update
    tools/qemu-xen-traditional-dir-force-update:
            $(MAKE) -C tools qemu-xen-traditional-dir-force-update
    .PHONY: tools/qemu-xen-dir-force-update
    tools/qemu-xen-dir-force-update:
            $(MAKE) -C tools qemu-xen-dir-force-update
    .PHONY: tools/firmware/seabios-dir-force-update
    tools/firmware/seabios-dir-force-update:
            $(MAKE) -C tools/firmware seabios-dir-force-update

So, i could use 
    make tools/firmware/seabios-dir-force-update
or 
    make -C tools qemu-xen-traditional-dir-force-update

2), install to /usr not /usr/local(follow the configure command from osc): 
--prefix=/usr --exec_prefix=/usr --bindir=/usr/bin --sbindir=/usr/sbin --libdir=/usr/lib64 --datadir=/usr/share
plus my module: 
--enable-xen --enable-tools --enable-docs --disable-kernels --disable-stubdom

2, patch. 
1), warning if such command do not use userdate. error if use.

11:39 2013-10-22
GTD
0, 10:30-20:46

1, today
1), bnc#820873. see"11:39 2013-10-22"
2), arm mcu: oled. see"19:12 2013-10-22"

11:39 2013-10-22
xen, libxl, bnc#820873, avoid operation other toolstack domain from xl, cont1
1, talk with Jim
Jim is willing to help me, but it seems not worth to waste Jim'time. i should handle this by myself and discuss with in upstream.

2, about the message output, try to do not break the sting, because user may grep the messsage:
http://lists.xen.org/archives/html/xen-devel/2013-10/msg01448.html

> +    if (access(filename, F_OK) != 0) {
> +        LIBXL__LOG(ctx, LIBXL__LOG_ERROR, "Unknown domain configuration. Is 
> domain id '%u' owned by another libxl toolstack?", domid);

This line is too long,  perhaps putting the start of the string on a new
line, and splitting again at the %u so the grepable parts of the string
stay contiguous.

Finally, "another libxl toolstack" is too specific (XAPI domains being a
prime example which would fall over here).  I would suggest just
"another toolstack".

~Andrew

3, it is hard to check at the beginning of xl cmd invoke, i may not know the domain id.

19:12 2013-10-22
1, æäºå ä¹ä¸ä¸ªä¸åï¼ç»äºæLinuxä¸å¼åç¯å¢æå®äºãä½æ¯ç°å¨æ²¡æåºå½æ°ã
2, å¨å°æ¿å­ä¸å®éªã
ä¼¼ä¹æ¯éæ°ä¸è½½ä¸ä¸å°±å¥½äºãä¸ç¥éç¬¬ä¸æ¬¡ä¸ºä»ä¹å¤±è´¥ãçæ¥è¿æ¯éè¦ä¸ªç¶æç¯ã
å¦å¤åç°Vccä¸æ¥å¯ä»¥ï¼Rstä¸æ¥å°±ä¸è½ç¨äºãæ¿å­è®¾è®¡æé®é¢ï¼ï¼ï¼
oledèªå·±å¤§çº¦1.2ma, ç®åæ´ä¸ªç³»ç»48maï¼ä¼°è®¡æ¯å ä¸ºGPIOç¶æè®¾ç½®çä¸æ­£ç¡®ã

èä¸ä»å¤©åç°ä¹årt_threadä»£ç ä¹æ¯å¥½çï¼ä¼°è®¡é½æ¯rstçé®é¢ã
3, (12:58 2013-10-23)
ç³»ç»å§ç»ä»72Méå°16M, åèéå°26ma.
è¿å¥wfiæ¯13ma.
æLEDæäº11ma.
ä½¿ç¨
    PWR_EnterSTOPMode(PWR_Regulator_LowPower, PWR_STOPEntry_WFE);
å¹¶æ²¡æè¾¾å°uaçº§å«çåè, å ä¸ºæçµæºè¯ç?

å¦æè·³è¿5vçµæºè¯ç. æ»åèæ¯9.8ma, é¤äºoledå¤§çº¦æ¯5.8ma.

it could be lower to 1-2ma with HSI(internal clock). 

4, \TODO
1), try msp430 with segment lcd.
2), try AN2629 app later.

11:21 2013-10-23
GTD
0, 11:00

1, today
1), 

16:59 2013-10-23
qemu, snapshot
1, api:
    .domainSnapshotCreateXML = qemuDomainSnapshotCreateXML, /* 0.8.0 */
    .domainSnapshotGetXMLDesc = qemuDomainSnapshotGetXMLDesc, /* 0.8.0 */
    .domainSnapshotNum = qemuDomainSnapshotNum, /* 0.8.0 */
    .domainSnapshotListNames = qemuDomainSnapshotListNames, /* 0.8.0 */
    .domainListAllSnapshots = qemuDomainListAllSnapshots, /* 0.9.13 */
    .domainSnapshotNumChildren = qemuDomainSnapshotNumChildren, /* 0.9.7 */
    .domainSnapshotListChildrenNames = qemuDomainSnapshotListChildrenNames, /* 0.9.7 */
    .domainSnapshotListAllChildren = qemuDomainSnapshotListAllChildren, /* 0.9.13 */
    .domainSnapshotLookupByName = qemuDomainSnapshotLookupByName, /* 0.8.0 */
    .domainHasCurrentSnapshot = qemuDomainHasCurrentSnapshot, /* 0.8.0 */
    .domainSnapshotGetParent = qemuDomainSnapshotGetParent, /* 0.9.7 */
    .domainSnapshotCurrent = qemuDomainSnapshotCurrent, /* 0.8.0 */
    .domainSnapshotIsCurrent = qemuDomainSnapshotIsCurrent, /* 0.9.13 */
    .domainSnapshotHasMetadata = qemuDomainSnapshotHasMetadata, /* 0.9.13 */
    .domainRevertToSnapshot = qemuDomainRevertToSnapshot, /* 0.8.0 */
    .domainSnapshotDelete = qemuDomainSnapshotDelete, /* 0.8.0 */

17:31 2013-10-23
\TODO
restore api changes, it seems that it should add it to config.h(and autoconf).

18:18 2013-10-23
try dom0 kernel with LPAE, it remains:
    (XEN) No stack trace for 32-bit guest kernel-mode

14:48 2013-10-24
bnc#820873
1, commit log
From c27cc2a630fb772dfc13091431b5c83c14f89c59 Mon Sep 17 00:00:00 2001
From: Bamvor Jian Zhang <bjzhang@suse.com>
Date: Thu, 24 Oct 2013 14:45:52 +0800
Subject: [PATCH] improve the error message in "xl list --long"

it is a bug reported by customer, xl will output the following message 
when issue "xl list --long domain_name": 
Domain name must be specified.

the error message is completely unclear. this error is because such
domain is not created by xl itself. xl could saw the domain name but
could not get the domain configuration.

Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>

2, change since RFC:
raise the error in list_domains_details instead of modifying the 
libxl_userdata_retrieve itself.
there are four command would invoke the libxl_userdata_retrieve: create, 
save, migrate, list. issue create command mean the domain is not called
from other toolstack, and there is libxl_userdata_retrieve return value
check in save and migrate. So, the only place need to check is in
list_domain_details.

3, git
git send-email --no-chain-reply-to --annotate --to xen-devel@lists.xen.org --cc jfehlig@suse.com --cc ian.jackson@eu.citrix.com 0001*.patch

15:26 2013-10-24
virtualization, libvirt, xen, libxl, libxl api changes
1, search how does "virsh version" know the xen version.
it is get by hyper call.

2, discuss with Chunyan.
add a configure flags in configure.

or should libvirt always use the lastest api?
but it seems that it only used in migrate_receive. i do not know whether libvirt is need for this or not.

3, (11:30 2013-10-25)
send a email discuss with Jim:
Hi, Jim

there is an libxl API changes in the following commit: 
commit 7051d5c872e3e708b2d4b2088215d6ab1b33de1b
Author: Andrew Cooper <andrew.cooper3@citrix.com>
Date:   Thu Oct 10 12:23:10 2013 +0100

    tools/migrate: Fix regression when migrating from older version of Xen

it add a parameter for libxl_domain_create_restore(see below), if libvirt
want to remains this api changed, it need add
#define LIBXL_API_VERSION 0x040300
or 
#define LIBXL_API_VERSION 0x040200
which lower than xen-4.4-unstable.

#if defined(LIBXL_API_VERSION) && LIBXL_API_VERSION < 0x040400

int static inline libxl_domain_create_restore_0x040200(
    libxl_ctx *ctx, libxl_domain_config *d_config,
    uint32_t *domid, int restore_fd,
    const libxl_asyncop_how *ao_how,
    const libxl_asyncprogress_how *aop_console_how)
    LIBXL_EXTERNAL_CALLERS_ONLY
{
    libxl_domain_restore_params params;
    params.checkpointed_stream = 0;

    return libxl_domain_create_restore(
        ctx, d_config, domid, restore_fd, &params, ao_how, aop_console_how);
}

#define libxl_domain_create_restore libxl_domain_create_restore_0x040200

#endif

meanwhile, there are three libxl API versions: 0x040200, 0x040300, 0x040400, 
should we add something like "--libxl-version" in configure.ac and define it
in config.h?

IMO, libvirt should define one of them in order to avoid direct use the lastest 
api version. or api will not compatible.

thanks

bamvor

11:42 2013-10-25
GTD
0, 11:00

1, today
1), -11:42 send email discuss with Jim about libxl api changes. see"15:26 2013-10-24"3.
2), read code about snapshot.

23:09 2013-10-25
1, 
diff --git a/xen/arch/arm/traps.c b/xen/arch/arm/traps.c
index 4c0fc32..287dd7b 100644
--- a/xen/arch/arm/traps.c
+++ b/xen/arch/arm/traps.c
@@ -629,12 +629,20 @@ static void show_guest_stack(struct vcpu *v, struct cpu_user_regs *regs)
         return;
 
     case PSR_MODE_FIQ:
+        sp = regs->sp_fiq;
+        break;
     case PSR_MODE_IRQ:
+        sp = regs->sp_irq;
+        break;
     case PSR_MODE_SVC:
+        sp = regs->sp_svc;
+        break;
     case PSR_MODE_ABT:
+        sp = regs->sp_abt;
+        break;
     case PSR_MODE_UND:
-        printk("No stack trace for 32-bit guest kernel-mode\n");
-        return;
+        sp = regs->sp_und;
+        break;
 
 #ifdef CONFIG_ARM_64
     case PSR_MODE_EL1t:

2, always get dom0 dump, how to get domU dump?
from the code, IMO, it is possible to dump domU kernel.

(XEN) 'd' pressed -> dumping registers
(XEN) 
(XEN) *** Dumping CPU0 guest state (d0:v0): ***
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     c000e220
(XEN) CPSR:   60000013 MODE:32-bit Guest SVC
(XEN)      R0: b6f3d004 R1: 00000000 R2: 00000001 R3: b6f43b50
(XEN)      R4: b6f43b50 R5: dfb8c600 R6: 00000000 R7: bebd02e8
(XEN)      R8: dfb8c600 R9: db7c8000 R10:df44f988 R11:bebd02e8 R12:00000023
(XEN) USR: SP: bebd02b4 LR: b6ea024c
(XEN) SVC: SP: db7c9ea4 LR: c0215444 SPSR:60000010
(XEN) ABT: SP: c058998c LR: c00126a0 SPSR:60000193
(XEN) UND: SP: c0589998 LR: c0012520 SPSR:a0000093
(XEN) IRQ: SP: c0589980 LR: c00124c0 SPSR:20000193
(XEN) FIQ: SP: 00000000 LR: 00000000 SPSR:00000000
(XEN) FIQ: R8: 00000000 R9: 00000000 R10:00000000 R11:00000000 R12:00000000
(XEN) 
(XEN)      SCTLR: 10c5387d
(XEN)        TCR: 00000000
(XEN)      TTBR0: 000000005b7d006a
(XEN)      TTBR1: 000000004000406a
(XEN)       IFAR: b6e9636c, IFSR: 00000007
(XEN)       DFAR: 00025568, DFSR: 00000017
(XEN) 
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 00010000402ec000
(XEN) 
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fee7000
(XEN) 
(XEN)    ESR_EL2: 4a000ea1
(XEN)  HPFAR_EL2: 000000000001c810
(XEN)      HDFAR: c8800100
(XEN)      HIFAR: b1859020
(XEN) 
(XEN) Guest stack trace from sp=db7c9ea4:
(XEN)    00305000 b6f43b50 b6f43b50 b6f3d000 cd409900 db7c9f44 c055f884 c05c3780
(XEN)    c0091b44 00000023 00000000 b6f3d004 00000000 00000000 00000000 00000001
(XEN)    00000000 b6f43b50 00000000 b6f43b50 f15aea17 0000000a 00305000 dfb8c600
(XEN)    00000000 bebd02e8 dfb8c600 db7c8000 c00bd05c 00000000 00000000 00000000
(XEN)    cd409900 dfb80210 b6f3e000 b6f3e000 c00934ac db7c8008 c008d2fc db7c9f4c
(XEN)    00000001 dfb80210 91827364 db7c9f50 db7c9f50 db7c9f58 db7c9f58 00001000
(XEN)    00305000 00000005 00000000 bebd02e8 dfb8c600 db7c8000 00000000 bebd02bc
(XEN)    c00bd260 b6f3d000 00000000 00036158 bebd0789 00000001 00000036 c000e548
(XEN)    c000e3a0 00036158 bebd0789 00000005 00305000 bebd02e8 00000000 00036158
(XEN)    bebd0789 00000001 00000036 00027de4 00034000 00000002 bebd02bc b6eac0d0
(XEN)    bebd02b4 b6ea024c b6da9a7c 60000010 00000005 00000000 00000000

18:40
snapshot
1, libxl: check snapshot is ok or not before snapshot.(all in one step, not device by device during snapshot).

12:37 2013-10-29
1, vpp:
eligible earnings
x target bonus percentage
x attainment on operation Profit
global attainment.
fiscal year: 0401-0330.

2, operation Profit
revenue - cost - expense

3, revenue
licene, maintenance, service(non standard service).
suseåºæ¬é½æ¯maintenance, netiq, novelæ80%æ¯license.

å¦æå®¢æ·ä»æ¬¾æé£é©ï¼bookingè¿æ¯ä¼ç®ï¼revenueä¸ä¸å®ä¼ç®ã

15:57 2013-10-29
GTD
0, 11:30

1, today
1), 1h financial training.
2), 2h English class.
3), 15:59-17:24 qemu: snapshot. see"15:58 2013-10-29"

15:58 2013-10-29
virtualization, qemu, snapshot
1, qemu: savevm, loadvm.
x86_x64-softmmu/hmp-commands.h: do_savevm, do_loadvm.
2, register_savevm_live: block, register_savevm, vl.c(savevm_ram_handler).
register_savevm: for device: virtio-xxx(blk, balloon, net, rng, scsi, serial).

3, read do_savevm
1), what does QDict mean?
2), flow
* stop
* qemu_savevm_state
* disk image snapshot.
3), what the different between save and snapshot?
libvirt   qemu       qemu-function
save      migration  hmp_migrate
snapshot  savevm     do_savevm
4), save
hmp_migrate -> qmp_migrate -> migrate_init -> ... -> migration_thread
                           -> fd_start_outgoing_migration

migration_thread -> qemu_savevm_state_begin -> save_live_setup()
                 -> qemu_savevm_state_pending -> save_live_pending()

(1), about blk flag in MigrationParam.
blk: mean migrate block device.
savevm is always false, because it will have dedicated block image snapshot loop. whether migrate is true or false depend on migrate cmd parameter.

14:16 2013-10-30
GTD
1, today
1), bnc#820873. see"14:36 2013-10-30"
2), send email to cb and linux-sunxi about xen on sun7i. see"14:55 2013-10-30"
3), join #xendevel(chunyan, bamvor).: ping ijc no response.

14:36 2013-10-30
bnc#820873

reply to Wei
1, 
Hi, Wei
> On Thu, Oct 24, 2013 at 03:30:57PM +0800, Bamvor Jian Zhang wrote:
> > it is a bug reported by customer, xl will output the following message
> > when issue "xl list --long domain_name":
> > Domain name must be specified.
> > 
> > the error message is completely unclear. this error is because such
> > domain is not created by xl itself. xl could saw the domain name but
> > could not get the domain configuration.
> > 
> 
> The root cause is that there is no sotred config file in xl's private
> storage. This can be caused by the reason you stated above.
> 
> Another posibility is that Xen fails to clean up a domain after its
> death. That domain remains visible in Xen, however at that time the
> stored config file is already deleted.
> 
> IMHO we can skip this domain without printing this info. Or this info
> needs to cover all the situations.
> 
sorry reply this so late.

this issue is reported to us because our user using libvirt and xl at the same time. in xend times, it is ok to combine with libvirt and xend. We should tell user should not do it with xl. as I said in my first email, there is no prompt for missing config in "xl list --long" compare with other command.

how about print like this: 
    fprintf(stderr, "No xl userdata found. Is domain id"
            "'%u' owned by another toolstack or fail in cleanup? ", info[i].domid);
 

Bamvor
> Wei.

14:55 2013-10-30
to cb and linux-sunxi

hi, list

i have successful run xen on a sun7i(A20) STB, it should be work on cb2 and cb3(AKA cubietruck) and sun6i(A31). and i write a wiki here: http://wiki.xen.org/wiki/Xen_ARMv7_with_Virtualization_Extensions/Allwinner.
maybe someone is interested in try this.

BTW: i fail in try the ehci, does anyone has successful exprience about this on sun7i? 

thanks

bamvor

14:49 2013-10-31
GTD
0, 13:00-17:40

1, today
1), health check.
2), -16:19 reply email about xen on sun7i. see"14:50 2013-10-31"
3), 16:20-16:32 improve wiki on xen. according to "14:50 2013-10-31"4-1) after i got write pemission again.
4), join #xendevel(chunyan, bamvor).: ping Diziet(Ian Jackson).
5), debug ao, hope finish this week.

2, next
1), test libvirt api. send to mailing list.
2), xen: arm: send email about guest backtrace.

14:50 2013-10-31
1, "Dmitriy B."<rzk333@gmail.com>
> and i write a wiki here:
> http://wiki.xen.org/wiki/Xen_ARMv7_with_Virtualization_Extensions/Allwinner
> .
> maybe someone is interested in try this.


Thanks for wiki page! You should probably also copy that to
linux-sunxi.orgwiki, since this is heavily sunxi-related. :)

and cb3(AKA cubietruck)


Not sure, but it seems like we dont have 2G RAM support yet in community
u-boot.

Best Regards,
Dmitriy Beykun

-- 
You received this message because you are subscribed to the Google Groups "linux-sunxi" group.
To unsubscribe from this group and stop receiving emails from it, send an email to linux-sunxi+unsubscribe@googlegroups.com.
For more options, visit https://groups.google.com/groups/opt_out.

2, Arokux
Hi Bamvor,

On Wed, Oct 30, 2013 at 8:08 AM, Bamvor Jian Zhang <bjzhang@suse.com> wrote:
> hi, list
>
> i have successful run xen on a sun7i(A20) STB, it should be work on cb2 and cb3(AKA cubietruck) and sun6i(A31). and i write a wiki here: http://wiki.xen.org/wiki/Xen_ARMv7_with_Virtualization_Extensions/Allwinner.
> maybe someone is interested in try this.

It would be very cool if you can create a page at sunxi.org about this!

>
> BTW: i fail in try the ehci, does anyone has successful exprience about this on sun7i?

You can find latest working patches for USB host here:

https://github.com/linux-sunxi/linux-sunxi/tree/sunxi-next-usb

Prebuilt kernel images are here:

http://dl.linux-sunxi.org/nightly/linux-sunxi/linux-sunxi-next-usb/

Also take a look at this page

http://linux-sunxi.org/User:Arokux

You can rebase your patches on my branch and submit them, we'll see
then what the problem is. Have you repaired your SD card slot?

Best,
Arokux

>
> thanks
>
> bamvor
>
>
>
> --
> You received this message because you are subscribed to the Google Groups "linux-sunxi" group.
> To unsubscribe from this group and stop receiving emails from it, send an email to linux-sunxi+unsubscribe@googlegroups.com.
> For more options, visit https://groups.google.com/groups/opt_out.

-- 
You received this message because you are subscribed to the Google Groups "linux-sunxi" group.
To unsubscribe from this group and stop receiving emails from it, send an email to linux-sunxi+unsubscribe@googlegroups.com.
For more options, visit https://groups.google.com/groups/opt_out.

3, Kenny MacDermid <kenny.macdermid@gmail.com>
On 30 October 2013 02:56, Bamvor Jian Zhang <bjzhang@suse.com> wrote:

>  >>>å·²åå¥ "Kenny MacDermid <kenny.macdermid@gmail.com>"> Hello,
> > But now I'm getting a make error 139, so either the tiny VM I'm working
> on
> > doesn't have enough memory, or the cross compiler is messed up.
> could you paste your compile log to me.
>

I shutdown the VM, and restarted it with 1024m of memory, did a build, and
it worked. I'm pretty sure it was the severely limited memory that was
causing the problems.

I did have to run the two separate make commands. The first with
Cubieboard2_config and the second without. Otherwise I get 'No rule to make
target `Cubieboard2'.  Stop.

> > I figured it might just be easiest to bug you for a pre-compiled copy. It
> > could probably be hosted in
> > http://dl.cubieboard.org/software/a20-cubieboard/.
> i'd like to do it. Do I have permission to upload it?

I asked on irc in freenode #cubieboard and they suggested it be hosted on
dl.linux-sunxi.org. I spoke with 'mnemoc' and was told that if you could
post it somewhere, even a google drive, that he would copy it over. I
didn't say who you were but he said once you gain the trust of the
community you can direct sftp it. The IRC channel for dl.linux-sunxi.org is
#linux-sunxi, but you could find mnemoc in either one.

Thanks,

Kenny

4, Roger Pau MonnÃ©<roger.pau@citrix.com>
On 30/10/13 08:08, Bamvor Jian Zhang wrote:
> hi, list
> 
> i have successful run xen on a sun7i(A20) STB, it should be work on cb2 and cb3(AKA cubietruck) and sun6i(A31). and i write a wiki here: http://wiki.xen.org/wiki/Xen_ARMv7_with_Virtualization_Extensions/Allwinner.
> maybe someone is interested in try this.

Hello,

Thanks for the wiki page, I've tried it, but I'm clearly doing 
something wrong as my Dom0 kernel fails to boot, right now I'm 
trying to boot without an initrd, here is the uboot boot line:

fatload mmc 0 45000000 xen-uImage; fatload mmc 0 50000000 zImage; bootm 45000000

And the result:

U-Boot 2013.10-rc2 (Oct 30 2013 - 18:09:16) Allwinner Technology

CPU:   Allwinner A20 (SUN7I)
Board: Cubieboard2
I2C:   ready
DRAM:  1 GiB
MMC:   SUNXI SD/MMC: 0
In:    serial
Out:   serial
Err:   serial
Net:   emac
Hit any key to stop autoboot:  0
reading xen-uImage
957591 bytes read in 48 ms (19 MiB/s)
reading zImage
2970784 bytes read in 136 ms (20.8 MiB/s)
## Booting kernel from Legacy Image at 45000000 ...
   Image Name:
   Created:      2013-10-30  17:52:37 UTC
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    957527 Bytes = 935.1 KiB
   Load Address: 80200000
   Entry Point:  80200000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
WARNING: ignoring attempt to set core boot address 7ff88454 on core -1
WARNING: Not kicking secondary CPUs

Starting kernel ...

- UART enabled -
- CPU 00000000 booting -
- Xen starting in Hyp mode -
- Zero BSS -
- Setting up control registers -
- Turning on paging -
- Ready -
Checking for initrd in /chosen
RAM: 0000000040000000 - 000000007fffffff

MODULE[1]: 00000000802e7700 - 00000000802e9c57
MODULE[2]: 0000000050000000 - 0000000050f00000
MODULE[3]: 0000000060000000 - 0000000066000000
Placing Xen at 0x000000007fe00000-0x0000000080000000
Xen heap: 0000000076000000-000000007e000000 (32768 pages)
Dom heap: 229376 pages
Looking for UART console serial0
 __  __            _  _   _  _                      _        _     _
 \ \/ /___ _ __   | || | | || |     _   _ _ __  ___| |_ __ _| |__ | | ___
  \  // _ \ '_ \  | || |_| || |_ __| | | | '_ \/ __| __/ _` | '_ \| |/ _ \
  /  \  __/ | | | |__   _|__   _|__| |_| | | | \__ \ || (_| | |_) | |  __/
 /_/\_\___|_| |_|    |_|(_) |_|     \__,_|_| |_|___/\__\__,_|_.__/|_|\___|

(XEN) Xen version 4.4-unstable (root@) (arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.7-2013.04-20130415 - Linaro GCC 2013.04) 4.7.3 20130328 (prerelease)) debug=y Wed Oct 30 18:52:06 CET 2013
(XEN) Latest ChangeSet:
(XEN) Console output is synchronous.
(XEN) Processor: 410fc074: "ARM Limited", variant: 0x0, part 0xc07, rev 0x4
(XEN) 32-bit Execution:
(XEN)   Processor Features: 00001131:00011011
(XEN)     Instruction Sets: AArch32 Thumb Thumb-2 ThumbEE Jazelle
(XEN)     Extensions: GenericTimer Security
(XEN)   Debug Features: 02010555
(XEN)   Auxiliary Features: 00000000
(XEN)   Memory Model Features: 10101105 40000000 01240000 02102211
(XEN)  ISA Features: 02101110 13112111 21232041 11112131 10011142 00000000
(XEN) WARNING: Unrecognized/unsupported device tree compatible list
(XEN) Available platform support:
(XEN)     - VERSATILE EXPRESS
(XEN)     - SAMSUNG EXYNOS5
(XEN)     - CALXEDA MIDWAY
(XEN)     - TI OMAP5
(XEN) Generic Timer IRQ: phys=30 hyp=26 virt=27
(XEN) Using generic timer at 24000 KHz
(XEN) GIC initialization:
(XEN)         gic_dist_addr=0000000001c81000
(XEN)         gic_cpu_addr=0000000001c82000
(XEN)         gic_hyp_addr=0000000001c84000
(XEN)         gic_vcpu_addr=0000000001c86000
(XEN)         gic_maintenance_irq=25
(XEN) GIC: 160 lines, 2 cpus, secure (IID 0100143b).
(XEN) Using scheduler: SMP Credit Scheduler (credit)
(XEN) Allocated console ring of 16 KiB.
(XEN) VFP implementer 0x41 architecture 2 part 0x30 variant 0x7 rev 0x4
(XEN) Brought up 1 CPUs
(XEN) *** LOADING DOMAIN 0 ***
(XEN) Populate P2M 0x40000000->0x60000000
(XEN) Loading kernel from boot module 2
(XEN) Loading zImage from 0000000050000000 to 0000000047c00000-0000000047ed54a0
(XEN) Loading dom0 initrd from 0000000060000000 to 0x0000000048200000-0x000000004e200000
(XEN) Loading dom0 DTB to 0x0000000048000000-0x00000000480023bf
(XEN) Std. Loglevel: All
(XEN) Guest Loglevel: All
(XEN) **********************************************
(XEN) ******* WARNING: CONSOLE OUTPUT IS SYNCHRONOUS
(XEN) ******* This option is intended to aid debugging of Xen by ensuring
(XEN) ******* that all output is synchronously delivered on the serial line.
(XEN) ******* However it can introduce SIGNIFICANT latencies and affect
(XEN) ******* timekeeping. It is NOT recommended for production use!
(XEN) **********************************************
(XEN) 3... 2... 1...
(XEN) *** Serial input -> DOM0 (type 'CTRL-a' three times to switch input to Xen)
(XEN) Freed 264kB init memory.
(XEN) Xen BUG at page_alloc.c:698
(XEN) CPU0: Unexpected Trap: Undefined Instruction
(XEN) ----[ Xen-4.4-unstable  arm32  debug=y  Tainted:    C ]----
(XEN) CPU:    0
(XEN) PC:     002411e8 __bug+0x2c/0x44
(XEN) CPSR:   2000015a MODE:Hypervisor
(XEN)      R0: 0026470c R1: 00000002 R2: 00000000 R3: 00000fff
(XEN)      R4: 00260000 R5: 000002ba R6: 0025c208 R7: 000001a4
(XEN)      R8: 002aa498 R9: 00000000 R10:00200200 R11:47fefbdc R12:00000003
(XEN) HYP: SP: 47fefbd4 LR: 002411e8
(XEN)
(XEN)   VTCR_EL2: 80002558
(XEN)  VTTBR_EL2: 0001000050ffc000
(XEN)
(XEN)  SCTLR_EL2: 30cd187f
(XEN)    HCR_EL2: 0000000000282835
(XEN)  TTBR0_EL2: 000000007fedf000
(XEN)
(XEN)    ESR_EL2: 00000000
(XEN)  HPFAR_EL2: 000000000001c810
(XEN)      HDFAR: e0800100
(XEN)      HIFAR: 29cda9ba
(XEN)
(XEN) Xen stack trace from sp=47fefbd4:
(XEN)    00000001 47fefc5c 002152f4 6cabd6e9 00000d20 00265028 00000000 00001260
(XEN)    00000070 00000000 002a9118 00000000 00000000 00000001 002aa498 00000000
(XEN)    0000001c 002aa448 00000001 ffbfbfff b7f03e73 efdfbfe3 fdd7fffb affdf6ff
(XEN)    00000001 efe3df5f 002e7614 00000000 00000000 00000000 0000001c d0ffe000
(XEN)    d0ffc000 47fefc84 00216cdc 00000000 cffde18f bbffeefe d0ffe000 4000a000
(XEN)    000b0000 00000000 d0ffe000 47fefc9c 0024a3f4 00000000 00000000 000b0000
(XEN)    00000000 47fefd24 0024a67c 7d7f7ff6 61fcdfac 6fefdd97 4000a100 d0ffc000
(XEN)    00264fcc ffac6bea ff27ffce 76012000 00000000 4000a000 00000000 ffffffff
(XEN)    00000000 00000000 d0ffe000 0005f894 00000000 00000000 00000000 00000000
(XEN)    00000000 f3b3f77d 9fe1c6f1 d9ebbfdf 76013000 00076013 4000a000 00000000
(XEN)    000000b0 00000000 00000000 47fefd44 0024acb4 000b1000 00000000 76013000
(XEN)    00000000 0000000f 76013000 47fefd6c 00249424 00000000 00000007 4000a000
(XEN)    df85fe60 00000000 df85fe60 47feff58 00007ff0 47fefdd4 0024a010 000000b0
(XEN)    00000000 00000000 056c8cc0 00000000 47fefde0 47fefdd4 00212d04 c05b7ff0
(XEN)    00000001 00000000 00000000 000000b0 00000000 00000e78 00000010 00000010
(XEN)    00000007 00000001 00000000 00000000 df85fe60 47feff58 00007ff0 47fefee4
(XEN)    00214548 c05baf08 00000001 47feff58 c053bbf4 47fefee4 0020f9ac 47fefe90
(XEN)    00000002 00000007 47fefe84 00000002 47fefe4c 47fefe90 00000007 47fefe2c
(XEN)    47fefe4c 00000000 00000003 00000006 00000001 df85fe78 47fefeb4 00000002
(XEN)    47fefe7c 00000001 00000002 47fefe5c 47fefe7c 00002800 00000003 00000000
(XEN) Xen call trace:
(XEN)    [<002411e8>] __bug+0x2c/0x44 (PC)
(XEN)    [<002411e8>] __bug+0x2c/0x44 (LR)
(XEN)    [<002152f4>] alloc_heap_pages+0x730/0x7fc
(XEN)    [<00216cdc>] alloc_domheap_pages+0x110/0x168
(XEN)    [<0024a3f4>] p2m_create_table+0x38/0x11c
(XEN)    [<0024a67c>] create_p2m_entries+0x1a4/0x4c8
(XEN)    [<0024acb4>] guest_physmap_add_page+0x4c/0x54
(XEN)    [<00249424>] xenmem_add_to_physmap_one+0x314/0x3a4
(XEN)    [<0024a010>] arch_memory_op+0x3e0/0x454
(XEN)    [<00214548>] do_memory_op+0x14b8/0x1694
(XEN)    [<0024da54>] do_trap_hypervisor+0x6f4/0xba0
(XEN)    [<00250210>] return_from_trap+0/0x4
(XEN)

1), reply
(1), which xen version are you use? could you please try the working commit 720f45ad?
it seems that you use the wrong address for xen, it should be 0x40000000 + offset for sunxi: 
mkimage -A arm -T kernel -a 0x40200000 -e 0x40200000 -C none -d "xen/xen" xen-uImage

i will add this to wiki later.

15:36 2013-10-31
å¬å±ä¿é¢30ä¸ï¼æè§å¾å°åãå¦ææåäºå¾å¤§çï¼æ ¹æ¬ä¸å¤ã

