
10:25 2013-02-04
company, colleague, server team, China Beijing, Shawn Chang
1, Jiaju_email_"[devel] Please welcome Shawn Chang to the China Server team"_20130201_1539
Hi,

Please join me in welcoming Shawn Chang as a new member of the China
Server team, SLE department.

Shawn comes from Desktop QA team. He has good knowledge and great
passion on security technology, and has joined Security Virtual team
already. His new responsibilities will be maintaining openssl and gnutls
packages, also pick up more security stuff and contribute to the
development of SLE 12.

Shawn's effective date is today, Feb 1, based in Beijing. And he is also
willing to do the presenting or training if our QA needs help on
security testing in the future. 

Shawn, welcome, and all the best for your new position! 

Thanks,
Jiaju

2, "Harald Müller-Ney<hmuelle@suse.com>"_email_"Re: [devel] Please welcome Shawn Chang to the China Server team"_20130201_1747
Am 01.02.2013 08:17, schrieb Jiaju Zhang:
> Hi,
> 
> Please join me in welcoming Shawn Chang as a new member of the China
> Server team, SLE department.
> 
> Shawn comes from Desktop QA team. He has good knowledge and great
> passion on security technology, and has joined Security Virtual team
> already. His new responsibilities will be maintaining openssl and gnutls
> packages, also pick up more security stuff and contribute to the
> development of SLE 12.
> 
> Shawn's effective date is today, Feb 1, based in Beijing. And he is also
> willing to do the presenting or training if our QA needs help on
> security testing in the future. 

> Shawn, welcome, and all the best for your new position! 

THANK you Shawn for your good work in QA. Congratulations to your new
position.

I am sad to see you leave QA, but I am more happy to see you in a
position you can play out even more your interest, knowledge and passion
for security which is good for SUSE.

Thank you to SLE departement (Olaf, Jia Ju and Shawn) offering us
support on security testing in future.


Best regards, Harald


-- 
Harald Müller-Ney, Director Quality Assurance
SUSE LINUX Products GmbH, Maxfeldstrasse 5, D-90409 Nürnberg
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)
Phone: +49 (0) 911 74053130   Mobile: +49 (0) 179 2287009
Fax:   +49 (0) 911 74053575   eMail: hmuelle@suse.com

10:36 2013-02-04
company, colleague, QA, manager, Calen Chen; QA APAC organization
1, "Harald Müller-Ney<hmuelle@suse.com>"_email_"[devel] Please welcome Calen Chen as new manager of QA APAC II team"
Hi,

Please join me in welcoming Calen Chen as the new manager of QA APAC II
team.

Calen comes from QA Automation team. She has good knowledge and great
passion on quality, testing and test automation and she made management
experience before she joined QA.

Calen's effective date is today, Feb 1, she is based in Beijing with her
team.

Calen, all the best for your new position!

Now you might asked about what is QA APAC II? In the course of filling
this manager position we also slightly changed the team structure in QA
in Beijing.

The team formerly led by Charles has been split into the two teams and
the managers are both reporting to me:

QA APAC I, manager is Sunny (Yan Sun)
      Members are: Ben Chou (Taipheh), Yi Fan Jiang, Xiaojun Jin,
	Ada Kong, Yong Sun and Nick Wang (all Beijing)

QA APAC II, manager is Calen Chen
	Memebers are: Dai Lei, Li Jia, Bin Wei Liu



Best wishes,
Harald

-- 
Harald Müller-Ney, Director Quality Assurance
SUSE LINUX Products GmbH, Maxfeldstrasse 5, D-90409 Nürnberg
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)
Phone: +49 (0) 911 74053130   Mobile: +49 (0) 179 2287009
Fax:   +49 (0) 911 74053575   eMail: hmuelle@suse.com

10:48 2013-02-04
company, colleague, cloud, Tomasz Paszkowski
1, "Milisav Radmanic <radmanic@suse.com>"_email_"[devel] please welcome new employee Tomasz Paszkowski"_20130201_1833
Hello,

I am pleased to announce a new hire:
Tomasz Paszkowski has just started today and he is a strong addition to
the Cloud team.

Tomasz has gained substantial experience in managing and developing for
an OpenStack based Cloud at "Nasza Klasa" which is the big Facebook
competitor in Poland.

He is new to the company and the country so I'd really like to ask you
to help me in making this a good start for him. His office is on the 2nd
floor (2.2.24) if you like to say "hi".

Thanks guys and welcome Tomasz Paszkowski
mili

-- 
Milisav Radmanic
Engineering Manager SUSE Linux Enterprise Applications
SUSE LINUX Products GmbH,
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)
Maxfeldstraße 5
90409 Nürnberg
Germany

10:51 2013-02-04
company, colleague, Madiha Khan
"Steven Gates <Steven.Gates@Attachmate.com>"_email_"Welcome Madiha Khan"_20130202_1212
Dear All,

Please join me in welcoming Madiha Khan to the Attachmate Group EMEA compliance team. Madiha joins the team in Bracknell as EMEA Compliance manager and will operate in the same capacity as Matthew Williams, Sam Ulhaq, and James Thirkettle - protecting the IP and contractual rights of the Attachmate, NetIQ, Novell, and SUSE business units across EMEA.

After earning a Law degree from London School of Economics and a post-graduate diploma of legal practice from the London College of Law, Madiha embarked on a career in finance and has held positions at firms such as UBS, Société Générale, and Barclays specialising in risk, asset, and wealth management. The diverse range of legal, commercial, and client-facing expertise that Madiha brings to TAG is well-punctuated by her recent  involvement in the London 2012 Olympic Games, during which she  worked with LOCOG corporate sponsors, the International Olympic Committee and world corporate sponsors.

Madiha's unique blend of legal and commercial experience promises to offer both a huge asset to our business and a fun, dynamic addition to the TAG family. Having completed new-hire training, Madiha has wasted no time in getting up-to-speed and is already adding value to the compliance programme. For those of you who have not yet had the chance to welcome Madiha, I encourage you do so on your next compliance call!

Welcome aboard Madiha!
Steven Gates | Director of Order & License Management, EMEA
[Description: Description: attachmate-netiq-novell-suse]
Novell House | 1 Arlington Square | Downshire Way | Bracknell | Berkshire | RG12 1WA | UK
| +44 (0)1344 326454 phone | +44 (0)7879 554682 mobile

10:55 2013-02-04
GTD
0, 10:20

1, today
1), 10:22-10:55 company colleague. see"10:25 2013-02-04", "10:36 2013-02-04", "10:48 2013-02-04", "10:51 2013-02-04".
2), 3h test Jim patch for libxl xen4.2 bug. see"10:24 2013-01-29"9.
3), Summary: 给自己安排的事情一多, 最重要的事情就没法做. 这周开始每天至少用6小时, 做重要的事情.

10:49 2013-02-05
suse, mailing list, move from novell.com to suse.com
"Uwe Drechsel <uwedr@suse.com>"_email_"[devel] SLE 11 SP3 Beta test - mailing lists"_20130204_2243
Hi everybody,

please note, that the mailing lists have moved from "novell.com" to 
"suse.com". I invite you to subscribe there to see what test sites are
facing during the Beta Test (Feb 14 to June).

http://lists.suse.com/mailman/listinfo/sles-beta
http://lists.suse.com/mailman/listinfo/sled-beta
http://lists.suse.com/mailman/listinfo/sleha-beta

Thanks!
Uwe 


P.S.: The landing page on novell.com/beta mentioned in the subscription
      mail is only available after I manually add you to the testers
      list. Please get betas from internal mirrors instead.

--
SUSE Linux Beta Program Manager                     tel: +49 911 74053-0
SUSE Linux Products GmbH
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)

10:50 2013-02-05
company, colleague, L3, Petr Uzel, Petr Tesarik
1, "Michael Hager <mike@suse.com>"_email_"[devel] Announcement Team Lead L3 Prague"_20130204_2226
All,
 
I'm glad to announce that Petr Uzel takes over the role 
of Team Lead L3 Prague in the L3/Maintenance department.

Together with Petr Tesarik, who leads the L3 International team, 
he will lead our outstanding L3 service.
  
Please join me in congratulating Petr Uzel to his new role and in
offering him our full support for his work.


Thanks a lot, 
Mike

-- 
Michael Hager
Director L3/Maintenance

SUSE LINUX Products GmbH
Maxfeldstr. 5, D-90409 Nürnberg
GF:  Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg) 

2, bamvor, about Petr Tesarik(2012 Beijing kernel debug training).
Jistebnice is a village and municipality (obec) in Tábor District in the South Bohemian Region of the Czech Republic.
Bohemian: 波希米亚.
Jistebnice: 距离布拉格市中心大约150公里.

11:11 2013-02-05
GTD
0, 10:35-12:35 13:20-18:50

1, today
1), 10:45-11:10 check the mail.
2), 11:13-12:40 15:00-18:45 test Jim patch for libxl xen4.2 bug. see"11:26 2013-02-05".
等待结果是做了"3)".
3), 2h xen arm code: how the xen image generated. see"17:46 2013-02-05"
4), Summary: 昨天主要工作只作了三个小时, 还差三个小时, 这周要补回来.
今天工作了5个小时. 也欠了一个小时. 本周后面任务很重阿.

11:26 2013-02-05
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont20, final version test, cont1
1), build error: 
Processing files: xen-doc-pdf-4.3-0
error: File not found: /var/tmp/xen-4.3-build/usr/share/doc/packages/xen/pdf
Checking for unpackaged file(s): /usr/lib/rpm/check-files /var/tmp/xen-4.3-build
Checking for unpackaged file(s): /usr/lib/rpm/check-files /var/tmp/xen-4.3-build

RPM build errors:
    File not found: /var/tmp/xen-4.3-build/usr/share/doc/packages/xen/pdf

The buildroot was: /var/tmp/build-root
2), i do not know why disable doc-pdf for build.
bamvor@linux-bjrd:xen_4.3> osc diff
Index: xen.spec
===================================================================
--- xen.spec    (revision 24)
+++ xen.spec    (working copy)
@@ -1046,9 +1046,9 @@
 %{_defaultdocdir}/xen/html
 #%{_datadir}/doc/qemu

-%files doc-pdf
-%defattr(-,root,root)
-%{_defaultdocdir}/xen/pdf
+#%files doc-pdf
+#%defattr(-,root,root)
+#%{_defaultdocdir}/xen/pdf
 %endif

 %if %{?with_dom0_support}0
3), 修改后编译正确.
11, test case: log/novell/hypervisor_and_tools/libvirt/xen4.2_support/20121214_Jim_Patch_base_on_Ian_J_v3_patch/test.sh
1), hvm
###successful
test 58 times
test libxlDoDomainSave: save
error: Failed to save domain bjz_04_sles11_sp2 to bjz_04_sles11_sp2.save
error: End of file while reading data: Input/output error
error: Failed to reconnect to the hypervisor

###Error: fail, exit
2), pv: test it with gdb. not fail in libvirt. fail in libxl internal in 65times:
libxl-save-helper: debug: complete r=0: Success
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=xvda spec.backend=tap
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x6cc5b8 wpath=/local/domain/0/backend/vbd/66/51712/state token=3/187: register slotnum=3
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x6cc5b8 wpath=/local/domain/0/backend/vbd/66/51712/state token=3/187: event epath=/local/domain/0/backend/vbd/66/51712/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vbd/66/51712/state wanted state 2 still waiting state 1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x6cc5b8 wpath=/local/domain/0/backend/vbd/66/51712/state token=3/187: event epath=/local/domain/0/backend/vbd/66/51712/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/66/51712/state wanted state 2 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x6cc5b8 wpath=/local/domain/0/backend/vbd/66/51712/state token=3/187: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x6cc5b8: deregister unregistered
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/block add
libxl: debug: libxl_device.c:956:device_hotplug_timeout_cb: killing hotplug script /etc/xen/scripts/block add because of timeout
libxl: error: libxl_exec.c:129:libxl_report_child_exitstatus: /etc/xen/scripts/block add [17804] died due to fatal signal Killed
libxl: error: libxl_create.c:901:domcreate_launch_dm: unable to add disk devices
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x6d4698 wpath=/local/domain/0/backend/vbd/66/51712/state token=3/188: register slotnum=3
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x6d4698 wpath=/local/domain/0/backend/vbd/66/51712/state token=3/188: event epath=/local/domain/0/backend/vbd/66/51712/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/66/51712/state wanted state 6 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x6d4698 wpath=/local/domain/0/backend/vbd/66/51712/state token=3/188: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x6d4698: deregister unregistered
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/block remove
libxl: debug: libxl_device.c:956:device_hotplug_timeout_cb: killing hotplug script /etc/xen/scripts/block remove because of timeout
libxl: error: libxl_exec.c:129:libxl_report_child_exitstatus: /etc/xen/scripts/block remove [17809] died due to fatal signal Killed
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x6c66d0: complete, rc=-3
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x6c66d0: destroy

bamvor: re do "virsh restore" could not restore the vm.
3), maybe the fail because 我没有等vm正常启动后再测试.
(1), hvm
.gdbinit: log/novell/hypervisor_and_tools/libvirt/xen4.2_support/20121214_Jim_Patch_base_on_Ian_J_v3_patch/.gdbinit
Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7ffff7fa97e0 (LWP 4427)]
0x00007fffea6bb690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
(gdb) where
#0  0x00007fffea6bb690 in libxlFDEventCallback (watch=<optimized out>,
    fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
    at libxl/libxl_driver.c:170
#1  0x00007ffff74d71be in virEventPollDispatchHandles (fds=<optimized out>,
    nfds=<optimized out>) at util/vireventpoll.c:500
#2  virEventPollRunOnce () at util/vireventpoll.c:646
#3  0x00007ffff74d5c0b in virEventRunDefaultImpl () at util/virevent.c:247
#4  0x00007ffff75f09f5 in virNetServerRun (srv=0x6b2c90)
    at rpc/virnetserver.c:1108
#5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1481

bamvor: reboot linux-work. "virsh restore" successful. so, the save is right.
4), hvm. test again.
(1), start vm manaully, ensure the vm completely start.
# virsh list --all
 Id    Name                           State
----------------------------------------------------
 -     bjz_04_sles11_sp2              shut off
 -     sles11_sp2_pv                  shut off
(2), start virt-viewer for monitor
# virt-viewer -w -r bjz_04_sles11_sp2 &
(3), test 100times successful.
5), test pv: successful.

11:57 2013-02-05
software skill, SCM, hg, log, specific author
1, hg log -r "author('Bamvor')"

17:46 2013-02-05
virtualization, xen, arm, code, how the xen image is generated
1, xen build log on x86_64:
ld    -melf_x86_64  -T xen.lds -N prelink.o \
	    /usr/src/packages/BUILD/xen-4.3/xen/.xen-syms.1.o -o /usr/src/packages/BUILD/xen-4.3/xen/xen-syms
rm -f /usr/src/packages/BUILD/xen-4.3/xen/.xen-syms.[0-9]*
./boot/mkelf32 /usr/src/packages/BUILD/xen-4.3/xen/xen-syms /usr/src/packages/BUILD/xen-4.3/xen/xen 0x100000 \
	`nm -nr /usr/src/packages/BUILD/xen-4.3/xen/xen-syms | head -n 1 | sed -e 's/^\([^ ]*\).*/0x\1/'`
make[2]: Leaving directory `/usr/src/packages/BUILD/xen-4.3/xen/arch/x86'
gzip -f -9 < /usr/src/packages/BUILD/xen-4.3/xen/xen > /usr/src/packages/BUILD/xen-4.3/xen/xen.gz.new
1), what does the mkelf32 mean?
 * Converts an Elf32 or Elf64 executable binary <in-image> into a simple Elf32
 * image <out-image> comprising a single chunk to be loaded at <load-base>.
2), but it doest not exist in xen arm port.
3), rule on x86_64
$(TARGET): $(TARGET)-syms $(efi-y) boot/mkelf32
    ./boot/mkelf32 $(TARGET)-syms $(TARGET) 0x100000 \
    `$(NM) -nr $(TARGET)-syms | head -n 1 | sed -e 's/^\([^ ]*\).*/0x\1/'`
4), rule on arm
$(TARGET): $(TARGET)-syms $(TARGET).bin
    # XXX: VE model loads by VMA so instead of
    # making a proper ELF we link with LMA == VMA and adjust crudely
    $(OBJCOPY) --change-addresses +0x80000000 $< $@
    $(STRIP) $@
(1), 
       --change-addresses incr
       --adjust-vma incr
           Change the VMA and LMA addresses of all sections, as well as the
           start address, by adding incr.  Some object file formats do not
           permit section addresses to be changed arbitrarily.  Note that this
           does not relocate the sections; if the program expects sections to
           be loaded at a certain address, and this option is used to change
           the sections such that they are loaded at a different address, the
           program may fail.
(2), TARGET is defined in xen/Rules.mk
5), where does .xen-syms.1.o come from?
%.o: %.c Makefile
    $(CC) $(CFLAGS) -c $< -o $@
%.o: %.S Makefile
    $(CC) $(AFLAGS) -c $< -o $@

from build log, we know that .xen-syms.1.S  is build from .xen-syms.1.S

lost...
6), suddenly, i realize that maybe the prelink.o is the core. and it is in xen/arch/arm/Makefile:
# Link it with all the binary objects
prelink.o: $(patsubst %/built_in.o,%/built_in_bin.o,$(ALL_OBJS)) prelink_lto.o
	$(LD) $(LDFLAGS) -r -o $@ $^
else
prelink.o: $(ALL_OBJS)
	$(LD) $(LDFLAGS) -r -o $@ $^
endif
(1), xen/arch/arm/Makefile:
ALL_OBJS := $(TARGET_SUBARCH)/head.o $(ALL_OBJS)
(2), xen/Rules.mk:
ALL_OBJS-y               += $(BASEDIR)/common/built_in.o
ALL_OBJS-y               += $(BASEDIR)/drivers/built_in.o
ALL_OBJS-y               += $(BASEDIR)/xsm/built_in.o
ALL_OBJS-y               += $(BASEDIR)/arch/$(TARGET_ARCH)/built_in.o
ALL_OBJS-$(x86)          += $(BASEDIR)/crypto/built_in.o

ALL_OBJS := $(ALL_OBJS-y)

14:05 2013-02-06
GTD
0, 13:00-17:31

1, today
1), check the mail.
2), 2.5h test Jim patch for libxl xen4.2 bug. see"14:17 2013-02-06".
3), Summary: 今天少工作3.5小时, 本周累计少工作3+1+3.5=7.5小时. 靠工作日加班估计没戏了, 只有想办法假期加班了. 另外本周还没怎么看mailing list. 需要补上.

14:17 2013-02-06
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont20, final version test, cont2
1, test other case.
log/novell/hypervisor_and_tools/libvirt/xen4.2_support/20130205/test.sh
如果测试一遍通过, 要做连续测试.
1), test hvm one time pass.
2), test pv fail at the first time.
Program received signal SIGSEGV, Segmentation fault.
0x00007fc17ef29690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
(gdb) where
#0  0x00007fc17ef29690 in libxlFDEventCallback (watch=<optimized out>,
    fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
    at libxl/libxl_driver.c:170
#1  0x00007fc18bd451be in virEventPollDispatchHandles (fds=<optimized out>,
    nfds=<optimized out>) at util/vireventpoll.c:500
#2  virEventPollRunOnce () at util/vireventpoll.c:646
#3  0x00007fc18bd43c0b in virEventRunDefaultImpl () at util/virevent.c:247
#4  0x00007fc18be5e9f5 in virNetServerRun (srv=0x6b2c20)
    at rpc/virnetserver.c:1108
#5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1481
(1), 但是看不出来因为什么挂了.
(gdb) p *((libxlEventHookInfoPtr)0x7fc170000e80)
$19 = {next = 0x0, priv = 0x71e2a0, xl_priv = 0x7fc178007a50, id = 1338}
(gdb) p ((libxlEventHookInfoPtr)0x7fc170000e80)->xl_priv
$15 = (void *) 0x7fc178007a50
(gdb) p *(((libxlEventHookInfoPtr)0x7fc170000e80)->priv)
$16 = {parent = {parent = {magic = 3405643790, refs = 5, klass = 0x726c30},
    lock = {lock = {__data = {__lock = 0, __count = 0, __owner = 0,
          __nusers = 0, __kind = 0, __spins = 0, __list = {__prev = 0x0,
            __next = 0x0}}, __size = '\000' <repeats 39 times>,
        __align = 0}}}, ctx = 0x71e650, deathW = 0x0, timerRegistrations = 0x0}
(gdb) p (((libxlEventHookInfoPtr)0x7fc170000e80)->priv)->ctx
$17 = (libxl_ctx *) 0x71e650
2, (11:39 2013-02-07)
crash at destroy, 这个和上次Jim提到的bug一样么?
(gdb) where
#0  libxl_osevent_occurred_timeout (ctx=<optimized out>,
    for_libxl=0x7f8670002f20) at libxl_event.c:1105
#1  0x00007f868217834a in libxlRegisteredTimeoutsCleanup (priv=<optimized out>)
    at libxl/libxl_driver.c:378
#2  libxlVmCleanup (driver=0x7f8678023870, vm=0x7f867805a860,
    reason=<optimized out>) at libxl/libxl_driver.c:640
#3  0x00007f86821784f2 in libxlVmReap (driver=0x7f8678023870,
    vm=0x7f867805a860, reason=VIR_DOMAIN_SHUTOFF_DESTROYED)
    at libxl/libxl_driver.c:661
#4  0x00007f868217b676 in libxlDomainDestroyFlags (dom=0x7f8670002d40,
    flags=<optimized out>) at libxl/libxl_driver.c:1795
#5  0x00007f868f05a737 in virDomainDestroy (domain=0x7f8670002d40)
    at libvirt.c:2224
#6  0x000000000042e966 in remoteDispatchDomainDestroy (args=<optimized out>,
    rerr=<optimized out>, msg=<optimized out>, client=<optimized out>,
    server=<optimized out>) at remote_dispatch.h:1277
#7  remoteDispatchDomainDestroyHelper (server=<optimized out>,
    client=<optimized out>, msg=<optimized out>, rerr=0x7f8684896bf0,
    args=<optimized out>, ret=<optimized out>) at remote_dispatch.h:1255
#8  0x00007f868f0aac73 in virNetServerProgramDispatchCall (
    msg=<optimized out>, client=<optimized out>, server=<optimized out>,
    prog=<optimized out>) at rpc/virnetserverprogram.c:432
#9  virNetServerProgramDispatch (prog=0x6bdfb0, server=0x6b2c20,
    client=0x7f86700020f0, msg=0x7f8670001040) at rpc/virnetserverprogram.c:305
#10 0x00007f868f0b02ce in virNetServerProcessMsg (srv=<optimized out>,
    client=0x7f86700020f0, prog=0x6cabc0, msg=0x7f8670001040)
    at rpc/virnetserver.c:162
#11 0x00007f868f0b0f73 in virNetServerHandleJob (jobOpaque=<optimized out>,
    opaque=0x6b2c20) at rpc/virnetserver.c:183
#12 0x00007f868efbb4c6 in virThreadPoolWorker (opaque=<optimized out>)
    at util/virthreadpool.c:144
#13 0x00007f868efbaab7 in virThreadHelper (data=<optimized out>)
    at util/virthreadpthread.c:161
#14 0x00007f868bc1c7b6 in start_thread (arg=<optimized out>)
    at pthread_create.c:301
#15 0x00007f868b5719cd in clone ()
    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112
#16 0x0000000000000000 in ?? ()
1), 上次开会时Jim修的bug是忽略SUSPEND shutdown reason.
https://www.redhat.com/archives/libvir-list/2013-January/msg01819.html
Also, similar to the xl implementation, ignore the SUSPEND shutdown
reason.  By calling libxl_domain_suspend(), we know a shutdown
event with SUSPEND reason will be generated, but it can be safely
ignored since any subsequent cleanup will be done by the callers.
3, 第二次遇到类似的错误:
Program received signal SIGSEGV, Segmentation fault.
0x00007f521f63f690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
(gdb) where
#0  0x00007f521f63f690 in libxlFDEventCallback (watch=<optimized out>,
    fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
    at libxl/libxl_driver.c:170
#1  0x00007f522c45b1be in virEventPollDispatchHandles (fds=<optimized out>,
    nfds=<optimized out>) at util/vireventpoll.c:500
#2  virEventPollRunOnce () at util/vireventpoll.c:646
#3  0x00007f522c459c0b in virEventRunDefaultImpl () at util/virevent.c:247
#4  0x00007f522c5749f5 in virNetServerRun (srv=0x6b2c10)
    at rpc/virnetserver.c:1108
#5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1481

2, \TODO: 之前那个save还是有问题, 我印象中xen4.1里面, 任何使用save都没有问题.

15:00 2013-02-06
company, colleague, team, MaintenanceSecurity Team.
"Michael Hager <mike@suse.com>"_email_"[devel] Announcing the new MaintenanceSecurity Team"_20120205_2338
All,

I am happy to announce the newly formed MaintenanceSecurity Team.

The team consolidates the responsibilities of 
- the former Security team, 
- the former Security Project Management and 
- the former Maintenance Project Management 

Thomas Biege will lead the team.

The following people will report to him:

Marcus Meissner:      PrjMgr Security 
Sebastian Krahmer:    Security Developer 
Mathias Weckbecker:   Security Developer 
Alexander Bergmann:   Security Developer (starting April 1st)
Leonardo Chiquitto:   PrjMgr Maintenance
N.N:                  PrjMgr Maintenance
Benjamin Brunner:     Maintenance Developer
Michal Cihar:         Tools 

Please join me in congratulating Thomas and Marcus in their new roles 
and in offering them and the new team our full support for their work.

Best
Mike

-- 
Michael Hager
Director L3/Maintenance

SUSE LINUX Products GmbH
Maxfeldstr. 5, D-90409 Nürnberg
GF:  Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg) 

11:20 2013-02-07
GTD
0, 11:00-12:44 -17:32

1, today
1), 11:30 test Jim patch for libxl xen4.2 bug. see"14:17 2013-02-06"2.

11:49 2013-02-07
kernel, porting, analysis, allwinner a10, cubieboard
这世界变化太快了.
单说现在3.8 kernel里面的irq处理就变化很大. 引入了device tree后, irq初始化定义在drivers/irqchip/irq-sunxi.c, 原来是在mach-xxx.
另外还引入了irqdomain, 真是值得认真看看. 
如果现在能看这个该多好, 可惜不行... \TODO

11:07 2013-2-16
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont20, final version test, cont3, send crash message to Jim
1, Hi, Jim

Sorry for the late crash message. here is my crash log:
1), hvm save and restore.
save began during boot:
Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7ffff7fa97e0 (LWP 4427)]
0x00007fffea6bb690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
(gdb) where
#0  0x00007fffea6bb690 in libxlFDEventCallback (watch=<optimized out>,
    fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
    at libxl/libxl_driver.c:170
#1  0x00007ffff74d71be in virEventPollDispatchHandles (fds=<optimized out>,
    nfds=<optimized out>) at util/vireventpoll.c:500
#2  virEventPollRunOnce () at util/vireventpoll.c:646
#3  0x00007ffff74d5c0b in virEventRunDefaultImpl () at util/virevent.c:247
#4  0x00007ffff75f09f5 in virNetServerRun (srv=0x6b2c90)
    at rpc/virnetserver.c:1108
#5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1481

2), pv create fail
Program received signal SIGSEGV, Segmentation fault.
0x00007fc17ef29690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
(gdb) where
#0  0x00007fc17ef29690 in libxlFDEventCallback (watch=<optimized out>,
    fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
    at libxl/libxl_driver.c:170
#1  0x00007fc18bd451be in virEventPollDispatchHandles (fds=<optimized out>,
    nfds=<optimized out>) at util/vireventpoll.c:500
#2  virEventPollRunOnce () at util/vireventpoll.c:646
#3  0x00007fc18bd43c0b in virEventRunDefaultImpl () at util/virevent.c:247
#4  0x00007fc18be5e9f5 in virNetServerRun (srv=0x6b2c20)
    at rpc/virnetserver.c:1108
#5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1481
(gdb) p *((libxlEventHookInfoPtr)0x7fc170000e80)
$19 = {next = 0x0, priv = 0x71e2a0, xl_priv = 0x7fc178007a50, id = 1338}
(gdb) p ((libxlEventHookInfoPtr)0x7fc170000e80)->xl_priv
$15 = (void *) 0x7fc178007a50
(gdb) p *(((libxlEventHookInfoPtr)0x7fc170000e80)->priv)
$16 = {parent = {parent = {magic = 3405643790, refs = 5, klass = 0x726c30},
    lock = {lock = {__data = {__lock = 0, __count = 0, __owner = 0,
          __nusers = 0, __kind = 0, __spins = 0, __list = {__prev = 0x0,
            __next = 0x0}}, __size = '\000' <repeats 39 times>,
        __align = 0}}}, ctx = 0x71e650, deathW = 0x0, timerRegistrations = 0x0}
(gdb) p (((libxlEventHookInfoPtr)0x7fc170000e80)->priv)->ctx
$17 = (libxl_ctx *) 0x71e650

3), pv crash at destroy:
(gdb) where
#0  libxl_osevent_occurred_timeout (ctx=<optimized out>,
    for_libxl=0x7f8670002f20) at libxl_event.c:1105
#1  0x00007f868217834a in libxlRegisteredTimeoutsCleanup (priv=<optimized out>)
    at libxl/libxl_driver.c:378
#2  libxlVmCleanup (driver=0x7f8678023870, vm=0x7f867805a860,
    reason=<optimized out>) at libxl/libxl_driver.c:640
#3  0x00007f86821784f2 in libxlVmReap (driver=0x7f8678023870,
    vm=0x7f867805a860, reason=VIR_DOMAIN_SHUTOFF_DESTROYED)
    at libxl/libxl_driver.c:661
#4  0x00007f868217b676 in libxlDomainDestroyFlags (dom=0x7f8670002d40,
    flags=<optimized out>) at libxl/libxl_driver.c:1795
#5  0x00007f868f05a737 in virDomainDestroy (domain=0x7f8670002d40)
    at libvirt.c:2224
#6  0x000000000042e966 in remoteDispatchDomainDestroy (args=<optimized out>,
    rerr=<optimized out>, msg=<optimized out>, client=<optimized out>,
    server=<optimized out>) at remote_dispatch.h:1277
#7  remoteDispatchDomainDestroyHelper (server=<optimized out>,
    client=<optimized out>, msg=<optimized out>, rerr=0x7f8684896bf0,
    args=<optimized out>, ret=<optimized out>) at remote_dispatch.h:1255
#8  0x00007f868f0aac73 in virNetServerProgramDispatchCall (
    msg=<optimized out>, client=<optimized out>, server=<optimized out>,
    prog=<optimized out>) at rpc/virnetserverprogram.c:432
#9  virNetServerProgramDispatch (prog=0x6bdfb0, server=0x6b2c20,
    client=0x7f86700020f0, msg=0x7f8670001040) at rpc/virnetserverprogram.c:305
#10 0x00007f868f0b02ce in virNetServerProcessMsg (srv=<optimized out>,
    client=0x7f86700020f0, prog=0x6cabc0, msg=0x7f8670001040)
    at rpc/virnetserver.c:162
#11 0x00007f868f0b0f73 in virNetServerHandleJob (jobOpaque=<optimized out>,
    opaque=0x6b2c20) at rpc/virnetserver.c:183
#12 0x00007f868efbb4c6 in virThreadPoolWorker (opaque=<optimized out>)
    at util/virthreadpool.c:144
#13 0x00007f868efbaab7 in virThreadHelper (data=<optimized out>)
    at util/virthreadpthread.c:161
#14 0x00007f868bc1c7b6 in start_thread (arg=<optimized out>)
    at pthread_create.c:301
#15 0x00007f868b5719cd in clone ()
    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112
#16 0x0000000000000000 in ?? ()

4), pv. i remember it fail at create.
Program received signal SIGSEGV, Segmentation fault.
0x00007f521f63f690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
(gdb) where
#0  0x00007f521f63f690 in libxlFDEventCallback (watch=<optimized out>,
    fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
    at libxl/libxl_driver.c:170
#1  0x00007f522c45b1be in virEventPollDispatchHandles (fds=<optimized out>,
    nfds=<optimized out>) at util/vireventpoll.c:500
#2  virEventPollRunOnce () at util/vireventpoll.c:646
#3  0x00007f522c459c0b in virEventRunDefaultImpl () at util/virevent.c:247
#4  0x00007f522c5749f5 in virNetServerRun (srv=0x6b2c10)
    at rpc/virnetserver.c:1108
#5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1481

2, (20:31 2013-02-22)
jim reply 20130221
Bamvor Jian Zhang wrote:
> Hi, Jim
>
> test version: libvirt upstream and xen-unstable. the xen package is in my ibs: sles11 sp3
> Sorry for the late crash message. here is my crash log:
>   

It seems you easily cause crashes :).  Mine are harder to produce, but
races can behave differently on different systems...

> 1, hvm save and restore.
> save began during boot:
> Program received signal SIGSEGV, Segmentation fault.
> [Switching to Thread 0x7ffff7fa97e0 (LWP 4427)]
> 0x00007fffea6bb690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
>   

You need to build with '-O0' so these variables aren't optimized out. 
We need to see what caused the segfault.  Was info NULL?  Was info->priv
NULL?  Can you print these two?

> 170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
> (gdb) where
> #0  0x00007fffea6bb690 in libxlFDEventCallback (watch=<optimized out>,
>     fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
>     at libxl/libxl_driver.c:170
> #1  0x00007ffff74d71be in virEventPollDispatchHandles (fds=<optimized out>,
>     nfds=<optimized out>) at util/vireventpoll.c:500
> #2  virEventPollRunOnce () at util/vireventpoll.c:646
> #3  0x00007ffff74d5c0b in virEventRunDefaultImpl () at util/virevent.c:247
> #4  0x00007ffff75f09f5 in virNetServerRun (srv=0x6b2c90)
>     at rpc/virnetserver.c:1108
> #5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
>     at libvirtd.c:1481
>
> 2, pv create fail
> Program received signal SIGSEGV, Segmentation fault.
> 0x00007fc17ef29690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
>   

Same here.

> 170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
> (gdb) where
> #0  0x00007fc17ef29690 in libxlFDEventCallback (watch=<optimized out>,
>     fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
>     at libxl/libxl_driver.c:170
> #1  0x00007fc18bd451be in virEventPollDispatchHandles (fds=<optimized out>,
>     nfds=<optimized out>) at util/vireventpoll.c:500
> #2  virEventPollRunOnce () at util/vireventpoll.c:646
> #3  0x00007fc18bd43c0b in virEventRunDefaultImpl () at util/virevent.c:247
> #4  0x00007fc18be5e9f5 in virNetServerRun (srv=0x6b2c20)
>     at rpc/virnetserver.c:1108
> #5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
>     at libvirtd.c:1481
> (gdb) p *((libxlEventHookInfoPtr)0x7fc170000e80)
> $19 = {next = 0x0, priv = 0x71e2a0, xl_priv = 0x7fc178007a50, id = 1338}
> (gdb) p ((libxlEventHookInfoPtr)0x7fc170000e80)->xl_priv
> $15 = (void *) 0x7fc178007a50
> (gdb) p *(((libxlEventHookInfoPtr)0x7fc170000e80)->priv)
> $16 = {parent = {parent = {magic = 3405643790, refs = 5, klass = 0x726c30},
>     lock = {lock = {__data = {__lock = 0, __count = 0, __owner = 0,
>           __nusers = 0, __kind = 0, __spins = 0, __list = {__prev = 0x0,
>             __next = 0x0}}, __size = '\000' <repeats 39 times>,
>         __align = 0}}}, ctx = 0x71e650, deathW = 0x0, timerRegistrations = 0x0}
> (gdb) p (((libxlEventHookInfoPtr)0x7fc170000e80)->priv)->ctx
> $17 = (libxl_ctx *) 0x71e650
>
> 3, pv crash at destroy:
>   

Was this a segfault too?

> (gdb) where
> #0  libxl_osevent_occurred_timeout (ctx=<optimized out>,
>     for_libxl=0x7f8670002f20) at libxl_event.c:1105
> #1  0x00007f868217834a in libxlRegisteredTimeoutsCleanup (priv=<optimized out>)
>     at libxl/libxl_driver.c:378
> #2  libxlVmCleanup (driver=0x7f8678023870, vm=0x7f867805a860,
>     reason=<optimized out>) at libxl/libxl_driver.c:640
> #3  0x00007f86821784f2 in libxlVmReap (driver=0x7f8678023870,
>     vm=0x7f867805a860, reason=VIR_DOMAIN_SHUTOFF_DESTROYED)
>     at libxl/libxl_driver.c:661
> #4  0x00007f868217b676 in libxlDomainDestroyFlags (dom=0x7f8670002d40,
>     flags=<optimized out>) at libxl/libxl_driver.c:1795
> #5  0x00007f868f05a737 in virDomainDestroy (domain=0x7f8670002d40)
>     at libvirt.c:2224
> #6  0x000000000042e966 in remoteDispatchDomainDestroy (args=<optimized out>,
>     rerr=<optimized out>, msg=<optimized out>, client=<optimized out>,
>     server=<optimized out>) at remote_dispatch.h:1277
> #7  remoteDispatchDomainDestroyHelper (server=<optimized out>,
>     client=<optimized out>, msg=<optimized out>, rerr=0x7f8684896bf0,
>     args=<optimized out>, ret=<optimized out>) at remote_dispatch.h:1255
> #8  0x00007f868f0aac73 in virNetServerProgramDispatchCall (
>     msg=<optimized out>, client=<optimized out>, server=<optimized out>,
>     prog=<optimized out>) at rpc/virnetserverprogram.c:432
> #9  virNetServerProgramDispatch (prog=0x6bdfb0, server=0x6b2c20,
>     client=0x7f86700020f0, msg=0x7f8670001040) at rpc/virnetserverprogram.c:305
> #10 0x00007f868f0b02ce in virNetServerProcessMsg (srv=<optimized out>,
>     client=0x7f86700020f0, prog=0x6cabc0, msg=0x7f8670001040)
>     at rpc/virnetserver.c:162
> #11 0x00007f868f0b0f73 in virNetServerHandleJob (jobOpaque=<optimized out>,
>     opaque=0x6b2c20) at rpc/virnetserver.c:183
> #12 0x00007f868efbb4c6 in virThreadPoolWorker (opaque=<optimized out>)
>     at util/virthreadpool.c:144
> #13 0x00007f868efbaab7 in virThreadHelper (data=<optimized out>)
>     at util/virthreadpthread.c:161
> #14 0x00007f868bc1c7b6 in start_thread (arg=<optimized out>)
>     at pthread_create.c:301
> #15 0x00007f868b5719cd in clone ()
>     at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112
> #16 0x0000000000000000 in ?? ()
>
> 4, pv. i remember it fail at create.
> Program received signal SIGSEGV, Segmentation fault.
> 0x00007f521f63f690 in libxlFDEventCallback (watch=<optimized out>, fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>) at libxl/libxl_driver.c:170
>   

All the segfaults occurred in libxlFDEventCallback.  I suspect libxl has
deregistered the fd event and now we are trying to use it.  If so, we
may have to track fd registrations similar to what I did for timer
registrations.

But we should first see what is causing the segfault by building with
optimizations off :).

> 170         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
> (gdb) where
> #0  0x00007f521f63f690 in libxlFDEventCallback (watch=<optimized out>,
>     fd=<optimized out>, vir_events=<optimized out>, fd_info=<optimized out>)
>     at libxl/libxl_driver.c:170
> #1  0x00007f522c45b1be in virEventPollDispatchHandles (fds=<optimized out>,
>     nfds=<optimized out>) at util/vireventpoll.c:500
> #2  virEventPollRunOnce () at util/vireventpoll.c:646
> #3  0x00007f522c459c0b in virEventRunDefaultImpl () at util/virevent.c:247
> #4  0x00007f522c5749f5 in virNetServerRun (srv=0x6b2c10)
>     at rpc/virnetserver.c:1108
> #5  0x000000000040ecb1 in main (argc=<optimized out>, argv=<optimized out>)
>     at libvirtd.c:1481
>
3, Jim suggest me build with "-O0". do it on xen and libvirt.   
1), replace "-O2" with "-O0"
find . -name Makefile > list
find . -name Rules.mk >> list
sed -i  "s/\-O2/\-O0/" `cat list`
2), cc1: error: -Wuninitialized is not supported without -O [-Wuninitialized]

> for f in `cat list`; do echo $f; cp -p $f $f.orig; done
> sed "s/\-Wuninitialized//" `cat list` -i
4, test
linux-work:/home/bamvor/log/novell/hypervisor_and_tools/libvirt/xen4.2_support/20130205 # build.sh ./test.sh /var/lib/xen/images_2/sles11_sp2_pv/sles11_sp2_pv.xml
1), fail at shutdown at the first round. seqfault at call libxl_osevent_occurred_fd in libxlFDEventCallback. using gdb print the variable all the point is accessable. i still do not know which lead to seqfault. 
compile it print info, info->priv, info->priv->ctx, info->xl_priv, fd, events.
meanwhile, i do not agree that info->priv is NULL, because if is is NULL, virObjectLock will fail before calling libxl_osevent_occurred_fd.
5, (14:16 2013-02-25)
1), add debug info in libxlFDEventCallback: 
diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index 22bd245..9ae967d 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -156,6 +156,7 @@ libxlFDEventCallback(int watch ATTRIBUTE_UNUSED,
     libxlEventHookInfoPtr info = fd_info;
     int events = 0;

+    VIR_WARN("info->priv: %p", info->priv);
     virObjectLock(info->priv);
     if (vir_events & VIR_EVENT_HANDLE_READABLE)
         events |= POLLIN;
@@ -167,6 +168,7 @@ libxlFDEventCallback(int watch ATTRIBUTE_UNUSED,
         events |= POLLHUP;

     virObjectUnlock(info->priv);
+    VIR_WARN("info->priv->ctx: %p, info->xl_priv: %p, fd: %d, events: %d", info->priv->ctx, info->xl_priv, fd, events);
     libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
 }
2), test on linux-work: seqfault on vm create, info->priv is empty. 
2013-02-25 06:15:13.245+0000: 23164: warning : libxlFDEventCallback:159 : info->priv: (nil)
2013-02-25 06:15:13.246+0000: 23164: warning : virObjectLock:318 : Object (nil) ((unknown)) is not a virObjectLockable instance
2013-02-25 06:15:13.246+0000: 23164: warning : virObjectUnlock:339 : Object (nil) ((unknown)) is not a virObjectLockable instance
linux-work:上面安装的xen版本是否正确?
6, (21:50 2013-2-25)
Hi, Jim

thanks your reply.

i test with print info->priv and other variable in libxlFDEventCallback and -O0.
test it on both pv and hvm. hvm test is not finished yet.

for pv test, both fail at create(physial machine fail at the first round, vmware machine fail at the 6th round). 
the failure is because info->priv is empty. but i do not why it is not empty in gdb while libvirtd crash before i print info->priv in libxlFDEventCallback.

both fail just after the following test: define -> start -> destroy -> sleep 1 -> create. note that there is no sleep or wait between start and destroy. is that possible the destroy is broken and lead to create fail?

i have also started test on hvm, it successful 7 times right now.

my test combine with the several operations main focus on long running jobs.
test version: libvirt commit: 676688b. xen commit: 66eb6f8b: xen: arm: implement domain_page_map_to_mfn.

bamvor

14:41 2013-02-17
GTD
0, 11:20-18:15

1, today
1), 16:29-18:10 libvirt libxl lock patch. see"15:40 2013-02-17"
2), suse, virtualization, summary. "15:30 2013-02-17".

15:30 2013-02-17
suse, virtualization, summary
1, xen two patches. two report bugs.
2, libvirt
1), work in libvirt xen4.2 support with Jim. review and test.
2), libvirt xen management save. for both upstream and bug fix.
3, in process
1), lock
2), blockstats.

15:40 2013-02-17
virtualization, libvirt, xen, patch, lock, cont2, modify for xen4.2
1, 去年10月写的patch, 到现在已经己不清了.
目前需要做的是看看如果支持xen4.2, 主要的变化应该是增加了异步通知的机制.
如果没有migration的情况下, 只有save和dump是AsyncJob.
还有就是能否利用aohow, 做abort job.
2, 变化
1), virDomainObjListAdd, virDomainListRemove
(1), libxlDomainObjEndJob后面原来是用的是virDomainRemoveInactive, 现在需要改用virDomainListRemove. 后者是unref domain obj(到0会销毁).
libxlDomainObjEndJob如果成功, 表示这个最后一个引用计数被unref, 此时才需要调用virDomainListRemove
2), 之前jim的patch已经去掉了在save中判定persistent, 所以我相关代码也需要去掉.
\TODO: 确定.
3), patch完成. 明天编译运行通过后开始修改.

11:02 2013-02-19
GTD
0, 10:50

1, today
1), 11:02-11:37 14:30- libvirt libxl lock patch. see"11:03 2013-02-19".
2), 今天才发现libvirt很久以前就支持arm了. 看看能不能做libvirt PVH的支持.
3), \TODO: 其实lock这东西还有很多没实现的, 感觉有点难阿, 要不还是做block stats和console?

11:03 2013-02-19
(16:56 2013-02-22)
virtualization, libvirt, xen, patch, lock, cont2, modify for xen4.2, cont1
1, plan
1), 用原来的脚本测试lock基本功能是否正确.
2), 学习如何使用ao_how.
2, compile error
3, virObjectLockable 
lock move from virDomainObj to virDomainObj.parent(virObjectLockable type).
4, virDomainObjLock, virDomainObjUnlock dissappear.
drvier lock是否需要, 与obj是否需要做好流程.
in qemu driver, there is a new variable virQEMUDriverConfigPtr for driver lock. which is managed by virClassNew.
virQEMUDriverConfigPtr virQEMUDriverGetConfig(virQEMUDriverPtr driver)
{
    virQEMUDriverConfigPtr conf;
    qemuDriverLock(driver);
    conf = virObjectRef(driver->config);
    qemuDriverUnlock(driver);
    return conf;
}

patch: b090aa7d.
感觉只要保证拿到obj ref count后不在拿driver lock就没有问题.
现在obj没有锁, 如果driver再不锁, 那是不是就没人保护了?
\TODO: check其他driver.
5, virDomainFindByUUID is replaced by virDomainObjListFindByUUID.
commit: 4f6ed6c3. it seems it is a simple rename.

12:16 2013-02-19
suse, linux, SLE11 SP3, SLE 11 SP3 Beta1 released; how to dump a uefi usb stick
1, "Thorsten Kukuk <kukuk@suse.de>"_email_"[devel] [ANNOUNCE] SLE 11 SP3 Beta1 released"_20130215_1827
to dump the ISO image on an USB stick (you must run "isohybrid --uefi <name_iso_image>" before dumping the ISO image on USB stick, otherwise USB Stick won't be recognized by UEFI firmware properly).

12:50 2013-02-19
Samuel Thibault
1, Samuel Thibault work for citrix. write the stubdom in xen3.3, ref"14:08 2013-02-19".
and he ask some PVH questions recently.

14:08 2013-02-19
virtualization, xen, stubdom
1, http://wiki.xen.org/wiki/StubDom
Stubdoms (or stub domains) are lightweight 'service' or 'driver' domain to run device models and one technique to implement Dom0 Disaggregation. The initial purpose of stub domains were to offload qemu workloads from dom0 into a seperate domain.
So with stub domains, a separate unprivileged stub domain is created per HVM guest. This boosts performance and makes your system more secure. 
2, stubdom use mini-os.
3, Presentation about stubdoms at Xen Summit:
http://www.xen.org/files/xensummitboston08/SamThibault_XenSummit.pdf
4, http://wiki.xen.org/wiki/Device_Model_Stub_Domains
how to use stub domain in xen 4.x for xl and xm/xend.

14:14 2013-02-19
virtualization, xen, Qubes, compare Qubes and other virtualizations technology, How is Qubes OS different from... 
http://theinvisiblethings.blogspot.com/2012/09/how-is-qubes-os-different-from.html

15:43 2013-02-19
search=keyword; base=base_commit; for cs in `git log | grep commit | cut -d \  -f 2`; do echo "${cs}: ${search}"; git diff --no-ext-diff ${base} ${cs} | grep ${search}; done

10:05 2013-02-20
GTD
0, 9:50-11:36 13:05-18:59

1, today
1), 6h write script for search commit diff in git.
2), Summary: 看了看代码, 感觉lock还是没有什么思路. 看看这周能不能把block stats这个搞出来.

15:04 2013-02-20
linux, modify root password
1, add boot options in grub: 
init=/bin/bash
will automatically login with root.
2, modify shadow file in filesystem. 
suitable for virtual machines.

18:39 2013-02-20
performance issue about lvm and xen, 后来好像说是dlm问题
1, sles11 sp1 xen4.0, sles11 sp2 xen4.1
https://www.suse.com/releasenotes/x86_64/SUSE-SLES/11-SP1
https://www.suse.com/releasenotes/x86_64/SUSE-SLES/11-SP2
2, xen4.1 release
http://wiki.xen.org/xenwiki/Xen4.1
http://wiki.xen.org/wiki/Xen_4.1_Release_Notes
http://blog.xen.org/index.php/2011/03/25/xen-4-1-releases/
http://old-list-archives.xen.org/archives/html/xen-devel/2011-03/msg01718.html
http://old-list-archives.xen.org/archives/html/xen-devel/2011-06/msg01050.html
http://lists.xen.org/archives/html/xen-users/2011-10/msg00394.html
http://lists.xen.org/archives/html/xen-devel/2012-08/msg00928.html
http://lists.xen.org/archives/html/xen-devel/2012-12/msg01329.html
http://wiki.xen.org/wiki/Xen_Release_Features

23:18 2013-2-20
virtualization, libvirt, xen, kvm, vmware, virtualbox; migration
1, 迁移 VMware 虚拟机到 KVM
http://www.ibm.com/developerworks/cn/linux/l-cn-mgrtvm3/
2, libvirt vmware, virtualbox driver:
1), libvirt vmware esx driver
http://libvirt.org/drvesx.html
2), libvirt vmware workstation, vmware player driver:
http://libvirt.org/drvvmware.html
http://www.vmware.com/support/developer/vix-api/vix110_reference/
3), libvirt virtual box driver:
http://libvirt.org/drvvbox.html

13:45 2013-02-21
GTD
0, 10:50-18:25 20:35-22:50

1, today
1), "13:42 2013-02-21" 国企，私企与外企利弊通观--关键时刻给应届毕业生及时点拨(转). http://zhan.renren.com/buaa19th/?checked=true
2), 1h 16:54-18:23 20:35-22:35 write code for libxl qmp. see"14:36 2013-02-21".

14:36 2013-02-21
virtualization, libvirt, xenlight, add libxl api, cont3, domainBlockStats, cont3, qemu, QMP, add qmp in libxl, cont3
1, in xl hvm
i could get the statics from sys just like xm: /sys/devices/xen-backend/vbd-1-768/statistics
2, in xl pv
i could get the statics from sys just like xm. why? only in libvirt, it not work?
3, 调试xl qmp. 发现是没有得到正确的json项. 卡在了device, stats这个级别.
4, code changes.
1), SWITCH_FOREACH_OPT. commit: f4a5a1e1, 9a652ca8
example
/* int main_foo(int argc, char **argv) {
 *     int opt;
 *
 *     SWITCH_FOREACH_OPT(opt, "blah", NULL, "foo", 0) {
 *      case 'b':
 *          ... handle b option...
 *          break;
 *      case 'l':
 *          ... handle l option ...
 *          break;
 *      case etc etc...
 *      }
 *      ... do something useful with the options ...
 * }
 */

changes in main_blockinfo, so as to main_qmp.
    int opt;

-    if ((opt = def_getopt(argc, argv, "", "block-info", 2)) != -1)
-        return opt;
+    SWITCH_FOREACH_OPT(opt, "", NULL, "block-info", 2) {
+        /* No options */
+    }
5, 不知道之前的test case是怎么样的. 反正现在这pv, hvm都可以. 而且没有找到qdisk.
配置文件保存在: ~/work/virtualization/libvirt/20130221_vm_conf_for_block_stats
暂时先按照libvirt xen driver的写法做, 以后再看是否需要qmp.
1), 虽然这样可以实现, 但是要加一个函数, 判断是否与xenstore连接当没读到数据的时候(是否需要呢?).
      add libxl_check_bd_connected in xen libxl
        snprintf(s, sizeof(s), "/local/domain/0/backend/vbd/%d/%d/state",
        check wether the result equal to "4" or not
但是, 但是. 还是没法实现BlockStatsFlags, 因为缺参数. 
这东西还真是不好实现, 因为hvm情况下, qmp根据就没有连接. 可以现实现pv的情况. 然后再看hvm怎么解决.
hvm and pv qemu process:
linux-vm4:/sys/devices/xen-backend # ps aux |grep qemu
root      3602  0.0  0.5 151480  7016 ?        Ssl  21:28   0:00 /usr/lib/xen/bin/qemu-system-i386 -xen-domid 11 -chardev socket,id=libxl-cmd,path=/var/run/xen/qmp-libxl-11,server,nowait -mon chardev=libxl-cmd,mode=control -xen-attach -name sles11_sp2_pv -vnc 127.0.0.1:0 -M xenpv -m 513
root      3706  0.0  0.2 123476  3396 ?        Sl   13:52   0:01 /usr/lib/xen/bin/qemu-system-i386 -xen-domid 0 -xen-attach -name dom0 -nographic -M xenpv -daemonize -monitor /dev/null
root      3750  4.2  0.8  97968 11316 ?        SLsl 21:30   2:30 /usr/lib/xen/bin/qemu-dm -d 12 -domain-name bjz_04_sles11_sp2 -vnc 127.0.0.1:0 -vncunused -videoram 8 -boot c -acpi -vcpus 4 -vcpu_avail 0x01 -net none -M xenfv

hvm qemu commands: 
-mon chardev=libxl-cmd,mode=control
难道是可以用monitor command直接得到? 似乎可以, ref: libxl__qemu_traditional_cmd

20:41 2013-02-21
(10:25 2013-3-5)
company, annual, summary; for olaf
1, the code is dynamic.
when i work in previous company, close source, embedded software. in the project life, the code is not changed. e.g. the android version, the kernel version in our arm android pad project. 
but in suse, it is not. even when i write a patch, the upstream maybe changes a lot.
so, it is essential that keep an eye on mailing list. in fact, it is interesting. i had subscribe some mailing list before join the suse. but i rare to read them.
2, hackweek.
i love it.
opensuse arm on allwinner a10.
3, last year, olaf talk about the important of communication. i with jiaju, chunyan, jim...
4, take part in the community. i sent several patches to xen and libvirt. jim very support me. some patch is in progress, including a lock patch for libvirt xenlight driver.
5, i like the "open" culture in suse. i usually read the email in the mailing list. i could know the project progress, colleague work, interesting things(arm server, AArch64).

21:02 2013-02-21
software skill, SCM, git, specifying range, examples
ref: git rev-parse --help
1, git format-patch A^~
从commit A开始到最新commit的所有patch.
2, git fotmat-patch A^!
只生成这个commit的patch.
注: r1^! includes commit r1 but excludes all of its parents.

9:07 2013-2-22
company, virtualization, suse, xen, regular meeting: US / China Virtualization Sync, meeting
1, lab reservation system.
1), login with name and domain. do not login with ip address.
2), send email to lab administrator and cc jason.
2, chunyan
1), bug for pci detach
(1), pci detach not work while domain is not active.
(2), qemu-dm. about the operation sequence.
2), write pci Common library.
(1), common code.
(2), maintain the global state in libvirt. solve the conflict in the different driver.
3, Bamvor
Jim want me improve the lock patch.

13:29 2013-02-22
mailing list, virtualization, xen
1, [Xen-devel] Planning Xen Test Days for 4.3
http://lists.xen.org/archives/html/xen-devel/2013-02/msg01611.html
Lars Kurth <lars.kurth.xen@xxxxxxxxx>
Good morning,
as we are approaching the Xen 4.3 freeze, I think it is time to start thinking about Test Days for Xen 4.3. The question we need to answer is
a) How many test days do we think make sense during the release cycle
b) What cadence? Every other week, every 3, ...
c) At which point do we start?
c) Are there any areas we want to point users to : in other words, we need a good document early pointing people to the new features we would like to see tested (and how this is done). The roadmap is a good start. Maybe we can start working on this in the next 2 docs days (the next one is on Monday).
d) Who from the developer community would want to take the lead working with me or Russell on this 
Best Regards
Lars

13:30 2013-02-22
GTD
0, 11:30-17:50 19:55-22:15

1, today
1), 9:00-9:40 US/China Sync meeing. see"9:07 2013-2-22".
2), 30' mailing list. see"13:29 2013-02-22"
3), 15:00-17:50 20:24-21:35 libvirt libxl lock patch. see"11:03 2013-02-19", "15:00 2013-02-22"
4), 21:37-22:12 rebuild libvirt with "-O0" for xen4.2 support. see"11:07 2013-2-16"2.
5), Summary: 今天加上晚上的时间, 勉强能到6小时工作时间. 现在脖子疼了, 下周继续加油. 

14:03 2013-02-22
company, sle, virtualization
1, "Jason Douglas"_email_"Future of Virtualization Technologies in SLES"_20121024_2207
Hi everyone,

In our team meeting last week, Michal Svec gave a presentation about the future of virtualization technologies in SLES. Since this impacts all of us, I thought it would be useful to provide a summary of his presentation for those who were not in attendance.

*** IMPORTANT: This discussion is still preliminary so you should NOT discuss this with people outside of SUSE. Until you hear otherwise, please leave those conversations to PM. ***

-------

For SLES 11, our virtualization story will remain unchanged: Xen and KVM are equally and fully supported. Support for SLES 11 continues through 2019.


For SLE 12, KVM will be positioned as our primary hypervisor. The reasons for making this change include lightening the workload for SUSE and partners and simplifying other SLE development efforts (such as Common Criteria).


The plan is to offer XEN as a add-on offering to SLES 12 that would be an added cost to those who want to use it. It was mentioned that this would help track the demand for XEN.


Before this decision can be finalized (hopefully by the end of the year), Michal needs to gather additional information about:
1) Technical differences between XEN and KVM (supported limits, performance, etc.)
2) Business Impact (impact to current XEN customers, potential loss of customers to RedHat, partner impact, etc.)
3) Migration from Xen to KVM (documentation needed in the SLES 11 SP3 timeframe; migration tool needed for the SLE 12 timeframe).


In response to Michal's presentation, Jan expressed concerns that the customer experience and integration of XEN with SLES will be negatively impacted by suddenly offering it as an add-on. Specifically, even now with XEN an integrated part of SLES, it is often ignored or forgotten when developers from other teams make changes to subsystems that interact with XEN (for example, power management). This leads to breakages that go unnoticed until a partner or customer runs into them. If XEN is decoupled from SLES, the likelihood of this happening increases dramatically. Michal suggested that we would still continue to develop XEN as part of SLES and that the split from SLES would only be done at the last possible moment. Jan rebutted that the negative impact would still occur once that split occurred.


The discussion then shifted to virtualization management tools. We hear often from customers that they need something more than virt-manager for managing their virtualization environments -- something like convirt, ovirt, etc. Michal stated that SUSE Cloud is the next evolution of those tools and therefore we would skip tools such as these and move people to cloud. Additionally there is the possibility that SUSE Manager could be enhanced to help manage larger virtualization environments where cloud was not a good fit.

--------

I hope my summary was accurate and made sense. For those who were in attendance, if there are important points that I missed or summarized incorrectly, please reply to the group with your corrections.

I have sent out an appointment for a follow-up discussion on this topic which will provide an opportunity to ask questions, make comments, or raise concerns. If you are unable to attend, please feel free to reply to this thread with those comments. Thanks.


Jason

Jason Douglas
Engineering Manager, Virtualization
SUSE
jdouglas@suse.com
1.801.861.1649
2, Michal Svec
Senior Product Manager
msvec@suse.com

14:12 2013-02-22
company, sle12, virtual team
1, virtual team:
https://wiki.innerweb.novell.com/index.php/SUSE/SLE12/Virtual_Teams
2, sle12 resource:
https://wiki.innerweb.novell.com/index.php/SUSE/SLE12
This webpage is to track SLE12 process, from features to completion. 
https://wiki.innerweb.novell.com/index.php/SUSE/SLE12/HowToDevelop

21:17 2013-02-22
company, openSUSE 
"Agustin Benito Bethencourt <abebe@suse.com>"_email_"[devel] please welcome new openSUSE Team member Ancor Gonzalez Sosa"_20130220_1808
Hi,

It's my pleasure to announce a new openSUSE Team member.

Áncor González Sosa joined this Monday the openSUSE Team at SUSE. He will be 
located in Nuremberg for around 18 months before moving back to his country to 
work remotely, close to his family.

Áncor is a senior Rails/Ruby Developer with experience as entrepreneurship, 
product and project management. He is a GNU/Linux enthusiast for more than 12 
years now and a well known Free Software advocate in his homeland. 

Áncor is also a motorcycle and music (bass) fan.

Please join me in giving him a warm welcome.

Saludos
-- 
Agustin Benito Bethencourt
openSUSE Team Lead at SUSE
abebe@suse.com

10:12 2013-02-25
GTD
0, 9:50

1, today
1), 14:00-15:30 21:00-22:30 rebuild libvirt with "-O0" for xen4.2 support. see"11:07 2013-2-16"5.

11:02 2013-02-26
GTD
0, 10:40-18:45 20:20-22:00

1, today
1), 11:00-11:38 1h debug libvirt xen4.2 support. "11:39 2013-02-26"
2), 16:29-18:43 20:20-21:52 libvirt libxl lock patch. see"16:28 2013-02-26"
3), Summary: 时间上勉强到6个小时, 发现自己软件能力真的挺差的, 多花时间联系才好.

11:39 2013-02-26
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont20, final version test, cont4
1, test on hvm fail at create: add disk fail
libxl: debug: libxl_create.c:1198:do_domain_create: ao 0x7f2ee4002170: create: how=(nil) callback=(nil) poller=0x7f2ee4001980
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=hda spec.backend=tap
libxl: debug: libxl_create.c:644:initiate_domain_create: running bootloader
libxl: debug: libxl_bootloader.c:321:libxl__bootloader_run: not a PV domain, skipping bootloader
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee4012ab0: deregister unregistered
libxl: debug: libxl_numa.c:435:libxl__get_numa_candidate: New best NUMA placement candidate found: nr_nodes=1, nr_cpus=4, nr_vcpus=8, free_memkb=722
libxl: detail: libxl_dom.c:192:numa_place_domain: NUMA placement candidate with 1 nodes, 4 cpus and 722 KB free selected
xc: detail: elf_parse_binary: phdr: paddr=0x100000 memsz=0x9ce04
xc: detail: elf_parse_binary: memory: 0x100000 -> 0x19ce04
xc: info: VIRTUAL MEMORY ARRANGEMENT:
  Loader:        0000000000100000->000000000019ce04
  Modules:       0000000000000000->0000000000000000
  TOTAL:         0000000000000000->000000001f800000
  ENTRY ADDRESS: 0000000000100000
xc: info: PHYSICAL MEMORY ALLOCATION:
  4KB PAGES: 0x0000000000000200
  2MB PAGES: 0x00000000000000fb
  1GB PAGES: 0x0000000000000000
xc: detail: elf_load_binary: phdr 0 at 0x0x7f2eeb383000 -> 0x0x7f2eeb416c7c
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=hda spec.backend=tap
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/68/768/state token=3/10c: register slotnum=3
libxl: debug: libxl_create.c:1211:do_domain_create: ao 0x7f2ee4002170: inprogress: poller=0x7f2ee4001980, flags=i
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/68/768/state token=3/10c: event epath=/local/domain/0/backend/vbd/68/768/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vbd/68/768/state wanted state 2 still waiting state 1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/68/768/state token=3/10c: event epath=/local/domain/0/backend/vbd/68/768/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/68/768/state wanted state 2 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/68/768/state token=3/10c: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee4004788: deregister unregistered
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/block add
libxl: debug: libxl_dm.c:1135:libxl__spawn_local_dm: Spawning device-model /usr/lib/xen/bin/qemu-dm with arguments:
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   /usr/lib/xen/bin/qemu-dm
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -d
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   68
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -domain-name
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   bjz_04_sles11_sp2
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vnc
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   127.0.0.1:0
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vncunused
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -videoram
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   8
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -boot
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   c
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -acpi
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vcpus
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   4
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vcpu_avail
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   0x01
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -net
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   none
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -M
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   xenfv
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f2ee4012ce8 wpath=/local/domain/0/device-model/68/state token=3/10d: register slotnum=3
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee4012ce8 wpath=/local/domain/0/device-model/68/state token=3/10d: event epath=/local/domain/0/device-model/68/state
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee4012ce8 wpath=/local/domain/0/device-model/68/state token=3/10d: event epath=/local/domain/0/device-model/68/state
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f2ee4012ce8 wpath=/local/domain/0/device-model/68/state token=3/10d: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee4012ce8: deregister unregistered
libxl: debug: libxl_event.c:1737:libxl__ao_progress_report: ao 0x7f2ee4002170: progress report: ignored
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x7f2ee4002170: complete, rc=0
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x7f2ee4002170: destroy
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x730ab0 wpath=@releaseDomain token=3/10e: register slotnum=3
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x730ab0 wpath=@releaseDomain token=3/10e: event epath=@releaseDomain
libxl: debug: libxl.c:998:domain_death_xswatch_callback: [evg=0x7f2ee4004980:68] from domid=68 nentries=1 rc=1
libxl: debug: libxl.c:1009:domain_death_xswatch_callback: [evg=0x7f2ee4004980:68]   got=domaininfos[0] got->domain=68
libxl: debug: libxl.c:1036:domain_death_xswatch_callback:  exists shutdown_reported=0 dominf.flags=ffff000a
libxl: debug: libxl.c:1002:domain_death_xswatch_callback: [evg=0] all reported
libxl: debug: libxl.c:1066:domain_death_xswatch_callback: domain death search done
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x730ab0 wpath=@releaseDomain token=3/10e: event epath=@releaseDomain
libxl: debug: libxl.c:998:domain_death_xswatch_callback: [evg=0x7f2ee4004980:68] from domid=68 nentries=1 rc=1
libxl: debug: libxl.c:1009:domain_death_xswatch_callback: [evg=0x7f2ee4004980:68]   got=domaininfos[0] got->domain=68
libxl: debug: libxl.c:1036:domain_death_xswatch_callback:  exists shutdown_reported=0 dominf.flags=10006
libxl: debug: libxl.c:1048:domain_death_xswatch_callback:  shutdown reporting
libxl: debug: libxl.c:1002:domain_death_xswatch_callback: [evg=0] all reported
libxl: debug: libxl.c:1066:domain_death_xswatch_callback: domain death search done
libxl: debug: libxl_event.c:1154:egc_run_callbacks: event 0x7f2ee4011180 callback type=domain_shutdown
libxl: debug: libxl.c:1250:libxl_domain_destroy: ao 0x7f2ee40068d0: create: how=(nil) callback=(nil) poller=0x7f2ee4001980
libxl: debug: libxl_dm.c:1238:libxl__destroy_device_model: Device Model signaled
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f2ee4003908 wpath=/local/domain/0/backend/vbd/68/768/state token=2/10f: register slotnum=2
libxl: debug: libxl.c:1259:libxl_domain_destroy: ao 0x7f2ee40068d0: inprogress: poller=0x7f2ee4001980, flags=i
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee4003908 wpath=/local/domain/0/backend/vbd/68/768/state token=2/10f: event epath=/local/domain/0/backend/vbd/68/768/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/68/768/state wanted state 6 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f2ee4003908 wpath=/local/domain/0/backend/vbd/68/768/state token=2/10f: deregister slotnum=2
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee4003908: deregister unregistered
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/block remove
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x7f2ee40068d0: complete, rc=0
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x7f2ee40068d0: destroy
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x730ab0 wpath=@releaseDomain token=3/10e: deregister slotnum=3
libxl: debug: libxl_create.c:1198:do_domain_create: ao 0x7f2ee40068d0: create: how=(nil) callback=(nil) poller=0x7f2ee4001980
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=hda spec.backend=tap
libxl: debug: libxl_create.c:644:initiate_domain_create: running bootloader
libxl: debug: libxl_bootloader.c:321:libxl__bootloader_run: not a PV domain, skipping bootloader
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee44130c0: deregister unregistered
libxl: debug: libxl_numa.c:435:libxl__get_numa_candidate: New best NUMA placement candidate found: nr_nodes=1, nr_cpus=4, nr_vcpus=8, free_memkb=723
libxl: detail: libxl_dom.c:192:numa_place_domain: NUMA placement candidate with 1 nodes, 4 cpus and 723 KB free selected
xc: detail: elf_parse_binary: phdr: paddr=0x100000 memsz=0x9ce04
xc: detail: elf_parse_binary: memory: 0x100000 -> 0x19ce04
xc: info: VIRTUAL MEMORY ARRANGEMENT:
  Loader:        0000000000100000->000000000019ce04
  Modules:       0000000000000000->0000000000000000
  TOTAL:         0000000000000000->000000001f800000
  ENTRY ADDRESS: 0000000000100000
xc: info: PHYSICAL MEMORY ALLOCATION:
  4KB PAGES: 0x0000000000000200
  2MB PAGES: 0x00000000000000fb
  1GB PAGES: 0x0000000000000000
xc: detail: elf_load_binary: phdr 0 at 0x0x7f2eeb383000 -> 0x0x7f2eeb416c7c
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=hda spec.backend=tap
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/69/768/state token=3/110: register slotnum=3
libxl: debug: libxl_create.c:1211:do_domain_create: ao 0x7f2ee40068d0: inprogress: poller=0x7f2ee4001980, flags=i
libxl: debug: libxl_event.c:478:watchfd_callback: watch w=0x7f2ee4004788 epath=@releaseDomain token=3/10e: counter != 110
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/69/768/state token=3/110: event epath=/local/domain/0/backend/vbd/69/768/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vbd/69/768/state wanted state 2 still waiting state 1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/69/768/state token=3/110: event epath=/local/domain/0/backend/vbd/69/768/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/69/768/state wanted state 2 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f2ee4004788 wpath=/local/domain/0/backend/vbd/69/768/state token=3/110: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee4004788: deregister unregistered
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/block add
libxl: debug: libxl_dm.c:1135:libxl__spawn_local_dm: Spawning device-model /usr/lib/xen/bin/qemu-dm with arguments:
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   /usr/lib/xen/bin/qemu-dm
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -d
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   69
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -domain-name
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   bjz_04_sles11_sp2
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vnc
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   127.0.0.1:0
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vncunused
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -videoram
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   8
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -boot
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   c
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -acpi
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vcpus
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   4
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vcpu_avail
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   0x01
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -net
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   none
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -M
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   xenfv
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f2ee44132f8 wpath=/local/domain/0/device-model/69/state token=3/111: register slotnum=3
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee44132f8 wpath=/local/domain/0/device-model/69/state token=3/111: event epath=/local/domain/0/device-model/69/state
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee44132f8 wpath=/local/domain/0/device-model/69/state token=3/111: event epath=/local/domain/0/device-model/69/state
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f2ee44132f8 wpath=/local/domain/0/device-model/69/state token=3/111: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee44132f8: deregister unregistered
libxl: debug: libxl_event.c:1737:libxl__ao_progress_report: ao 0x7f2ee40068d0: progress report: ignored
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x7f2ee40068d0: complete, rc=0
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x7f2ee40068d0: destroy
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x730ab0 wpath=@releaseDomain token=3/112: register slotnum=3
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x730ab0 wpath=@releaseDomain token=3/112: event epath=@releaseDomain
libxl: debug: libxl.c:998:domain_death_xswatch_callback: [evg=0x7f2ee4004980:69] from domid=69 nentries=1 rc=1
libxl: debug: libxl.c:1009:domain_death_xswatch_callback: [evg=0x7f2ee4004980:69]   got=domaininfos[0] got->domain=69
libxl: debug: libxl.c:1036:domain_death_xswatch_callback:  exists shutdown_reported=0 dominf.flags=ffff0022
libxl: debug: libxl.c:1002:domain_death_xswatch_callback: [evg=0] all reported
libxl: debug: libxl.c:1066:domain_death_xswatch_callback: domain death search done
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x730ab0 wpath=@releaseDomain token=3/112: event epath=@releaseDomain
libxl: debug: libxl.c:998:domain_death_xswatch_callback: [evg=0x7f2ee4004980:69] from domid=69 nentries=1 rc=1
libxl: debug: libxl.c:1009:domain_death_xswatch_callback: [evg=0x7f2ee4004980:69]   got=domaininfos[0] got->domain=69
libxl: debug: libxl.c:1036:domain_death_xswatch_callback:  exists shutdown_reported=0 dominf.flags=6
libxl: debug: libxl.c:1048:domain_death_xswatch_callback:  shutdown reporting
libxl: debug: libxl.c:1002:domain_death_xswatch_callback: [evg=0] all reported
libxl: debug: libxl.c:1066:domain_death_xswatch_callback: domain death search done
libxl: debug: libxl_event.c:1154:egc_run_callbacks: event 0x7f2ee400fc80 callback type=domain_shutdown
libxl: debug: libxl.c:1250:libxl_domain_destroy: ao 0x7f2ee400ff00: create: how=(nil) callback=(nil) poller=0x7f2ee4001980
libxl: debug: libxl_dm.c:1238:libxl__destroy_device_model: Device Model signaled
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f2ee40054e8 wpath=/local/domain/0/backend/vbd/69/768/state token=2/113: register slotnum=2
libxl: debug: libxl.c:1259:libxl_domain_destroy: ao 0x7f2ee400ff00: inprogress: poller=0x7f2ee4001980, flags=i
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f2ee40054e8 wpath=/local/domain/0/backend/vbd/69/768/state token=2/113: event epath=/local/domain/0/backend/vbd/69/768/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/69/768/state wanted state 6 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f2ee40054e8 wpath=/local/domain/0/backend/vbd/69/768/state token=2/113: deregister slotnum=2
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f2ee40054e8: deregister unregistered
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/block remove
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x7f2ee400ff00: complete, rc=0
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x7f2ee400ff00: destroy
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x730ab0 wpath=@releaseDomain token=3/112: deregister slotnum=3
libxl: debug: libxl_event.c:472:watchfd_callback: watch epath=@releaseDomain token=3/112: empty slot
libxl: debug: libxl_create.c:1198:do_domain_create: ao 0x7387e0: create: how=(nil) callback=(nil) poller=0x7f2ee4001980
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=hda spec.backend=tap
libxl: debug: libxl_create.c:644:initiate_domain_create: running bootloader
libxl: debug: libxl_bootloader.c:321:libxl__bootloader_run: not a PV domain, skipping bootloader
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7402c0: deregister unregistered
libxl: debug: libxl_numa.c:435:libxl__get_numa_candidate: New best NUMA placement candidate found: nr_nodes=1, nr_cpus=4, nr_vcpus=8, free_memkb=723
libxl: detail: libxl_dom.c:192:numa_place_domain: NUMA placement candidate with 1 nodes, 4 cpus and 723 KB free selected
xc: detail: elf_parse_binary: phdr: paddr=0x100000 memsz=0x9ce04
xc: detail: elf_parse_binary: memory: 0x100000 -> 0x19ce04
xc: info: VIRTUAL MEMORY ARRANGEMENT:
  Loader:        0000000000100000->000000000019ce04
  Modules:       0000000000000000->0000000000000000
  TOTAL:         0000000000000000->000000001f800000
  ENTRY ADDRESS: 0000000000100000
xc: info: PHYSICAL MEMORY ALLOCATION:
  4KB PAGES: 0x0000000000000200
  2MB PAGES: 0x00000000000000fb
  1GB PAGES: 0x0000000000000000
xc: detail: elf_load_binary: phdr 0 at 0x0x7f2eeb383000 -> 0x0x7f2eeb416c7c
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=hda spec.backend=tap
libxl: error: libxl.c:2101:device_disk_add: failed to get blktap devpath for 0x73f8c0

libxl: error: libxl_create.c:901:domcreate_launch_dm: unable to add disk devices
libxl: error: libxl_dm.c:1229:libxl__destroy_device_model: could not find device-model's pid for dom 70
libxl: error: libxl.c:1414:libxl__destroy_domid: libxl__destroy_device_model failed for 70
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x7387e0: complete, rc=-3
libxl: debug: libxl_create.c:1211:do_domain_create: ao 0x7387e0: inprogress: poller=0x7f2ee4001980, flags=ic
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x7387e0: destroy
xc: debug: hypercall buffer: total allocations:30027 total releases:30027
xc: debug: hypercall buffer: current allocations:0 maximum allocations:4
xc: debug: hypercall buffer: cache current size:4
x

14:04 2013-02-26
company, IT, network
"Maximilian Maher <mmaher@suse.de>"_email_"[devel] Renumbering of our Development Network 10.11.0.0/17"_20130226_1431
Dear Colleagues,

with our new Core Switch in place, we will finalize the network
renumbering of the SUSE R&D network in Nuremberg this week.

The former 10.11.0.0/17 network will be renumbered to 10.121.0.0/18.

Means: all arch.suse.de machines will become new IPv4 addresses.
As many of these machines are pre-production samples from our
partners and provided to us under a strict NDA, we use the renumbering
to establish a (simple) access list that will limit the access to
those machines to the 10.120.0.0/14 (suse.de in Nuremberg) and
10.100.0.0/16 (suse.cz in Prague) networks only.

For the time being,
we also allow access from login.suse.de - but in short you might use
Network to access the new 10.121.0.0./18 (arch.suse.de) network.
any other developer machine in Nuremberg or Prague to access the new
10.121.0.0/18 (arch.suse.de) network. If this is not possible for you,
please send an email to rd-adm@suse.de

We will renumber the machines step by step. Itanium Architecture is done
already - PowerPC will be  next and then finally the x86_64 Hosts
(that are managed by orthos.arch.suse.de).

For an overview please have a look at:
https://wiki.innerweb.novell.com/index.php/Services_Team/Infrastructure

Best Regards,
    OPS-Services Team

16:17 2013-02-26
http://www.nuomi.com/deal/history/wtsdv9qj.html

16:28 2013-02-26
virtualization, libvirt, xen, patch, lock, cont2, modify for xen4.2, cont2
1, test fail
Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7f56d7500700 (LWP 6057)]
0x00007f56dec102fc in virClassIsDerivedFrom (klass=0x1, parent=0x6d2da0)
    at util/virobject.c:166
166             if (klass->magic == parent->magic)
(gdb) where
#0  0x00007f56dec102fc in virClassIsDerivedFrom (klass=0x1, parent=0x6d2da0)
    at util/virobject.c:166
#1  0x00007f56dec104d4 in virObjectLock (anyobj=0x1) at util/virobject.c:316
#2  0x00007f56dec36bed in virDomainObjListAddLocked (doms=0x7128e0,
    caps=0x6f69e0, def=0x748d70, flags=2, oldDef=0x0)
    at conf/domain_conf.c:1931
#3  0x00007f56dec36e65 in virDomainObjListAdd (doms=0x7128e0, caps=0x6f69e0,
    def=0x748d70, flags=2, oldDef=0x0) at conf/domain_conf.c:1995
#4  0x00007f56d1d5fa9d in libxlDomainCreateXML (conn=0x728de0,
    xml=0x736bf0 "<domain type='xen'>\n  <name>bjz_04_sles11_sp2</name>\n  <description>None</description>\n  <uuid>5c84adcc-bd59-788a-96d2-195f9b599cfe</uuid>\n  <memory>524288</memory>\n  <currentMemory>524288</currentMem"..., flags=0)
    at libxl/libxl_driver.c:1717
#5  0x00007f56deccbfcf in virDomainCreateXML (conn=0x728de0,
    xmlDesc=0x736bf0 "<domain type='xen'>\n  <name>bjz_04_sles11_sp2</name>\n  <description>None</description>\n  <uuid>5c84adcc-bd59-788a-96d2-195f9b599cfe</uuid>\n  <memory>524288</memory>\n  <currentMemory>524288</currentMem"...,
    flags=0) at libvirt.c:1988
1), klass is 0x1, it is invalid.
2), but virsh create successful, fail at virsh list
#0  0x00007fb6f37914e8 in virObjectLock (anyobj=0x729a50)
    at util/virobject.c:317
#1  0x00007fb6f37b3145 in virDomainListPopulate (payload=0x729a50,
    name=0x6d2d90, opaque=0x7fb6ed883920) at conf/domain_conf.c:16096
#2  0x00007fb6f377d079 in virHashForEach (table=0x70d2f0,
    iter=0x7fb6f37b30f0 <virDomainListPopulate>, data=0x7fb6ed883920)
    at util/virhash.c:514
#3  0x00007fb6f37b2a97 in virDomainObjListExport (doms=0x712800,
    conn=<optimized out>, domains=0x7fb6ed883ad0, flags=<optimized out>)
    at conf/domain_conf.c:16193
#4  0x00007fb6e68d9bdd in libxlListAllDomains (conn=0x729800,
    domains=0x7fb6ed883ad0, flags=1) at libxl/libxl_driver.c:4604
2, 需要知道为什么去掉lock patch, 功能就没问题. 逐步看自己的patch, 发现需要去掉
libxlDomainObjBeginJobInternal成功时的virObjectUnref, 修改如下:
From 31fa9e027bbeae64419e84ac5cd357b10bc3bf4d Mon Sep 17 00:00:00 2001
From: Bamvor Jian Zhang <bjzhang@suse.com>
Date: Tue, 26 Feb 2013 18:32:17 +0800
Subject: [PATCH 1/1] remove virObjectUnref in libxlDomainObjBeginJobInternal
 while it successful

remove virObjectUnref in libxlDomainObjBeginJobInternal while it success. if not, the lock obj will be freeed at the end of libxlDomainObjBeginJobInternal. it lead to virObjectLock fail in future steps.
---
 src/libxl/libxl_driver.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index ac0aa33..dfbc904 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -556,7 +556,6 @@ retry:
     if (libxlDomainTrackJob(job))
         libxlDomainObjSaveJob(driver, obj);
 
-    virObjectUnref(obj);
     return 0;
 
 error:
-- 
1.7.12
3, 看看为什么vm刚启动时, shutdown会失败.
1), shutdown, reboot trigger by write poweroff or reboot to /local/domain/6/control/shutdown, e.g.
xenstore-write /local/domain/6/control/shutdown "reboot"
在suspend里面看到, 似乎是清掉(ack)才表示操作完成.

4, \TODO: 判断start不准确很不方便阿.

5, 简单测试, hvm情况下都正确.
看看能否利用上ao_how, 现在好像没有人用.
at first, i should use for_event and not set callback.

13:44 2013-02-27
GTD
0, 11:30

1, today
1), work report. see"14:00 2013-02-27"
2), 14:00-18:15 20:10-22:00 libvirt libxl lock patch. see"14:14 2013-02-27"
nap 30'
3), Summary: 今天下午看代码, 终于有了点进展.

14:00 2013-02-27
work report - week 07, 08
1, [devel-server] work report - week 07, 08
1), libvirt xen4.2 patch review and test: debug and discuss with Jim.
2), improve the lock patch in libvirt libxl driver base on xen-unstable.
some api changes after xen4.1 and the new asynchronous mechanism in xenlight may be useful for my patch.
3), Week 07: Chinese Spring Festival. 
4), US/China Sync. 

14:14 2013-02-27
virtualization, libvirt, xen, patch, lock, cont2, modify for xen4.2, cont3
1, hang at libxlDomainCoreDump.
seems hang during core dump, because the driver lock is not released.
2, read code about ao_how
1), in libxl__ao_inprogress
if poller is empty, just set rc=0. is that right? 看起来是没有实现的状态阿.
2), 似乎domain create里面还用了一些ao_how.
domcreate_bootloader_console_available -> domcreate_console_available 
domcreate_attach_pci -> domcreate_console_available 
domcreate_console_available -> libxl__ao_progress_report
3, go back to read the init commit about ao_how: 889a89c7
1), from the initial commit and the code, i could know that if i use ao_how, i should register a event to libvirt, then get the event at the end of such operation.
2), read egc_run_callbacks:
aops_for_callback for progress report, aos_for_callback for completion report.

libxl_event_wait -> libxl__egc_cleanup 
libxl__ao_inprogress -> libxl__egc_cleanup 
libxl__egc_cleanup -> egc_run_callbacks

3), i need read all the relative function
libxl__ao_complete_check_progress_reports
4), 这个好像就能回答"2)"的问题, from commit 889a89c7, if the operation is asynchronous, the caller will return immediate after the operation is trigger. it will not wait for the completion. So, set rc = 0 is right.
the above things is implemented in libxl__ao_inprogress. and it is indeed at the end of each long running operation.
5), So, how to register the event handler to libvirt?
4, when aos_for_callback/aops_for_callback insert into list by LIBXL_TAILQ_INSERT_TAIL?
libxl__ao_complete_check_progress_reports add aos_for_callback
libxl__ao_progress_report add aops_for_callback

5, about aops_for_callback
callback, if provided, is responsible for freeing the event.

6, (13:13 2013-02-28)
try to add libxl_event code libxl then use it in libvirt:
ref: tools/libxl/libxl.h
 * If ao_how->callback==NULL, a libxl_event will be generated which
 * can be obtained from libxl_event_wait or libxl_event_check.  The
 * event will have type OPERATION_COMPLETE (which is not used
 * elsewhere).
1), 怎么说也得有个fd阿, 上哪里找去?
搞不明白这个libxl_event是咋回事. 明天怎么也得把libxl_event搞清楚了.

7, (16:55 2013-03-04)
怎么总觉得aop才是我要做的事情呢? 但是aop只有create用了, 又应该不是.
1), 看起来还是要盯住libxl_ev_user?
typedef struct {
    void (*callback)(libxl_ctx *ctx, int rc, void *for_callback);
    union {
        libxl_ev_user for_event; /* used if callback==NULL */
        void *for_callback; /* passed to callback */
    } u;
} libxl_asyncop_how;

8, (10:51 2013-03-06)
domain_suspend_cb -> libxl__ao_complete -> libxl__ao_complete_check_progress_reports
后者会有NEW_EVENT, 调用libxl__event_occurred.
libxl__event_occurred有两种情况, 如果存在CTX->event_hooks会把event插入到occurred_for_callback, 如果不存在, 会调到libxl__poller_wakeup. 
libxl__poller_wakeup应该是在没有libvirtd等deamon情况下用的?
1), which one for libvirt?
(1), CTX->event_hooks
CTX->event_hooks: set by libxl_event_register_callbacks.
egc_run_callbacks: iterate the list, remove event from list and handle event.
libxl__event_occurred: insert event to list.
LIBXL_INIT_EGC: init list.

libxl_event_register_callbacks is called by libxlCreateDomEvents.
libxlVmStart -> libxlCreateDomEvents
libxlReconnectDomain -> libxlCreateDomEvents
libxlVmStart is called while the vm create, reboot and restore.
(2), i do know. but libxl__ao_complete and libxl__event_occurred is called twice after xl save helper(libxl_save_helper).

libxl_ctx_alloc():
LIBXL_TAILQ_INIT(&ctx->occurred);

现有问题: 不清楚fd从哪里来的.
如果是fd或timeout的注册, 是通过libxl__ev_fd_register, libxl__ev_timeout_register. 传入的fd调用libvirt注册的fd_register, timeout_register调用virEventAddHandle.

9, (11:12 2013-03-07)
1), find out which patch will libxl__event_occurred run.
break in libxl__ao_complete.
(gdb) p *(egc->gc->owner)
$11 = {lg = 0x625010, xch = 0x625250, xsh = 0x625710, nogc_gc = {
    alloc_maxsize = -1, alloc_ptrs = 0x0, owner = 0x625050},
  event_hooks = 0x0, event_hooks_user = 0x0, lock = {__data = {__lock = 1,
      __count = 1, __owner = 4017, __nusers = 1, __kind = 1, __spins = 0,
      __list = {__prev = 0x0, __next = 0x0}},
    __size = "\001\000\000\000\001\000\000\000\261\017\000\000\001\000\000\000\001", '\000' <repeats 22 times>, __align = 4294967297}, occurred = {
    tqh_first = 0x0, tqh_last = 0x6250b8}, osevent_in_hook = 0,
  osevent_hooks = 0x0, osevent_user = 0x0, poller_app = {entry = {
      le_next = 0x0, le_prev = 0x0}, fd_polls = 0x0, fd_polls_allocd = 0,
    fd_rindices_allocd = 0, fd_rindices = 0x0, wakeup_pipe = {7, 9}},
  pollers_event = {lh_first = 0x0}, pollers_idle = {lh_first = 0x0},
  hook_fd_nexi_idle = {slh_first = 0x0}, hook_timeout_nexi_idle = {
    slh_first = 0x0}, efds = {lh_first = 0x0}, etimes = {tqh_first = 0x0,
    tqh_last = 0x625138}, watch_slots = 0x0, watch_nslots = 0,
  watch_freeslots = {slh_first = 0x0}, watch_counter = 0, watch_efd = {
    fd = -1, events = 0, func = 0, entry = {le_next = 0x0, le_prev = 0x0},
    nexus = 0x0}, death_list = {tqh_first = 0x0, tqh_last = 0x625190},
  death_reported = {tqh_first = 0x0, tqh_last = 0x0}, death_watch = {
    path = 0x0, callback = 0, slotnum = -1, counterval = 0},
  disk_eject_evgens = {lh_first = 0x0}, childproc_hooks = 0x622c60,
  childproc_user = 0x0, sigchld_selfpipe = {21, 22}, children = {
    lh_first = 0x0}, version_info = {xen_version_major = 0,
    xen_version_minor = 0, xen_version_extra = 0x0, compiler = 0x0,
    compile_by = 0x0, compile_domain = 0x0, compile_date = 0x0,
    capabilities = 0x0, changeset = 0x0, virt_start = 0, pagesize = 0,
    commandline = 0x0}}
2), 如果说是libxlCreateDomEvents注册了event, 那其实需要两个函数, 一个是event_occurs(libxlEventHandler). 似乎还需要libxl_evenable_domain_death, 不确定是否需要第二个函数.
可以现传入ao_how, 然后在libxlEventHandler加入该event->type.
先加入ao_how看看有什么结果.
(1), do i need add callback while adding ao_how?
aos_for_callback is used in
egc_run_callbacks: call the callback.
libxl__ao_complete_check_progess_reports: insert callback to list.
libxl__alloc_failed: 
LIBXL_INIT_EGC: init list.

问题是这个aos_for_callback init只有在LIBXL_INIT_EGC, EGC_INIT, AO_CREATE调用.
LIBXL_INIT_EGC: called by libxl__ao_inprogess while ao_how is null.
EGC_INIT: called by libxl_osevent_occurred_fd, libxl_osevent_occurred_timeout.
AO_CREATE: called by all the long-running functi

10, (10:55 2013-03-08)
1), test whether the hang in virsh save is caused by ao_how or not.
去掉ao_how就正常了, 两次测试都通过, 有ao_how时两次测试都hang.
用gdb打log还是不方便阿, 下次直接用调式信息, 并且打出时间. 

11, (13:41 2013-03-11)
1), 在xenlight和libvirt driver里面加入打印info.
一加打印信息发现原来有很多东西没有看到阿.
linux-vm5没装的包太多了, 只好换到linux-vm4上面.
2), enable debug in libxl_event.c for monitor the fd registered by run_helper.

12, (10:48 2013-03-12)
1), build
(1), install xen 25.1 from my repo
(2), build xen tools
./configure --enable-xenapi --prefix=/usr --exec_prefix=/usr --bindir=/usr/bin --sbindir=/usr/sbin --libdir=/usr/lib64 --datadir=/usr/share
make tools -j8
make install-tools
(3), build libvirt
2), debug why virsh save hang after add ao_how
libxl__srm_callout_received_save is called so many times.
the last function is libxl__srm_callout_callback_complete.
3), helper_exited should be called after save operation.
(1), the log with ao_how after libxl-save-helper complete: 
xc: detail: All memory is saved
xc: detail: Save exit rc=0
libxl-save-helper: debug: complete r=0: Success
libxl: debug: libxl_save_callout.c:391:libxl__srm_callout_callback_complete: libxl__srm_callout_callback_complete start
libxl: debug: libxl_event.c:229:libxl__ev_fd_deregister: ev_fd=0x7fd23000cf30 deregister fd=44
libxl: debug: libxl_save_callout.c:361:libxl__srm_callout_sendreply: libxl__srm_callout_sendreply start
libxl: debug: libxl_event.c:181:libxl__ev_fd_register: ev_fd=0x72c398 register fd=23 events=1
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x72c3e0 wpath=@releaseDomain token=3/0: register slotnum=3
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x72c3e0 wpath=@releaseDomain token=3/0: event epath=@releaseDomain
libxl: debug: libxl.c:1000:domain_death_xswatch_callback: [evg=0x7369f0:1] from domid=1 nentries=1 rc=1
libxl: debug: libxl.c:1011:domain_death_xswatch_callback: [evg=0x7369f0:1]   got=domaininfos[0] got->domain=1
libxl: debug: libxl.c:1038:domain_death_xswatch_callback:  exists shutdown_reported=0 dominf.flags=20006
libxl: debug: libxl.c:1050:domain_death_xswatch_callback:  shutdown reporting
libxl: debug: libxl.c:1004:domain_death_xswatch_callback: [evg=0] all reported
libxl: debug: libxl.c:1068:domain_death_xswatch_callback: domain death search done
libxl: debug: libxl_event.c:1154:egc_run_callbacks: event 0x7f3e3c005fc0 callback type=domain_shutdown
(2), if i disable ao_how, there is lots of libxl__ao_inprogress.
xc: detail: All memory is saved
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x6ee860: not ready, waiting
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x749ab0 occurs fd=50 events=3 revents=1
xc: detail: Save exit rc=0
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x6ee860: not ready, waiting
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x749ab0 occurs fd=50 events=3 revents=1
libxl-save-helper: debug: complete r=0: Success
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x6ee860: not ready, waiting
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x749ab0 occurs fd=50 events=3 revents=1
libxl: debug: libxl_save_callout.c:391:libxl__srm_callout_callback_complete: libxl__srm_callout_callback_complete start
libxl: debug: libxl_event.c:229:libxl__ev_fd_deregister: ev_fd=0x749ab0 deregister fd=50
libxl: debug: libxl_save_callout.c:361:libxl__srm_callout_sendreply: libxl__srm_callout_sendreply start
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x6ee860: not ready, waiting
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x6ee860: not ready, waiting
libxl: debug: libxl_event.c:225:libxl__ev_fd_deregister: ev_fd=0x749ab0 deregister unregistered
libxl: debug: libxl_dom.c:890:libxl__domain_suspend_device_model: Saving device model state to /var/lib/xen/qemu-save.2
libxl: debug: libxl_dom.c:1377:libxl__domain_save_device_model: qemu save file /var/lib/xen/qemu-save.2 is 6029 bytes
libxl: debug: libxl_event.c:181:libxl__ev_fd_register: ev_fd=0x749bd0 register fd=47 events=1
libxl: debug: libxl_event.c:181:libxl__ev_fd_register: ev_fd=0x749bf8 register fd=45 events=4
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x6ee860: not ready, waiting
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x749bf8 occurs fd=45 events=4 revents=4
libxl: debug: libxl_event.c:229:libxl__ev_fd_deregister: ev_fd=0x749bf8 deregister fd=45
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x749bd0 occurs fd=47 events=1 revents=1
libxl: debug: libxl_event.c:229:libxl__ev_fd_deregister: ev_fd=0x749bd0 deregister fd=47
libxl: debug: libxl_event.c:181:libxl__ev_fd_register: ev_fd=0x749bf8 register fd=45 events=4
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x6ee860: not ready, waiting
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x749bf8 occurs fd=45 events=4 revents=4
libxl: debug: libxl_event.c:225:libxl__ev_fd_deregister: ev_fd=0x749bd0 deregister unregistered
libxl: debug: libxl_event.c:229:libxl__ev_fd_deregister: ev_fd=0x749bf8 deregister fd=45
libxl: debug: libxl_event.c:225:libxl__ev_fd_deregister: ev_fd=0x749bd0 deregister unregistered
libxl: debug: libxl_event.c:225:libxl__ev_fd_deregister: ev_fd=0x749bf8 deregister unregistered
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x6ee860: complete, rc=0
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x6ee860: destroy
libxl: debug: libxl.c:1252:libxl_domain_destroy: ao 0x750b20: create: how=(nil) callback=(nil) poller=0x7f4ad4000c20
libxl: debug: libxl_dm.c:1238:libxl__destroy_device_model: Device Model signaled
libxl: debug: libxl_event.c:345:libxl__ev_time_register_rel: ev_time=0x72cde0 register ms=10000
libxl: debug: libxl_event.c:0:libxl__ev_time_register_rel: ev_time=0x72cde0 done rc=0 .func=0x7f4ade98e3d4 infinite=0 abs=1363078492.731538
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x72cdc8 wpath=/local/domain/0/backend/vbd/2/768/state token=1/7: register slotnum=1
libxl: debug: libxl_event.c:345:libxl__ev_time_register_rel: ev_time=0x750cd8 register ms=2000
libxl: debug: libxl_event.c:0:libxl__ev_time_register_rel: ev_time=0x750cd8 done rc=0 .func=0x7f4ade98209a infinite=0 abs=1363078484.733572
libxl: debug: libxl_event.c:345:libxl__ev_time_register_rel: ev_time=0x74feb0 register ms=10000
libxl: debug: libxl_event.c:0:libxl__ev_time_register_rel: ev_time=0x74feb0 done rc=0 .func=0x7f4ade98e3d4 infinite=0 abs=1363078492.741054
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x74fe98 wpath=/local/domain/0/backend/vif/2/0/state token=2/8: register slotnum=2
libxl: debug: libxl.c:1261:libxl_domain_destroy: ao 0x750b20: inprogress: poller=0x7f4ad4000c20, flags=i
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x750b20: not ready, waiting
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x6f3d28 occurs fd=23 events=1 revents=1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x72cdc8 wpath=/local/domain/0/backend/vbd/2/768/state token=1/7: event epath=/local/domain/0/backend/vbd/2/768/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/2/768/state wanted state 6 ok
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x72cde0 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x72cde0 done rc=0 .func=(nil) infinite=0 abs=1363078492.731538
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x72cdc8 wpath=/local/domain/0/backend/vbd/2/768/state token=1/7: deregister slotnum=1
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x72cde0 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x72cde0 done rc=0 .func=(nil) infinite=0 abs=1363078492.731538
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x72cdc8: deregister unregistered
libxl: debug: libxl_event.c:345:libxl__ev_time_register_rel: ev_time=0x72ce18 register ms=10000
libxl: debug: libxl_event.c:0:libxl__ev_time_register_rel: ev_time=0x72ce18 done rc=0 .func=0x7f4ade980cbc infinite=0 abs=1363078492.753764
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/block remove
libxl: debug: libxl_event.c:472:watchfd_callback: watch epath=/local/domain/0/backend/vbd/2/768/state token=1/7: empty slot
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x74fe98 wpath=/local/domain/0/backend/vif/2/0/state token=2/8: event epath=/local/domain/0/backend/vif/2/0/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vif/2/0/state wanted state 6 still waiting state 5
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x750b20: not ready, waiting
libxl: debug: libxl_event.c:993:afterpoll_internal: ev_fd=0x6f3d28 occurs fd=23 events=1 revents=1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x74fe98 wpath=/local/domain/0/backend/vif/2/0/state token=2/8: event epath=/local/domain/0/backend/vif/2/0/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vif/2/0/state wanted state 6 ok
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x74feb0 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x74feb0 done rc=0 .func=(nil) infinite=0 abs=1363078492.741054
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x74fe98 wpath=/local/domain/0/backend/vif/2/0/state token=2/8: deregister slotnum=2
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x74feb0 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x74feb0 done rc=0 .func=(nil) infinite=0 abs=1363078492.741054
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x74fe98: deregister unregistered
libxl: debug: libxl_event.c:345:libxl__ev_time_register_rel: ev_time=0x74fee8 register ms=10000
libxl: debug: libxl_event.c:0:libxl__ev_time_register_rel: ev_time=0x74fee8 done rc=0 .func=0x7f4ade980cbc infinite=0 abs=1363078492.765527
libxl: debug: libxl_device.c:920:device_hotplug: calling hotplug script: /etc/xen/scripts/vif-bridge offline
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x750b20: not ready, waiting
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x750b20: not ready, waiting
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x72ce18 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x72ce18 done rc=0 .func=(nil) infinite=0 abs=1363078492.753764
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x72ce18 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x72ce18 done rc=0 .func=(nil) infinite=0 abs=1363078492.753764
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x750b20: not ready, waiting
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x750b20: not ready, waiting
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x74fee8 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x74fee8 done rc=0 .func=(nil) infinite=0 abs=1363078492.765527
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x74fee8 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x74fee8 done rc=0 .func=(nil) infinite=0 abs=1363078492.765527
libxl: debug: libxl_event.c:1683:libxl__ao_inprogress: ao 0x750b20: not ready, waiting
libxl: debug: libxl_event.c:1025:afterpoll_internal: ev_time=0x750cd8 occurs abs=1363078484.733572
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x750cd8 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x750cd8 done rc=0 .func=(nil) infinite=0 abs=1363078484.733572
libxl: debug: libxl_event.c:370:libxl__ev_time_deregister: ev_time=0x750cd8 deregister
libxl: debug: libxl_event.c:0:libxl__ev_time_deregister: ev_time=0x750cd8 done rc=0 .func=(nil) infinite=0 abs=1363078484.733572
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x750b20: complete, rc=0
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x750b20: destroy
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x6f3d70 wpath=@releaseDomain token=3/6: deregister slotnum=3
libxl: debug: libxl_event.c:472:watchfd_callback: watch epath=@releaseDomain token=3/6: empty slot
(3), the difference between with and without ao_how: libxl__domain_suspend_device_model is not called while ao_how not null.

libxl__domain_suspend_common_callback -> libxl__domain_suspend_device_model
libxl__xc_domain_save_done -> libxl__domain_suspend_device_model

#0  libxl__domain_suspend_common_callback (user=0x6d95c8) at libxl_dom.c:930
#1  0x00007fa19d43170a in libxl__srm_callout_received_save (
    msg=0x7fa1a260d4f2 "", len=<optimized out>, user=0x6d95c8)
    at _libxl_save_msgs_callout.c:131
#2  0x00007fa19d430ec8 in helper_stdout_readable (egc=0x7fa1a260d6a0,
    ev=<optimized out>, fd=50, events=<optimized out>, revents=<optimized out>)
    at libxl_save_callout.c:284
#3  0x00007fa19d4344cd in afterpoll_internal (egc=0x7fa1a260d6a0,
    poller=0x6d4e20, nfds=4, fds=0x6da2a0, now=...) at libxl_event.c:995
#4  0x00007fa19d435115 in eventloop_iteration (egc=0x7fa1a260d6a0,
    poller=0x6d4e20) at libxl_event.c:1440
#5  0x00007fa19d43569e in libxl__ao_inprogress (ao=0x6dbfd0,
    file=<optimized out>, line=<optimized out>, func=<optimized out>)
    at libxl_event.c:1685
#6  0x00007fa19d417186 in libxl_domain_suspend (ctx=<optimized out>, domid=6,
    fd=45, flags=0, ao_how=<optimized out>) at libxl.c:786

12:54 2013-02-28
(16:57 2013-03-07)
hackweek
1, study HA.
2, nested virtual machine: xen on kvm.
3, xen arm on samsung exynos 5250.
4, implement PVH in libvirt.
it maybe very simple.

12:55 2013-02-28
GTD
0, 12:20

1, today
1), 12:50-13:50 14:35-18:31 libvirt libxl lock patch. see"14:14 2013-02-27"6.
2), check the virtual team. about virtualization and arm. 没有arm的virtual team。 虚拟化只有讨论sle12里面xen和kvm比较, 取舍的team.

12:57 2013-02-28
suse, opensuse, 12.3 RC2 release, flow
"Alberto Planas Dominguez <aplanas@suse.de>"_email_"[devel] Testing openSUSE 12.3 RC2"_20130227_1907
Hi,

Tomorrow will be an important day for this team. Our release manager (coolo) 
asked autobuild team to sign build0094. That means that openSUSE RC2 is here!

The full team is testing the distribution, including KDE, GNOME, UEFI and 
Secure Boot features. But in order to have the best openSUSE 12.X release we 
need your help.

If you have time, please, help us in the testing process, with every crazy 
configuration that you can provide. The ISO images are now in:

/mounts/dist/install/openSUSE-UNTESTED

Do not test the NET images, because the repository is yet RC1, and not RC2. 
That means that if you install the NET ISO (or make a network installation 
using Ludwig's amazing script) you are testing the RC1 one.

Break the distro, and publish the bugs here:

https://bugzilla.novell.com/index.cgi

There is a openSUSE 12.3 product in Bugzilla.

Thanks,
Alberto Planas.

17:50 2013-02-28
software skill, debug library
LD_DEBUG=libs ~/firefox/firefox

