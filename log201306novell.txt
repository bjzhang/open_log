.LOG
13:13 2013-06-03
GTD
0, 11:10

1, today
1), 30' xen arm: reply to upstream. see"17:39 2013-05-31"3
2), work report.

16:16 2013-06-03
virtualization, xen, arm
1, 两个可能性
1), 其它cpu启动不正常.
2), 页表映射错误.

2, the other cpu will boot after make_cpus_ready set the gate to 1.

11:01 2013-06-04
company, colleague, L3 team, Aleš Novák
Petr Uzel <petr.uzel@suse.cz>
Dear colleagues,

It is my pleasure to welcome new employee, Aleš Novák. Aleš has
started today and thanks to his strong troubleshooting skills and
deep knowledge of the Linux platform he is a welcome reinforcement in
the L3 team. Aleš will focus on L3 bugfixing and coordination.

Please join me in welcoming Aleš and supporting him in his work.

Thanks,

	Petr

-- 
Petr Uzel
Team Lead SUSE L3 Team, Prague

11:02 2013-06-04
GTD
0, 11:00

1, today
1), 11:01- mail

11:05 2013-06-04
company, colleague, sle, Karol Mroz
Milisav Radmanic <radmanic@suse.com>
Hello,

I am very pleased to announce a new hire:
Karol Mroz has just started today and he is a strong addition to
the SUSE Linux Enterprise Applications team.

Karol has worked for CISCO in San Jose and started an own
software/service company. He brings a lot of expertise in writing
software for enterprise workloads, plus a great enthusiasm for SUSE
Linux. He will work from his home office in Vancouver (Canada).

please join me and welcome Karol

thank you
mili

-- 
Milisav Radmanic
Sr. Engineering Manager SUSE Linux Enterprise Applications
SUSE LINUX Products GmbH,
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)
Maxfeldstraße 5
90409 Nürnberg
Germany

11:16 2013-06-04
Olaf Kirch <okir@suse.com>
[devel] Announcing some role changes in the SLE Department
Dear SUSE,

I'm happy to announce several changes in the SLE Department, which will
become effective on July 1st - after we have shipped SLE11 SP3.

Thorsten Kukuk will take on the role of a Senior Architect for SLES
and our Common Code Base. In this role, he will be responsible for the
longer-term planning of SLES. In particular, Thorsten will coordinate
the overall development of SLE12.

Stefan Behlert will take over the role of Project Manager for SLES, taking
care of the day-to-day business of SLES, including the release management.

Frederic Crozat will assume the role of Project Manager for SLED, taking
care of anything related to the SLE Desktop.

Please join me for a moment in applauding the three of them for the
fantastic work they have done in their previous positions, and wish them
the best in their new roles.


Let me take advantage of this announcement to explain the new separation
of responsibilities around SLES a little, as it may be difficult to get
a clear picture from the terse description above. I know a few of you
will be scratching their heads, so let me try to illustrate this will
some examples.

 -	Anything related to specific features of the next SLES service
	pack, process questions, etc should go to Stefan as the Project
	Manager.

 -	Release planning, all the organization around Interlock, etc,
	will be done by Stefan.

 -	If you don't fix your SLES bugs in time, it will be Stefan who's
	knocking on your door. If you don't fix your SLED bugs, Frederic will
	use his good connections with the Foreign Legion...

 -	Conversations around the SLES and SLED Roadmaps should best include
	all three of them (Frederic, Stefan and Thorsten)

 -	Conceptual questions (What should the SDK look like in the future?
	What should our installer look like? What directory technologies
	should SLES support in the future? What do we do about
	benchmarking SLES?  Could we support SLES for 100 years?) should
	go to Thorsten as the Architect.
	Think of Thorsten as the R&D counterpart of the SLES Product Manager.

 -	For questions around longer-term planning (which Java version
	should we support in the future? How do we handle fast-evolving
	packages like PHP or Ruby on Rails?), Thorsten should be your
	primary contact.  The same goes for SLES features that span
	several service packs, or which involve significant effort
	(such as Swap over NFS).


Thanks for reading, and please support Frederic, Stefan and Thorsten in
their new assignments, so that we can all push SUSE Linux Enterprise to
new levels in the coming years!

Regards,
Olaf
-- 
Neo didn't bring down the Matrix. SOA did. (soafacts.com)
--------------------------------------------
Olaf Kirch - Director SUSE Linux Enterprise; R&D (okir@suse.com)
SUSE LINUX Products GmbH, Maxfeldstr. 5, 90409 Nürnberg, Germany
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg) 

21:33 2013-06-04
virtualization, xen, arm, discuss with Andre Przywara
1, Andre Przywara <andre.przywara@calxeda.com> 20130603_1718, reply
> On 06/03/2013 09:29 AM, Bamvor Jian Zhang wrote:
>> "Andre Przywara <andre.przywara@calxeda.com>"> On 05/31/2013 02:53 PM, Bamvor Jian Zhang wrote:
>>> On 05/31/2013 02:53 PM, Bamvor Jian Zhang wrote:
>>>> These series patch enable Allwinner A31(code name sun6i) support in
>>>> assemble. with these patches, the cpu 0 of sun6i SOC could successful
>>>> boot into the c environment.
>>>
>>> Hi Bamvor,
>
> Hi Bamvor,
>
> thanks for the answer and the u-boot link.
>
>>> * Have you tried KVM on this?
>> No. which kernel version does KVM needed? currently, only 3.3 source is
>> available for A31.
>
> Are you sure? I see Allwinner A1X support being merged with 3.7-rc6.
yes, the sun4i(allwinner A10) is supported by upstream. but for sun6i and sun7i,
currently, only support android kernel v3.3 AFAIK.
> KVM needs v3.9, so you could just give the latest version a try.
> The patches in the repo you linked to seem to be for Android only, right?
> But in fact KVM currently only supports A15 cores, so A7 wouldn't work 
> out-of-the-box. The actual enablement of A7 doesn't seem to be 
> complicated, actually I would mostly suffice to just add the MIDR value 
> to the list of support CPUs (in arch/arm/kvm/guest.c:kvm_target_cpu())
i have check the code in https://github.com/virtualopensystems/linux-kvm-arm,
it seems that i only need to add Cortex-A7 in kvm_target_cpu()(arm.c) and add coproc_a7.c besides the sun6i own code. kvm will work, right?
i'd like to try it, after i get v3.9 kernel running.
>
>>> On the big.LITTLE TC-2 from ARM we got
>>> issues when trying to initialize KVM on the A7s, but couldn't get the
>>> real root cause yet. It hangs as soon as we write the HSCLTR.
>>> Have you found anything interesting differences between A15 and A7?
>> there are different implementation of cp15 for A15 and A7. but it is the
>> same definition for HSCLTR for writable bits. only diffferece is bit[21]
>> the value in CA15 is 1 while in CA7 is 0 although both document say that
>> FI(Fast Interrupt Configuration Enable Bit) is not implemented.
>
> Yeah, I saw this already, too. But as you mention that seems to be 
> bogus, as the specification isn't consistent in this regards.
> Also I tried both 0 and 1 here, it didn't make a difference.
>
>> BTW, i am hang in xen in setup_pagetables, it seems that it is crash after
>> flush the new page table. I was think that it it because the wrong memory
>> mapping. no sure whether it is same issue or not.
>
> The KVM crash happens as soon as we enable HSCLTR[0], which is the MMU.
> On A15 the same code works well.
> Currently I don't have time to debug this - and A7 isn't my particular 
> target anyway. But would be interesting to see what's wrong here.
>
> Thanks,
> Andre.
>
>> [1] http://git.rhombus-tech.net/?p=u-boot.git;a=tree;h=refs/heads/allwinner-sunxi-a31;hb=refs/heads/allwinner-sunxi-a31
>>
>> Thanks,
>> Bamvor
>>> Thanks,
>>> Andre.

2, 20130605_1708
> On 06/05/2013 04:39 AM, Bamvor Jian Zhang wrote:
>> Hi, Andre
>>
>>>>> "Andre Przywara <andre.przywara@calxeda.com>"> On 06/03/2013 09:29 AM, Bamvor Jian Zhang wrote:
>>> On 06/03/2013 09:29 AM, Bamvor Jian Zhang wrote:
>>>> "Andre Przywara <andre.przywara@calxeda.com>"> On 05/31/2013 02:53 PM, Bamvor Jian Zhang wrote:
>>>>> On 05/31/2013 02:53 PM, Bamvor Jian Zhang wrote:
>>>>>> These series patch enable Allwinner A31(code name sun6i) support in
>>>>>> assemble. with these patches, the cpu 0 of sun6i SOC could successful
>>>>>> boot into the c environment.
>>>>>
>>>>> Hi Bamvor,
>>>
>>> Hi Bamvor,
>>>
>>> thanks for the answer and the u-boot link.
>>>
>>>>> * Have you tried KVM on this?
>>>> No. which kernel version does KVM needed? currently, only 3.3 source is
>>>> available for A31.
>>>
>>> Are you sure? I see Allwinner A1X support being merged with 3.7-rc6.
>> yes, the sun4i(allwinner A10) is supported by upstream. but for sun6i and sun7i,
>> currently, only support android kernel v3.3 AFAIK.
>
> Ah, so it's only true for X=0 ;-)
>
>>> KVM needs v3.9, so you could just give the latest version a try.
>>> The patches in the repo you linked to seem to be for Android only, right?
>>> But in fact KVM currently only supports A15 cores, so A7 wouldn't work
>>> out-of-the-box. The actual enablement of A7 doesn't seem to be
>>> complicated, actually I would mostly suffice to just add the MIDR value
>>> to the list of support CPUs (in arch/arm/kvm/guest.c:kvm_target_cpu())
>> i have check the code in https://github.com/virtualopensystems/linux-kvm-arm,
>> it seems that i only need to add Cortex-A7 in kvm_target_cpu()(arm.c) and add coproc_a7.c besides the sun6i own code. kvm will work, right?
>
> Right, that's basically it. Though I fear there are some minor details 
> to fix.
> Please note that the mentioned repository is out-of-date, basically all 
> of it is now upstream. And some code locations have changed recently, so 
> kvm_target_cpu() has now moved into guest.c, for instance.
>
> Regards,
> Andre.
>
>> i'd like to try it, after i get v3.9 kernel running.
>>>
>>>>> On the big.LITTLE TC-2 from ARM we got
>>>>> issues when trying to initialize KVM on the A7s, but couldn't get the
>>>>> real root cause yet. It hangs as soon as we write the HSCLTR.
>>>>> Have you found anything interesting differences between A15 and A7?
>>>> there are different implementation of cp15 for A15 and A7. but it is the
>>>> same definition for HSCLTR for writable bits. only diffferece is bit[21]
>>>> the value in CA15 is 1 while in CA7 is 0 although both document say that
>>>> FI(Fast Interrupt Configuration Enable Bit) is not implemented.
>>>
>>> Yeah, I saw this already, too. But as you mention that seems to be
>>> bogus, as the specification isn't consistent in this regards.
>>> Also I tried both 0 and 1 here, it didn't make a difference.
>>>
>>>> BTW, i am hang in xen in setup_pagetables, it seems that it is crash after
>>>> flush the new page table. I was think that it it because the wrong memory
>>>> mapping. no sure whether it is same issue or not.
>>>
>>> The KVM crash happens as soon as we enable HSCLTR[0], which is the MMU.
>>> On A15 the same code works well.
>>> Currently I don't have time to debug this - and A7 isn't my particular
>>> target anyway. But would be interesting to see what's wrong here.
>>>
>>> Thanks,
>>> Andre.
>>>
>>>> [1] http://git.rhombus-tech.net/?p=u-boot.git;a=tree;h=refs/heads/allwinner-sunxi-a31;hb=refs/heads/allwinner-sunxi-a31
>>>>
>>>> Thanks,
>>>> Bamvor
>>>>> Thanks,
>>>>> Andre.
>>>>>
>>>>>> Bamvor Jian Zhang (4):
>>>>>>      xen/arm: introduce Cortex-A7 support
>>>>>>      xen/arm: introduce Allwinner sun6i SOC basic support
>>>>>>      xen/arm: enable early printk for sun6i
>>>>>>      xen/arm: enable switch to hyper mode for sun6i
>>>>>>
>>>>>>     xen/arch/arm/Rules.mk                 |  5 ++++
>>>>>>     xen/arch/arm/arm32/Makefile           |  1 +
>>>>>>     xen/arch/arm/arm32/debug-sun6i.inc    | 50 +++++++++++++++++++++++++++++++++++
>>>>>>     xen/arch/arm/arm32/head.S             | 11 ++++++++
>>>>>>     xen/arch/arm/arm32/mode_switch.S      | 13 +++++++--
>>>>>>     xen/arch/arm/arm32/proc-ca7.S         | 36 +++++++++++++++++++++++++
>>>>>>     xen/include/asm-arm/platforms/sun6i.h | 28 ++++++++++++++++++++
>>>>>>     xen/include/asm-arm/processor-ca7.h   | 25 ++++++++++++++++++
>>>>>>     8 files changed, 167 insertions(+), 2 deletions(-)
>>>>>>     create mode 100644 xen/arch/arm/arm32/debug-sun6i.inc
>>>>>>     create mode 100644 xen/arch/arm/arm32/proc-ca7.S
>>>>>>     create mode 100644 xen/include/asm-arm/platforms/sun6i.h
>>>>>>     create mode 100644 xen/include/asm-arm/processor-ca7.h
>>>>
>>>>
>>>
>>


10:40 2013-06-05
GTD
0, 9:30

1, today
1), continue to discuss with Andre. see"21:33 2013-06-04"
2), report the bug on vmware player.
3), debug the time segfault.
4), start port linux v3.9 to allwinner A31?

14:44 2013-06-05
arm, Cortex-A7, cache
L2 Control Register(L2CTLR).
1, get number of processor
2, whether the interrupt controller is present or not.

15:13 2013-06-05
arm, try fastmodel
1, . /home/bamvor/sda5_rd/home/bamvor/work_bak/arm/fast_model/FastModels_8-1-038_Linux_install/FastModelsTools_8.1/source_all.sh
2, fail on gcc 64bit. 
lots of undefined, because of the static library only support gcc4.1 and gcc 4.4
3, try ubuntu 12.04 for it.
how to install:
http://xlcwu.wordpress.com/2012/07/24/ubuntu-12-04-gcc-4-4/

17:04 2013-06-05
virtualization, libvirt, xen, libxl, vm destroy crash
1, Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7fae414b1700 (LWP 15483)]    
0x00007fae48a13149 in virObjectIsClass (anyobj=0x33312f6e69616d6f, klass=0x7fae4981a9a0) at util/virobject.c:364                                                
364         return virClassIsDerivedFrom(obj->klass, klass);                    
(gdb) where                                                                     
#0  0x00007fae48a13149 in virObjectIsClass (anyobj=0x33312f6e69616d6f,
    klass=0x7fae4981a9a0) at util/virobject.c:364
#1  0x00007fae48a132a4 in virObjectLock (anyobj=0x33312f6e69616d6f)
    at util/virobject.c:316
#2  0x00007fae3b0e83da in libxlTimeoutModifyEventHook (priv=<optimized out>,
    hndp=0x7fae4981a9a0, abs_t=...) at libxl/libxl_driver.c:340
#3  0x00007fae3aeb5f65 in time_deregister (gc=0x7fae414b03e0,
    ev=0x7fae34056848) at libxl_event.c:294
#4  0x00007fae3aeb701a in afterpoll_internal (egc=0x7fae414b03e0,
    poller=<optimized out>, nfds=7, fds=0x7fae498251b0, now=...)
    at libxl_event.c:1021
#5  0x00007fae3aeb7b77 in eventloop_iteration (egc=0x7fae414b03e0,
    poller=0x7fae49884220) at libxl_event.c:1440
2, (17:00 2013-06-06)
debug the libvirt crash.
1), it might be priv is not valid in TimeoutModify.
but why? the timeout handle is register after its valid assigned.

19:24 2013-06-05
company, colleague, SUSE Manager, Flavio Castelli
"Duncan Mac-Vicar P." <dmacvicar@suse.de> 20130605_1604
Hi!

It is my pleasure to announce Flavio Castelli[*] as a new member of the
SUSE Manager team,

Flavio works remotely from his hometown near Bergamo, Italy.

You know him very well from his work in the SUSE Studio team, where
since 2008 he has contributed to various fronts, from internal QA to the
development of complex servers and services that power Studio.

There will be a couple of weeks transitional period for his tasks in the
Studio team.

Please join me welcoming Flavio and support him in his new role.

[*] https://github.com/flavio

Thanks and Regards!

-- 
Duncan Mac-Vicar P. - http://www.suse.com/

SUSE LINUX Products GmbH, GF: Jeff Hawn, Jennifer Guild, Felix
Imendörffer, HRB 16746 (AG Nürnberg)
Maxfeldstraße 5, 90409 Nürnberg, Germany

14:40 2013-06-06
virtualization, xen, vmware player, crash, xen crash on vmware player
1, mail to Jim
Hi, Jim

i got a xen crash on vmware player.
after some testing, i found that it will crash after apply the Jan'patch(commit: fb034f42 "xmalloc: make close-to-PAGE_SIZE allocations more efficient"). from the crash log, i could not see the relationship between the patch and the crash. meanwhile xen start up successful on the physical machine and another physical machine, so, it also may be the bug in vmware player.
should i send it to xen community?
thanks.

here is the crash log:

(XEN) ACPI: LAPIC_NMI (acpi_id[0x24] high edge lint[0x1])
...    
(XEN) ACPI: LAPIC_NMI (acpi_id[0x3f] high edge lint[0x1])
(XEN) ACPI: IOAPIC (id[0x01] address[0xfec00000] gsi_base[0])
(XEN) ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 high edge)
(XEN) ACPI: IRQ0 used by override.
(XEN) ACPI: IRQ2 used by override.
(XEN) Enabling APIC mode: Flat. Using 1 I/O APICs
(XEN) ACPI: HPET id: 0x8086af01 base: 0xfed00000
(XEN) Table is not found!
(XEN) Using APCI (MADT) for SMP configuration information
(XEN) SMP: Allowing 64 CPUs (62 hotplug CPUs)
(XEN) IRQ limits: 24 GSI, 376 MSI/MSI-X
(XEN) Not enabling x2APIC: depends on iommu_supports_eim.
(XEN) Using scheduler: SMP Credit Scheduler (credit)
(XEN) Detected 3392.196 MHz processor.
(XEN) Initing memory sharing.
(XEN) xstate_init: using cntxt_size: 0x340 and states: 0x7
(XEN) ----[ Xen-4.3-0  x86_64  debug=n  Not tainted ]----
(XEN) CPU:    0
(XEN) RIP:    e008:[<ffff82c4c01a9d5d>] mcheck_init+0x21d/0x370
(XEN) RFLAGS: 000000000010087   CONTEXT: hypervisor
(XEN) rax: ffff8300bfff03d0   rbx: ffff8300bfff03f0   rcx: 0000000000000000
(XEN) rdx: 0000000000000000   rsi: bad0bad0bad0bad0   rdi: bad0bad0bad0bad0
(XEN) rbp: ffff82c4c0256380   rsp: ffff82c4c02b7d98   r8:  ffff8300bfaf5be0
(XEN) r9:  0000000000000310   r10: 0000000000000040   r11: 0100000000000000
(XEN) r12: 0000000000000001   r13: 0000000000000001   r11: 0000000000000002
(XEN) r15: ffff82c4c02564e0   cr0: 000000000005003b   cr4: 00000000000400f0
(XEN) cr3: 00000000bfc65000   cr2: 0000000000000000
(XEN) ds: 0000   es: 0000   fs: 0000   gs: 0000   ss: 0000   cs: e008
(XEN) xen stack strace from rsp=ffff82c4c02b7d98:
...
(XEN) Xen call trace:
(XEN) [<ffff82c4c01a9d5d>] mcheck_init+0x21d/0x370
(XEN) [<ffff82c4c01a5baf>] identify_cpu+0x2bf/0x2d0
(XEN) [<ffff82c4c0290447>] __start_xen+0x3407/0x3e70
(XEN) [<ffff82c4c026f2a8>] e820nr+0/0x4
(XEN) [<ffff82c4c01000b5>] __high_start+0xa1/0xa3
(XEN)
(XEN)
(XEN) **************************************
(XEN) Panic on CPU 0:
(XEN) GENERAL PROTECTION FAULT
(XEN) [error_code=0000]
(XEN) **************************************
(XEN)
(XEN) Reboot in five seconds...

2, (11:22 2013-06-09)
mail to xen upstream
title: xen crash on vmware player
Hi, 

i got crash when xen hypervisor running on vmware player.
after some testing, i found that it will crash after apply the 'patch(commit: fb034f42 "xmalloc: make close-to-PAGE_SIZE allocations more efficient"). from the crash log, i could not see the relationship between the patch and the crash. meanwhile xen start up successful on the physical machine and another physical machine.

physical machine: opensuse 12.3, kernel: 3.7.10-1.1
vmware player: VMware Player 5.0.2 build-1031769

thanks.

08:08 2013-06-07
company, virtualization, suse, xen, regular meeting: US / China Virtualization Sync, meeting, prepare notes
1, locking.
ref redhat.
https://www.redhat.com/archives/libvir-list/2013-May/msg01247.html
2, assign a but to me: 815201

10:12 2013-06-07
mailing list, virtualization, libvirt, xen; virt-manager, virt-install, specify the driver name(type?)
> virt-install -d -n blktaptest01 -r 2048 --vcpus=2 --disk /var/lib/libvirt/images/blktaptest01.img,size=8 --vnc -p -l "http://ftp.funet.fi/pub/mirrors/centos.org/6.4/os/x86_64" >

Does it work if you specify the driver name in the diskopts? E.g.

--disk /var/lib/libvirt/images/blktaptest01.img,size=8,driver_name=tap2

Regards, Jim

14:14 2013-06-07
virtualization, arm virtualization status
1, kvm: armv8 virtualization status
http://lists.linaro.org/pipermail/linaro-dev/2013-May/016177.html
- ARMv8 guest boots on an ARMv8 host running on Foundation Model.
- ARM32 Guest (UP) working on v8 Foundation Model.
- ARM64 Guest (UP) works on APM Board (SMP). No issues seen so far for ARM64 Guest (UP) on SMP host.

2, Xen arm roadmap
1), Xen 4.3
ARMv7 (VExpress and Arndale) fully supported
ARMv8 64-bit port of the hypervisor
2), Xen 4.4
increase HCL
automated testing
ARMv8 64-bit virtual machines and tools
PCI passthrough, live migration
3), Linux 3.11/3.12
full ARMv8 64-bit Xen guest support

15:36 2013-06-07
virtualization, libvirt, kvm, bnc#815201
https://bugzilla.novell.com/show_bug.cgi?id=815201
1, install windows 7.

15:38 2013-06-07
GTD
0, 11:00-18:50

1, today
1), arm virtualization status, see"14:14 2013-06-07".
2), libvirt save hang. see"15:36 2013-06-07".
3), port sun6i to kernel v3.9. see"16:23 2013-06-07"

16:23 2013-06-07
linux, arm, allwinner, a31, port sun6i to kernel v3.9
1, check the sun4i DT patch after i finish the first round edit.
2, mail to linux-sunxi.
hi, 

i am working on port xen to sun6i.

3, allwinner sun6i is generic gic, so i should not define in irqchip. it will be handled by irq-gic.c
1), the first reg in gic is gic dist register, the second is gic cpu register.
there are lots of dt missing cpu-offset in interrupt-controller section. it will set 0 as default in gic_of_init()(irq-gic.c). set it as default in sun6i.

4, timer
the base address of sun4i and sun6i is both 0x01c20c00. is that mean the timer is same?
#define AW_IRQ_TIMER0       (AW_IRQ_GIC_START + 18)     /*  Timer0      */
#define AW_IRQ_GIC_START        32
i am puzzle about where is hex and dec in dt. 0x mean hex, and no 0x always mean dec?

5, how about the early printk?
arch/arm/include/debug

6, \TODO
1), after finish early printk. check all the modify in sunxi dt patch again.
2), maybe i need to update u-boot for support dt.
what is the different between arm and armhf while compile the xen? it maybe useful for make u-boot running.
compare the assemble.
3), i wish i could get the kernel running(at least early printk this week).

12:57 2013-06-08
software skill, network, ssh, using pipe and ssh
1, 
1), put key to dedicated location(append to the tail, so, scp is not work).
cat ~/.ssh/id_rsa.pub | ssh root@147.2.207.215 ' cat >> ~/.ssh/authorized_keys
2), read cdrom to iso
> ssh root@147.2.207.178 'dd if=/dev/sr0' | dd of=windows7.iso 
Password: 
8359936+0 records in
8359936+0 records out
4280287232 bytes (4.3 GB) copied, 403.71 s, 10.6 MB/s
8359936+0 records in
8359936+0 records out
4280287232 bytes (4.3 GB) copied, 406.919 s, 10.5 MB/s

14:52 2013-06-08
company, sle, sle11 sp3 GMC released
1, Thorsten Kukuk <kukuk@suse.de> 20130607_2125
Subject: [ANNOUNCE] SLE 11 SP3 GMC released

Hi,

we are proud to announce, that we have a GMC for:

- SLED 11 SP3
- SLES 11 SP3
- SLE 11 SP3 HA
- SLE 11 SP3 SDK
- SLES 11 SP3 for VMware

We would like to thank everybody, who tested the previous builds,
who helped to get so many bugs fixed and especially the build team
for the night shifts this week to get daily new builds for the fixed
ship stoppers!

You can get the iso images from:

  http://download.suse.de/install/SLED-11-SP3-GMC
  http://download.suse.de/install/SLES-11-SP3-GMC
  http://download.suse.de/install/SLE-11-SP3-HA-GMC
  http://download.suse.de/install/SLE-11-SP3-SDK-GMC (after sync is complete)
  http://download.suse.de/install/SLES-11-SP3-for-VMware-GMC

If you miss the "known issue" section: There are of course none
which are not documented in the release notes, else this wouldn't
be a GMC ;)

Happy testing!

        Your SUSE Linux Enterprise Team

-- 
Thorsten Kukuk, Project Manager/Release Manager SLES
SUSE LINUX Products GmbH, Maxfeldstr. 5, D-90409 Nuernberg
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)

2, Olaf Kirch <okir@suse.com> 20130607_2208
On Friday 07 June 2013 15:25:06 Thorsten Kukuk wrote:
> We would like to thank everybody, who tested the previous builds,
> who helped to get so many bugs fixed and especially the build team
> for the night shifts this week to get daily new builds for the fixed
> ship stoppers!

I want to second this - many many thanks to everyone for the effort
you have put into this release. As always, there's no release without
the one or the other bit of excitement, especially towards the end :-)
But overall, I think this release was smoothest ones I've been involved
with so far - so my compliments to everyone who helped to make it so!

Once the release managers have succesfully uploaded the images to
download.novell.com, the acceptance week will start (probably on Monday),
and if no new blocker bugs are found, we will be ready for first customer
shipment, and for real summer weather :-)

I wish all of you an enjoyable, relaxed weekend.

Regards,
Olaf
-- 
Neo didn't bring down the Matrix. SOA did. (soafacts.com)
--------------------------------------------
Olaf Kirch - Director SUSE Linux Enterprise; R&D (okir@suse.com)
SUSE LINUX Products GmbH, Maxfeldstr. 5, 90409 Nürnberg, Germany
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg) 

10:46 2013-06-09
GTD
0, 10:30

1, today
1), 10:47-11:13 13:30-15:00 libvirt save hang. see"10:47 2013-06-09".
2), send xen crash email to upstream. see"14:40 2013-06-06"2.
3), work report.

10:47 2013-06-09
virtualization, libvirt, kvm, bnc#815201, cont1
0, bug
reporter: Martin Jakl <martin.jakl@qbicon.cz>
1, discuss with Bo yang.
1), used lots of memory. the reporter malloc 3Gbyte memory for vm, and running heavy service(we guess). So, i need to use all the memory in vm(e.g. by malloc and memory set).
2), Martin has approve that it is ok in qemu, only fail when use libvirt.
3), Bo yang said that it might be some kind of memory leak or memory relative things when the guest memory is large.
2, yestoday test result. test 70 around PASS. vm 2G, no application running.
3, download minGW for compile the app.
4, if i write fix pattern to vm memory, virsh save is small: 222M.
if i write memory with totally different data, virsh save will hang at the first time while write data at 2.6G.

22:09 2013-06-09
mailing list, virtualization, xen, arm
> /home/cbz/src/xen/extras/mini-os/mini-os.o: (.ARM.exidx+0x50): undefined reference to `__aeabi_unwind_cpp_pr0' > make: *** [/home/cbz/src/xen/extras/mini-os/mini-os] Error 1 > > I googled that error message. Some has mentioned that add "-fno-exceptions > -fno-unwind tables" could sovle the problem. I tried, but got the same > errors. > > Any ideas?

You need to provide an implementation for __aeabi_uldivmod. For this purpose, you can re-use xen/arch/arm/arm32/lib/lib1func.S

--Grall Julien

16:02 2013-06-17
mailing list, virtualization, xen
"Lars Kurth <lars.kurth@xen.org>"_email_"[XenARM] private@lists.xenproject.org has been created"_20130606_1221
Hi everybody,

we created the private mailing list as outlined in 
http://xenproject.org/help/mailing-list/100-misc/139-mailing-list-conventions.html 


The policy states that: "This list is for maintainers of all Xen teams, 
and key developers that have been invited by maintainers. This list is 
intended to be used only when privacy implications or similar prevent 
usage of a public list. Example usage may be to let other community 
members know of absence (due to holidays, maternity/paternity leave, 
etc.) and to arrange cover. Another example may be to ask other team 
members for advice on how to respond to a difficult situation in the 
community. This list is invite only and is not archived."

I added the list to the public list index at 
http://xenproject.org/help/mailing-list.html ... I will sign up all 
maintainers, committers and project leads. You should get a confirmation 
mail once subscribed.

Other developers can subscribe, but subscribers will need to be approved 
(in other words you need a maintainer to vouch for you" before we can 
approve.

Regards
Lars

16:07 2013-06-17
mailing list, virtualization
""Richard Schaertel" <Richard.Schaertel@suse.com>"_email_"Re: [virtualization-xen] Antw: Re: How to kdump when issue occures within XEN, soonr"_20130610_1641
Hi all,
just to give you an update on that case here.
They have upgraded the openSUSE kernel and experience much less issues, one coredump within the last couple of months.
They stop the crash analysis and come back if anything changes.
We also named the support issue and hopefully they will go further with supported SLES.

Thanks all for your effort.
/Richard

>>> Sascha Wehnert <swehnert@suse.com> 2013-05-21 14:50 >>>
On 05/21/2013 02:37 PM, Jan Beulich wrote:
>>>> On 21.05.13 at 14:27, "Richard Schaertel" <Richard.Schaertel@suse.com> wrote:
>> it is in bugzilla, no. 768714.
>
> That, according to the majority of the comments, has been proven to
> be a problem not only with Xen, but also with the native kernel. Hence
> it's been awaiting the kernel team to look into it.
>
>> Comment 18 pointed even to SLES which the
>> prospect here would like to change to but is unsure due to the bug and the
>> issues they experience on openSUSE. So they were able now to take a dump when
>> the issue occures. To analize that can help us getting that fixed.
>
> But in order for them to have their dumps analyzed by our support
> folks, it is my understanding that they first need to have a support
> contract, which I don't think they can possible have for openSUSE.

Well. It happened a couple of years ago that sales sold support 
agreements which included SUSE Linux, IIRC that was around 10.x and one 
customer even sent us a copy of his contract as proof.

However, these these days if you want to get support for SLES you need a 
support contract. If you file bugs against openSUSE, the openSUSE 
assigned people takes care of them. If the issue happens on openSUSE, we 
will not look into it. openSUSE is no maintained / supported 
product...except the customer has a support agreement covering openSUSE ;)

> Jan

Cheers,
Sascha
-- 
Sascha Andree Wehnert, Technical Support Engineer
Phone: +31 10 2864230 ||| Mobile: +49 173 5876741
Email: swehnert@suse.com 

Novell GmbH, Nördlicher Zubringer 9-11, 40470 Düsseldorf
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer
HRB 202401 (AG München)
_______________________________________________
Virtualization-XEN mailing list
Virtualization-XEN@lists.novell.com 
https://lists.innerweb.novell.com/mailman/listinfo/virtualization-xen 
Search Archives: https://lists.innerweb.novell.com/search

16:17 2013-06-17
company, attachmate, VPP
"LuAnn Johnson <LuAnn.Johnson@Attachmate.com>"_email_"LuAnn Johnson <LuAnn.Johnson@Attachmate.com>"_20130612_0419
As a follow up to Jeff Hawn's note on May 31st, attached to this email is a copy of the FY14 Attachmate Group Variable Pay Program (VPP) document.  This document will also be posted on the TAG intranet site but is provided via email for your convenience.

There are many enhancements to this year's plan.  They include lowering the operating profit required to reach 100% from $390M to $360M, higher payouts made prior to results reaching 100% and significantly higher accelerators for results over 100%, including an increase from 200 to 300% payout for results over 120%.  These enhancements are designed to underline the importance of the VPP to our total compensation philosophy and the over 2500 employees who participate in the plan each year.

We are reviewing these enhancements with our workers' council partners in France, Germany and the Netherlands later this month.  Following these discussions, the document will be posted on the TAG intranet site.

Please let me know if you have questions about the new program.  We're looking forward to a successful FY14!


LuAnn Johnson
Vice President, Global Human Resources

16:28 2013-06-17
GTD
0, 10:30

1, today
1), 15:50-16:25 mailing list.
2), libvirt save hang. see"16:42 2013-06-17".
3), check the upstream reply about sun6i patch. "20:31 2013-06-17"
4), Summary: 今天从15:30才开始工作, 所以晚上也不算加班.

16:42 2013-06-17
virtualization, libvirt, kvm, bnc#815201, cont2
1, check the QEMU_MONITOR_XXX according to bo yang's analysis.
1), there is no QEMU_MONITOR_IO_PROCESS and QEMU_MONITOR_RECV_REPLY, if save hang. and if the memory used in vm is smaller(say 1Giga bytes) the save is successful. but if vm use more(say 2Giga bytes) memory save will hang.
2013-06-17 10:14:05.244+0000: 11356: debug : qemuMonitorSend:886 : QEMU_MONITOR_SEND_MSG: mon=0x7f61941082e0 msg={"execute":"query-migrate","id":"libvirt-255"}
2013-06-17 10:14:05.244+0000: 11351: debug : qemuMonitorIOWrite:450 : QEMU_MONITOR_IO_WRITE: mon=0x7f61941082e0 buf={"execute":"query-migrate","id":"libvirt-255"}
2013-06-17 10:14:05.245+0000: 11351: debug : qemuMonitorIOProcess:342 : QEMU_MONITOR_IO_PROCESS: mon=0x7f61941082e0 buf={"return": {"expected-downtime": 0, "status": "active", "total-time": 15668, "ram": {"total": 4303814656, "remaining": 134963200, "transferred": 2397301222, "duplicate": 432614, "dirty-pages-rate": 0, "normal-bytes": 2396868608, "normal": 585173}}, "id": "libvirt-255"}
2013-06-17 10:14:05.245+0000: 11351: debug : qemuMonitorJSONIOProcessLine:170 : QEMU_MONITOR_RECV_REPLY: mon=0x7f61941082e0 reply={"return": {"expected-downtime": 0, "status": "active", "total-time": 15668, "ram": {"total": 4303814656, "remaining": 134963200, "transferred": 2397301222, "duplicate": 432614, "dirty-pages-rate": 0, "normal-bytes": 2396868608, "normal": 585173}}, "id": "libvirt-255"}
2013-06-17 10:14:05.295+0000: 11356: debug : qemuMonitorSend:886 : QEMU_MONITOR_SEND_MSG: mon=0x7f61941082e0 msg={"execute":"query-migrate","id":"libvirt-256"}
2013-06-17 10:14:05.296+0000: 11351: debug : qemuMonitorIOWrite:450 : QEMU_MONITOR_IO_WRITE: mon=0x7f61941082e0 buf={"execute":"query-migrate","id":"libvirt-256"}

2, response on bugzilla
i have discuss with Bo yang and and it could be reproduce right now.
after some test, i found that if the vm use memory more than 2giga bytes(about, not exactly), virsh save will hang.
and as you said, QEMU_MONITOR_IO_PROCESS, QEMU_MONITOR_RECV_REPLY are missing after QEMU_MONITOR_SEND_MSG and QEMU_MONITOR_IO_WRITE execute.
i will try the lastest version of libvirt tomorrow.

3, try lastest version.

19:17 2013-06-17
software skill, debugger, gdb, logging
warning: File "/home/bamvor/log/novell/hypervisor_and_tools/libvirt/kvm_win7_save_hang/20130617/qemu-kvm/.gdbinit" auto-loading has been declined by your `auto-load safe-path' set to "$debugdir:$datadir/auto-load:/home/bamvor/log/novell/hypervisor_and_tools/libvirt/kvm_win7_save_hang/20130617/.gdbinit".
To enable execution of this file add
        add-auto-load-safe-path /home/bamvor/log/novell/hypervisor_and_tools/libvirt/kvm_win7_save_hang/20130617/qemu-kvm/.gdbinit
line to your configuration file "/root/.gdbinit".
To completely disable this security protection add
        set auto-load safe-path /
line to your configuration file "/root/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
        info "(gdb)Auto-loading safe path"
(gdb) 

# cat /root/.gdbinit
add-auto-load-safe-path /home/bamvor/log/novell/hypervisor_and_tools/libvirt/kvm_win7_save_hang/20130617/qemu-kvm/.gdbinit

20:31 2013-06-17
(10:05 2013-06-18)
virtualization, xen, arm, allwinner A31, sun6i, send patch to upstream, deal with upstream reply
Ian Campbell reply
1, patch 1/4
Ian Campbell wrote:
> On Fri, 2013-05-31 at 20:53 +0800, Bamvor Jian Zhang wrote:
>> diff --git a/xen/arch/arm/arm32/head.S b/xen/arch/arm/arm32/head.S
>> index 0588d54..d3b849b 100644
>> --- a/xen/arch/arm/arm32/head.S
>> +++ b/xen/arch/arm/arm32/head.S
>> @@ -20,6 +20,7 @@
>>  #include <asm/config.h>
>>  #include <asm/page.h>
>>  #include <asm/processor-ca15.h>
>> +#include <asm/processor-ca7.h>
>>  #include <asm/asm_defns.h>
>>  
>>  #define ZIMAGE_MAGIC_NUMBER 0x016f2818
>> @@ -195,8 +196,18 @@ skip_bss:
>>          /* Is this a Cortex A15? */
>>          ldr   r1, =(CORTEX_A15_ID)
>>          teq   r0, r1
>> +        bne   test_ca7
>>          bleq  cortex_a15_init
>> +        PRINT("- cortex-a15 init done -\r\n")
>> +        b     cpu_init_done
>> +        /* Is this a Cortex A7? */
>> +test_ca7:
>> +        ldr   r1, =(CORTEX_A7_ID)
>> +        teq   r0, r1
>> +        bleq  cortex_a7_init
>> +        PRINT("- cortex-a7 init done -\r\n")
>
> I think now that we have a second processor here it is time to go for a
> more scalable approach. A linker table driven thing, similar to what
> Julien did for the platform (PLATFORM_START et al) or the Linux proc
> table thing seems like the right answer. At the moment it would just
> contain the MIDR mask and match values plus an optional init function
> pointer, in time I suspect it will grow other functionality.
got it. how about add something like __lookup_processor_type and proc-xxx.S
like linux kernel.
>
>> +cpu_init_done:
>>          /* Set up memory attribute type tables */
>>          ldr   r0, =MAIR0VAL
>>          ldr   r1, =MAIR1VAL
>> diff --git a/xen/arch/arm/arm32/proc-ca7.S b/xen/arch/arm/arm32/proc-ca7.S
>> new file mode 100644
>> index 0000000..e0c1bc2
>> --- /dev/null
>> +++ b/xen/arch/arm/arm32/proc-ca7.S
>> @@ -0,0 +1,36 @@
>> +/*
>> + * xen/arch/arm/proc-ca7.S
>> + *
>> + * Cortex A7 specific initializations
>> + *
>> + * Bamvor Jian Zhang <bjzhang@suse.com>
>> + * Copyright (c) 2013 SUSE
>> + *
>> + * This program is free software; you can redistribute it and/or modify
>> + * it under the terms of the GNU General Public License as published by
>> + * the Free Software Foundation; either version 2 of the License, or
>> + * (at your option) any later version.
>> + *
>> + * This program is distributed in the hope that it will be useful,
>> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
>> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>> + * GNU General Public License for more details.
>> + */
>> +
>> +#include <asm/asm_defns.h>
>> +#include <asm/processor-ca7.h>
>> +
>> +.globl cortex_a7_init
>> +cortex_a7_init:
>> +        /* Set up the SMP bit in ACTLR */
>> +        mrc   CP32(r0, ACTLR)
>> +        orr   r0, r0, #(ACTLR_CA7_SMP) /* enable SMP bit */
>> +        mcr   CP32(r0, ACTLR)
>> +        mov   pc, lr
>> +
>> +/*
>> + * Local variables:
>> + * mode: ASM
>> + * indent-tabs-mode: nil
>> + * End:
>> + */
>> diff --git a/xen/include/asm-arm/processor-ca7.h b/xen/include/asm-arm/processor-ca7.h
>> new file mode 100644
>> index 0000000..b773c34
>> --- /dev/null
>> +++ b/xen/include/asm-arm/processor-ca7.h
>> @@ -0,0 +1,25 @@
>> +#ifndef __ASM_ARM_PROCESSOR_CA7_H
>> +#define __ASM_ARM_PROCESSOR_CA7_H
>> +
>> +
>> +#define CORTEX_A7_ID     (0x410FC070)
>> +
>> +/* ACTLR Auxiliary Control Register, Cortex A7 */
>> +#define ACTLR_CA7_DDI                (1<<28)
>> +#define ACTLR_CA7_DDVM               (1<<15)
>> +/* 2 bits */
>> +#define ACTLR_CA7_L1PCTL             (1<<13)
>> +#define ACTLR_CA7_L1RADIS            (1<<12)
>> +#define ACTLR_CA7_L2RADIS            (1<<11)
>> +#define ACTLR_CA7_DODMBS             (1<<10)
>> +#define ACTLR_CA7_SMP                (1<<6)
>
> Is the content of this register really different between A7 and A15?
only SMP bit is same. ACTLR is a implementation defined register.
> At least CA7_SMP is the same as CA15_SMP, which suggests we could share
> the init function (to set the SMP bit) and have both a7 and a15 in the
> same proc-v7.S file.
Ok. i will add proc-v7.S. although i do not know whether a12 is same or not.
we could deal with that later.
>> +
>> +#endif /* __ASM_ARM_PROCESSOR_CA7_H */
>> +/*
>> + * Local variables:
>> + * mode: C
>> + * c-file-style: "BSD"
>> + * c-basic-offset: 4
>> + * indent-tabs-mode: nil
>> + * End:
>> + */

1), __lookup_processor_type(arch/arm/kernel/head-common.S).
arch/arm/mm/proc-xxx.S

2, patch 2
Ian Campbell wrote:
> On Fri, 2013-05-31 at 20:53 +0800, Bamvor Jian Zhang wrote:
>> Allwinner A31(code name sun6i) is a quad-core Cortex-A7 SOC. Allwinner has
>> released the source code in http://git.rhombus-tech.net.
>> 
>> This patch define registers and macros for early printk and mode switch.
>> kick cpu is not implemneted yet. because the secondary cpu boot up
>> sequence is a little bit different from exynos5.
>> 
>> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
>> ---
>>  xen/arch/arm/arm32/debug-sun6i.inc    | 50 +++++++++++++++++++++++++++++++++++
>>  xen/include/asm-arm/platforms/sun6i.h | 28 ++++++++++++++++++++
>>  2 files changed, 78 insertions(+)
>>  create mode 100644 xen/arch/arm/arm32/debug-sun6i.inc
>>  create mode 100644 xen/include/asm-arm/platforms/sun6i.h
>> 
>> diff --git a/xen/arch/arm/arm32/debug-sun6i.inc b/xen/arch/arm/arm32/debug-sun6i.inc
>> new file mode 100644
>> index 0000000..eaa1197
>> --- /dev/null
>> +++ b/xen/arch/arm/arm32/debug-sun6i.inc
>> @@ -0,0 +1,50 @@
>> +/*
>> + * xen/arch/arm/arm32/debug-sun6i.inc
>> + *
>> + * Allwinner sun6i specific debug code
>> + *
>> + * Bamvor Jian Zhang <bjzhang@suse.com>
>> + * Copyright (c) 2013 SUSE
>> + *
>> + * This program is free software; you can redistribute it and/or modify
>> + * it under the terms of the GNU General Public License as published by
>> + * the Free Software Foundation; either version 2 of the License, or
>> + * (at your option) any later version.
>> + *
>> + * This program is distributed in the hope that it will be useful,
>> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
>> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>> + * GNU General Public License for more details.
>> + */
>> +
>> +/* sun6i UART initialization
>
> This does appear to use a distinct set of registers from either the
> existing pl011 or exynos4xxx UART driver so it should be a separate
> driver. Do you know if this particular logic block is specific to sn6i
> or is it used elsewhere (e.g. in all sun*i)? Do you know if there is a
> more generic name for the part?
sun4i, sun5i use the Synopsys DesignWare 8250 IP. and sun6i is also the
8250 compatiblity one. how about i create a debug-8250.inc and update
it when other 8250 device add.
>
> Not a big deal -- we can always rename to be more generic as we see
> other examples of the same UART.
>
>> + * rb: register which contains the UART base address
>> + * rc: scratch register 1 (unused here)
>> + * rd: scratch register 2 (unused here) */
>> +.macro early_uart_init rb, rc, rd
>> +/* assume the uart already init by bootloader */
>> +.endm
>
> I think Andre's refactoring of the UART init stuff in and around commit
> 130645eee340608c12b632535d3f983508348ba1 lets you avoid this by just not
> setting EARLY_PRINTK_INIT_UART.
yes. I saw Andre' patch. when i write this piece of code Andre's patch is
not commit. i will modify this in next version.
>
>> +
>> +/* sun6i UART wait UART to be ready to transmit
>> + * rb: register which contains the UART base address
>> + * rc: scratch register */
>> +.macro early_uart_ready rb, rc
>> +1:
>> +        ldr   \rc, [\rb, #0x7c]     /* <- UART_USR (Status Register) */
>> +        tst   \rc, #0x2             /* Check BUSY bit */
>> +        beq   1b                    /* Wait for the UART to be ready */
>> +.endm
>> +
>> +/* sun6i UART transmit character
>> + * rb: register which contains the UART base address
>> + * rt: register which contains the character to transmit */
>> +.macro early_uart_transmit rb, rt
>> +        str   \rt, [\rb]            /* -> UART_THR (Transmit Holding Register) */
>> +.endm
>> +
>> +/*
>> + * Local variables:
>> + * mode: ASM
>> + * indent-tabs-mode: nil
>> + * End:
>> + */
>> diff --git a/xen/include/asm-arm/platforms/sun6i.h b/xen/include/asm-arm/platforms/sun6i.h
>> new file mode 100644
>> index 0000000..f910ad6
>> --- /dev/null
>> +++ b/xen/include/asm-arm/platforms/sun6i.h
>> @@ -0,0 +1,28 @@
>> +#ifndef __ASM_ARM_PLATFORMS_SUN6I_H
>> +#define __ASM_ASM_PLATFORMS_SUN6I_H
>> +
>> +/* Constants below is only used in assembly because the DTS is not yet parsed */
>> +#ifdef __ASSEMBLY__
>> +
>> +/* GIC Base Address */
>> +#define SUN6I_GIC_BASE_ADDRESS       0x01c82000
>> +
>> +/* Timer's frequency */
>> +/* \TODO I do not know yet, assume it 24MHz. check it later */
>> +#define SUN6I_TIMER_FREQUENCY       (24 * 1000 * 1000) /* 24 MHz */
>> +
>> +/* Arndale machine ID */
>
> Comment is out of date, but I hope we can avoid needing to know machine
> numbers entirely some where down the line. (I expect this will be
> clearer after my reply to #4)
>
>> +/* XXX 3894 is downstream number for sun6i. 4137 is upstream number for sun6i */
>> +#define MACH_TYPE_SUN6I             4137
>> +
>> +#endif /* __ASSEMBLY__ */
>> +
>> +#endif /* __ASM_ARM_PLATFORMS_SUN6I_H */
>> +/*
>> + * Local variables:
>> + * mode: C
>> + * c-file-style: "BSD"
>> + * c-basic-offset: 4
>> + * indent-tabs-mode: nil
>> + * End:
>> + */

3, patch 3
Ian Campbell wrote:
> On Fri, 2013-05-31 at 20:53 +0800, Bamvor Jian Zhang wrote:
>> enable early printk for sun6i base on the macro introduce by previous
>> patch.
>
> FWIW I think you could squash them together.
Ok.
>
>> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
>> ---
>>  xen/arch/arm/Rules.mk | 5 +++++
>>  1 file changed, 5 insertions(+)
>> 
>> diff --git a/xen/arch/arm/Rules.mk b/xen/arch/arm/Rules.mk
>> index 422ed04..59d29c4 100644
>> --- a/xen/arch/arm/Rules.mk
>> +++ b/xen/arch/arm/Rules.mk
>> @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
>>  EARLY_PRINTK_BAUD := 115200
>>  EARLY_UART_BASE_ADDRESS := 0xfff36000
>>  endif
>> +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
>> +EARLY_PRINTK_INC := sun6i
>> +EARLY_PRINTK_BAUD := 115200
>
> Since you assume the bootloader did the init I don't think you use this?
it just a remider for me which the baudrate bootloader used. i will remove
it in next version.
>
>> +EARLY_UART_BASE_ADDRESS := 0x01c28000
>> +endif
>>  
>>  ifneq ($(EARLY_PRINTK_INC),)
>>  EARLY_PRINTK := y

4, patch 4
Ian Campbell wrote:
> On Fri, 2013-05-31 at 20:53 +0800, Bamvor Jian Zhang wrote:
>> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
>> ---
>>  xen/arch/arm/arm32/mode_switch.S | 13 +++++++++++--
>>  1 file changed, 11 insertions(+), 2 deletions(-)
>> 
>> diff --git a/xen/arch/arm/arm32/mode_switch.S b/xen/arch/arm/arm32/mode_switch.S
>> index c92a1cf..0fc26e0 100644
>> --- a/xen/arch/arm/arm32/mode_switch.S
>> +++ b/xen/arch/arm/arm32/mode_switch.S
>> @@ -21,6 +21,7 @@
>>  #include <asm/page.h>
>>  #include <asm/platforms/vexpress.h>
>>  #include <asm/platforms/exynos5.h>
>> +#include <asm/platforms/sun6i.h>
>>  #include <asm/asm_defns.h>
>>  #include <asm/gic.h>
>>  
>> @@ -90,15 +91,23 @@ enter_hyp_mode:
>
> I'd really like to avoid adding more boards here. Accepting the Arndale
> stuff was a pragmatic decision for the Xen 4.3 release but for 4.4 we
> need to transition to something better and delete this file completely.
>
> The way we want to fix this is to fix the bootloader, to correctly
> launch kernels in NS HYP mode (Andre has patches to u-boot which I think
> are upstream already) and to setup the GIC, timers etc for the specific
> platform.
>
> Updating the bootloader would be the ideal/preferred way to fix things
> but in practice there will be cases where the bootloader cannot be fixed
> e.g. because upstream u-boot does not support the platform well, or
> because the methods for unbricking the board when things go wrong are
> unavailable/unreliable. In those cases we want to remove this code from
> Xen by using a boot-wrapper style shim like [0] or [1] which would run
> between the bootloader and Xen and fix up all this sort of thing such
> that it appears to Xen like it was loaded by a correct bootloader.
>
> In this way we can maintain a clean separation between the main Xen code
> base and the hacks required for initialisation on a specific platform.
>
> Of course the bootwrapper can hardcode all sorts of system specific
> stuff since it will be expected to be compiled for the specific
> platform.
>
> I don't know which one applies to the sun6i platform -- it looks to me
> like upstream u-boot support is well under way and the presence of FEL
> mode makes unbricking the system pretty easy (I've had to use it on my
> own A31 based tablet and it seems OK).
i will investigate it. do i have change to got other part of my patch ack
without this bootwrapper or u-boot support? 
> Ian.
>
> [0] http://xenbits.xen.org/gitweb/?p=people/ianc/boot-wrapper.git;a=summary
> [1] https://git.linaro.org/gitweb?p=arm/models/boot-wrapper.git;a=summary
>
>
>>          bic   r0, r0, #0xe           /* Clear EA, FIQ and IRQ */
>>          mcr   CP32(r0, SCR)
>>  
>> -        ldr   r2, =MACH_TYPE_SMDK5250   /* r4 := Arndale machine ID */
>>          /* By default load Arndale defaults values */
>> +        ldr   r2, =MACH_TYPE_SMDK5250   /* r4 := Arndale machine ID */
>>          ldr   r0, =EXYNOS5_TIMER_FREQUENCY  /* r0 := timer's frequency */
>>          ldr   r1, =EXYNOS5_GIC_BASE_ADDRESS /* r1 := GIC base address */
>> -        /* If it's not the Arndale machine ID, load VE values */
>>          teq   r5, r2
>> +        beq   board_set_done
>> +        /* If it's not the Arndale machine ID, try sun6i */
>> +        ldr   r2, =MACH_TYPE_SUN6I          /* r2 := sun6i machine ID */
>> +        ldr   r0, =SUN6I_TIMER_FREQUENCY    /* r0 := timer's frequency */
>> +        ldr   r1, =SUN6I_GIC_BASE_ADDRESS   /* r1 := GIC base address */
>> +        teq   r5, r2
>> +        beq   board_set_done
>> +        /* If it's not the sun6i machine ID, load VE values */
>>          ldrne r0, =V2M_TIMER_FREQUENCY
>>          ldrne r1, =V2M_GIC_BASE_ADDRESS
>>  
>> +board_set_done:
>>          /* Ugly: the system timer's frequency register is only
>>           * programmable in Secure state.  Since we don't know where its
>>           * memory-mapped control registers live, we can't find out the

5, (17:53 2013-06-18)
patch 1. second reply
On Tue, 2013-06-18 at 00:34 -0600, Bamvor Jian Zhang wrote:
> Ian Campbell wrote:
> > On Fri, 2013-05-31 at 20:53 +0800, Bamvor Jian Zhang wrote:
> >> diff --git a/xen/arch/arm/arm32/head.S b/xen/arch/arm/arm32/head.S
> >> index 0588d54..d3b849b 100644
> >> --- a/xen/arch/arm/arm32/head.S
> >> +++ b/xen/arch/arm/arm32/head.S
> >> @@ -20,6 +20,7 @@
> >>  #include <asm/config.h>
> >>  #include <asm/page.h>
> >>  #include <asm/processor-ca15.h>
> >> +#include <asm/processor-ca7.h>
> >>  #include <asm/asm_defns.h>
> >>  
> >>  #define ZIMAGE_MAGIC_NUMBER 0x016f2818
> >> @@ -195,8 +196,18 @@ skip_bss:
> >>          /* Is this a Cortex A15? */
> >>          ldr   r1, =(CORTEX_A15_ID)
> >>          teq   r0, r1
> >> +        bne   test_ca7
> >>          bleq  cortex_a15_init
> >> +        PRINT("- cortex-a15 init done -\r\n")
> >> +        b     cpu_init_done
> >> +        /* Is this a Cortex A7? */
> >> +test_ca7:
> >> +        ldr   r1, =(CORTEX_A7_ID)
> >> +        teq   r0, r1
> >> +        bleq  cortex_a7_init
> >> +        PRINT("- cortex-a7 init done -\r\n")
> >
> > I think now that we have a second processor here it is time to go for a
> > more scalable approach. A linker table driven thing, similar to what
> > Julien did for the platform (PLATFORM_START et al) or the Linux proc
> > table thing seems like the right answer. At the moment it would just
> > contain the MIDR mask and match values plus an optional init function
> > pointer, in time I suspect it will grow other functionality.

> got it. how about add something like __lookup_processor_type and proc-xxx.S
> like linux kernel.

This sounds like a good plan.

> >> +/* ACTLR Auxiliary Control Register, Cortex A7 */
> >> +#define ACTLR_CA7_DDI                (1<<28)
> >> +#define ACTLR_CA7_DDVM               (1<<15)
> >> +/* 2 bits */
> >> +#define ACTLR_CA7_L1PCTL             (1<<13)
> >> +#define ACTLR_CA7_L1RADIS            (1<<12)
> >> +#define ACTLR_CA7_L2RADIS            (1<<11)
> >> +#define ACTLR_CA7_DODMBS             (1<<10)
> >> +#define ACTLR_CA7_SMP                (1<<6)
> >
> > Is the content of this register really different between A7 and A15?

> only SMP bit is same. ACTLR is a implementation defined register.

I knew that but given the close architectural relationship between the
A7 and the A15 (i.e. they are big.LITTLE compatible with each other) I
wondered if the implementation defined stuff might be similar.

> > At least CA7_SMP is the same as CA15_SMP, which suggests we could share
> > the init function (to set the SMP bit) and have both a7 and a15 in the
> > same proc-v7.S file.

> Ok. i will add proc-v7.S. although i do not know whether a12 is same or not.
> we could deal with that later.

Right.

Ian.

6, Patch 2 second round
Ian Campbell wrote:
> On Tue, 2013-06-18 at 00:35 -0600, Bamvor Jian Zhang wrote:
> > > This does appear to use a distinct set of registers from either the
> > > existing pl011 or exynos4xxx UART driver so it should be a separate
> > > driver. Do you know if this particular logic block is specific to sn6i
> > > or is it used elsewhere (e.g. in all sun*i)? Do you know if there is a
> > > more generic name for the part?
> > sun4i, sun5i use the Synopsys DesignWare 8250 IP. and sun6i is also the
> > 8250 compatiblity one. how about i create a debug-8250.inc and update
> > it when other 8250 device add.
> 
> Yes if this is an 8250 compatible implementation the debug-8250.inc is
> the right answer.
> 
> OOI Did you find the UART easily available on your platform? IOW was
> soldering required...
i use the mele M9 STB which include the same connector of uart as mele
A1000.
> 
> > > Not a big deal -- we can always rename to be more generic as we see
> > > other examples of the same UART.
> > >
> > >> + * rb: register which contains the UART base address
> > >> + * rc: scratch register 1 (unused here)
> > >> + * rd: scratch register 2 (unused here) */
> > >> +.macro early_uart_init rb, rc, rd
> > >> +/* assume the uart already init by bootloader */
> > >> +.endm
> > >
> > > I think Andre's refactoring of the UART init stuff in and around commit
> > > 130645eee340608c12b632535d3f983508348ba1 lets you avoid this by just not
> > > setting EARLY_PRINTK_INIT_UART.
> 
> > yes. I saw Andre' patch. when i write this piece of code Andre's patch is
> > not commit. i will modify this in next version.
> 
> Thanks.
> 
> > >
> > >> +
> > >> +/* sun6i UART wait UART to be ready to transmit
> > >> + * rb: register which contains the UART base address
> > >> + * rc: scratch register */
> > >> +.macro early_uart_ready rb, rc
> > >> +1:
> > >> +        ldr   \rc, [\rb, #0x7c]     /* <- UART_USR (Status Register) */
> 
> I think this register is a designware extension to the 8250. The Linux
> sunxi debug driver is instead checking the UART_LSR for the TEMT or THRE
> bits.
> 
> > >> +        tst   \rc, #0x2             /* Check BUSY bit */
> > >> +        beq   1b                    /* Wait for the UART to be ready */
> > >> +.endm
> 
> Ian.

7, patch 3 second reply
Ian Campbell wrote:
> On Tue, 2013-06-18 at 00:35 -0600, Bamvor Jian Zhang wrote:
> > >> @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
> > >>  EARLY_PRINTK_BAUD := 115200
> > >>  EARLY_UART_BASE_ADDRESS := 0xfff36000
> > >>  endif
> > >> +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
> > >> +EARLY_PRINTK_INC := sun6i
> > >> +EARLY_PRINTK_BAUD := 115200
> > >
> > > Since you assume the bootloader did the init I don't think you use this?
> 
> > it just a remider for me which the baudrate bootloader used.
> 
> That's not unreasonable. You could stick it in a comment:
> # 8250 uart configured at 115200 by bootloader
ok. 
> 
> Ian.

8, patch 4 second reply 
Ian Campbell wrote:
> On Tue, 2013-06-18 at 00:38 -0600, Bamvor Jian Zhang wrote:
> > > I don't know which one applies to the sun6i platform -- it looks to me
> > > like upstream u-boot support is well under way and the presence of FEL
> > > mode makes unbricking the system pretty easy (I've had to use it on my
> > > own A31 based tablet and it seems OK).
> 
> > i will investigate it. do i have change to got other part of my patch ack
> > without this bootwrapper or u-boot support? 
> 
> Not sure what you are asking but if it is "can patches #1-#3 be accepted
> without this change" then the answer is yes IMHO.
yes, this is what i mean. sorry for the typo.
> 
> In the meantime while we work on bootwrapper/u-boot support generally we
> should also patch this code to not fallback to the vexpress for
> everything, if the platform isn't explicitly either Arndale or vexpress
> it should do nothing.
So, i could check the vexpress machine id in enter_hyp_mode when it is not
Arndale. then raise error and hang if both check fails.
> 
> Ian.
> 
Bamvor

09:51 2013-06-18
GTD
0, 9:30-18:45

1, today
1), 20' personal stuff.
2), 9:53-10:03 work report. see"09:53 2013-06-18"
3), 10:04-11:30 12:30-14:39 18:00-18:39 reply to upstream about sun6i patch. "20:31 2013-06-17"
nap: 1h
4), 14:50-18:00 libvirt save hang. see"16:42 2013-06-17".

5), try u-boot for sun6i without dram init.

2, next
1), push all sun6i kernel this to github.
今天至少要保证sun6i DT code编译通过，最好debug也可以用。要不然放完假都忘了。
2), buy a 1000M switcher when i available.

09:53 2013-06-18
work report - week 23, 24
1, report a bug in xen hypervisor to xen upstream. 
2, bnc#815201: 
discuss with Bo yang to get the status and try to reproduce this bug.
3, US/China virtualization sync.
4, 3days public holiday. two days leave.

14:17 2013-06-18
mailing list, kernel, arm, linux-sunxi, A31, sun6i
[linux-sunxi] Allwinner A31 (CS868 stick, Mele M9 STB ): linux-sunxi development team will be support them?
reply to "2013/6/18 Neal Peacock <kulimandphone3@gmail.com>"
> I am working on the A31.  Currently I'm trying to merge the allwinner code into the 3.4 community kernel but I haven't put my code up yet as no one else seemed to be trying to work with it.
I am working on A31 too. Currently focus on port xen to A31. for fully supported by xen-arm. it will need a lastest kernel, at least support device tree. and it also need a upstream u-boot which would be easy switch arm into Non-Security Hyper Mode in u-boot. 
is it in anyone's todo list? i will appreciate that. 

14:39 2013-06-18
virtualization, xen, arm, allwinner A31, sun6i, cont1
1, current status
1), xen hang/crash if i use the ldrex/strex instruction, this is the primary stone for me. i do not know how to deal with it.
2), need a bootwrapper or u-boot for switch into hyper mode.
without this, it is hard to get my patch ack in xen.
3), lastest kernel support for A31.
it seems that not eager to do it.
2, about u-boot and enter hyper mode.
arch/arm/lib/virt-v7.c
git://git.linaro.org/people/aprzywara/u-boot.git, branch hypmode_v2

14:54 2013-06-18
virtualization, libvirt, kvm, bnc#815201, cont3
1, libvirt 1.0.5 from obs.
Martin Jakl 2013-05-31 08:19:18 UTC
I've tried version 1.0.5 as suggested and it didn't help.

2, re-read the virsh save code, get where is the end of save when libvirt hang.
1), is it relative to compression?
from comment in qemu.conf, the default format is raw. no compression.
2), 如果gdb多加一些断点, 似乎save就不会hang了?
好像只有一次遇到, 并不一定.

3, 看到底hang在哪里
thread apply all bt full
1), Thread 9 (Thread 0x7f9f59012700 (LWP 4053)):
---Type <return> to continue, or q <return> to quit--- 
#0  0x00007f9f5fea0964 in pthread_cond_wait@@GLIBC_2.3.2 ()
   from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007f9f6238c566 in virCondWait (c=c@entry=0x7f9f3c0080a8, 
    m=m@entry=0x7f9f3c008080) at util/virthreadpthread.c:117
        ret = <optimized out>
#2  0x000000000048708c in qemuMonitorSend (mon=mon@entry=0x7f9f3c008070, 
    msg=msg@entry=0x7f9f590115e0) at qemu/qemu_monitor.c:889
    ret = -1
    __func__ = "qemuMonitorSend"
    __FUNCTION__ = "qemuMonitorSend"


2), qemu-kvm
infinite loop in buffered_close.
(gdb) where
#0  0x00007f5caada0623 in select () from /lib64/libc.so.6
#1  0x00007f5cae97b325 in migrate_fd_wait_for_unfreeze (s=
    0x7f5caeea3c20 <current_migration.19487>) at migration.c:400
#2  0x00007f5cae89e04b in buffered_close (opaque=0x7f5cb15dbfb0)
    at buffered_file.c:152
#3  0x00007f5caea537e0 in qemu_fclose (f=0x7f5cb15de4e0)
    at /usr/src/debug/qemu-1.3.0/savevm.c:544
#4  0x00007f5cae97b401 in migrate_fd_cleanup (s=s@entry=
    0x7f5caeea3c20 <current_migration.19487>) at migration.c:271
#5  0x00007f5cae97b566 in migrate_fd_completed (s=
    0x7f5caeea3c20 <current_migration.19487>) at migration.c:290
#6  migrate_fd_put_ready (s=0x7f5caeea3c20 <current_migration.19487>)
    at migration.c:359
#7  0x00007f5cae89e230 in buffered_put_buffer (size=0, pos=0, opaque=
    0x7f5cb15dbfb0, buf=<optimized out>) at buffered_file.c:130
#8  buffered_put_buffer (opaque=0x7f5cb15dbfb0, buf=0x0, pos=0, size=0)
    at buffered_file.c:99
#9  0x00007f5cae97b692 in migrate_fd_put_notify (opaque=
    0x7f5caeea3c20 <current_migration.19487>) at migration.c:305
#10 0x00007f5cae970ca7 in qemu_iohandler_poll (readfds=readfds@entry=
    0x7f5caf2c0400 <rfds>, writefds=writefds@entry=0x7f5caf2c0480 <wfds>, 
    xfds=xfds@entry=0x7f5caf2c0500 <xfds>, ret=ret@entry=3) at iohandler.c:128
#11 0x00007f5cae979c48 in main_loop_wait (nonblocking=<optimized out>)
    at main-loop.c:418
#12 0x00007f5cae851711 in main_loop () at vl.c:1771
#13 main (argc=<optimized out>, argv=<optimized out>, envp=<optimized out>)
    at vl.c:4008

3), try qemu-kvm without libvirtd
(1), original command:
/usr/bin/qemu-kvm -name 05_win7 -S -M pc-1.3 -enable-kvm -m 4096 -smp 2,sockets=2,cores=1,threads=1 -uuid 34c4af10-b5fc-3547-d430-00a57d9f6b3c -no-user-config -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/05_win7.monitor,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=localtime -no-hpet -no-reboot -no-shutdown -device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2 -drive file=/home/bamvor/vm/kvm/images/windowsvistax64/disk0.raw,if=none,id=drive-ide0-0-0,format=raw -device ide-hd,bus=ide.0,unit=0,drive=drive-ide0-0-0,id=ide0-0-0,bootindex=1 -drive file=/home/bamvor/vm/iso/windows7.iso,if=none,id=drive-ide0-1-0,readonly=on,format=raw -device ide-cd,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -netdev user,id=hostnet0 -device e1000,netdev=hostnet0,id=net0,mac=52:54:00:09:3a:9f,bus=pci.0,addr=0x3 -device usb-tablet,id=input0 -vnc 127.0.0.1:0 -vga cirrus -device AC97,id=sound0,bus=pci.0,addr=0x4 -incoming fd:20 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x5
(2), test cmd: 
/usr/bin/qemu-kvm -name 05_win7 -M pc-1.3 -enable-kvm -m 4096 -smp 2,sockets=2,cores=1,threads=1 -uuid 34c4af10-b5fc-3547-d430-00a57d9f6b3c -no-user-config -nodefaults -rtc base=localtime -no-hpet -no-reboot -no-shutdown -device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2 -drive file=/home/bamvor/vm/kvm/images/windowsvistax64/disk0.raw,if=none,id=drive-ide0-0-0,format=raw -device ide-hd,bus=ide.0,unit=0,drive=drive-ide0-0-0,id=ide0-0-0,bootindex=1 -drive file=/home/bamvor/vm/iso/windows7.iso,if=none,id=drive-ide0-1-0,readonly=on,format=raw -device ide-cd,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -netdev user,id=hostnet0 -device e1000,netdev=hostnet0,id=net0,mac=52:54:00:09:3a:9f,bus=pci.0,addr=0x3 -device usb-tablet,id=input0 -vga cirrus -device AC97,id=sound0,bus=pci.0,addr=0x4 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x5
but i could not open the qemu monitor console.
/usr/bin/qemu-kvm -name 05_win7 -M pc-1.3 -enable-kvm -m 4096 -smp 2,sockets
=2,cores=1,threads=1 -drive file=/home/bamvor/vm/kvm/images/windowsvistax64/disk0.raw,if=none,id=drive-ide0-0-0,format=raw -device ide-hd,bus=ide.0,unit=0,drive=drive-ide0-0-0,id=ide0-0-0,bootindex=1
the save process seems slow than driven by libvirt.

