
10:20 2010-4-1
时间管理
0, 9:40

1, 计划
0, bootloader代码一直没有更新. 今天要更新. 
1), caijin帮我修改了. 看看原因. 可能是系统用了"@INC"造成的. 
2), 发三个issue: cortex-a8运行时RVI访问memory; 4FPGA EMI无法使用; strap pin读不
到. 
3), rom boot： 2FPGA, 4FPGA
4), 开mmu. 今天一定要实验. 
5), 晚上看suxin Linux porting. 明天与suxin讨论. 这周要看GPU Linux driver.
6), 整理时间管理.
7), 整理会议记录. 
8), 继续看zhangpu GPU Linux driver.
9), 解决sd问题: 不插卡sd初始化应该fail. 现在没有插卡sd也能初始化成功. 
10), VC0882 ASIC中trace与kpd share. 看看其它产品是怎么做的, 感觉这样不太合理.
11), (18:12 2010-4-1)解决liaozhicheng, yinxingjie问题. 

2, 执行
1), 13:45-16:24 经过实验4FPGA bootloader可以使用. 

3, 次日计划
1), emi bootloader中加入ddr timing参数. 
2), 找LvHaiFang, JTAG和串口子板多焊8个. 现在是22套, 至少差两套. 

11:03 2010-4-1
VC0882, VC0718, arm cortex-a8 OMAP3530 开发板, 北京瑞泰, 深圳天漠, 回复Aiguo邮件
注: 下述资料位于"\\10.0.2.36\sqmshare\Document\SOC\TI OMAP3530".
我们买的是北京瑞泰的ICETEK_OMAP3530_MINILCDE, sales: 62105690 赵晓燕
具体介绍参见附件的"ICETEK-OMAP3530产品.pdf"的ICETEK_OMAP3530_MINILCD, MINILCDE比
后者多了网口和vga. 
瑞泰开发板与国外开源OMAP3530开发板beagleboard原理图基本相同, 可以用TI EVM和
beagleboard的软件. 瑞泰只提供基于Linux的Angstrom系统. 我们试过TI EVM的wince6.0和
beagleboard的android可以正常运行. 
国内做OMAP350的还有深圳天漠(英倍特子公司), 资料见附件DevKit8000_Overview_Cn.pdf, 
天漠提供的软件资源比瑞泰多.

13:45 2010-4-1
VC0882, EMI bootloader, 4FPGA无法使用
1, 
rev0_03033016_04033015_01033015_02033015_4fpga_normal(48m)_Dec+Gpu_NoUsbEnc.ace
padc不同, "<"表示上电状态, ">"表示chiperase后状态
6c6
< SETREG32(0x60051034, 0x000003c9);
---
> SETREG32(0x60051034, 0x000003c8);
20c20
< SETREG32(0x60051600, 0x00000000);
---
> SETREG32(0x60051600, 0xffffffff);
23c23
< SETREG32(0x60051614, 0x9e008000);
---
> SETREG32(0x60051614, 0x00000000);
25c25
< SETREG32(0x60051620, 0x00000000);
---
> SETREG32(0x60051620, 0x003fffff);
28c28
< SETREG32(0x60051634, 0x001d0000);
---
> SETREG32(0x60051634, 0x0000ffff);

修改0x60051620=0即可. 4FPGA上电是0x003fffff.
\todo 继续看其它寄存器. 

2, 实验
rev0_03033016_04033015_01033109_02033015_4fpga_normal(48m)_Dec+Gpu+De_NoUsbEnc.a
ce
无法使用, 已发信. 

3, 还有一种可能性是strappin没跳对引起的. 的确如此. strappin跳对就可以. 但是
0x60051A00还是0. \todo 电zixi讨论. 

4, 经实验, 4FPGA bootloader可以使用. 但是不同板子ddr timing不同, 需要ddrc.inc中
根据用户配置选择timing. 这个只能明天做了. 

14:14 2010-4-1
VC0882, 日报
1, 现在4FPGA-2, 6, 7都无法使用, 具体现象如下. 
1), 4FPGA-2连接arm时arm无法停止, 提示:
Error: 0x02410100: The run control operation could not be completed : .
2), 4FPGA-6,7无法写入ddr.
Ddr脚本和ddr芯片在好的4FPGA可以使用的. 
2, strappin寄存器是0. 仿真中. 

20:07 2010-4-1
VC0882, arm cortex-a8, coresight, OMAP3530, rvdebugger, arm运行时无法访问memory, 
\todo 将来在PB-A8实验
前几天在VC0882上面实验, 发现a8运行时通过memory窗口访问ddr数据都是0, 停下来后访问
是正常的. 本来以为是VC0882 bug, 今天实验发现在OMAP3530也是如此. 以后PB-A8来的时
候要实验.

20:10 2010-4-1
VC0882, 项目, 总结, 反思
从882项目开始到现在, 几次因为资源问题影响项目进度. 
比如开始FPGA台子不稳定, 后来稳定了台子不够用, 在后来是台子够用了发现ddr颗粒居然
就买了10个: ICD要出1M sram版本和ddr版本多牵扯精力, ICP要协调使用. 
再比如PB-A8开始说借, 后来是买. 估计拿到手可能5月了. 网表freeze前用的时间不多了. 
精打细算没有错, 问题是项目schedule很紧的时候, 资源应该更充分. 

10:06 2010-4-2
VC0882, trainning, MTK baseband
FengBeiZhan邮件"mtk平台讲解"20100401_1934
明天早上10：00，深圳过来的huxin，负责emi slave调试，将在882测试室给我们讲讲mtk平
台的环境、架构、软件等相关知识；机会难得，有兴趣的同学欢迎参加；
如下目录是相关资料，有兴趣的可以先看看；
\\10.0.2.36\sqmshare\Projects\Mobile BU\VC0882\spec\MTK

12:48 2010-4-2
VC0882, FPGA, 稳定性, 单步调试问题: 8148(zhangjian), 8535(yangmin)

15:24 2010-4-2
VC0882, 4FPGA, arm无法连接
1, 查jatg相关的ucf和pinlist都没有变化. 

15:54 2010-4-2
VC0882, 日报
1, newpadc ucf无法连接arm. 参见"15:24 2010-4-2"

16:14 2010-4-2
时间管理
3, 次日计划
1), 头文件修改时重新编译: VC0882, build中加入:%.h, 可以判断*.h修改. *.inc同理. 

12:30 2010-4-4
时间管理
1, 计划
1), 下载amba4文档, STM. 
1), 头文件修改时重新编译: VC0882, build中加入:%.h, 可以判断*.h修改. *.inc同理. 
3), 其他时间管理内容

10:28 2010-4-6
时间管理
0, 9:43

1, 计划
1), 开mmu
2), 头文件修改时重新编译: VC0882, build中加入:%.h, 可以判断*.h修改. *.inc同理. 
3), 其他时间管理内容

2, 执行
1), 修改mmu, cache代码. 见"11:34 2010-4-6"

11:34 2010-4-6
VC0882, mmu, cache
1, 对比CortexA8dhry和VC0882_nucleus开mmu流程, 搞清楚最小流程. 
2, 使
用'vc0882_20100401_1030_emi_02031919_peri2fpga_vc0882_20100401_1030_normal_noDeT
vLcdifCifFdDmaUsbNfcTpi.ace
"
3, CortexA8dhry在当前FPGA无法运行, 停在
>>> DHRY_1\#91   Next_Ptr_Glob = (Rec_Pointer) malloc (sizeof (Rec_Type));
   S:000301F8 E3A00030  MOV      r0,#0x30
4, 认真看下CortexA8dhry程序.
1), "2_00000000000000000000110111100010"表示二进制数, 2可以是2-9. 
复习armasm汇编的常量: 
Numbers Numeric constants are accepted in the following forms:
• decimal, for example, 123
• hexadecimal, for example, 0x7B
• n_xxx where:
n is a base between 2 and 9
xxx is a number in that base
• floating-point, for example, 0.02, 123.0, or 3.14159.
Floating-point numbers are only available if your system has VFP, or
NEON with floating-point.
2), Cortex-A8开mmu流程和arm926ej-s相同. 
(1), 设置ttb
(2), 在ttb指定memory写入translation table表
(3), 设置domain access.
(4), 开mmu. 
5, (21:56 2010-4-6)上传CVS
mmu平映射正确. 但是unalign access仍然有问题
1), cache.s中注释clean, invalidate函数, 稍候利用CortexA8dhry程序. 
2), 修改VIM_CACHE_Driver.c.
3), cache\subdir.mk: 打开"CCFLAGS += -DMMU_FLAT_MAP"表示打开mmu平映射. 
4), 其它修改: 
(1), 修改DDRC.inc: 使用脚本生成. 
(2), 修改pmu remap函数.

15:47 2010-4-6
sys/VIM_SYS_Driver.c(88,55) : error  #20: identifier "task_mem_func" is 
undefined
mem/mem_test_api.c(50,15) : error  #20: identifier "MAJ_MEM" is undefined

15:54 2010-4-6
VC0882, gpu, 2d/3d, memory, issue 0008376(memset出错), zhangpu报告
在
vc0882_20100401_1030_emi_02031919_peri2fpga_vc0882_20100401_1030_normal_noDeTvLc
difCifFdDmaUsbNfcTpi.ace实验:
2Mx10, 16Mx3 pass.

17:03 2010-4-6
VC0882, storage, sdio, Duanlihua修改改善了稳定性
DuanLiHua邮件"答复: New ACE For 4 FPGA"20100406_1640
sdio代码有改动，增加了几个hidden寄存器供debug使用：
1. 可以控制在host idle的时候是否自动做clock gating，默认打开~
2. 以及N_CC(delay from last command to new command)，N_RC(delay from last 
response to new command)等参数可配，默认从8 clks调到12 clks~
上述改动在4fgpa上测试有明显改善，2fpga版本布线fail，但明天应该可以测试~

11:02 2010-4-8
Linux, mount, 重新mount跟文件系统为可写
mount -o remount / -w 

11:15 2010-4-8
VC0882, debug, umonitor
1, um_ctrl地址可以从padc查到: 0x600510f0
2, um_ctrl具体配置见"D:\VC1600WCVS\doc\arch\vc0882\VC0882 umonitor 
definition.xls"

11:39 2010-4-8
时间管理
0, 9:24

1, 计划
1), Linux: 设备驱动如何从kernel cmdline获得参数
2), 清issue. 
3), 请假. 
4), 其它时间管理.
5), 跟踪issue:
(1), 0008461: 2FPGA连接多个子板时RVI连接arm失败(arm无法停止), 造成测试同事无法测
试. 
beizhan说是video子板问题. 问一下详细情况.
6), VC0882 pmu mas reivew
7), 看下cortex-a8 arm回信. 
8), VC0882 mmu, cache.
(1), 非对齐访问.
(2), cache clean and invalidate时注意地址对齐问题. 

2, 执行
1), 上午开会. 杂.
2), 下午, 1.5h "1-1)", 见"15:07 2010-4-8"
3), 16:15- "1-2)", 见"16:43 2010-4-8"

15:07 2010-4-8
Linux移植, cmdline, driver, 设备驱动如何从kernel cmdline获得参数
从命令行获得参数的宏, 大致有三类
1, parse基本数据类型: 包括byte, short, ushort, int, uint, long, ulong, 参见
params.c(kernel)的"STANDARD_PARAM_DEF"的一系列定义.
用法参见"omapfb_main.c(drivers\video\omap)", 例如"module_param_named(accel, 
def_accel, uint, 0664);"
accel是cmdline参数的名字, def_accel是omapfb_main.c定义的变量. 如果找到accel这个
参数, 会把值保存在def_accel中. uint表示def_accel是"unsigned int类型".
注: "STANDARD_PARAM_DEF"里面"*((type *)kp->arg) = l;"是把parse的tmptype类型的l(
不是1)赋给arg. 
2, module_param_string: 获得字符串参数, 定义在"moduleparam.h(include\linux)". 参
见"drivers\video\pxafb.c": 
module_param_string(options, g_options, sizeof(g_options), 0);
同理, options是cmdline参数名字, g_options保存cmdline参数的值. 
3, module_param_array_named是parse数组. 定义在"moduleparam.h(include\linux)". 参
见"drivers\video\pxafb.c": 
module_param_array_named(vram, def_vram, ulong, &def_vram_cnt, 0664);

16:43 2010-4-8
VC0882, FPGA, strappin, 2FPGA, FPGA稳定性, issue8460, 8640
1, strappin寄存器(0x60051A00)读出数据不正确
1), zixi修改(见issue注释): 
是PMU_MUX里面的地址译码错误导致strap pin这个register没有被apb读出来。
今天已经修改了代码，请在后续的FPGA里面验证。 
2), 修改后测试: 
2FPGA norflash启动时strappin寄存器(0X60051A00[1:0])是b10. 
FPGA cf code: 
vc0882_20100407_2000_Cif_02040218_video2fpga_vc0882_20100407_2000_normal_noDeTvF
dAudifDmaUsbNfcSpiKpdPwmTpi.ace.
但是无法配置为其它启动方式, 见issue8640 

2, 0008640: 2FPGA strap pin无法通过外部配置  
1), 说明  strappin配置为b10, b01时, 读0x60051A00[1:0]=b10. 
strappin配置为b00, b11时导致RVI连接arm后无法停止, 提示:
Error: 0x02410100: The run control operation could not be completed : .
FPGA CF code: 
vc0882_20100407_2000_Cif_02040218_video2fpga_vc0882_20100407_2000_normal_noDeTvF
dAudifDmaUsbNfcSpiKpdPwmTpi.ace  
附加信息  
2), 注释:
fanzhijun发现6093 video rp12没有焊, 焊接此阻排同时把R13和r1改为272(2.7k?), b00, 
b10可以连接并读出. b01, b11连接arm后无法停止(提示同上).
但是rp12和LCD D0, D1没有连接. 
用5032 video转接板现象相同。 
3), 关闭:
如fanzhijun注释所述, rom boot和norflash boot可以使用. spi boot目前无法验证. 暂时
关闭.  spi boot如果有问题会单独开issue. 

20:59 2010-4-8
VC0882, dma template, 支持ACLK<MCLK, 注意见极端情况(见2)
1, 4月7日版本开始用的jiangbo周二晚上改过的DMA template: 支持bus clk比mclk慢.
2, JiangBo邮件"vc0882: mem2mod_dma updates to support ACLK<MCLK"20100406_1633
Hi, lijie, 请尽快验证一下，包括ACLK<MCLK以及原来ACLK>=MCLK的情况，另外可以模拟
CLOCK SWITCH流程，随机GATE掉ACLK一段时间验证是否鲁棒。在极端情况下，GATE之前
ASYNC FIFO为FULL，GATE之时MODULE可以将ASYNC FIFO读空，GATE之后ASYNC FIFO为
EMPTY，mem2mod_dma所见async_fifo_rptr将翻转一圈。请注意cover一下类似的case。

15:37 2010-4-9
时间管理
0, 9:42

1, 计划
1), VC0882 mmu, cache
2), 问fanzhijun有没有能测试trace的版本. 问trace转接板有没有改. 打印trace文档. 
3), VC0882 issue emory窗口没法清0x60052044. linan也有个只写寄存器(读是0x0)写0时
无反应. 这两个用setmem命令都可以. 怀疑是rvdebugger memory窗口当变量不变化时就不
更新了. 
4), zhicheng发今天reset后没法运行的问题. 
5), 整理时间管理. 

2, 执行
1), VC0882 cpu wrapper mas review. 
2), 下午1.5h VC0830 量产, 切频讨论. 见研发记录簿2_p35.

18:15 2010-4-9
VC0882, arm cortex-A8, OMAP3530, xloader, 初始化ddr
1, OMAP3530 chapter 25, mmc/sd boot说明, 二级boot最大128kB. 
25.4.7.6 MMC/SD Cards
Device Initialization by ROM Code www.ti.com
Figure 25-18. OneNAND Read Sector
The ROM code supports MMC/SD cards, with some limitations:
· Supports MMC/SD cards compliant with the Multimedia Card System Specification 
v4.2 from the
MMCA Technical Committee and the SD I/O Card Specification v2.0 from the SD 
Association. Includes
high-capacity (size >2GB) cards: HC-SD and HC MMC
· 3-V power supply, 3-V I/O voltage on PORT 1
· 1.8-V I/O voltage on PORT 2. External transceiver mode on PORT 2 is not 
supported.
· Initial 1-bit MMC mode, 4-bit SD mode
· Clock frequency:
– Identification mode: 400 kHz
– Data transfer mode: 20 MHz
· Only one card connected to the bus
· Raw mode, image data read directly from card sectors
· FAT12/16/32 support, with or without a master boot record (MBR).
· In case of a FAT (12/16/32) formatted memory card, the booting file must not 
exceed 128 KB.
· In case of a raw mode memory card, the booting image must not exceed 128 KB.

2, xloader代码分析: 
config_3430sdram_ddr()(xloader-02.01.03.11/board/omap3evm/omap3evm.c)

19:32 2010-4-9
VC882, timer, watchdog reset, 是跨时钟域(CDC)问题: PMU用慢时钟(32k)采timer块时钟
(24M)的脉冲所以采不到. \todo 详细说明. 

10:23 2010-4-10
VC0882, 0.65us, 50mm2, 740万门. VC0830 120万门. 

10:24 2010-4-10
VC0830, 量产, 切频, sdram: eorex, samsung
1, eorex sdram
1), 6次都是死在从12切到120过程中, fail@21, 7, 124, 74, 28, 51. 切频后没有开自刷
新. 
2), 做DMA lliautotest 10000 pass但完成后切频到240_120死.
3), 切频后开自刷新.  fail@1, 94, 15, 57, 7, 13.
4), CuiYunfei建议timing改为0xffffffff排除timing问题. fail@23, 27, 26.
5), 用SV eorex实验. 

2, 测试samsung sdram
1), samsung12, 120参数只有timing比exorex都略小. 
fail@44, 12.
2), 不走sram切频流程(Cas和CL需要同步修改), 也是几十次就死了.
3), "D:\work\VC0830\code\elf_bin\20090723_830切频代码比较
\1513_timer_sv_new_LQFP176_sdramSamsung.pak"实验12->144 step=24, 切到1144轮没有
死. 
(1), 先比较参数, 不行再比较流程(流程应该是一致的, 除了pll_sdrc_adj).  
(2), 切频参数不同. 更换后fail@114,19.
(3), 查打包info. 更换后fail@47,22.

11:55 2010-4-10
VC0830, bug, 上次zhaoyuan android bug: 访问memory最后几个word时会死(产生marb中断
?), VC0882要验证这个问题. 

10:34 2010-4-12
VC0830, 量产, 切频, sdram: eorex, samsung, 续
注: 示波器要选择x10档, x1档量不到dram 120M的clk.
1, EVB串口: 选择EVB串口输出需要把板子背面RS_TXD, RS_RXD拨到on, 启动方式选择rom 
boot. 如果需要用spi eeprom, 相反. 
2, 对比流程和参数:
1), 从CVS去7月24日代码, 实验是否与'D:\work\VC0830\code\milestone\20090723_830切
频代码比较\1513_timer_sv_new_LQFP176_sdramSamsung.pak"结果一致. 
(1), rvdebugger load 12->144, step=24, times=1000. 随机. pass.
(2), \todo 还需要打包实验, 保证512info没有问题. 
2), 对比上面7月24日代码与当前CVS最新代码切频流程差异. 
(1), Clkrst_Switch_CfgMem
旧: HAL_WRITE_REG32(CLOCLRST_PHY_MUX_SEL, memParmp->phy_mux_sel);
新:
//新写法, 不稳定. 
ClkrstBase_REALTIME_CTRL(0);
ClkrstBase_SetPhyMuxSel(memParmp->phy_mux_sel);
0724代码改为新写法, 测试100次pass.
(2), 对比memory参数和load脚本, CVS最新和0724代码一致. CVS最新代码实验非打包的
samsung参数: 12->144, step=24, times=1000, 随机. fail@29轮. 
(3), 看来是流程问题. 继续对比. sdram在除了xclk时都配置pll_sdrc_adj. 仍然不稳定. 
(4), 原来可能没有去掉sram切频流程, 关闭后总次数能切到几百次. 
(5), 还需要详细比较. 
(6), 0724代码用最新打包文件(bootloader_sdram16_176_svBoard)打包后实验autoswitch: 
120, 144. 4000次未死. 
(7), CVS_new代码打包fail@487.
(8), 继续比较. 问一下youhai实验行不行,如果可以先解决eorex问题. 找可用代码. 
3), 下午比较没有进展. 换个思路, 从正确代码开始更新, 看看到什么时候切频会出错
测试标准: 120,144. times=1000, 
(1), 更新到10月24日. fail@55轮, 271次; fail@21轮84次. 打包(CVS_new info)fail@9轮
33次.
(2), 更新到8月31日. 打包(CVS_new info)fail@2轮7次.
(3), 更新到8月12日. 打包(CVS_new info)1500轮pass.
(4), 更新到8月24日. 打包(CVS_new info)fail@8轮32次.
(5), 更新到8月17日. clkrst无变化. 
(6), 更新到8月20日. 打包(CVS_new info)fail@10轮38次.
(7), 更新到8月14日. 打包(CVS_new info)1000轮pass. 
(8), 更新到8月15日. 打包(CVS_new info)1000轮pass.
(9), 更新到8月18日. 打包(CVS_new info)fail@1轮1次. 再次实验: 1000轮pass.
(10), 对比8月18日和8月20日也看不出差异. 

11:46 2010-4-12
时间管理
1, 计划
1), VC0830量产
2), 抽空看下clkrst, cpuwrapper, pmu mas.
3), 整理时间管理. 
4), 看PB-A8.

2, 执行
1), VC0830切频. 见"10:34 2010-4-12"
2), suxin ddr不稳定. 发DQS微调脚本. 
3), 测试给shanghai的FPGA. 见"11:46 2010-4-12"
4), 上传了前几天review的VC0882 cpu_wrapper. 

4, 其它:
1), VC0882 mmu, cache
2), 问fanzhijun有没有能测试trace的版本. 问trace转接板有没有改. 打印trace文档. 
3), VC0882 issue emory窗口没法清0x60052044. linan也有个只写寄存器(读是0x0)写0时
无反应. 这两个用setmem命令都可以. 怀疑是rvdebugger memory窗口当变量不变化时就不
更新了. 
4), zhicheng发今天reset后无法继续运行的问题: rom boot时reset前设断点,0x0 reset后
停在0x0无法运行. norflash boot: 不设断点, 可以继续运行. 
断点是在0x10000000设置的软件断点, reset后0x10000000 remap到0x0, 难道是软件断点不
能这么用? 实验设置硬件断点. 

11:46 2010-4-12
VC0882, 测试给shanghai的FPGA. 
1, target: min
CF: 
vc0882_20100409_2030_syn0906_02040218_2fpga_vc0882_20100409_2030_normal_withDeTv
LcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
2, \todo 电源线, 上柱

13:30 2010-4-12
VC0882, 技巧, 设备, 逻辑分析仪, 需要选择接口类型, 例如VC0882 ddr是LVDS接口逻分接
口也要选择LCDS

17:53 2010-4-12
VC0882, fat bug, caijin, On2 vdec, mpeg4
VC0882 fat返回EOF与ANCI C有些不同. ANCI C是读到最后, 出错后再返回EOF. VC0882 fat
是读到最后就返回EOF. 这样相当于是早返回了EOF. 
On2 vdec mpeg4是每次读之前都查询是否结束. 所以在VC0882上面跑的时候最后一个
byte(?)会读不到. 

12:47 2010-4-13
VC0882, mmu, cache, unalign access 
1, gemeiping邮件
我访问的是0x65000开始的地址
addr = 0x65000;
value = 0xa1234567;
SETREG32(addr, value);
result = GETREG32(addr);
printf("addr = %x, value = %x, result = %x\n", addr, value, result);

addr = 0x65001;
value = 0xb1234567;
SETREG32(addr, value);
result = GETREG32(addr);
printf("addr = %x, value = %x, result = %x\n", addr, value, result);

addr = 0x65002;
value = 0xc1234567;
SETREG32(addr, value);
result = GETREG32(addr);
printf("addr = %x, value = %x, result = %x\n", addr, value, result);

addr = 0x65003;
value = 0xd1234567;
SETREG32(addr, value);
result = GETREG32(addr);
printf("addr = %x, value = %x, result = %x\n", addr, value, result);

2, 实验CortexA8dhry. 访问0x1,2,3, 0x65001, 0x65002, 0x65003. 正常. 看配置. 
1), translation table: 0x00001DE2
[15:12] [11:8] [7:4] [3:0]
 TEX                 CB
0001    1101   1110  0010
这是"Outer and Inner Non-cacheable". 所以0x00000DEE("Outer and Inner Write-Back, 
no Write-Allocate)也可以(实验pass). 
2), C1(SCTLR).TRE=0:
From VMSAv7, there are two alternative schemes for describing the memory region 
attributes, and the current scheme is selected by the SCTLR.TRE (TEX Remap 
Enable) bit, see c1, System Control Register (SCTLR) on page B3-96. 

3, 实验panda_os. 发现是Cp15 c1设置了bit A造成的. 
这时当时从u-boot copy的代码...
代码见"D:\work\VC0882\code\milestone\20100413_unalign_access"
\todo 晚上上传代码, 开cache实验. 
\todo 实验结果: RVI不支持直接访问非对齐地址. 找arm确认. 

4, (18:12 2010-4-13)上传代码. 
1), "MMU_FLAT_MAP"表示打开MMU平映射, 用build参数"-define=MMU_FLAT_MAP=1"中配置. 
2), 开mmu和支持非对齐访问的修改:
(1), 注释了flush cache代码.
(2), 设置Cp15 c1 A=0. 

5, 加入cache代码. 
1), Clean: Applies to write-back data caches, and means that if the cache line 
contains stored data that has not yet been written out to main memory, it is 
written to main memory now, and the line is marked as clean.
Invalidate: Means that the cache line (or all the lines in the cache) is marked 
as invalid. No cache hits can occur for that line until it is re-allocated to an 
address. For write-back data caches, this does not include cleaning the cache 
line unless that is also stated.
2), 对比Linux cache-v7.S"v7_flush_dcache_all"和CortexA8dhry"; Invalidate 
Data/Unified Caches"部分代码. 
(1), 绝大部分相同. 
(2), Linux开始加了"dmb"保证此后memory数据访问不会在v7_flush_dcache_all之前执行. 
这样比较安全. CortexA8dhry因为是刚刚boot up, 所以不加没有问题. VC0882和Kernel一
样是反复调用的, 所以需要"dmb"
(3), 修改cssr和读csidr之前, 二者操作不同. 
mcr	p15, 2, r10, c0, c0, 0		@ select current cache level in cssr
mrc	p15, 1, r1, c0, c0, 0		@ read the new csidr
A, kernel
isb					@ isb to sych the new cssr&csidr
B, CortexA8dhry
MOV r1, #0
MCR p15, 0, r1, c7, c5, 4   ; PrefetchFlush to sync the change to the 
CacheSizeID reg
C, kernel的"isb"是保证整个
后者是"Prefetch flush. The prefetch buffer is flushed".
根据arm文档, 修改CP15后建议用isb:
An ISB instruction flushes the pipeline in the processor, so that all instructions that come after the ISB instruction in program order are fetched from cache or memory only after the ISB instruction has completed. Using an ISB ensures that the effects of context altering operations executed before the ISB are visible to the instructions fetched after the ISB instruction. Examples of context altering operations that require the insertion of an ISB instruction to ensure the operations are complete are:
• cache, TLB, and branch predictor maintenance operations
• changes to the CP14 and CP15 registers.
(4), kernel在finish后, 还做了如下工作: 
mov	r10, #0				@ swith back to cache level 0
mcr	p15, 2, r10, c0, c0, 0		@ select current cache level in cssr
dsb
isb
恢复cssr没看出作用(\todo 问arm). dsb和isb肯定必要. 
(5), 综上, 使用Linux的方式. 并在函数进入推出时保护现场. 
3), 目前情况:
(1), 开了icache就没法向下执行语句. 关了icache就没事. 
(2), dcache可以用rvdebugger register面板打开. 打开后aasp可以运行. 没有实验clean, 
invalidate等操作. 
aasp命令关闭dcache导致reset异常. 
明天会继续实验. 

17:59 2010-4-13
时间管理
1, 计划
1), 问一下youhai samsung sdram如何解决的. 
2), VC0882 cache.
3), 实验AHB-AP. 

13:07 2010-4-14
时间管理
1, 计划
1), VC0882 coresight AHB-Ap
2), 整理研发记录簿上suxin kerenl移植问题. 
3), 本周要利用晚上时间整理arm培训笔记. 

13:32 2010-4-14
VC0882, FPGA, debug, Coresight, AHB-AP在arm运行时读回的memory都是0, cache
1, 程序在0x10000-0x30000运行, 实验0x10000000, 0x20000000, 0x86000000都读会是0.
记得原来是可以的. 会不会是secure问题? 
2, 与Arm ken, Huangwei讨论AHB-AP:
1), security问题: 如果memory是secure, debugger只有non-secure权限, debugger访问
memory会读回0. 但是目前arm halt时, debugger可以读回正确结果, 应该没有权限问题. 
2), 可以实验在FPGA抓AHB-AP, 看看信号. 
3), rvdebugger是否通过AHB-AP访问memory, 要问arm support-sw@arm.com确认. 
3, 与Arm ken, Huangwei讨论cache:
1), AXI burst问题: 开icache后, arm通过AXI取数会用burst取, 如果AXI burst逻辑有问
题, 可能会有这个问题. 但目前初步看开dcache没有问题, 说明AXI应该是好的. 
2), icache sram问题: 排除上面两个问题后, icache自身逻辑肯定没问题. 有可能是与
sram连接有问题. 
3), 前提是dcache打开且可以正常工作. 
3, 下午开会, 计划如下:
1), huangwei跑FPGA版本的validation. 原来只跑过ASIC validation. 
2), validation pass后Kongyingqi跑CortexA8dhry test.
3), ICV pass后zhangjian FPGA测试. 
4, 我自己考虑如下:
1), dcache测试: 与ken讨论, 基本通路测试就是大约cache size的load/store测试即可. 
2), 如果dcache测试通过说明, AXI没问题. 
3), AHB-AP: rvdebugger是否通过AHB-AP访问memory, 问support-sw@arm.com确认. 

19:24 2010-4-14
VC0882, 项目, 文档, 工作总结与改进
1, Aiguo邮件"文档和周报获奖名单"20100414__0927
上个月我们开始施行一些奖励措施，对文档和周报写的不错给予电影票奖励，这个也只是一
个开始，希望大家能够认真对待这些事情，下面是宣布一下获奖名单；
1）   shuyu，598 Video的文档写的很好，也得到了大家的认可，周报也写的不错；
2）   Yingxingjie，提出了要重视程序的设计文档，同时在882 Video Architecture中开
始实施，是一个很好的榜样；
3）   Yangmin，Caijin，Dongliang和lingming，周报都写不错，也能说明他们对工作进行
了总结和规划，值得大家学习；
上面六位获得了3，4月份送出的的电影票奖，每个人2张，大家都继续努力，争取下个月的
奖励！

2, 反思:
我最近确实没怎么写文档. 而且最近两周都没有做工作总结. 

21:07 2010-4-14
vc0882_20100413_2130_fpga_syn0906_02040218_2fpga_vc0882_20100413_2130_normal_wit
hDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu
开dcache后, 运行部分指令后出错: reset异常或undefined instruction

属性没问题: 
0xC02=
  [11:8] [7:4] [3:0]
b_1100   0000  0010

9:33 2010-4-15
时间管理
1, 计划
1), mas review;
2), 看arm review结果. 

17:44 2010-4-15
VC0882, arm, corex-a8, test plan, 修改A8 testplan
Zhangjian邮件"修改A8 testplan"20100415_1827
经过最近三天arm training, 并和beizhan讨论, A8testplan我感觉需要有如下调整. 大家
看看有没有问题. 
1, cortex-A8测试会使用ICV拿到的arm verification code(c或汇编). 
代码kongyingqi已经发给我, 我会看下, 稍后加入panda_os.
2, 从arm接出了五个中断到IRQ. 这五个中断需要测试.
3, cache测试: 是否加入cache preload instruction 测试: PLD(memory to L1), 
PLE(memory to l2).
4, Trust Zone:
今天和ken确: 目前A8配置使用non-secure, secure不会有问题. 只是由于没有特殊配置, 
所以Secure world实际并不安全. 
需要确认non-security以及non-security mode, secure monitor mode, secure mode之前
切换是否需要测试. 

18:06 2010-4-15
VC0882, FPGA, audio, uart, 串口打印问题
1, 详情见zhangjian邮件"答复: MSG打印有问题"20100415_1809
1), 已经给boxue换了好用的台子. 
2), 今天这两个台子都是插audio子板后uart打印有问题. 
(1), 其中FPGA18是SW7[6:5]没有拨到ON造成uart子板没有供电, 拨到On后可以正常使用. 
可能之前被人拨过.
(2), 另一个FPGA维修中. 可能是开关烧了. 
2, 两个uart转接板都是换了uart电平转换芯片就好了. 

9:58 2010-4-16
时间管理
0, 9:36

1, 计划

2, 执行
1), 10:00-12:30 VC0882 A8&CS 讨论.
2), 10' 更新A8 testplan
3), 14:47- VC0882 L1 cache, 见"14:46 2010-4-16"

14:46 2010-4-16
VC0882, FPGA, L1 cache
1, 用"rev0_03041609_04040609_01041609_02041609_4fpga_normal_Dec+Gpu+De_NoUsbEnc"
测试L1 cache. 
2, 用CortexA8dhry测试pass. 
3, 跑kernel fail. 
4, 2FPGA跑sd卡. 发现开了cache copy没法结束, 每次读的数据都是0, 估计是cache代码问
题. 继续查.
CF: 
vc0882_20100414_2000_fpga_syn0906_02041612_2fpga_vc0882_20100414_2000_normal_wit
hDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace

20:01 2010-4-16
VC0882, FPGA, arm, Cortex-A8, action item, benchmark, cortex-A8和OMAP3530 test case: JIT, thumbEE
1, YiNong邮件"答复: vc0882: three issues about a8"20100416_1513
1), 我们要整理一个A8的benchmark suite.  现在的drhystone is just a toy.  
Benchmark里需要包括软件编解码，GUI, networking, 网页浏览等typical的application. 
 不搞这么一个benchmark, 我们都无从知道我们在设计过程中make 的一些call是不是make 
sense.    这个benchmark自己收集的也可以，用现成的EEMBC也可以(只要我们能从
somewhere弄到source code).   Peixin, 你能不能负责一下这件事？
2), 我们要assign不同的人把现在A8 distribution里的几千页document都认真读一遍。在
读的过程中，联想到什么问题，要尽量提出来。It would be  a shame that when we were 
using ARM’s IP, we could not even finish reading the collaterals. 这方面切莫大意
。
2, zhangjian邮件"答复: vc0882: three issues about a8"20100416_2050
之前学习A8时找到过一些非官方的benchmark测试结果, 不知道对benchmark suite这个
action item有没有帮助. 
1, Java: 基于ThumbEE JIT的dalvik比普通dalvik性能提升1.7倍: 
http://code.google.com/p/0xdroid/issues/detail?id=56
2, OMAP3530 benchmark: 一个博主的OMAP3530与x86, arm9, arm11性能比较. 包括整数和
浮点(NEON)测试: http://forum.linuxbj.com/node/9
3, 一个基于android的性能测试, 包括2D, 3D, Web Browser, JavaVM(Dalvik)等等:
http://code.google.com/p/rowboat/wiki/Benchmarks
3, (13:24 2010-5-4)JIT与thumbEE:
JIT(just in time)是一种编译技术. thumbEE可以用于实现thumbEE. 例如arm android上JIT首先是基于armV5T实现的, 然后应该会移植到armV7. 原来这个地方概念有点模糊: 把JIT和thumbEE划等号了. 其实Java RCT和thumbEE是等号的. 

13:11 2010-4-18
业内动态, 瑞芯微, RK28xx, RK2808, arm9, CEVA_MM2000, 揭密：首款基于Android的电纸
书将上市
1, 瑞芯微RK2808方案使用CEVA_MM2000 DSP做加速, 文中还提到联发科的Android手机会在
今天下半天推出. 
http://www.eet-china.com/ART_8800601825_480601_NT_33483d99.HTM, 已下载
至"D:\work\Documentation\竞争对手资料
\RK2808"和"\\10.0.26.99\share\zhangjian\doc\竞争对手资料".
CEVA_MM2000方案: 
\\10.0.2.36\sqmshare\Document\SOC\CEVA_MM2000_IIC.pdf
2, 让人想起了海思的K3, 当时海思K3也是在联发科前宣布推出的. 

17:50 2010-4-18
VC0882, cache
1, suxin kernel用+5, +10脚本都有错.
2, 先实验cache基本读写.

13:42 2010-4-19
时间管理
0, 9:42(忘了签到)

1, 计划
1), arm发信问rvdebugger memory窗口. 见"14:33 2010-4-19"
2), 填模块任务, 本周计划, A8细化测试项.
3), cache读写测试. 

4, 本周计划:
1), 测试L1 cache: 包括cache读写, 换入换出, clean, clean&invalidate. 
注: Cortex-A8 L1 cache单独的invalidate只能invalidate到L2, VC0882 pands_os不需要
这个API, 所以暂不测试. 
2), irq提交测试. 
3), 整理上周arm training资料. 

14:15 2010-4-19
VC0882, FPGA, 稳定性, 转接板导致FPGA J11开关烧坏, video转接板
GuoHaiFeng邮件"4FPGA-2修好了"20100419_1409
之前坏的4FPGA-2修好了，放在了测试室-10中。
原因是由于插了坏的子板到J11上，导致J11上的供电开关被烧坏了。
非常感谢mike！

14:33 2010-4-19
(15:45 2010-4-24)
VC0882, FPGA, rvdebugger, issue 0008320: rvdebugger无法清irq source pend寄存器
1, issue 0008320: rvdebugger无法清irq source pend寄存器, 给Arm发信
title:  rvdebugger write register(W1C or WO) fail
content: 
In rvdebugger memory window, write 0x8 to W1C(write 1 clear) register(current 
value is 0x8), the corresponding bit in this reg cannot be cleared. but use 
"setmem /w reg_addr=0x8" in rvdebugger cmdline can clear the corresponding bit. 
write to WO(Write Only) is same. 
is it normal?
Does the rvdebugger only issue the write register command while the register 
value has been changed? 

2, arm回信
Support-SW [support-sw@arm.com]"RE: rvdebugger write register(W1C or WO) fail (462504)"20100421_0635
[From Ralph Fulchiero - ARM Technical Support]
Please quote reference number 462504 when referring to this issue.
Dear Zhang Jian,
You wrote:
> In rvdebugger memory window, write 0x8 to W1C (write 1 clear) 
> register(current value is 0x8), the corresponding bit in this reg 
> cannot be cleared. but use "setmem /w reg_addr=0x8" in rvdebugger 
> cmdline can clear the corresponding bit. Write to WO (Write Only) is 
> same.
> 
> Is it normal?
> 
> Does the rvdebugger only issue the write register command while the 
> register value has been changed?
We confirmed that RVD v4.0 SP3 does cause a write to memory when the same value to memory is made through the Memory Window.  It also reads back the memory to update the memory window.
However, previous versions of RVD would not perform the write (through the Memory Window) if the value being written was the same.  
What version and build of RVD are you using?
When you issue the write through the Memory Window, do you see an associated command printed in the Command Window?  If you right-click, "Update View" in the Memory Window, do you see the value change (for clearing the bit)?  
Earlier you sent us an email for a Cortex-A8 target.  Does this case also apply to Cortex-A8?

3, 使用sp3后问题解决. 

14:47 2010-4-19
VC0882, FPGA, 模块任务细化, arm, irq, ICV仿真内容
1, Fengbeizhan邮件"请所有软件人员今天完成882 任务细化表格"20100419_1135
根据刚才开会结论，请所有软件人员，今天完成882 任务细化表格；
如下是表格目录：
\\10.0.2.36\sqmshare\share\fengbeizhan\VC0882\VC0882_FpgaTask细化_ICP.xls
每条item后边，都写上相应的标示，例如：
----done（表示fpga debug已经完成）
----no verification（表示仿真还没有完成）
----no fpga（表示fpga还没有完成）
2, ICV仿真内容在"D:\VC1600WCVS\doc\verification\plan"
3, arm任务(10:47 2010-4-26)修改:
1), mmu flat map(10%) -- done
2), cache on, off, clean, invalidate(L1 10%, L2 5%) -- no verification
3), run NEON code(10%) -- no fpga
4), run thumb-2, thumb-2EE code(5%) -- no verification
5), 5 irqs from Cortex-A8(PLE: 3(10%); Performans monitor(5%); CTI(5%)) -- no verification
6), access Cortex-A8 and other Coresight component using APB-AP(4%) -- done
7), access AXI memory system using AHB-AP(4%) -- no fpga
8), tracing instruction and data using ETM(10%) and ITM(15%) -- no verification
9), Cross Trigger Interface(2%)-- no verification
具体进度见weekly report.
"10:47 2010-4-26"end
4, irq任务
1), irq -- no fpga
2), fiq -- no fpga
3), priority -- no fpga
5, 每周任务: \\10.0.2.36\sqmshare\share\aiguo\weekly report

15:32 2010-4-19
VC0882, FPGA, arm: Cortex-A8, coresight, 文档
Huangwei邮件"Re: vc0882: three issues about a8"20100419_1527
A8/CoreSight 相关文档见下表：
File Path File name Pages owner 
A8 相关的文档 　 　 　 
VC1600WCVS\doc\module\Cortex-A8\doc\ARM_architecture\   
DDI0406B_arm_architecture_reference_manual    1140 　 
VC1600WCVS\doc\module\Cortex-A8\doc\ARMv7_architecture\ 
DDI0406B_arm_architecture_reference_manual      2158 　 
VC1600WCVS\doc\module\Cortex-A8\doc\trm\pdf_trm\                       
DDI0344J_cortex_a8_r3p2_trm      764 　 
VC1600WCVS\doc\module\Cortex-A8\doc\debug_architecture\                     
IHI0014O_ETM_ArchSpec  476 　 
IHI0029B__CoreSight_ArchSpec 202 　 
IHI0031A_ARM_debug_interface_v5    244 　 
VC1600WCVS\doc\module\Cortex-A8\doc\methodology\                  
CortexA8S_DFT_Implementation_guide   41 　 
VC1600WCVS\doc\module\Cortex-a8\doc\implementation_reference_methodology\ 
CORTEXA8_Express_r2p0_User_guide 52 　 
VC1600WCVS\doc\module\Cortex-A8\doc\csg DII0163J_cortex_a8_r3p2_csg 104 　 
CoreSight 相关的文档列表如下： 　 　 　 
VC1600WCVS\doc\module\CoreSight\docs\                           
CoreSight_Architecture_Specification 202 　 
CoreSight_Components_Implementation_Guide 100 　 
CoreSight_Components_TRM  376 　 
CoreSight_DK_DesignGuide        130 　 
CoreSight_DKA8_r2p0_Integration_Manual 110 　 
Note
1. Architecture reference 内容较多
，VC1600WCVS\doc\module\Cortex-A8\doc\ARM_architecture下主要是将ARMv6架构， 我们
是不是主要focus在
VC1600WCVS\doc\module\Cortex-A8\doc\ARMv7_architecture上就可以了? 这个文档内容覆
盖面广，我个人觉得不同的team需要一起看。

16:04 2010-4-19
VC0882, FPGA, Linux kernel, emi, ethernet
1, 网卡转接板注意事项: 
1), JP1[2]连到EMI[15]
2), 如果LED1, LED2不亮, 多插拔几次网线. 
2, Suxin网络调试问题整理:
1), 水晶头有无变压器. 
2), 电阻焊接错误. 

16:36 2010-4-19
VC0882, FPGA, 稳定性, aclk晶振问题导致RVI无法连接, norflash boot无法启动. 
FPGA7. zhangpu report. 

9:56 2010-4-20
VC0882, FPGA
1, YiNong邮件"答复: vc0882: three issues about a8"20100420_0030
加NOP过去帮我们解决了问题，但应该研究一下A8的instruction set里，除此之外是不是有
更好的做法，例如；
有没有指令可以直接flush instruction pipeline
若没有，是不是有指令可以暂时disable branch prediction, 这样在下一条branch时，前
面的instruction 都应该被 commit了。
或者ARM core processor给NEON这样的coprocessor issue 指令时，NEON前面的
instruction是不是都被commit了？
我没有仔细读A8的manual,  所以上述意见纯属猜想。不过A8的instruction manual里，诸
如此类的东西应该是有一些的。相应的人员可以仔细读一读。
2, Zhangjian邮件"答复: vc0882: three issues about a8"20100420_1050
1), arm Cortex-A8可以用ISB指令保证指令执行顺序. 用dsb保证数据读写顺序. 
830 bootloader代码实际两者都要保证, 可以用isb, dsb代替nop. 
2), 另外我感觉meiping的代码有问题. 
remap后的指令不应该再访问remap前的memory区域. 我理解A8中这样用比较保险: 
STR     r1, [r0]
dsb
isb
LDR     pc, r4
其中r4是要跳转的地址. 

11:12 2010-4-20
VC0882, FPGA, cache, 开cache后读sd卡错误, \todo 总结调试经验
1, 计划:
1), 设置ddr size为64M, 这样高64M用于debug. 具体步骤
(1), 映射p_addr到v_addr1(平映射), v_addr2(系统中不使用的地址, 仅仅用于debug). 
(2), arm写v_addr1地址数据. 用rvdebugger观察v_addr1和v_addr2数据. 
(3), 执行clean操作, 看v_addr1数据是否更新到v_addr2数据. 
(4), DMAC搬移随机数据到p_addr. 
(5), arm执行clean&invalidate指令, 并读v_addr1数据. 确认数据是否正确. 
2), DMAC的burst length对开不开cache有没有影响呢? 
2, (14:50 2010-4-20)
vc0882_20100414_2000_fpga_syn0906_EMIPULL_02041612_2fpga_vc0882_20100414_2000_no
rmal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu
.ace
1), DMAC和Linux kernel都可以. FPGA12.
今天之前实验板子DMAC出错应该是台子或ddr问题(FPGA11, ddr): 因为无论开关cache, 
DMAC搬运都会出错. 
2), 用"14:46 2010-4-16"的CF: 
vc0882_20100414_2000_fpga_syn0906_02041612_2fpga_vc0882_20100414_2000_normal_wit
hDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
"也可以, 难道是台子问题?
3), 总结(\todo 整理): 一个是选择测试模块要合适(DMAC比SD好, 因为后者是外设, 牵扯
东西多), 一个是排除其它因素(今天只是因为昨天的台子别人在使用, 才换的台子).
3, 先发信:
zhangjian邮件"VC0882 cache初步可用( one of three issues about a8 )"20100420_1709
Hi, Suxin, dangxiangfu
VC0882 cache初步可用, 请实验OS运行是否正常. 具体情况如下: 
1), 用DMAC测试cache clean, invalidate 通过. Suxin Linux kernel(无文件系统)可以正
常启动到挂载文件系统. 
4月16日kernel无法启动可能是台子不稳定造成的(今天用相同的映像, 脚本, CF code, 只
是换了FPGA台子, 无法复现问题). 
2), 读sd卡仍然有问题, 会继续debug sd读写.
3), 测试了如下CF code: 
vc0882_20100414_2000_fpga_syn0906_EMIPULL_02041612_2fpga_vc0882_20100414_2000_no
rmal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu
.ace, 
vc0882_20100414_2000_fpga_syn0906_02041612_2fpga_vc0882_20100414_2000_normal_wit
hDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace

thanks
zhangjian
4, 查sd问题:
1), 分析:
(1), DMAC和SD调用的cache函数: 后者只是clean&invalidate. 前者是根据需要选择clean
或clean&invalidate.
(2), DMAC和SD的DMA不同: 这个感觉应该没有影响. 
(3), sd配置寄存器中指令执行顺序有问题. 
(4), 注: 如何用命令开关cache: i/dcache -on/-off. 不写参数表示查询i/dcache状态. 
5, 分析sd
注: sd需要先open才能read.
1), 实验开关cache下: mul,single read 数据都是正确的. 明天加fat实验. 
6, 备注:
未开mmu时, rvdebugger中做非对齐访问会提示: 
Failed to read the requested number of bytes to memory

10:03 2010-4-21
VC0882, rvds, rvdebugger, rvdebugger4.0 sp3以下只有当memory窗口数据变化才会实际
写memory．
Support-SW [support-sw@arm.com]"RE: rvdebugger write register(W1C or WO) fail 
(462504)"20100421_0635
[From Ralph Fulchiero - ARM Technical Support]
Please quote reference number 462504 when referring to this issue.
Dear Zhang Jian,
You wrote:
> In rvdebugger memory window, write 0x8 to W1C (write 1 clear) 
> register(current value is 0x8), the corresponding bit in this reg 
> cannot be cleared. but use "setmem /w reg_addr=0x8" in rvdebugger 
> cmdline can clear the corresponding bit. Write to WO (Write Only) is 
> same.
> 
> Is it normal?
> 
> Does the rvdebugger only issue the write register command while the 
> register value has been changed?
We confirmed that RVD v4.0 SP3 does cause a write to memory when the same value 
to memory is made through the Memory Window.  It also reads back the memory to 
update the memory window.
However, previous versions of RVD would not perform the write (through the 
Memory Window) if the value being written was the same.  
What version and build of RVD are you using?
When you issue the write through the Memory Window, do you see an associated 
command printed in the Command Window?  If you right-click, "Update View" in the 
Memory Window, do you see the value change (for clearing the bit)?  
Earlier you sent us an email for a Cortex-A8 target.  Does this case also apply 
to Cortex-A8?

10:10 2010-4-21
VC0882, FPGA, 关闭issue, cache, dcache, rvdebugger
1, 0008712: 开dcache后程序运行出错 
注释见"11:12 2010-4-20"3
2, 0008320: rvdebugger无法清irq source pend寄存器 
1), 是rvdebugger版本过低导致的. 见"10:03 2010-4-21".
2), beizhan提醒大家注意这点, 我附上了命令行写寄存器的命令:
命令行写memory/寄存器:
setmem /w 0x60011000=0x8
表示向0x60011000写一个word 0x8. 
详细说明见"rvds安装目录
\ARM\Documentation_RVD_4.0\PDF\DUI0175J_rvd_cli_guide.pdf" p351. 

10:29 2010-4-21
时间管理
0, 9:38

1, 计划
1), VC0882 sd_cache: 一定要留一份正确的mmu, cache映像. 而且要打tag. 见"10:39 
2010-4-21"
2), 整理计划. 看看irq什么时候完成. 
3), 留一个小时看A8 TRM, 整理arm training资料. 
4), mmu的页表配置需要按照A8要求修改. 这个需要这两天完成. 做完后, 就可以给大家实
验mmu和cache了. 
5), rvdebugger load文件出错的bug如果问arm就直接回复今天的邮件就行. 
6), 多了一项任务: 准备bootloader环境: rvct no lib. \todo 打印文档. 

10:39 2010-4-21
VC0882, FPGA, sd, mmu, cache, L1 cache; "6": mmu, cache使用文档1
1, CF: 
vc0882_20100419_2000_fpga_0906_02041612_2fpga_vc0882_20100419_2000_normal_withDe
TvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
2, 昨天不用fat没问题. 今天一步一步查fat读写. 
1), 读的第一个block是正确的. 
2), 需要结合fat看. 
(11:35 2010-4-21)目前看到是, 开cache情况下: Fat_ls()读完最后一个文件/目录后, 
"_f_addlfn()"没有在
if ((!de->name[0]) || ((unsigned char)(de->name[0])==0xe5)) {
    plfn->state=F_LFNSTATE_INV;
返回. 下午继续查. 
3, (13:57 2010-4-21)下午计划:
1), 确认: 没有编译CACHE_ON时, dmac应该无法正常使用. 如果可以怀疑cache操作有问题. 
如果不可以, DMAC中CACHE_ON宏改为CACHE. 
2), 用fanzhijun今天下午的ace试试:  
vc0882_20100420_2000_fpga_0906_02042114_2fpga_vc0882_20100420_2000_normal_withDe
TvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
3), 跟踪fat. 
4, 实验
"vc0882_20100420_2000_fpga_0906_02042114_2fpga_vc0882_20100420_2000_normal_withD
eTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace", 停
在开dcache后, 开icache函数中. 
1), 
用"vc0882_20100419_2000_fpga_0906_02041612_2fpga_vc0882_20100419_2000_normal_wit
hDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
"实验. 
(1), dataabort:
DFSR=0x0000080D
[12]: 0 = AXI Decode error caused the abort, reset value.
[11]: 1 = write access caused the abort.
[12,10, 3:0]: b001101 permission fault, section

DFAR=0xCCCCCCCC
The purpose of the Data Fault Address Register (DFAR) is to hold the Modified 
Virtual Address (MVA) of the fault when a precise abort occurs.

lr=0x000232f4, 这个地址后面数据都是0xcccccccc. 看来是有问题. 单步跟踪发现死
在"VIM_SYS_Init()"中? 
(2), 关闭cache也有这个问题.
DFSR=0xd. 说明是read造成的abort. 
VIM_SYS_Init()->VIM_SYS_CreatTask():
#if MEM_CHECK_STACK
    memset(stackpoint,0xCC,task->StackSize);
    g_TaskStackPoint[taskid] = stackpoint;
#endif
    VIM_HAL_MEMSET(buf,0,NU_MAX_NAME);
写stackpoint时, 代码段被写坏. 
再继续追查, 发现"VIM_MMU_CacheMalloc()"时的地址在代码段:
stackpoint=0x000207B0, pc=0x000232F0.
(3), 查g_first_available_memory=0x0005B998. 
也就是说"VIM_MMU_CacheMalloc()"有问题. 
(4), create task时, caller是UNDEF. 
与"\\10.0.26.99\share\zhangjian\projects\VC0882\code\20100420_cache\sd_dmac_cach
e\VC0882.axf"对比. 后者也是UNDEF. 但是分配的地址是正确的. pointer=0x0005BCF0(已
经+8 word)
(5), (19:51 2010-4-21)继续跟踪.
实际分配memory在DMC_Allocate_Memory(), 发现memory_ptr("memory_ptr =  pool -> 
dm_search_ptr;")不正确. 这个pool指针是从g_mem_pool传进来的. 查代码发现
在"VIM_MMU_Init()"中"VIM_MMU_Creat()"时地址
((DM_PCB*)g_mem_pool[1]->dm_search_ptr)就不正确. 这个地址应该是
从"g_cache_large_pool_addr"加一定偏移得到的. 
(6), 查"g_cache_large_pool_addr", 发现运行
_cpu_dcache_intellectual_clean_and_invalidate()后"start_memaddr". 感觉可能是堆栈
问题. 
(7), 详细跟踪"_cpu_dcache_intellectual_clean_and_invalidate"
最后发现是我在"_cpu_dcache_intellectual_clean_and_invalidate"加入的保护现场语句:
"stmda sp!, {r0-r11,lr}"是decrease after, 和编译器生成的不一致. 
编译器用的是pop和push.
昨天没问题今天有问题是因为今天把"_cpu_dcache_intellectual_clean_and_invalidate"
放到mmu前面, 昨天在aasp中打开cache, 这样把问题暂时掩盖了, 可能sd是由于这个问题导
致的. 
5, 修改后, sd的ls比原来短了很多, 但是仍然有错. 还要继续查. 
1), 又实验了一次sd裸读, 用single读了三个sector. 都是正确的. 
再ls中实验发现有错. 怀疑是cache操作问题. 
2), 把dcache操作换成清整个dcache的"_cpu_dcache_intellectual_clean_and_invalidate()"就可以了. 
复制多个目录(build)到sd卡, 实验ls, cd, cp, cmp都没问题. 
3), 加dsb, isb实验. 还是不行. 
单步跟踪, 发现addr=0x44328, 比large memory pool的0x5b9c4小. 
4), 明天先查这个地址从哪里来的, 会不会是bss? 然后实验.
这就能解释为什么DMA可以了: 因为DMA是从large memory pool分配出来的. 

6, (10:43 2010-4-22)先上传代码(发信只发前三条): 
L1 cache初步可用: 测试了dmac direct mode和sd single/multi read/write. 
1), 所有target都打开了mmu, 如果有问题可以关闭mmu: 删除
target中"-define=MMU_FLAT_MAP=1". 关闭mmu时dcache无法使用. 
2), 如下命令分别表示icache/dcache 开关: 
icache -on; icache -off; dcache -on; dcache -off. 
如果开i/dcache都没有问题. 可以删除target中"-define=CACHE_OFF=1", 这样系统启动时
会默认打开cache. 
注: 大家更新时建议先删除".cproject", CVS可能无法正确merge. 
3), cache用法: 
cache用法可以参考"sd\VIM_SD_Driver.c": VIM_SD_ReadOneBlk()和VIM_SD_WriteOneBlk()
调用的VIM_SD_CacheInvalidateM2C()/VIM_SD_CacheCleanC2M(). 
API如下: 
DCACHE_IS_ENABLED: 判断dcahe是否打开. 
DCACHE_CLEAN_RANGE(): 把cache数据写回memory. e.g. DMA读memory前要把cache数据写回
memory. 
DCACHE_INVALIDATE_RANGE(): 使cache数据无效, 一般用于DMA写memory后, 使cache数据无
效, 保证arm下次从memory直接取数, 而不是从cache取数. 但是现在cache invalidate借用
DCACHE_CLEAN_AND_INVALIDATE_RANGE实现, 所以只能放在DMA前使用. 
DCACHE_CLEAN_AND_INVALIDATE_RANGE(): clean+invalidate. 
参数: 
addr: cache操作起始地址. 
size: cache操作size, byte单位. 
4), 之前dmac和linux kernel可以但sd不可以的问题如下: 
(1), _cpu_dcache_intellectual_clean_and_invalidate()写坏了stack上的一个word;
(2), fat里面的有些buffer在g_first_available_memory之前, 传给sd时没有做
clean&invalidate. 
5), 打开MMU方法:
target中加入"-define=MMU_FLAT_MAP=1". 

7, (15:11 2010-4-22)上传代码后更新到最新代码, 打tag: 
A8_MMU_CACHE_OK_dmac_sd_test_PASS
表示A8 MMU和L1 cache oK, 开mmu和cache情况下dmac和sd测试通过. 
基于如下CF code测试:
vc0882_20100419_2000_fpga_0906_02041612_2fpga_vc0882_20100419_2000_normal_withDe
TvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu
或
vc0882_20100420_2000_newddr2_fpga_0906_02041612_2fpga_vc0882_20100420_2000_norma
l_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ac
e
4月21日下午开始的版本暂时有问题. 

8, "6,7"文档已加入"D:\VC0882\document\arm\vc0882 Cortex-A8及环境调试笔记.txt"

14:15 2010-4-21
VC0882, audioif没有DMA error这个中断. 
zhangjian邮件"关于DMA error中断"20100421_1510
Hi, beizhan, aiguo

今天boxue调audio时, 发现audio中没有加入类似sdio的DMA error中断, audio只有over, 
overflow等中断. 
即: 如果给audio dma的地址是错误的, audio不会报中断. 
刚才和duanlihua, boxue讨论, duanlihua会在audio中加上这个error中断. 
据duanlihua说marb里面应该有这个中断, 模块内可能有的有这个中断, 有的没有. 我担心
这样造成系统鲁棒性不好. 
有没有必要把这个统一起来, 不管是marb报还是模块报, 一定要报DMA error这个中断. 如
果是marb报我们还需要知道是哪个模块导致的. 

zhangjian

14:44 2010-4-21
项目, CVS密码是"姓名+1234", zhangjian, caijin实验通过. 

15:12 2010-4-21
VC0882, FPGA, rvdebugger, 
1, FengBeizhan邮件"RV DEBUG load 2M 以上文件以raw8,raw16 方式到DDR内存中有问
题"20100421_1424
Hi，zuoxing，huangwei，zhangjian
0008271: RV DEBUG load 2M 以上文件以raw8,raw16 方式到DDR内存中有问题；
从早上zhangjian询问rvdebug cmd line和memory window 写的问题的答复来看，我感觉也
有可能是rvdebug工具的问题；
必定我们用的是一个非正版的软件；
早上给我们的答复说应该用打了 sp3 补丁的rvdebug4.0；目前我们没有这个补丁；
我觉得zhangjian可以再问问arm，看这个问题是否也是工具的问题？ 不知道这样他们会不
会怀疑我们用的不是正版，从而带给我们一些麻烦。
2, zhangjian邮件"答复:  RV DEBUG load 2M 以上文件以raw8,raw16 方式到DDR内存中有
问题"20100421_1519
hi, cuiyunfei, dashan
1), 之前的实验都是没有开mmu的, 你们可以编译"min_mmu"这个target, 运行aasp后再实
验. 看看问题是否一致. 
因为我发现用不开mmu时, 用rvdebugger setmem做非对齐访问也会报raw8一样的错误: 
Failed to read the requested number of bytes to memory
2), 如果确定仍有问题, 需要把操作方式抓图, 并保存rvdebugger cmdline的命令和log. 
这样便于问arm. 

17:32 2010-4-21
VC0882, kernel, suxin: 开cache后, 内核启动很快, 但是用户空间打印helloworld仍然很
慢
1, 给suxin邮件
1), 中断打印是在哪里加的? asm_do_IRQ?
2), 可以试试用sleep代替打印, 如果有问题, 可以看看是否timer实现有问题. 印象中
kernel调度是用的
vc088x_timer_clockevent.set_next_event(vc088x_timer_set_next_event)设置事件. 
sleep用的是vc088x_clocksource.read(vc088x_get_cycles()). 所以kernel启动正常可能
sleep还是有问题. 这个问题我们原来遇到过. 当时就是sleep时间特别长.
3), 印象中busybox里面有些地方有delay. 如果timer有问题, 可能这些delay就长了. 不过
这个不应该影响timer中断. 

11:26 2010-4-22
VC0882, FPGA, sd, mmu, cache, L1 cache, 续
sd dmac测试: dmac dirctautorantest 2, sd read/write single/multi测试通过. 
1, 实验
1), 
vc0882_20100421_2000_newddr2_fpga_0906_02042210_2fpga_vc0882_20100421_2000_norma
l_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ac
e
FPGA18: 
sd_dmac_mmu: +10, 开icache: pc跳到0x0; 开dcache后无反应, 停止时提示
> halt
Error: 0x02410100: The run control operation could not be completed : .
Error: 0x021d0102: Error Failed to remove SW breaks from memory on stop
 from target : Cortex-A8_0.
Error: 0x021d0102: Error Code Sequences disabled. from target : Cortex-A8_0.
pc在"prefetch abort".
+0, +5, 开icache: pc跳到0x0; 开dcache后无反应, 无法停止, 提示: 
> halt
Error: 0x02410100: The run control operation could not be completed : .

yinxingjie台子(FPGA21): cif?, 开mmu正常. 开icache后死在0x0或prefetch abort. 
yuyang(FPGA12): DE, 开mmu时AASP启动出错, 关闭mmu正常. 
2), 
vc0882_20100419_2000_fpga_0906_02041612_2fpga_vc0882_20100419_2000_normal_withDe
TvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
FPGA18: sd_dmac_mmu, sd dmac测试通过. 
3), 
vc0882_20100420_2000_fpga_0906_02042114_2fpga_vc0882_20100420_2000_normal_withDe
TvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
FPGA18: 
sd_dmac_mmu: +0, +5, +10开mmu后的系统初始化中fail
sd_dmac_nommu: sd dmac测试通过; 
sd_dmac_nommu, 启动后开icache: +0: icache后无法运行. +10, +5: undefined 
instruction. 
4), 
vc0882_20100420_2000_newddr2_fpga_0906_02042114_2fpga_vc0882_20100420_2000_norma
l_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ac
e
sd_dmac_mmu, +0, +5, +10开mmu后的系统初始化中fail
sd_dmac_nommu, 启动后开icache: +0: 开icache后停在一条正确语句, 关闭后可以继续正
确运行. +10, +5: undefined instruction. 
5), 
vc0882_20100420_2000_newddr2_fpga_0906_02041612_2fpga_vc0882_20100420_2000_norma
l_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ac
e
sd_dmac_mmu: sd dmac测试通过; 
似乎是A8换成0421的就不行了. 
2, ICP发信:
zhangjian邮件"开mmu和Cache有问题IC正在查原因"20100422_1427
4月21日下午开始的版本开mmu或cache后不稳定. IC正在查原因. 
请大家删除.cproject后重新更新CVS. 目前mmu和cache都是关闭的. 
如果要使用cache大家使用4月21日上午的版本. 
vc0882_20100419_2000_fpga_0906_02041612_2fpga_vc0882_20100419_2000_normal_withDe
TvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu
或
vc0882_20100420_2000_newddr2_fpga_0906_02041612_2fpga_vc0882_20100420_2000_norma
l_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ac
e
3, 给ICD, ICV发信:
hi, Huangwei, kongyingqi, guohaifeng, fenzhijun

1), 4月21日下午开始的版本打开MMU和CACHE有问题: 单独打开mmu或单独打开icache软件都
会运行出错. 关闭mmu,cache后软件运行正常. 
(1), 现象: 跳回0地址或prefetch abort或arm无法停止等, 调ddr DQS timing为+5, +10, 
现象有变化但还是会出错.
(2), 与4月21日上午版本相比, A8有0421和0422两个版本, 问题类似. 
2), 用同样软件4月21日上午的FPGA版本开mmu, L1 icache, L1 dcache没有问题. 测试内容: 
dmac ”dirctautorantest 2 0”, sd single/multi read/write.

该问题已报Issue: 0008782: 4月21日和4月22日的A8开MMU或CACHE后有问题
mmu和cache有问题会影响ICP和AE进度, 希望尽快解决. 

hi, kongyingqi

麻烦你仿真一下最新FPGA版本. 

注: 4月21日上午版本指:
vc0882_20100419_2000_fpga_0906_02041612_2fpga_vc0882_20100419_2000_normal_withDe
TvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu
或
vc0882_20100420_2000_newddr2_fpga_0906_02041612_2fpga_vc0882_20100420_2000_norma
l_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ac
e

3, (20:50 2010-4-22)
在FPGA11实验下午fanzhijun出的没有um A8的cf code, 开cache后仍然出错, 具体情况如下
1, 测试无UM的版本: 
vc0882_20100421_2000_newddr2_fpga_0906_02042210noUM_2fpga_vc0882_20100421_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
ddr timing +0, +5, +10都是fail, 现象如下.
mmu: 程序可以运行. 
mmu+icache: 开icache后程序停在一条正确语句, 用rvdebugger关闭icache后, 程序可以继
续运行. 
mmu+dcache: 开dcache后发生dataabort异常. 
2), 4月21日上午的FPGA版本可以正常使用
vc0882_20100420_2000_newddr2_fpga_0906_02041612_2fpga_vc0882_20100420_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ac
e
开mmu, icache和dcache时DMA测试pass

12:38 2010-4-22
时间管理
0, 9:28

1, 计划
1), VC0882 L1 cache:
(1), 上传代码. <DONE>
(2), 实验最近三天的CF code开cache是否正常. 对比实验newddr和cvs ddr两个CF code. 
发Issue. <DONE: 见"11:26 2010-4-22"> 
(3), 给大家发信: 开cache可能台子可能不稳定, 如果有问题, 建议大家按如下顺序实验: 
开icache, 开dcache, 测试dmac(directautorantest 10). <暂时取消: 最新CF code开MMU, 
CACHE出错>
2), VC0882 Cortex-A8
(1), NEON/VFP
A, arm validation code.
B, compiler optimize code: fir. 对比PB-A8结果. 
(2), Performance Monitor Irq: 看文档. 计划明天做. 
(3), rvds4.0 sp3实验: memory窗口写同样值, 看硬件有无动作. 如果没问题的话给
cuiyunfei或zhoudashan实验memory访问问题. <DONE: 已给dashan, cuiyunfei发信>
3), 时间管理整理. 
4), suxin kernel上传CVS. 

15:52 2010-4-22
公司, 工具, HPCC, 从HPCC复制文件: scp/winscp
scp 
zhangjian@10.0.31.4:/doing/public/training/20070814_arm_architecture_intro_by_yi
n_wenchao/arm-arch-intro.pdf .

18:34 2010-4-22
VC0882, rvds sp3
第一次安装时有一个cortex-a8 iss文件没有复制成功. 后来破解有问题重新安装rvds和sp3, rvds有问题, sp3没有问题. 

9:44 2010-4-23
VC0882, 文档阅读, Cortex-A8, NEON
1, CortexA8 TRM r3p2, "NEON and VFP Programmers Model", p551-p557
The NEON coprocessor can receive up to two valid Advanced SIMD instructions per cycle from the ARM integer instruction execute unit. In addition, it can receive 32-bit MCR data from or send 32-bit MRC data to the ARM integer instruction execute unit. The NEON coprocessor can load data from either the L1 data cache or the L2 memory system. Enable L1 data caching for best performance of the NEON coprocessor when the L2 memory system is off or not present. See c1, Auxiliary Control Register on page 3-61.
The VFPv3 architecture supports execution of short vector instructions of up to eight operations on single-precision data and up to four operations on double-precision data. The register file is especially suited for short vector operations. The four single-precision and eight double-precision register banks function as four hardware circular queues.
CDP instructions access the banks in a circular manner. Load and store multiple instructions do not access the registers in a circular manner but treat the register file as a linearly ordered structure.
2, arm training materials, 302v02, "15 NEON Processor Architecture"
302v02 p26: NEON load Instruction FLow. p28: NEON store instruction FLow. 
这两个图说明了interger core, L1/L2 cache和NEON如何配合. 
1), NEON load/store 地址使用interger core的寄存器. 

3, \todo 看"25 NEON Intruction Set", "26 NEON Coding Examples".

10:51 2010-4-23
时间管理
0, 9:34

1, 本日计划和执行
1), 9:40-10:52 VC0882 Cortex-A8阅读: NEON. 见"9:44 2010-4-23".
2), VC0882 cache, pands_os见"11:39 2010-4-23", 已给给yinxingjie发信(抄送VC0882_ICP); kernel"13:19 2010-4-23". 
3), 14:10-15:46 clkrst mas review.
4), 支持caijin和yinxingjie实验cache, caijin在VP6实验通过. yinxingjie开不开MMU都有问题, 怀疑是台子问题. 
5), VC0882 Cortex-A8
(1), NEON/VFP
A, arm validation code. <暂缓, 需要先看懂build_src脚本并转为makefile或者在Windows下编译一个csh> 
B, compiler optimize code: fir. 对比PB-A8结果. 
(2), Performance Monitor Irq: 看文档. 计划明天做. 
6), 时间管理整理. 
7), 关注suxin porting进展. 建议suxin在VC0830 xclk跑kernel对比, 看看是否也是进入用户空间后慢. 

2, 次日计划
1), "看"25 NEON Intruction Set", "26 NEON Coding Examples"."
2), 完成irq. 

11:39 2010-4-23
VC0882, FPGA, sd, mmu, cache, L1 cache, 续; "2": mmu, cache使用文档1
1, (已发信)
> tag : vc0882_20100422_2000的2FPGA程序：
> 2010-4-23
> vc0882_20100422_2000_fpga_0906_02041612_2fpga_vc0882_20100422_2000_normal_
> withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdec
> Gpu.ace
> 新tag，A8替换回4月16日的版本，即不带um，未替换SE为IRQ，按实验现象看，cache
> 应可用。
> 这一版是在UCF里将SE/IRQ做了下拉，如果效果不好，还有一个改代码的版本在跑。

实验上面CF. mmu, L1 cache可以使用: FPGA12: 测试dmac和sd PASS. FPGA8测试dmac pass.
注: dmac测试指"dirctautorandtest 10times ddr2ddr. 

hi, fanzhijun
暂时就用4月16日A8出CF吧.

2, yinxingjie, VC0882_ICP
hi, yixingjie
如下版本CF code mmu cache可以使用(测试了dmac和sd):
vc0882_20100422_2000_fpga_0906_02041612_2fpga_vc0882_20100422_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
4月21日下午和4月22日版本不能用是修改Cortex-A8 FPGA造成的. 查清问题前IC会先用老A8(4月16日)给我们出CF.
麻烦你在cif中实验cache是否正常. 谢谢.
开MMU和CACHE方法:
1), 开MMU, target中加入"-define=MMU_FLAT_MAP=1". clean后重新编译. 
2), 开cache. "icache -on; icache -off; dcache -on; dcache -off"
3), 查看mmu, cache是否打开:
输入"icache"/"dcache", 两次回车后, 会打印cache on/off:
AASP SD0:/>dcache 
[cache]->do_cache_dcache()
open cache(yes/no)/[no]
close cache(yes/no)/[no]
dcache on
4), 如果没有定义"-define=MMU_FLAT_MAP=1", 开dcache后会出错或aasp无反应(因为没有初始化页表). 

hi, anzhiming, fengbeizhan
开cache后顺手做了sd speed测试, multi read/write 仍然是300多k. 

3, (10:29 2010-5-12)4FPGA测试过的CF code
zhangjian2zhangpu邮件"答复: 开mmu和Cache有问题IC正在查原因"20100429_1339
我中午用的cf code: 
rev0_03042009_04040609_01042009_02041609_4fpga_normal_Dec+Gpu+De_NoUsbEnc.ace
如果使用其它cf code注意看一下A8 FPGA版本, 目前我测试通过的都是” 02041609”这个版本(fpga02 4月16日9点版本).

4, 0416后面的A8版本由于dbgnoclockstop相关问题无法使用, 相关进展见"IC查A8何种修改导致cache无法使用"log, IC调试过程中A8版本恢复到了4月16日. "17:05 2010-5-11"3是最终结论. 

13:19 2010-4-23
VC0882, FPGA, Linux porting, zhangpu
CF: rev0_03042009_04040609_01042009_02041609_4fpga_normal_Dec+Gpu+De_NoUsbEnc.ace
1, kernel and toolchain
kernel: /mnt/share/porting/linux-2.6.29
toolchain: PATH=$PATH:/usr/local/arm-2009q3/bin/
(14:32 2010-7-8)/usr/local/arm-2010q1/arm-none-linux-gnueabi/bin/"14:32 2010-7-8"end
2, 测试kernel
\\10.0.26.99\share\zhangjian\projects\VC0882\code\20100416_cache
开cache后可以启动到挂载文件系统. 

15:49 2010-4-23
VC0882, suxin Linux 调试进展
1, 4月22日进展:
SunXin邮件"答复: VC0882 cache初步可用( one of three issues about a8 )"20100422_2131
经过排查，昨天分析的Timer中断异常为误报，操作系统tick正常。
跟了一下内核代码，没有发现执行特别慢的关键节点，而是在执行很多系统调用时逐渐积累导致运行缓慢。
由于每一次使用系统调用都会引发 “用户空间->内核空间->用户空间”的转换，推测是不是因为这样的转换在目前低速的FPGA上对系统开销太大，致使应用程序运行较慢，而单纯的内核程序运行很快？待证实。
经过排查，昨天分析的Timer中断异常为误报，操作系统tick正常。
跟了一下内核代码，没有发现执行特别慢的关键节点，而是在执行很多系统调用时逐渐积累导致运行缓慢。
由于每一次使用系统调用都会引发 “用户空间->内核空间->用户空间”的转换，推测是不是因为这样的转换在目前低速的FPGA上对系统开销太大，致使应用程序运行较慢，而单纯的内核程序运行很快？待证实。
2, 4月23日进展
1), 上午实验: performance monitor, icache miss比较多. 
2), 考虑用830上面cpu和mddr降频到20-30MHz实验. 

19:03 2010-4-23
VC0882, FPGA, thumb-2, thumbee
1, Linux kernel中thumbee代码: 
linux-2.6.29.6/arch/arm/kernel/thumbee.c

20:05 2010-4-23
本组同事信息, 冯利军, 刘小涛
加盟中星微IC-2部任软件工程师的冯利军，直接向软件研发经理艾国汇报工作。冯利军先生毕业于合肥工业大学通信工程专业；加盟中星微之前曾在北京声迅电子、北京光大振邦任职；他的办公电话是：010-68948888-7363 Email:fenglijun@vimicro.com
加盟中星微IC-2部任软件工程师的刘小涛，直接向软件经理艾国汇报工作。刘小涛先生毕业于北京科技大学计算机系统结构专业并获得硕士学位；加盟中星微之前曾在中钞信用卡厂、IUT无线通信有限公司任职；他的办公电话是：010-68948888-7364 E-mail：liuxiaotao@vimicro.com

20:51 2010-4-23
VC0882, arm cortex-A8, rvds, arm support 联系方式(contact window), 资料整理
1, ARM Support Guide
自Huangwei邮件"ARM support contact"20100427_1105
Support direct line +86 21 6229 2003
Support Alias:
Support-cores@arm.com ( CPU )
Support-sw@arm.com (Tools and Software)
Support-cards@arm.com (Boards)
Support-Primecell@arm.com ( Fabric Primecells)
Support-AMBA@arm.com (AMBA Protocol)
Support-mali@arm.com ( Mali)
Physical IP Support (Std Cell, Memory, IO and PHY)
Please log Physical IP support request in http://access.arm.com, you need to
create a user name by your company email address.
Click on "LOGIN" button. Then enter your user name and password.
Click on "New Technical Request" to enter new Service Request or "New
Business Request" for product access requests. Click on "Technical
Status" link to look at all the SRs that your company filed.

2, 在silver.arm.com注册后可以下载很多有用的东西, 例如Rvds4.0 sp3, rvds4 nucleus支持包, OpenmaxDL for Cortex-A8, 部分无法直接下载的文档. 
rvds资料见"\\10.0.2.36\sqmshare\Utilities\IDE\rvds4.0".
openmax见"\\10.0.2.36\sqmshare\Document\ARM\openmax_code"

21:19 2010-4-23
多媒体, codec, openmax, 资料
http://www.khronos.org/openmax/
http://blog.csdn.net/shenbin1430/archive/2009/07/17/4355921.aspx
http://writeblog.csdn.net/mickeyfirst/archive/2009/08/04/4406882.aspx
http://heaven.branda.to/~thinker/GinGin_CGI.py/show_id_doc/391
http://www.celinux.org/elc08_presentations/gst-openmax.pdf
http://hi.baidu.com/aokikyon/blog/item/2a9d0ff32aaa6f5b352accb2.html
http://markyinsystem.blogspot.com/2009/10/openmax.html

10:57 2010-4-24
时间管理
0, 10:49

1, 计划
1), VC0882 mas review: interconnect. <DONE: 见"15:30 2010-4-24">
2), arm邮件, loadfile2mem raw8, raw16 fail. <DONE: 等待arm回信, 见"15:41 2010-4-24">
3), 跑arm validation code. 
4), VC0882 Cortex-A8
(1), NEON/VFP
A, arm validation code. <暂缓, 需要先看懂build_src脚本并转为makefile或者在Windows下编译一个csh> 
B, compiler optimize code: fir. 对比PB-A8结果. 
(2), Performance Monitor Irq: 看文档. 计划明天做. 
5), 时间管理整理. 
6), 关注suxin porting进展. 建议suxin在VC0830低频跑kernel对比, 看看是否也是进入用户空间后慢. 

4, 其它计划:
1), "看"25 NEON Intruction Set", "26 NEON Coding Examples"."
2), 记得A8有一个L1, L2 cache配置表格. 忘了放什么地方了.
3), 文档中还介绍了AXI总线, 需要继续阅读.
4), arm发信: invalidate L1 dcache只能到L2. 如何invalidate L2 data? 

11:14 2010-4-24
VC0882, 文档阅读, training, Cortex-A8, TRM, External Memory Interface, Coresight
1, External Memory Interface: outstanding transaction和ID tag
1), 对比"Table 9-1 Read address channel AXI ID", "Table 9-2 Write address channel AXI ID"和"Table 9-3 AXI master interface attributes", 可以看出ID tag和Outstanding transaction二者不对应. 
二者到底有没有关系呢? 我的理解是ID tag表示不同ID可以乱序, 同一ID只能顺序. outstanding transations表示能出多少个请求. 
2), 总的outstanding transactions是26(TRM, p9-5): 
不等于read(18)+write(12), 因为outstanding linefills或evictions总共只能有4个:
The combined issuing capability is limited to a total of four outstanding linefills or evictions. Therefore the sum of the read and write issuing capability does not equal the combined issuing capability.
read, write细分的outstanding transaction数量见"301v04 p20":
Read                            18
Non-cacheable NEON loads        12
Cacheable Linefills             4
(PLD - 4; PLE - 2 L1 fills)     
Non-Cacheable(Instruction Fetch 1
or Integer Load)
Table Walk                      1
---------------------------------
Write                           12
Non-Cacheable Stores            8
Evitoins                        4
3), 问题:
AXI支持多个outstanding transactions, 这些是可以同时进行么, 还是已经可以发给slave多个, slave自己有排队队列. AXI总线上只有读, 写可以并发? 

2, Coresight 
Cortex-A8的debug apb是输入, 用于Coresight中APB-AP访问Cortex-A8, Cortex-A8访问Coresight其它component通过sys_apb. 
sys_apb与DAP的APB-AP经过mux联系到debug_apb. 

3, 记得A8有一个L1, L2 cache配置表格. 忘了放什么地方了. \todo

14:17 2010-4-24
VC0882, FPGA, sd, mmu, cache, L1 cache, 续, IC查A8何种修改导致cache无法使用
1, GuoHaiFeng邮件"答复: 关于新版的fpga L1若干问题"20100424_1145
我用vc0882_20100420_2000这版tag做了一版fpga-2 的bit文件。
可以分为两部分来考虑：
1. A8的code是用的黄维wporject下的Cortex-A8-L1_32_L2_0。
2. 其余部分包括a8_wrapper, cpu_wrapper, vc0882_a8, clkrst等，都是用的vc0882_20100420_2000版。
由于最新版的L1 cache有问题，但现在仿真也没有发现问题，因此我将部分code恢复到了20号的版本做出来了一版bit，
Hi， zhijun：
请你帮忙用下面目录下的bit做一版code吧，
/work/guohf/project/vc0882/vc0882_20100420_2000/vc0882/fpga_L1_32_L2_0_No_Neon_24M/output/bit/vc0882_fpga2.bit
Hi，zhangjian：
Zhijun做好之后，你能不能帮忙在fpga上试试看，这版是否好用，以确定问题出在了什么地方，希望能找到这个问题，尽快同步到最新的code上。
2, FanZhiJun邮件"答复: 关于新版的fpga L1若干问题"20100424_1155
vc0882_20100422_2000_fpga_0906_02042020_2fpga_vc0882_20100422_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
882 tag: vc0882_20100422_2000,
A8换成tag：vc0882_20100420_2000
用于定位A8 cache出故障的时间
注：之前A8出过0416，0421，0422三个版本，其中0416 的A8 cache正常工作。
3, zhangjian回复FanZhijun邮件: 
实验此版本cache仍然有错: 开dache后跳到reset异常(0x0), 开icache后停在一条正确语句(用rvdebugger关闭icache后可以继续运行). 
现象与之前实验4月21日, 4月22日 A8现象类似. 

15:30 2010-4-24
VC0882, mas review, AXI INTERCONNECT, DW_AXI
1, JiangBo邮件"vc0882: VC0882 INTERCONNECT MAS V0.10 1st Round Review"20100423_2246
2, 本来这个mas不需要我review. 我看是interconnect, 感觉比较重要. 就看了看. 
1), 仲裁策略
(1), mas3:
3.1 Competitor Survey
VC0882所用CBRR+PWM仲裁策略主要借鉴了TI OMAP35x的设计思想，包括系统业务Class分类，Intra-Class和Inter-Class两级仲裁，PWM调制机制等方面。当然，由于总线协议不同，TI OMAP35x采用OCP协议，而VC0882采用AXI协议，经过架构预研阶段慎重评估，CBRR+PWM仲裁策略有所增减。关于TI OMAP35x仲裁策略，详见VC1600WCVS\doc\competitor\ti\TI OMAP35x Applications Processor.pdf中的11.2.4.1节。
3.2 Issues for the Module in Last Project
VC0830采用First Come First Serve（FCFS）仲裁策略，无法区分系统业务的性质和优先级别，软件没有任何调控手段保证关键模块和应用的性能表现，实际效果不佳。为此，VC0882才进行了仲裁策略的全面改进。
(2), mas2.3, CBRR和PWM解释:
简而言之，软件可以配置MARB或者SARB各个Master Port所属Class类别，这也就相当于配置与各个Master Port相连的AXI Master（或者Subsystem）所属Class类别。CBRR+PWM仲裁策略，全力保证Class0 > Class1 > Class2&Class3，同时通过PWM调制机制合理平衡Class2类业务和Class3类业务的带宽分配；如果同一类别存在多个AXI Master（或者Subsystem），那么类内采用Round Robin仲裁策略轮流平等授权。
3, 文档中还介绍了AXI总线, 需要继续阅读. \todo

15:37 2010-4-24
时间管理, 下周工作计划(自"4月22日" ICP VC0882 sync up meeting, 见研发记录簿2, p54)
0), 注: 下周四前,所有模块要开cache. 本周要注意推动mmu, cache进展. 
1), VC0882 Cortex-A8 NEON; Performance monitor irq. 希望试试thumb2
2), irq 本周close. 
3), 试一下AHB-AP.
4), TRACE: 先在PB-A8调通. 找IC出版本, 找SV改板子. 
5), 准备bootloader rvct nolib环境. 

15:41 2010-4-24
VC0882, arm Cortex-A8, Coresight, rvdebugger, arm support, 0008271: RV DEBUG load 2M 以上文件以raw8,raw16 方式到DDR内存中有问题
1, 给arm发信. 20100424_1625
title: load file to memory fail using rvdebugger readfile command
content:
hello

when i load a file large than 2Mbyte into memory using rvdebugger cli readfile command, raw and raw32 success, but raw8 and raw16 fail. the commands and error messages are as follows: 
fail:
> readfile,raw8,gui "D:\ddr_mem_test\test4M_org.bin"=0x80000000
Error V2801C (Vehicle): 0x05060013: Target not responding.
> readfile,raw16,gui "D:\ddr_mem_test\test4M_org.bin"=0x80000000
Error V2801C (Vehicle): Failed to read the requested number of bytes to memory
success: 
> readfile,raw,gui "D:\ddr_mem_test\test4M_org.bin"=0x80000000
Written memory from S:0x80000000 to S:0x803FFFFF.

notes:
1), it is a cortex-a8 and coresight based system.
2), rvdebugger is v4.0.3 build 35(rvds4.0 sp3).
3), test4M_org.bin is a 4Mbyte file. 
4), 0x8000000 is ddr memory start address. ddr memory is 128Mbyte.

And what does the following numbers mean?(V2801C, 0x05060013).
Is there a whole error and warning explanations for rvdebugger4.0 and rvct4.0, like "RVCT3.1_Errors_and_Warnings.pdf". 

2, arm回信
Support-SW [support-sw@arm.com]"RE: load file to memory fail using rvdebugger readfile command (462923)"20100427_0545
From Ralph Fulchiero - ARM Technical Support]
Please quote reference number 462923 when referring to this issue.
Dear Zhangjian,
You wrote:
> when i load a file large than 2Mbyte into memory using rvdebugger cli
readfile command, raw and 
> raw32 success, but raw8 and raw16 fail. The commands and error
messages are as follows:
> > readfile,raw8,gui "D:\ddr_mem_test\test4M_org.bin"=0x80000000
> Error V2801C (Vehicle): 0x05060013: Target not responding.
> > readfile,raw16,gui "D:\ddr_mem_test\test4M_org.bin"=0x80000000
> Error V2801C (Vehicle): Failed to read the requested number of bytes
to memory
> success:
> > readfile,raw,gui "D:\ddr_mem_test\test4M_org.bin"=0x80000000
> Written memory from S:0x80000000 to S:0x803FFFFF.
> 
> notes:
> 1), it is a cortex-a8 and coresight based system.
> 2), rvdebugger is v4.0.3 build 35(rvds4.0 sp3).
> 3), test4M_org.bin is a 4Mbyte file.
> 4), 0x8000000 is ddr memory start address. ddr memory is 128Mbyte.
Since you are writing such a large file to memory, it is possible that RVD has timed out during the operation when a x8 or x16 write is performed.  Please define a new environment variable called SCC_TIMEOUT and set it to 10000000.  We suggest doing this through the Windows Control Panel, so it will always be defined.
Does this allow you to program x8 and x16?
> And what does the following numbers mean?(V2801C, 0x05060013).
> Is there a whole error and warning explanations for rvdebugger4.0 and
rvct4.0, like
> "RVCT3.1_Errors_and_Warnings.pdf".
RVD only uses internal error codes.  There is no public document for RVD errors or warnings.
That particular message indicates that there is a low-level communication problem between RVD and your target.  We suspect that RVD is waiting for RVI to complete the write operation, but it times out.

17:23 2010-4-24
VC0882, arm cortex-a8, rvds4.0, Linux, FC10虚拟机下安装rvds
1), 安装: 运行"setuplinux.bin", 会弹出图形界面. 系统要求JVM符合要求, 具体未查. 
安装时可以选择安装目录, 我安装在"/usr/src/embedded_dev/software/ARM".
2), 设置license:
从silver.arm.com注册用户并下载了试用版license. 放在ARM//license/license.dat, 设置LM_LICENSE_FILE指向该文件: 
[dec@localhost ARM]$ pwd
/usr/src/embedded_dev/software/ARM
[dec@localhost ARM]$ export LM_LICENSE_FILE=${PWD}/license/license.dat
3), 设置环境变量, 实际就是利用armenv配置环境, 包括rvct, inc, lib等等. 
[dec@localhost ARM]$ source RVDS40env.posh 
[dec@localhost ARM]$ armcc
ARM C/C++ Compiler, RVCT4.0 [Build 400] 
...
For evaluation purposes only
Software supplied by: ARM Limited
Your license for Compiler (feature compiler) will expire in 30 days
4), 打sp3 patch
sp3位于 "\\10.0.2.36\sqmshare\Utilities\IDE\rvds4.0\sp3". 
ARM/bin/linux-pentium/setuplinux.bin patch --source /mnt/hgfs/36_server_bak/Utilities/IDE/rvds4.0/sp3/RVP40-PA-00004-r4p0-03rel00/RVDS_4_0_dist_to_4-all-all_pro.armpatch

18:49 2010-4-24
VC0882, FPGA, arm cortex-a8, NEON测试
1, 编译arm validation code: 
armlink --map --noremove --entry 0x0 --scatter power_indicative/neon_integer_fdct/fdct.scat -o fdct.elf fdct-sched.neon.o fdct_test.o fdct_ref.o stack_heap_setup.o fdct_tt.o benchmark_boot.o
Error: L6242E: Cannot link object stack_heap_setup.o as its attributes are incompatible with the image attributes.
kongyingqi编译也有这个错误. 会给huangwei发信. 
2, 把"Cortex-A8/validation/src/power_indicative/neon_integer_fdct/fdct_ref.c"加入到panda_os, 实验NEON编译和非NEON编译, 并实验. 周一一定要完成NEON和Performance monitor irq. 
想好加入到pands_os哪个目录, 规划好arm各种目录. 

9:33 2010-4-26
时间管理, 周报(weekly report), 上周工作总结(2010年4月19日-2010年4月25日), 本周工作计划(2010年4月26日-2010年5月2日)
1, 上周工作总结(2010年4月19日-2010年4月25日)
1), l1 cache, 问题: 板子稳定性和cache代码(line size, 写坏stack, 清cache没考虑bss段).
2), 结合工作阅读cortex-A8 trm: l1 cache, neon.
3), 安装rvds sp3尝试解决rvds两个issue: 0008320: 写W1C和WO寄存器问题(已经可以正常写入), 0008271: load file to memory fail(raw8, raw16, 已给arm发信). 
4), 测试neon, arm validation编译错误, kongyingqi会发信. 
2, 上周Issue: 
1), 4月21日下午开始的FPGA cf开mmu, cache后出错. 
2), (未报issue)arm validation编译错误, kongyingqi会发信.
3, 本周工作计划(2010年4月26日-2010年5月2日)
1), 支持大家用mmu,cache. 
2), neon, thumb2测试最基本case. NEON完成10%(total 15%), thumb2完成3%(total 2%).
3), 完成performance monitor irq(total 5%).
3), irq 本周提交测试. 
4), 完成AHB-AP(total 10%).
5), TRACE: 先在PB-A8调通. 找IC出版本, 找SV改板子. 进度到5%(进度到10%).
6), 准备bootloader rvct nolib环境(完成代码). 
4, 本周其它计划
1), mmu, cache代码调整. mmu加normal non-share属性. 开dcache时检查有无tt.
2), 发dma_error邮件
3), 看文档. 
4), 整理"6".
5, 下周计划: 
1), mmu, cache默认打开.
2), 整理VC0882环境文档和代码: 删除环境中无用的宏
6, 0415杂记(\todo整理):
amba4 保持cache一致性.
a9用clock mash代替clock tree.
osprey 目前用台积电工艺估计1.5GHz, arm内部一般认为是1.3.
下一代eagle.
蓝牙项目用m3.

10:47 2010-4-26
时间管理
0, 9:15

1, 本日计划执行
1), 9:40-10:35 例会. 笔记见研发记录簿2_p55.
2), 任务整理. 见"11:30 2010-4-26".
3), 下午: thumbEE研究;
4), 1h: 为zhaoyuan提供OMAP3530 u-boot, kernel代码, 并实验. 
5), 17:20-21:44 VC0882 irq: 编译通过, 明天上午完成测试. 
被"6)"打断. 另晚70'
6), 40': emi_cs0和emi_cs1 translation table改为normal non-cache. 
7), 26.99 cf放到2.36. <DONE>

2, 次日计划
1), 测试guohaifeng cache后做irq. 
2), 给arm邮件, 问使用Cortex-A8没找到invalidate到memory的命令, clean&invalidate而不是invalidate会不会影响效率. 

11:30 2010-4-26
时间管理, VC0882, Cortex-A8和coresight进度有困难
hi, beizhan, aiguo

根据例会, 我更新了本周计划(见后). 如果没有意外arm本周进度可以到达53%, 很难到达60%, 另外arm省下的工作原来了解更少, 可能本周进度会很慢.
另外考虑到时间紧, A8和Coresight(vc0882_a8_action_items.xls)我做了简化, 你们看是否可以? 

本周计划
1), 支持大家用mmu,cache. 
2), neon, thumb2测试最基本case. NEON完成10%(total 15%), thumb2完成3%(total 2%).
3), 完成performance monitor irq(total 5%).
3), irq 本周提交测试. 
4), 完成AHB-AP(total 10%).
5), TRACE: 先在PB-A8调通. 找IC出版本, 找SV改板子. 进度到5%(进度到10%).
6), 准备bootloader rvct nolib环境(完成代码). 

12:19 2010-4-26
VC0882, FPGA, arm cortex-a8, VC0830, Linux kernel, 文件系统(filesystem)的init无法正确启动
zhangjian2zhangpu邮件"VC0882 Linux文件系统问题的讨论"
1, 文件系统方面你都做了很多实验了. 我感觉是否可以回归重新分析一下? 
2, 我觉得需要再做些实验保证文件系统没有问题. 
当初我和zhicheng一起做的时候是以与虚拟机对比(用尽量相同的最小kernel配置文件, 完全一致的文件系统), 甚至包括单步对比执行830和qemu的映像. 
我觉得是否可以用下面方式再进一步实验. 
1), 做一个最简单kernel配置文件, 使用rootfs或ramdisk这种基本的文件系统. 
2), 现在你用的2.6.29内核编译为realview 926ej-s, 在qemu虚拟机实验, 看文件系统是否正常. 
3), 用同样的kernel配置(只是SOC和arm不同), 实验. 如果还是有问题, 会不是是arm926和cortex-a8的内核配置有变化. 可以利用qemu跑PB-A8或OMAP3530板子跑同样的kernel
4), 总之是用尽量一致的环境对比. 实在不行可以单步跟踪VC0882和qemu/OMAP3530.

12:37 2010-4-26
VC0882, FPGA, ICP无法测试需要ICV仿真保证的case
zhangjian回复Fengbeizhan邮件"答复: 882 ICP Sync up meeting, room6， 9：40"20100426_1233
1, fengbeizhan
1) 请五一加班的，把具体的加班日期和天数发给我， 882希望大家是 5月2号，5月3号加班；
2) 请大家把自己负责的模块，那些功能fpga不能测试，需要仿真来保证的case，写到如下文件里：
\\10.0.2.36\sqmshare\share\fengbeizhan\VC0882\VC0882_fpga不能测试的_需要ICV重点仿真的item.xls
大家写的具体点，这样才能有针对性的仿真；

2, zhangjian回复
1), CTI(Cross Trigger Interface)在FPGA可能难以实验, 最好由ICV仿真;
2), watchdog reset和global software reset时可以选择不reset coresight, 具体coresight有没有reset ICP只能通过能否继续debug判断. 希望ICV仿真时能确认coresight各个component和Cortex-A8内部debug logic确实没有reset. 

12:51 2010-4-26
VC0882, Cortex-A8, OMAP3530, 日常关注
1, rowboat有了eclair版本. 
$ curl http://android.git.kernel.org/repo >~/bin/repo
$ chmod a+x ~/bin/repo
You can find detailed repo installing instructions here
To download the rowboat source code:
$ mkdir rowboat-android
$ cd rowboat-android
$ repo init -u git://gitorious.org/rowboat/manifest.git -m ManifestName
$ repo sync
Where ManifestName is:
* rowboat-donut.xml - for donut version of rowboat
* rowboat-donut-dsp.xml - for donut version of rowboat with DSP support
* rowboat-eclair.xml - for eclair version of rowboat
* rowboat-eclair-dsp.xml - for eclair version of rowboat with DSP support 

13:23 2010-4-26
VC0882, arm cortex-A8, thumbEE
0, thumbEE的应用可以参考android dalvik的git, 有些与ARMv7和JIT相关的更新. 
1, 比较"InterpAsm-armv7-a.S"和"InterpAsm-armv5te-vfp.S", 差异是交换和提取指令, 没看到thumbEE专有指令. "Y:\android\embinux\embinux_eclair\dalvik\vm\mterp\out"
ubfx: Unsigned Bit Field Extract extracts any number of adjacent bits at any position from a register, zero-extends them to 32 bits, and writes the result to the destination register.
sxtb: Signed Extend Byte extracts an 8-bit value from a register, sign-extends it to 32 bits, and writes the result to the destination register. You can specify a rotation by 0, 8, 16, or 24 bits before extracting the 8-bit value. 
uxth: 
sxth: 
2, InterpC-armv5te-vfp.c和InterpC-armv7-a.c相同. 

13:50 2010-4-26
VC0882, FPGA, Linux kernel启动速度慢, 测试OMAP3530低频时启动速度; OMAP3530使用文档
zhangjian2zhaoyuan邮件"OMAP3530板子好了上来拿吧(for 测试OMAP3530低频时启动速度)"20100426_1424
1, MLO是xloader. 
2, u-boot(TI OMAP35x-PSP-SDK-02.01.03.11) 
1), PATH=$PATH:/usr/src/embedded_dev/toolchain/arm-2009q3/bin
export CROSS_COMPILE=arm-none-eabi-
export ARCH=arm
make distclean
make omap3_beagle_config
make
有几个不允许weak的, 删除了weak属性. 
2), bootcmd中"mmc init"已经改为"mmcinit", 目前bootcmd是"mmcinit; fatload mmc 0 84000000 uImage; bootm 84000000"
3, kernel(beagle ebinux eclair)
PATH=$PATH:/usr/src/embedded_dev/omap3530/OMAP35x-PSP-SDK-02.01.03.11/src/u-boot/uboot-02.01.03.11/tools
make omap3_beagle_android_defconfig(印象中是这个).
make uImage

2, 北京瑞泰开发板使用说明(SD boot)
0), 开发板手册见"光盘\ICETEK-OMAP3530-Mini使用手册.pdf"
1), SANDISK 2G是"Angstrom 2009.X". u-boot bootcmd有问题, 需要手工启动:
mmc init(uboot版本不同, 可能是mmcinit(无空格))(如果提示I/O error, 再试一次mmcinit)
fatls mmc 0(查看mmc0的文件. 这里选择uimage07)
fatload mmc 0 84000000 uimage07(load uimage07到0x84000000地址)
bootm 84000000(从0x84000000启动OS, beagleboard会根据uImage描述信息判断是何种OS).
2), PNY 2G是wince6.0 demo.
启动时, 在"Hit space to enter configuration menu"按空格. 选择"[2] Select Boot Device"的"[3] NK from SDCard FILE"(这样会从sd卡启动wince), 然后按0退出eboot启动wince"[0] Exit and Continue". 
读sd卡时间较长(不到1分钟), 看起来是不动了, 稍等一下: 
Init HW: controller RST
SDHC: command response timeout CTO!
MMC::MMCCommandResponse: MMCSendCommand error, command = 8
MMC::MMCCommandResponse: Command Response Error

BL_IMAGE_TYPE_BIN

Download file information:
-----------------------------------------------------------
[0]: Address=0x84001000  Length=0x01a0dab8  Save=0x80001000
-----------------------------------------------------------
Download file type: 1

15:41 2010-4-26
VC0882, FPGA, 32k sram, gcc nolib env, 修改Makefile, mini_c_env_nolib使用说明, 兼容windows/Linux cmdline的方法
1, 修改Makefile.arm从编译器获得"INCLUDE_PATH"和"GCC_LIB_PATH".
这两个编译原来是绝对路径, 大家如果安装工具链目录不同会很不方便. 
(1), 如何得到头文件和库的路径呢? 
参考编译Linux kernel(make V=1): 
arch/arm/mach-omap2/.tmp_id.o arch/arm/mach-omap2/id.c arm-none-linux-gnueabi-gcc -Wp,-MD,arch/arm/mach-omap2/.io.o.d  -nostdinc -isystem /usr/src/embedded_dev/toolchain/arm-2009q3_none_linux_gnueabi/bin/../lib/gcc/arm-none-linux-gnueabi/4.4.1/include -Iinclude  -I/usr/src/embedded_dev/kernel/linux-2.6.29.6/arch/arm/include -include include/linux/autoconf.h -D__KERNEL__ -mlittle-endian -Iarch/arm/mach-omap2/include -Iarch/arm/plat-omap/include -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Os -marm -fno-omit-frame-pointer -mapcs -mno-sched-prolog -mabi=aapcs-linux -mno-thumb-interwork -D__LINUX_ARM_ARCH__=7 -march=armv7-a -msoft-float -Uarm -Wframe-larger-than=1024 -fno-stack-protector -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -Wdeclaration-after-statement -Wno-pointer-sign -fwrapv -fno-dwarf2-cfi-asm  -D"KBUILD_STR(s)=#s" -D"KBUILD_BASENAME=KBUILD_STR(io)"  -D"KBUILD_MODNAME=KBUILD_STR(io)"  -c -o arch/arm/mach-omap2/.tmp_io.o arch/arm/mach-omap2/io.c

希望得到的就是"/usr/src/embedded_dev/toolchain/arm-2009q3_none_linux_gnueabi/bin/../lib/gcc/arm-none-linux-gnueabi/4.4.1/include", 前面的"-isystem", 查"-isystem"(grep -system Makefile): 
NOSTDINC_FLAGS += -nostdinc -isystem $(shell $(CC) -print-file-name=include)

(2), 命令行实验:
C:\Documents and Settings\zhangjian>arm-none-eabi-gcc -print-file-name=include d:/software/codesourcery/sourcery_g++_lite/arm-2009q3-68-arm-none-eabi/bin/../li b/gcc/arm-none-eabi/4.4.1/include

D:\VC0882\mini_env\mini_c_env_nolib>arm-none-eabi-gcc -print-file-name=
d:/software/codesourcery/sourcery_g++_lite/arm-2009q3-68-arm-none-eabi/bin/../l
b/gcc/arm-none-eabi/4.4.1/

(3), 修改这两个变量: 
INCLUDE_PATH  = $(shell $(XCC) -print-file-name=include)
GCC_LIB_PATH  = $(shell $(XCC) -print-file-name=)
不能写成: 
INCLUDE_PATH  = $(XCC) -print-file-name=include
GCC_LIB_PATH  = $(XCC) -print-file-name=
如何写成后者, 后面使用"INCLUDE_PATH"会直接替换为"$(XCC) -print-file-name=include", 不会得到实际的include和library目录. 

同时加入如下代码兼容Windows, Linux cmdline: 
#copy from CortexA8dhry project
# Select build rules based on Windows or Unix
ifdef WINDIR
RM=if exist $(1) del /q $(1)
SHELL=$(WINDIR)\system32\cmd.exe
else
ifdef windir
RM=if exist $(1) del /q $(1)
SHELL=$(windir)\system32\cmd.exe
else
RM=rm -f $(1)
endif
endif
#copy from CortexA8dhry project end

用于设置"shell".
加入上面代码后, 执行"clean"时也不会提示rm出错推出了. 
(14:31 2010-5-3)Linux下SHELL由shell定义, 例如我的FC10是
[dec@localhost ~]$ echo $SHELL
/bin/bash
"14:31 2010-5-3"end
2, mini_c_env_nolib使用说明:
1), 工程位置:
D:\VC0882\mini_env\mini_c_env_nolib
2), 安装"\\10.0.2.36\sqmshare\Utilities\Develop_Tools\arm-2009q3-68-arm-none-eabi.exe"
3), 编译armBin. 
4), 编译时会提示build下某个目录不存在, 手工建立即可. 

17:37 2010-4-26
VC0882, FPGA, irq
1, 今天希望提交测试
2, 
1), 根据mas修改irq vector. 
total 51 first level irq according to "VC1600_MAS_Interrupt_Controller_V0.95"

9:25 2010-4-27
时间管理
0, 9:02

1, 本日计划和执行
1), 测试VC0882 cache. 见"10:16 2010-4-27"
2), 验证irq. 
3), 给arm邮件, 问使用Cortex-A8没找到invalidate到memory的命令, clean&invalidate而不是invalidate会不会影响效率. 
4), 今天要把AHB-AP试一下. 
5), 实验performance monitor irq.

2, 次日计划

9:49 2010-4-27
支持同事还挺有成就感的. 
1, rvds设置passcount.
2, 分析代码发现指针和全局变量不对应. 

10:16 2010-4-27
VC0882, FPGA, sd, mmu, cache, L1 cache, 续, IC查A8何种修改导致cache无法使用, 续
1, FanZhiJun邮件"答复: 关于新版的fpga L1若干问题"20100426_1230
vc0882_20100422_2000_fpga_0906_vc0882_20100416_2000_bit2_2fpga_vc0882_20100422_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
供测试A8，882部分用已经验证过的vc0882_20100422_2000_fpga_0906
A8为vc0882_20100416_2000_vc0882_fpga2.bit
vc0882_20100422_2000_fpga_0906_vc0882_20100422_2000_Back_cpu_wrapper_to_0416_bit2_2fpga_vc0882_20100422_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
A8为../bit_fpga2/vc0882_20100422_2000_Back_cpu_wrapper_to_0416_vc0882_fpga2.bit

2, 实验guohaifeng昨天发的两个实验性CF code, 开mmu均fail, 不开mmu时开icache后aasp可以运行.
1), vc0882_20100422_2000_fpga_0906_vc0882_20100416_2000_bit2_2fpga_vc0882_20100422_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
不开mmu: 程序启动正常. 开icache后aasp可以运行. 
开mmu: 启动中死在undefined instruction. (3次实验错误相同只是出错位置略有区别)
2), vc0882_20100422_2000_fpga_0906_vc0882_20100422_2000_Back_cpu_wrapper_to_0416_bit2_2fpga_vc0882_20100422_2000_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu
不开mmu: 程序启动正常. 开icache后aasp可以运行. 
开mmu: 启动中死在undefined instruction. (3次实验错误相同只是出错位置略有区别)
3), 对比实验: vc0882_20100424_1600_fpga_all_02041612_2fpga_vc0882_20100424_1600_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
开mmu, icache, dcache后, dmac测试通过(directautorandtest 10 0)
4), 台子: FPGA26. 映像与前相同. 

10:15 2010-4-27
VC0882, ASIC流程, LEDA
YangZuoXing邮件"答复: Leda Report 0427"20100427_1008
HI, HUANGWEI, ZHIJUN, XIAOMING,YUNFEI, ZIXI, LIANHUA AND HAIFENG,
请看一下这些WARNING,并请在今天16：00前清掉或者WAIVE掉这些WANRING.
昨天DFT FAILED,就是因为一个地方接错了，而这个错误应该可以通过LEDA查出来的。
LEDA的错误是最基本的错误，一定要清干净。
一个LEDA的错误，可能造成VRF1~2天的工作量，FPGA和ASIC FLOW上造成2~3天的DELAY.
请大家以第一优先级处理LEDA的WARNING.
HI, JIANBO,
从今天起，HAIFENG每打一个TAG,你就跑一遍LEDA。 等WARNING数减到50以内，我们就用脚本，每天跑了。
HI, WANGXIN,
你能否跟JIANBO看看如何用脚本跑LEDA？

11:24 2010-4-27
项目, VC0882, 绩效
部门	        姓名	4上比例	姓名	3下比例	本月比例 工作时长	882时长 
IC-2-ICP	艾国	80%	艾国	100%	90%	247.08	222.37 
IC-2-ICP	冯备战	100%	冯备战	100%	100%	256.68	256.68 
IC-2-ICP	廖志城	100%	廖志城	100%	100%	259.93	259.93 
IC-2-ICP	舒予	30%	舒予	100%	65%	254.63	165.51 
IC-2-ICP	周大山	30%	周大山	100%	65%	249.75	162.34 
IC-2-ICP	李栋梁	20%	李栋梁	50%	35%	247.83	86.74 
IC-2-ICP	张健	100%	张健	100%	100%	247.54	247.54 
IC-2-ICP	凌明	100%	凌明	100%	100%	247.49	247.49 
IC-2-ICP	杨敏	30%	杨敏	100%	65%	247.44	160.84 
IC-2-ICP	范晓凡	50%	范晓凡	100%	75%	245.62	184.22 
IC-2-ICP	蔡进	100%	蔡进	100%	100%	240.42	240.42 
IC-2-ICP	余洋	100%	余洋	100%	100%	235.43	235.43 
IC-2-ICP	尹行杰	100%	尹行杰	100%	100%	227.74	227.74 
IC-2-ICP	吕博学	30%	吕博学	100%	65%	219.7	142.81 
IC-2-ICP	张浦	100%	张浦	100%	100%	217.43	217.43 
IC-2-ICP	孟凡东	100%	孟凡东	100%	100%	206.13	206.13 

11:30 2010-4-27
软件技巧, 正则表达式, 绩效, 工作时间
查找"^(.+)\n\ (.+)\n (.+)\n (.+)\n (.+)\n (.+)\n (.+)\n (.+)\n"
替换"\1\t\2\t\3\t\4\t\5\t\6\t\7\t\8"

11:34 2010-4-27
VC0882, FPGA, NEON, thumb2, 编译cortex-A8 validation code出错
1, zhangjian邮件"compile Cortex-A8 validation code fail"20100427_1513
Hello, Ralph Fulchiero

there is an error while build the cortex-a8 validation code, error message is as follows: 
./build_src
....
armlink --map --noremove --entry 0x0 --scatter power_indicative/neon_integer_fdct/fdct.scat -o fdct.elf fdct-sched.neon.o fdct_test.o fdct_ref.o stack_heap_setup.o fdct_tt.o benchmark_boot.o
Error: L6242E: Cannot link object stack_heap_setup.o as its attributes are incompatible with the image attributes.
   ... packed-enum clashes with enum_is_int.
Not enough information to list the image map.

notes: RVCT4.0 version: Build 650

thanks
zhangjian

[zhangjian@login3 /]$ uname -a
Linux login3 2.6.9-89.ELsmp #1 SMP Mon Apr 20 10:33:05 EDT 2009 x86_64 x86_64 x86_64 GNU/Linux

2, (19:41 2010-4-28)
[From Juan Gao - ARM Technical Support]
Please quote reference number 463018 when referring to this issue.
Hi Zhangjian,
> there is an error while build the cortex-a8 validation code,
Please could you tell more information about the cortex-a8 validation code. Is it from the examples in RVDS installation directory?
> Error: L6242E: Cannot link object stack_heap_setup.o as its attributes 
> are incompatible with the image attributes.
> 
>    ... packed-enum clashes with enum_is_int.
This error message informs that the linker detects some incompatible compilation attributes in the input object files. In this case it detects that some compiled object files have packed-enum attribute, and some have enum_is_int attribute, which are incompatible with each other.
Could you please send us the complete compilation options and the error message? This would help us to analyze the problem further. 

Best regards,
Juan

3, 参考arm提示, 看了log:
armcc --cpu Cortex-A8 -c -O3 -OVast -Otime --enum_is_int -Ono_autoinline -Ono_inline -DITERATIONS=5 -DMSC_CLOCK -DMSC -DRUN_BENCHMARK -I./power_indicative/dhrystone/ ./power_indicative/dhrystone/stack_heap_setup.c
确实有"--enum_is_int", 删除这个后可以编译出错有elf, 死在
../tiger_minitb/objcopy -O binary T1-32.elf T1-32.bin ; ../tiger_minitb/binhex T1-32.bin T1-32.hex ;
../tiger_minitb/objcopy: Command not found.
../tiger_minitb/binhex: Command not found.
这个是kongyingqi没有copy给我, 就不算问题了. 
1), packed-enum与--enum_is_int
--enum_is_int表示enum强制用4个byte表示. 如果开"--arm_linux"会默认开这个选项(也就是说Linux中enum是4个byte). 否则这个选项默认关闭, 也就是"packed-enum".
2.1.57 --enum_is_int
This option forces the size of all enumeration types to be at least four bytes.
This option is switched off by default and the smallest data type is used that can hold the values of all enumerators.
If you specify an ARM Linux configuration file on the command line, this option is switched on by default.
Note The --enum_is_int option is not recommended for general use.
2), 试一下编译出的elf能否使用. 
(1), imdct.elf
s_pabort:
   S:0000026C E59FF050  LDR      pc,0x2c4          <BENCHMARK_BOOT_S+0x2C4>
LR: 0x00000204
(2), fdct.elf
s_pabort:
   S:0000026C E59FF050  LDR      pc,0x2c4           <BENCHMARK_BOOT_S+0x2C4>
LR: 0x0000857C	

12:54 2010-4-27
VC0882, 从358加入的ICV工程师, 同事信息, 联系方式
YangZuoXing(转发)邮件"转发: 358人员安排"20100427_1253
ZhiHong & Zuoxing, 
Please find contact information of 358 groups and task assignment as below, any problem please let me know it in time.  

电话	姓名	职位	手机	邮件 
8188	王立婷	IC验证工程师	13810803690	wangliting@vimicro.com 
8403	邢志凤	IC验证工程师	13810101610	xingzhifeng@vimicro.com 
8174	林雪梅	IC验证经理	13811602541	linxuemei@vimicro.com 
8477	常玉保	IC验证工程师	13811583590	changyubao@vimicro.com 
7283（临时）	文豪	IC验证实习生	15801292341	wenhao@vimicro.com

Task assignment:
Wenhao: CIF support 
Xingzhifeng: A8 & VDEC GLS debug 
Changyubao: UOTG & storage subsystem environment setup 
Wangliting: peripheral subsystem environment setup 
Linxumei: video subsystem environment setup 

16:26 2010-4-27
VC0882, tools, rvds4.0 script, 与CVS保持同步"D:\VC0882\document\tools".
加入rvds4.0 scripte example. 该script从0x80000000写10个half word顺序是1-10. 

//include D:\VC0882\document\tools\test.inc
//print "this is a script example"
//"doloop" is a macro, it must follow a "." after define. 
//"PRINTF" and "SETMEM" is cli command. It must enclose with "$".(both at beginning and end of the line)

define /R void doloop()
{
	int i;
	unsigned int addr;
	i = 1;
	addr = 0x80000000;
	do {
		$PRINTF "addr is 0x%x, i is %d", addr, i$;
		$SETMEM /h addr = i$;
		addr = addr + 2;
		i++;
	} while (i < 11);
}
.

doloop()

17:29 2010-4-27
VC0882, FPGA, interrupt, 
1, irq
50会进入undefined intruction. 发现pands_init.s中"INT_IRQ_Vectors"没有定义第50个. 
修改后正确.
2, priority.
1), 跑到31死: undefined instruction. 
2), 单步发现是31后面就是51个中断了, 也就是offset从0x1f直接跳到了0x33. 
3), 会不会是priority不能设置超过51的? 
修改为"0x7FFFFFFFFFFFF"就可以了. 
现在的问题是高低32位的software test enable没法同时设置, 造成高32bit永远比低32bit低. 
4), 实验同时设置高低共64bit. 
(1), 改为:
VIM_DISABLE_INTERRUPTS(oldIrq);
VIM_INT_Sw_Test_Set_Direct((UINT64)0x7FFFFFFFFFFFF & (~(1<<IRQ_TIMER0_VECTOR)));
VIM_INT_UnMaskModule(IRQ_ALL_VECTOR);
VIM_ENABLE_INTERRUPTS();
但是第一个出来的还是低位, 从第二个开始就正常了. 
(2), 用内嵌汇编不同(下面的__asm{}部分), 需要用embedded assembler(见__asm void Write_DWord部分):
__asm void Write_DWord(UINT32 valueL, UINT32 valueH, UINT32 addr)
{
	strd r0, r1, [r2]
}

VOID __INT_SW_TEST_BIT_SET_DIRECT(UINT64 _value_ )
{
	UINT32 _valueL_ = _value_;
	UINT32 _valueH_ = _value_ >> 32;
#if 1
	Write_DWord(_valueL_, _valueH_, INTC_SOFTINT_L);
#else
	__asm{
		mov r0, (_valueL_);
		mov r1, (_valueH_);
		mov r2, INTC_SOFTINT_L;
		strd r0, r1, [r2]
	}
#endif // #if 1
3, test_fiq报的仍然是irq. 
(9:20 2010-4-28)是fiq设置mode时有错. 
4, INTERRUPT_TEST_AutoTest_Priority显示的预期顺序应该没有timer0, 修改代码: 
//if(g_prio_test_setting[cyc][j] == (UINT32)IRQ_TIMER0_VECTOR)
if ( (UINT32)IRQ_TIMER0_VECTOR == j )
    continue;
5, 开mmu, cache. 
vc0882_20100426_1930_newddr2_fpga_all_02041612_2fpga_vc0882_20100426_1930_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
pass.
6, 上传CVS
1), irq全部功能(mmu和cache打开情况下测试irq, fiq, priority)提交测试. 编译"interrupt_mmuOK_cacheOK"这个target.
2), 中断名称根据"VC1600_MAS_Interrupt_Controller_V0.95"5.4修改. 
3), panda_init.s中加入第51个中断的handler.
4), VIM_HAL_Driver.c/h加入一次写64bit的命令: "VIM_HAL_Write_DWord". 用embedded assembler利用strd实现:
__asm VOID VIM_HAL_Write_DWord(UINT32 valueL, UINT32 valueH, UINT32 addr)
{
    strd r0, r1, [r2]
}

7, irq提交测试, 发信"6-1)"给renwei, lixuelian.

17:57 2010-4-27
VC0882, Linux kernel, 浮点
1, zhangpu跟踪发现是用户空间调用浮点后, kernel出错. 
关闭kernel浮点后正常. 
2, suxin kernel慢会不会是因为没有开浮点? 

14:14 2010-4-28
时间管理
0, 9:10

1, 本日计划和执行
1), 上午irq提交测试(见"17:29 2010-4-27"3开始的日志). 支持同事. 
2), 14:18-17:53 实验AHB-AP. fail, 晚上发邮件. 
中间用1/3时间和zhangpu跑830 Linux(测试低速下Linux运行速度).
用30'时间支持其余同事. 
3), 17:56-19:40 实验performance monitor irq.
含吃饭50'. 
4), 今天可能难有大的进展了, 集中精力发邮件(NEON测试), 确认trace位宽. 

2, 次日计划
1), 实验开NEON有无错误. 
2), performance monitor irq.
3), trace位宽. 

14:22 2010-4-28
VC0882, FPGA, ARM cortex-A8, coresight: AHB-AP, rvdebugger不支持通过AHB-AP访问memory, 可以用rviahbload工具访问
[From Ralph Fulchiero - ARM Technical Support]
Please quote reference number 462345 when referring to this issue.
Dear Zhang Jian,
You wrote:
> We use rvdebugger memory window to access while arm core is running 
> (see the picture below). The result is all zero.
> 
> Here 0x20000000 is sram memory. 0x86000000 is dram memory (start from 
> 0x80000000, size=128Mbyte).
> 
> We want to know that whether rvdebugger use AHB-AP to access memory or not.
Unfortunately RVD is not able to access memory over the AHB-AP.  All memory accesses must go through the core, which is why the memory pane is 0x0 if you try to display a new memory address after you start running.
RVI v3.3 and later ships with a stand alone download utility called  "rviahbload" which can be used to download images to your target over the AHB-AP.  This is beneficial for large images and it allows you to then start a session in RVD with your program pre-loaded.  You will then just have to load the image symbols to debug the application.  
Information about rviahbload is available in Section 8.4.4 of the RVI User Guide:
http://infocenter.arm.com/help/topic/com.arm.doc.dui0155k/DUI0155K_rvi_user_guide.pdf

14:28 2010-4-28
VC0882, FPGA, ARM cortex-A8, coresight: AHB-AP, rvi工具目录
1, arm参考说明见"14:22 2010-4-28". 文档"RVI User Guide 3.4 Section 8.4.4"
2, RVIahbload位置(rvi工具目录): 
C:\Program Files\ARM\RVI\Tools\3.3\106\programs\win_32-pentium
C:\Program Files\ARM\RVI\Tools\3.4\34\programs\win_32-pentium
/usr/src/embedded_dev/software/ARM/RVI/Tools/3.3/106/programs/linux-pentium/RVIahbload
/usr/src/embedded_dev/software/ARM/RVI/Tools/3.4/43/programs/linux-pentium/RVIahbload
3, 语法: 
For example, RVIahbdownload -f rvi.rvc -i 8000:myprog.bin -d3 -b1 -j 0x8000
loads the binary file myprog.bin to address 0x8000 on device 3 using bus 1 and start executing it.
Another example is RVIahbdownload --file rvi2.rvc --elf my.elf, which loads the ELF file my.elf to the target, selecting the AHB bus by default.
4, 用PB-A8和VC0882测试RVIahbload都fail. 给arm发信.
Hi, mate

Use RVIahbload download elf to PB-A8 fail, my steps are as follows:
1), connect PB-A8 Cortex-A8 to rvdebugger.
2), set 0x6000000..+0x1000 zero using fill command.
3), disconnect from rvdebugger. 
4), download uboot axf file to PB-A8
> rviahbload -f RVI_3_0.rvc -e u-boot_realview.axf
RVI AHB download utility.
The core was stopped.
DAP Powered Up okay
Downloading from 'u-boot_realview.axf'.
Download complete.
notes:
(1), rviahbload: C:\Program Files\ARM\RVI\Tools\3.4\43\programs\win_32-pentium\rviahbload
(2), uboot axf file from PB-A8(Versatile3.7): C:\Program Files\ARM\Versatile\PBA8_HBI0178\3.7\1\software\linux\flash_images\u-boot_realview.axf
(3), RVI_3_0.rvc: generate by rvconfig. 
(4), In rvdebugger, load uboot axf to memory success
5), connect PB-A8 in rvdebugger. read 0x6000000 address value from memory window. the value are always all zero. 
6), in step "4)", if we specified the busnum as 1, download is failed, the error messages are as follows:
>rviahbload -f RVI_3_0.rvc -e u-boot_realview.axf -b1
RVI AHB download utility.
The core was stopped.
Downloading from 'u-boot_realview.axf'.
Download failed: General error on mem op
Download failed.
Does "-b1" means use AHB-AP download and "-b0" AHB-AP?
7), what the does the device number mean? How can I get the number from rvi configuration file(*.rvc)?

5, (10:29 2010-5-6)Support-SW [support-sw@arm.com]邮件"RE: Use RVIahbload download elf to PB-A8 fail (463133)"20100429_0714
[From Ralph Fulchiero - ARM Technical Support]
Please quote reference number 463133 when referring to this issue.
Dear Zhangjian,
You wrote:
> 6), in step "4)", if we specified the busnum as 1, download is failed,
the error messages are as 
> follows:
> 
> >rviahbload -f RVI_3_0.rvc -e u-boot_realview.axf -b1
> 
> RVI AHB download utility.
> 
> The core was stopped.
> 
> Downloading from 'u-boot_realview.axf'.
> 
> Download failed: General error on mem op
> 
> Download failed.
> 
> Does "-b1" means use AHB-AP download and "-b0" AHB-AP?
The "b" option is used to specify another bus other than the AHB-AP.
For this particular target, you shouldn't have to use this option.
> 7), what the does the device number mean? How can I get the number
from rvi configuration
> 
> file(*.rvc)?
The device number is the location of the device on the scan chain.
Device counting starts with the DAP at value 0 and continues sequentially left to right in the RVConfig screen.  If your scan chain appears as that in the following FAQ, then you should specify "-d 1", since the Cortex-A8 appears first after the DAP:
http://infocenter.arm.com/help/topic/com.arm.doc.faqs/ka11687.html
Please try the following command:
	rviahbload -f RVI_3_0.rvc -d 1 -e u-boot_realview.axf
We recently tested rviahbload on a different Cortex-A8 target and also a
Cortex-M3 target.  In both cases we were able to transfer an ELF file.

6, Support-SW [support-sw@arm.com]邮件"RE: Use RVIahbload download elf to PB-A8 fail (463133)"20100506_0617
[From Ralph Fulchiero - ARM Technical Support]
Please quote reference number 463133 when referring to this issue.
Dear Zhangjian,
You wrote:
> Using "rviahbload -f RVI_3_0.rvc -d 1 -e u-boot_realview.axf", the 
> result is same.
We have tested rviahbload on a PB-A8 target and have replicated the same results you observe.
On closer inspection (using our low level CSAT utility), we believe that the AHB-AP has not been brought out of the DAP.  Figure 3-7 of the Debug FPGA (in the PB-A8 User Guide) also suggests that memory accesses over the AHB-AP are not possible.  Support for the AHB-AP is purely an optional feature, but we are very surprised that it was not implemented.
We will confirm this with the Boards Development Team.
We apologize for not identifying this sooner.  We expected this target would support AHB-AP accesses and we believed that you were simply using the utility with incorrect options.

7, (11:29 2010-5-7)Support-SW [support-sw@arm.com]邮件"RE: Use RVIahbload download elf to PB-A8 fail (463133)"20100507_0637
[From Ralph Fulchiero - ARM Technical Support]
Please quote reference number 463133 when referring to this issue.
Dear Zhangjian,
We have some good news for you.  
A colleague pointed out that we were accidentally using the incorrect device number.  Device numbering starts with "1" instead of "0".  This means that if you are using the configuration with the Cortex-A8 immediately after the DAP (as pictured in this FAQ:
http://infocenter.arm.com/help/topic/com.arm.doc.faqs/attached/11687/reo
rdered.png), that you should specify the "-d 2" option:
rviahbload -f RVI_3_0.rvc -d 2 -e u-boot_realview.axf
Please accept our apologies for the confusion.  Part of our original testing was with a Cortex-M3 which mysteriously works with two different device numbers for rviahbload.
Let us know if this now works for you.

8, (20:16 2010-5-12)参考arm回信在PB-A8实验
1), 重新排列device顺序, 把Cortex-A8放在ARMCS-DP后面: configuration中单击"trace association", 再单击ok, rvi会自动重新排泄顺序. 这样cortex-a8就是ARMCS-DP后面的第一个设备. ARMCS-DP是1, cortex-a8是2.
RVI连接时, 报错:
D:\user\zhangjian\20100512\rviahbload\PBA8>rviahbload -d 2 -e u-boot_realview.axf -f RVI_1_0_0.rvc
RVI AHB download utility.
Failed to open connection to device 2.
Error : 0x2f - Device in use and not passive conn.
断开时正确: 
D:\user\zhangjian\20100512\rviahbload\PBA8>rviahbload -d 2 -e u-boot_realview.axf -f RVI_1_0_0.rvc
RVI AHB download utility.
The core was stopped.
Downloading from 'u-boot_realview.axf'.
Download complete.
2), 使用默认扫描链, 下载后运行, 正确:
D:\user\zhangjian\20100512\rviahbload\PBA8>rviahbload -d 4 -e u-boot_realview.ax
f -f RVI_1_0.rvc -j 0x6000000
RVI AHB download utility.
The core is running...
Waiting for core to stop
Core stopped.
Downloading from 'u-boot_realview.axf'.
Download complete.
Core started from 0x6000000.

9, 实验VC0882, 
vc0882_20100505_2100_update05101200_fpgac0401_fpga_L1_32_L2_128_ecc_24M_128_bit2.ace
下载成功. 但是以后50%可能性无法运行. 难道AHB-AP下载到ddr有问题? 

10, (20:45 2010-5-13)给arm邮件:
hello, Ralph

thanks to your reply. I download axf image to PB-A8 and run it successful using the correct device number. 
And i have been trying to download image to ddr in our customized cortex-a8 system(FPGA) using RVIahbload. it runs failed more than 50%. why? 
notes: i init the ddr parameter in rvdebugger before download image to memory using RVIahbload.

best regards
zhangjian

20:54 2010-4-28
VC0882, FPGA, 更新Cortex-A8和Coresight进展:
1), 实验AHB-AP没法写入memory, PB-A8现象相同, 怀疑是工具使用问题, 已给arm发邮件.
2), 运行arm validation code(imdct和fdct) dataabort, 已交issue. 

21:26 2010-4-28
VC0882, Cortex-A8, cache, cache line vdec, venc, \todo跟进, 项目总结
1, venc解码随机出错, 晚上和caijin讨论, 可能是因为buffer没有cache_line对齐. 造成清venc in/out buffer时把参考buffer写坏. 
明天yangmin会确认是否三个buffer挨着, 会不会出这个情况. 
另外yangmin会修改buffer为cache line对齐. 
caijin会确认vdec问题. 另外caijin提到Onto venc原来的driver的buffer是cache line或page_size对齐. 
2, 确认后给大家发邮件, 要求大家给硬件的buffer都要cache line对齐. 
像sd卡这种设备, 有没有必要这样修改呢? 
如果buffer整个对齐, 只是一部分给硬件, 即使不对齐应该也没关系. 
3, 要加入cache line size宏. 

9:16 2010-4-29
1), 试一下csat访问ahb-ap. 
2), 编译实验NEON. 

9:36 2010-4-29
(15:54 2010-4-29)
VC0882, FPGA, sync up, zhangjian, irq, arm cortex-a8, 
1), irq遇到一些问题用了1天多的时间. 
2), arm:
(1), cache:
L1 cache. venc有问题. 可能是buffer对齐问题. 今天yangmin会实验. 
L2 cache: IC没有OK. 从rvds example找到了开L2的代码. 
(2), L2的PLE比较复杂, 希望arm给出包括中断的范例代码.
(3), NEON: ICD会给我出包括NEON的FPGA版本. 需要确认何时能出来. 时间紧, 计划只是验证NEON打开和简单NEON指令. 
(4), Performans monitor irq正在看, 今天会实验.
(5), thumb-2, thumb-2EE: 这样两个功能是A8肯定有的功能, 优先级计划放低一些. 
thumb-2: 编译器可以自动生成code. 
thumb-EE: 希望arm提供如何使用thumbEE的code. 
3), coresight
(1), AHB-AP
访问sram可以, 访问ddrfail. 会报issue. 
用RVIahbload下载映像没有写入(PBA8和VC0882现象相同). 与arm support讨论中. 这是个下载工具, 优先级计划放低一些. 优先保证CSAT访问AHB-AP本身可以使用. 
(2), trace: guohaifeng明天会给我出测试trace的版本(因为现在jtag占了trace的pin).trace板子guohaifeng已经帮我改好. 
(3), A8 Cross trigger Interrupt需要验证, 不清楚如何使用. 
4), 需要用PBA8实验TRACE, PLE, CTI, L2 cache等问题. 这些问题原来没有用过, 用PB-A8可以加快学习过程. 希望PB-A8能有很好的支持, 帮我们尽快把PB-A8用起来. 

9:44　2010-4-29
VC0882, FPGA, arm Cortex-A8, NEON, 续
1, 实验NEON开关和简单NEON指令. 
2, vc0882_20100427_2200_fpga_all2_02041612_2fpga_vc0882_20100427_2200_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace

11:11 2010-4-29
VC0882, arm cortex-A8, csat通过AHB-AP访问ddr fail, Issue 8853
CF: vc0882_20100427_2200_fpga_all2_02041612_2fpga_vc0882_20100427_2200_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
首先用rvi脚本初始化ddr, 然后断开用csat连接, csat使用过程和错误信息如下. 
C:\Documents and Settings\ic>csat
###############################################
#  CSAT -   CoreSight Access Tool      v1.2.0 #
#                                             #
#        Copyright 2007 ARM Limited           #
###############################################
%>con usb

Attempting to connect to ...USB
Connected to:ARM RealView ICE
Base H/W: V1 Rev G-01
TurboTAP Rev: 1.86
Firmware: 3.3.0, Build 948
%>chain dev=auto clk=10000000
Jtag clock set to 10000000
ID:0 ARMCS-DP
%>dvo 0
Open connection to device ID : 0x4BA00477, version 0x00000006 
Msg returned with RVMOpenConn: ARM-DP Template using Rv-Msg.
%>dpe
Enumerated 3 APs
  0 : AHB-AP
  1 : APB-AP
  2 : JTAG-AP
%>dmr 0 0x20000000 4
0x20000000 : 0x00011111 0x000008AE 0x00000016 0x0000014D
%>dmw 0 0x20000000 0x123 0x321 0x999 0x888
Wrote 4 words to memory via AP0
%>dmr 0 0x20000000 4
0x20000000 : 0x00000123 0x00000321 0x00000999 0x00000888
%>dmr 0 0x80000000 4
RX ASYNC !*
DAPERR_DP_COMMS_FAILED : Failure in communications between DAP-DP and connecting
 vehicle.
CSTTAP AP read memory incremented failed (nCont Stall on Read.. Exit[0x82] Excep
tion[0x04].). [4 words @ 0x80000000]

13:00 2010-4-29
时间管理
1), 给beizhan发arm问题. 
2), 给laowan发信要PB-A8联系方式. 
3), 整理今天上午日志和会议记录. 
4), yangmin cache的问题会不会和venc中包括虚拟地址和实际地址两个地址有关? 会不会需要clean&invalidate两个buffer? 

13:03 2010-4-29
Linux, 实验kgdb, 可以连接, 估计是单串口导致调试不稳定, 需要用两个串口实验
0, 参考"12:36 2010-1-26"0-5)-(1)实验. 
1, 开kgdb选项时, 提示要选择"CONFIG_FRAME_POINTER", 经确认这个是打开的. 
2, 设置uboot启动参数
setenv bootargs mem=128M androidboot.console=ttyS2 console=tty0 console=ttyS2,115200n8 root=/dev/mmcblk0p2 rw init=/init rootwait video=omapfb:vram:2M,vram:4M,mode:1280x720@60,vxres=1280,vyres=720 kgdboc=ttyS2,115200 kgdbwait
3, 在虚拟机(FC10)实验时发现连接不太文档. 在windows下实验, 发现putty打开了串口后, gdb再打开会报错. 看来gdb和console共用一个串口会有问题. 
4, Linux gdb: android arm-eabi 4.4.0
windows gdb: D:\software\CodeSourcery\Sourcery_G++_Lite\arm_2009q3_67_arm_none_linux_gnueabi\bin\arm-none-linux-gnueabi-gdb\
5, kernel是android embinux eclair.
位置: 
"\\10.0.2.36\sqmshare\Document\SOC\TI OMAP3530\zhangjian_compile\android_embinux_eclair_for_kgdb".
6, 下次计划在VC0830 BGA282实验kernel kgdb调试(version 2.6.29.6).

16:09 2010-4-29
VC0882, FPGA, Sw11烧导致RVI无法连接A8, \todo 项目总结

16:40 2010-4-29
VC0882, VC0830, Linux kernel, GPU vivante, 总结, 反思
1, 经过zhangpu两天实验, 在VC0830上跑cpu=bus=24MHz, 速度比VC0882快很多.
代码放在"\\10.0.26.99\share\linux\kernel\20100429_830_ramdisk_OK". 
Zhangpu邮件"Re: 答复: Questions about linux on Cortex-A8 FPGA (463020)"20100429_1629
我这里试了用以前830的sv板子,跑24M的cpu_clk和bus_clk.32M内存,使用ramdisk,速度还算可以接受! 
top -d 0 ,每秒能刷出2~3帧的样子,882目前刷一帧都需要几十秒时间(大概30~40秒).如果这个速度的话,VIVANTEE过来没有操作的可能!
2, Suxin邮件"答复: 答复: Questions about linux on Cortex-A8 FPGA (463020)"20100429_1708
我们这边用OMAP3530的开发板做了实验，Cortex-A8工作在600MHz.
a.  正常运行，一次system call执行时间约为61us；
b.  关闭L2 Cache后, 测得一次system call执行时间约为 152us；
按照Clock倍率简单换算一下，在882 FPGA上system call耗时在4ms以内算是正常, 而实际耗时在200ms以上。
3, 综合zhangpu和suxin的实验结果, 我感觉是suxin的porting有问题. 
可以考虑把882和830用一个kernel版本, 然后比较差异. 
4, Zhangpu邮件"Re:  Questions about linux on Cortex-A8 FPGA (463020)"20100430_1644
Hi all;
882 linux速度慢的问题找到了,是因为RealView ICE的Semihosting影响的.
如下Path可以关闭Semihosting.
我这里关闭后,速度和之前我在830上24MHz跑的速度基本一致.(top -d 0 ,每秒能刷出2~3帧).
这个可以满足基本的GPU驱动的调试了.  
TOP MENU:
Target => Connection Properties... => *CONNECTION=VC0882 => *Advanced Infomation => *Default =>
*ARM_config => *Semihosting => *Enabled (False)
5, \todo 总结, 反思. 
zhangpu的实验说明用户和内核空间切换时进入SVC状态时做了semihost处理. 也就是说单步跟踪应该可以发现的.
其实VC0830也发现过RVI对系统的影响(对系统速度有略微影响), 我用VC0882时也注意到semihost会把系统速度拖慢很多. 我其实是有这个背景知识的. 
当时应该是实验一下从SD卡boot的. 
之前怀疑代码问题其实方向有点问题, 因为timer计时是正常的. 
也许当时重新分析一下会有结果. 
原来830实验时都是直接关闭semihost的. 

17:36 2010-4-29
VC0882, FPGA, arm cortex-A8, performance monitor interrupt
1, 用rvdebuggger实验performance monitor irq. 

19:28 2010-4-29
VC0882, FPGA, EMI, 程序在EMI CS0 sram中运行
1, 调试
上传了"dpram_cydm256b16.c".
2, 上传CVS
程序在EMI sram中运行(yangxin or beizhan修改, zhangjian测试)
1), 加入"sd_emiCS0_64M_mmuON", 表示程序将在emi_cs0(0x40000000)中运行且打开了mmu. 
建议使用时打开icache, dcache. 
2), REMAP_BITMASK改为通过make target配置或默认值(bit31: 0x80000000). 
3), yangxin or beizhan 对emi的修改. 
3, 给caijin, yangmin, lixuelian发信. 抄送beizhan, anzhiming, aiguo, VC0882_ICP.
hi, all

测试了panda_os在EMI_CS0 64M sram运行. 需要在EMI_CS0运行的target中加入"-define=REMAP_BITMASK=0x40000000"即可. 参考"sd_emiCS0_64M_mmuON" target. 

hi anzhiming, beizhan
测试中发现sd multi写2M, 读只有300多k, 感觉有点不正常: 
multi read: 
time1-time0(us)=0
total=350520
Multi Read Speed is: 350520 bytes/second
multi write: 
time1-time0(us)=2364
total=5242880
Multi Write Speed is: 2217800 bytes/second
Single Read: 
time1-time0(us)=170551
total=5242880
Single Read Speed is: 30740 bytes/second
Single Write: 
time1-time0(us)=189070
total=5242880
Single Write Speed is: 27729 bytes/second
3, 初始化脚本是: "D:\VC0882\panda_os\init_script\RVD\init_sram_emi_cs0_64MB.inc".
CF code: vc0882_20100427_2200_fpga_all_02041612_2fpga_vc0882_20100427_2200_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
4, (21:35 2010-4-29)
4FPGA EMI sram无法读写. 开始用的"rev0_03042009_04040609_01042009_02041609_4fpga_normal_Dec+Gpu+De_NoUsbEnc.ace"发现norflash可以读, sram不行. 
后来guohaifeng出了"rev0_03042009_04040609_01042920_02042809_4fpga_normal_Dec+Gpu+De_NoUsbEncCif.ace", 有一次可以访问sram(默认timing, padc由strappin=2时硬件自动配置), 且运行程序成功. 其余都是无法连接或连接后sram无法访问(使用默认timing或"D:\VC0882\panda_os\init_script\RVD\init_sram_emi_cs0_64MB.inc都是如此).

22:14 2010-4-29
VC0882, FPGA, arm cortex-A8, debug, A8 irq测试(测试PLE, CTI, PM Unit中断), 重要, 总结
0x6000cfe4, 可以触发A8中断, 可以用于测试PLE, CTI, PM Unit中断. 
0xEF8 958 RW ITCTRL-EOC Core Integration External Output Control
Register. See Integration External Output Control Register on page 12-58.

10:50 2010-4-30
时间管理

1, 本日计划和执行
1), 发信问大家cache进展.<DONE>
2), clkrst:
(1), 发信给IC. <DONE>
(2), 看dongliang VC0598代码. 主要参考编程风格. 
3), PB-A8 trace. 希望882 trace与IC一起调. 
4), 分析了Linux kernel速度慢这个问题如何实验. 可以用trace抓PB-A8和VC0882的数据. 这样需要先在PB-A8试通trace. 结合这个需求, 中午时间可以试一下PB-A8 kernel. 
5), try NEON. fail. 发信. 
6), 写A8 PMU irq代码. 

10:53 2010-4-30
VC0882, FPGA, clkrst, clkswitch
1, 882 FPGA上clkrst需要测试哪个功能? 
hi, huangwei, Dr. yang

我们现在要测试clkrst模块, FPGA clkrst能测试哪些功能? 希望能在FPGA上尽可能测更多的功能, 尤其是bootloader需要用到的功能. 例如cpu, bus, ddrc clkswitch(包括改divider, 改clkswitch等方式). 
希望尽快定下PFGA测试哪些功能, 还有什么时候能给我ACE. 我需要提前写code. 谢谢.

2, huangwei邮件"Re: 882 FPGA上clkrst需要测试哪个功能? "20100430_1548
CLKRST在FPGA上要测试的点：
1. cpu_clk configuration:     change divider ratio, clock source switch.
2. bus clock configuration:   change divider ratio, clock source switch.
3. ddrc clock configuration:  change divider ratio, clock source switch and ddr fifo bypass mode.
4. low power mode:            idle mode
由于DCM和BUFG资源有限，需要单独做一个FPGA　ｖｅｒｓｉｏｎ．　

14:35 2010-4-30
VC0882, arm Cortex-A8, unalgn access, arm support, arm infocenter, arm Linux support
1, arm的infocenter有很多资料, 包括datasheet, ARM Technical Support Knowledge Articles等等. 
infocenter使用方法可以参考FAQ. "ARM Technical Support Knowledge Articles"感觉就是大家使用中提的问题, 如果有问题可以先来这个地方搜索, 例如非对齐非访问可以参考: 
http://infocenter.arm.com/help/topic/com.arm.doc.faqs/ka13671.html
Why does my unaliged LDR/STR abort?
Applies to: ARMv7 Architecture
The v7-A/R architecture provides support for unalgined accesses (LDR/STR) to memory regions marked as Normal.  Unalgined accesses to address regions marked as Device or Strongly Ordered will result in an abort.
The Cortex-A family of cores treat all data accesses as Strongly Ordered when the MMU is disabled.  So to allow unaligned accesses you must first enable the MMU, and have the required address region(s) marked as Normal.  Example MMU initialization code is provided with RVDS.
Unaligned accesses can also be caught by setting the A bit in the CP15 Control register.
2, arm linux的一些链接
http://www.arm.linux.org.uk/
http://www.linux-arm.com/
http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/ka4147.html
How do I install the pre-built Linux images on my ARM development board?
http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/
How do I rebuild the Linux kernel for my ARM development board?
http://www.arm.com/community/software-enablement/linux.php?tab=Linux+OS+Downloads
arm linux pre-built image download. 

15:32 2010-4-30
VC0882, FPGA, arm cortex-A8, NEON
1, vc0882_20100427_2200_fpga_all_vc0882_20100429_L1_cache_Neon_bit2_2fpga_vc0882_20100427_2200_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
2, 用Panda_os和CortexA8dhry都fail, 后者在"00033914"提示undefined instruction:
_fp_init:
S:00033910 E3A00403  MOV      r0,#0x3000000
S:00033914 EEE10A10  MCR      p10,#0x7,r0,c1,c0,#0
__fplib_config_fpu_vfp:
S:00033918 E12FFF1E  BX       lr
3, 看ARM_ARM_7AR如何开NEON:
B1.8.1 Enabling Advanced SIMD and floating-point support
If an ARMv7 implementation includes support for any Advanced SIMD or VFP features then the boot software for any system that uses that implementation must ensure that:
• access to CP10 and CP11 is enabled in the Coprocessor Access Control Register, see:
— c1, Coprocessor Access Control Register (CPACR) on page B3-104 for a VMSA
implementation
— c1, Coprocessor Access Control Register (CPACR) on page B4-51 for a PMSA
implementation.
• if the Security Extensions are implemented and Non-secure access to the Advanced SIMD or VFP features is required, the access flags for CP10 and CP11 in the NSACR must be set to 1, see c1, Non-Secure Access Control Register (NSACR) on page B3-110.
If this is not done, operation of Advanced SIMD and VFP features is UNDEFINED.
If the access control bits are programmed differently for CP10 and CP11, operation of Advanced SIMD and VFP features is UNPREDICTABLE.
In addition, software must set the FPEXC.EN bit to 1 to enable most Advanced SIMD and VFP operations, see The Floating-Point Exception Register (FPEXC) on page B1-68.
When floating-point operation is disabled because FPEXC.EN is 0, all Advanced SIMD and VFP instructions are treated as Undefined Instructions except for:
• a VMSR to the FPEXC or FPSID register
• a VMRS from the FPEXC, FPSID, MVFR0, or MVFR1 register.
These instructions can be executed only in privileged modes.
Note
• When FPEXC.EN == 0, these operations are treated as Undefined Instructions:
— a VMSR to the FPSCR
— a VMRS from the FPSCR
• If a VFP implementation contains system registers additional to the FPSID, FPSCR, FPEXC, MVFR0, and MVFR1 registers, the behavior of VMSR instructions to them and VMRS instructions from them is SUBARCHITECTURE DEFINED.
4, \todo 查这几条指令. 
CPACR
FPEXC: enable NEON
FPSID
5, 在OMAP3530上实验CortexA8dhry也fail. 
6, 编译原始的CortexA8dhry, 汇编不太一样:
_fp_init
0x00033910:    e3a00403    ....    MOV      r0,#0x3000000
0x00033914:    eee10a10    ....    VMSR     FPSCR,r0
7, 后来发现机器码是一样的, 可能rvct反汇编的问题. 

16:24 2010-4-30
VC0882, Arm Cortex-A8, ThumbEE
1, ENTERX
ENTERX causes a change from Thumb state to ThumbEE state, or has no effect in ThumbEE state. For details see ENTERX, LEAVEX on page A9-7.    
2, 在android embinux eclair查找, 没有找到.
[dec@localhost ~]$ cd /usr/src/embedded_dev/android/embinux/embinux_eclair/
[dec@localhost embinux_eclair]$ cd dalvik/
[dec@localhost dalvik]$ grep ENTERX * -R --color

17:40 2010-4-30
VC0882, FPGA, nand问题
B是882不行, 816可以. 
1, B_read
1), 2v. input, output? 
2), 上拉, 下拉. 
3), 816, 882转接板. 

18:20 2010-4-30
VC0882, FPGA, sdio, wifi, 代码
Document\SOC\UT-S3C6410-7A\WINCE6.0软件包_v0.18\UT-S3C6410_WinCE6.0_BSP\SMDK6410\SRC\DRIVERS\WIFI_SDIO
Document\SOC\UT-S3C6410-7A\芯片手册\WIFI_WM-G-MR-09.pdf

21:27 2010-4-30
VC0882, FPGA, arm cortex-A8, NEON, 续; 打开NEON的汇编代码
1, CortexA8dhry, 上传CVS:
1), 之前缺少: 设置cp10, cp11访问权限, 开NEON, 具体见"15:32 2010-4-30"3. 代码原来就有, 用NEON宏打开即可: 
;==================================================================
; Enable access to NEON/VFP by enabling access to Coprocessors 10 and 11.
; Enables Full Access i.e. in both priv and non priv modes
;==================================================================
 	IF :DEF:NEON
        MRC     p15, 0, r0, c1, c0, 2      ; read CP access register
        ORR     r0, r0, #(0x3  <<20)       ; enable access CP 10
        ORR     r0, r0, #(0x3  <<22)       ; enable access CP 11        
        MCR     p15, 0, r0, c1, c0, 2      ; write CP access register back  
        
;==================================================================
; Switch on the VFP and Neon Hardware
;=================================================================
    
        MOV     r0, #0                      ; Set up a register
        ORR     r0, r0, #(0x1 << 30)        
        FMXR    FPEXC, r0                   ; Write FPEXC register, EN bit set.                
	ENDIF ;IF :DEF:NEON
2), VC0882目前有VC0882, VC0882_no_neon两个target. 
含NEON版本CF: vc0882_20100427_2200_fpga_all_vc0882_20100429_L1_cache_Neon_bit2_2fpga_vc0882_20100427_2200_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
运行VC0882, VC0882_no_neon均pass.
不含NEON版本CF: 
vc0882_20100427_2200_fpga_all2_02041612_2fpga_vc0882_20100427_2200_normal_withDeTvLcdifCifFdDmaEmiSpiSdUartI2cKpdPwmAudifTpi_noNfcUotgUhostVencdecGpu.ace
运行VC0882 fail, VC0882_no_neon pass.
实验结果符合预期. 
2, Panda_os
1), 命令(-O0不行, 至少-O2). 
armcc --vectorize --cpu=Cortex-A8 -O3 -Otime -c file.c
不要写-fpu=none. armasm这样写导致：
armasm  --debug --keep --cpu=Cortex-A8 --predefine "SDRAM_FLAG SETL {TRUE}" --fpu=None  --diag_style=ide  -c AppsEntry/init_src/asm/Panda_Init.S -o build/AppsEntry/init_src/asm/Panda_Init.o
armasm : warning A3912:  Option 'c' is deprecated.
AppsEntry/init_src/asm/Panda_Init.S(692,9) : error A1163:  Unknown opcode FMXR , expecting opcode or Macro
2), 编译后可以运行. 但是不同计算内容有的结果有差异. 下面是结果相同的(\todo 需要手算确认是否正确): 
(1), no neon
AASP :/>arm;neon_simple
result is :-858993460 -858993460 -858993460 -858993460 -858993460 -858993460 -858993460 -858993460 
(2), neon
AASP :/>arm;neon_simple
result is :-858993460 -858993460 -858993460 -858993460 -858993460 -858993460 -858993460 -858993460 
3), 代码需要修改build.pl脚本, 暂时不上传. 

3, (11:16 2011-5-26)在rvds库里面neon初始化代码
	MOV      r0,#0x3000000
	VMSR     FPSCR,r0

DN, bit [25] Default NaN mode control bit:
0 NaN operands propagate through to the output of a floating-point operation.
1 Any operation involving one or more NaNs returns the Default NaN.
For more information, see NaN handling and the Default NaN on page A2-41.
The value of this bit only controls VFP arithmetic. Advanced SIMD arithmetic always uses
the Default NaN setting, regardless of the value of the DN bit.
FZ, bit [24] Flush-to-zero mode control bit:
0 Flush-to-zero mode disabled. Behavior of the floating-point system is fully
compliant with the IEEE 754 standard.
1 Flush-to-zero mode enabled.
For more information, see Flush-to-zero on page A2-39.
The value of this bit only controls VFP arithmetic. Advanced SIMD arithmetic always uses
the Flush-to-zero setting, regardless of the value of the FZ bit.

