10:22 2008-01-02
待做完成，转移至"13:45 2008-01-04"
1，modprobe: modprobe: Can't open dependencies file /lib/modules/2.4.18-rmk7-pxa1/modules.dep (No such file or directory)（转移，完成）
2，SD卡46号中断没有注册成功，也没有报错。（完成）
当时使用的修改过的调试中断注册错误的代码，重新编译驱动后正常。
3，修改脚本，在合适时候自动挂载yaffs。（完成）
4，qt中可以使用usb鼠标，键盘（转移，完成）
(09:41 2008-01-03)
(1)，如果有了键盘可以加入键盘打开输入法的快捷方式；
(2)，如果同时使用鼠标和键盘，需要连接一个hub，需要hub驱动。（完成）
hub驱动包含在"usb-ohci-s3c2410.o"中。

10:59 2008-01-02
Linux, 模块，驱动
内核代码中编译某个模块：
make modules SUBDIRS=dir\to\modules

11:05 2008-01-02
Linux，PCB设计软件
0，从网上搜索"linux PCB"，找到了gEDA软件。
发音：gEDA can be pronounced “gee-daahhh” (rhymes with cheetah) or “g-dahhh (short g).
1，下载
http://www.sp5pbe.waw.pl/~sp5smk/geda.html
下载FC7 32位版本
http://download.fedora.redhat.com/pub/fedora/linux/releases/7/Everything/i386/os/Fedora/（该站点有全部FC7(Fedora core7)下的官方rpm包）
下载libstroke-0.5.1-14.fc7.i386.rpm
2，安装：
[root@host geda]# rpm -ivh libstroke-0.5.1-14.fc7.i386.rpm 
[root@host geda]# rpm -ivh libgeda-*
[root@host geda]# rpm -ivh geda-*

14:11 2008-01-02
初步判断不能检测到卡插拔的原因是硬件问题。
根据原理图"2410JB“和网上资料。
2410板子卡插入后r1和r29公共端电压从0.3降到0v。
当有卡插入时cd与地相连。r29一端连接Vcc，一端连接cd。

17:07 2008-01-02
今天主要是完成了sd卡挂载脚本"fv/kernel_driver/filesystem/mount-mmc"。
Usage: ./mount-mmc path_to_mount_point
考虑了新挂载(mmcsd_core.o, mmcsd_disk.o, mmcsd_slot.o)和重新挂载(mmcsd_slot.o)，已挂载报错。
待做完成：放到文件系统中合适的位置(/mnt/yaffs/bin)。

17:12 2008-01-02
Linux, vi，判断两个或多个条件
if [ 条件一 ] &&  [ 条件二 ]; then

18:52 2008-01-02
不知道为什么找不到/usr/etc/rc.local

11:53 2008-01-03
待做：
1，学习bash启动脚本；
2，叶博，是否新建一个分支。（否）

14:48 2008-01-03
Linux，修改文件系统，cramfs, yaffs
第二阶段：
1, 建立文件夹：var, proc
2，/etc/init.d/rcS的第一行是#!/bin/bash而不是"#/bin/bash"，否则linux不知道由谁来执行，会提示"Bummer, could not run '/etc/init.d/rcS': Exec f...(没有显示全）..."
(15:10 2008-01-03)
第三阶段：
简化脚本：
1，[root@host fftroot]# rm linuxrc~ testshell~
0，脚本结构
"etc/init.d/rcS"
	->"usr/etc/profile"
"usr/etc/rc.local"
	->". /usr/etc/profile"
	->"source /.bashrc"
		->"/etc/bashrc"
	->". /testshell"
其中bashrc族脚本是bash启动时要运行的脚本，/etc/bashrc是全局脚本，其余是各个用户自己的bashrc脚本。但是这里为什么".bashrc"在根目录不知道，查，待做。
2，"usr/etc/profile"内容与其他文件重合，删除。
3，删除"linuxrc"中驱动加载相关命令。
第四阶段：加入yaffs
usr/etc/rc.local改为/etc/rc.local的符号连接。驱动加载等设置在这里完成。
注：各阶段结果和启动日志位于"fv/kernel_driver/filesystem/fstest"

11:31 2008-01-04
1，简化脚本: testshell合并到其他脚本；
2，查login执行过程。如何选择启动哪个shell？

13:45 2008-01-04
(10:23 2008-01-09)
待做，改进文件系统：
1。现在符号连接太多了。改为根文件系统可写(yaffs)，qt库压缩(cramfs)。
注意：yaffs文件系统烧写时需要写入bon分区。挂载时挂载到mtdblock分区。而且现在我bon分区和mtd分区不同，bon0-4是mtd(mtdblock)1-5。fftroot1.yaffs.log有使用"/dev/bon/3"，"/dev/mtd/4"和"/dev/mtdblock/4"挂载的日志。
2，拍照。开发板。液晶屏（显示fvgui界面）（完成）
3，驱动：
1), SD卡驱动（完成）。
2)，usb驱动：优盘驱动，usb键盘，鼠标驱动。
3)，使QT支持usb键盘，鼠标。
(09:41 2008-01-03)
(1)，如果有了键盘可以加入键盘打开输入法的快捷方式；
(2)，如果同时使用鼠标和键盘，需要连接一个hub，需要hub驱动。
4)，可以使用modprobe（完成）
解决错误："modprobe: modprobe: Can't open dependencies file /lib/modules/2.4.18-rmk7-pxa1/modules.dep (No such file or directory)"
解决过程见"18:44 2008-01-08"。
5)，uda1341驱动。
6)，远期：数码管，按键驱动。
4，小修改：
1)，(16:44 2008-01-03)解决telnet登录开发板慢的问题。（完成）
见"17:22 2008-01-08"
2)，可以使用df查看剩余空间。（完成）
df读取"/etc/mtab"文件并计算每个文件系统的剩余空间，在嵌入式系统中把该文件链接到/proc/mounts即可。这样df可以正确显示根文件系统，"/dev/bon/4"，"tmpfs"（ramdisk)的容量。但是没有显示ramfs(/tmp)文件系统的剩余容量。查原因，待做。
[root@(none) /]# df                                                             
Filesystem           1K-blocks      Used Available Use% Mounted on              
/dev/mtdblock/4          54240     38780     15460  72% /                       
/dev/bon/4               21304     21304         0 100% /mnt/cramfs             
tmpfs                    31428         0     31428   0% /dev/shm                
5，修改2440板子文件系统，2440板子实验驱动程序能否自动检测卡的插拔。
(11:56 2008-1-2)解决SD卡驱动没有识别SD插拔中断的问题。
nCD_SD连接的是EINT18/GPG10
6，尝试jffs2，现在没有linux/crc32.h文件。fs/jffs2/dir.c
6，保存所有文件系统文件到移动硬盘。

14:49 2008-01-04
文件系统，yaffs+cramfs，续
/etc/passwd
root:$1$$argFk5UDAxH96lBa.OLYW0:0:0:root:/:/bin/sh
改为
root:$1$$argFk5UDAxH96lBa.OLYW0:0:0:root:/root:/bin/bash
"/.bashrc"移到"/root/.bashrc"，
出错。/root/.bashrc的echo语句执行了，但是实际的内容并没有执行。
难道应该改为"bin/sh"？

18:27 2008-01-04
文件系统，yaffs+cramfs，续
通过查看busybox init.c代码，发现busybox中直接设置HOME是"/"。
待做：下周（属于13:45的待做1）
0，保存网页"http://linux.tnc.edu.tw/techdoc/startup.htm"
1，参考"s3c2410/doc/文档/s3c2410linux文档 非常好！.pdf"，编译tinylogin；用户设为root。（完成）
2，加入输入法（完成）
（配置文件目录从"/usr/etc/fvdac"改为"/root"）。
另外，加入拼音输入法后，qtopia启动速度会比原来慢一些。也没有加载channel的提示。Qtopia使用倒是没有影响。
输入法位于"fv/app/qt/pinyin/murphytalk-0.3_0107.tar.gz"，其中"embeded-linux"目录是arm2.95.3编译器版本（包括字体和配置文件），"embeded-linux-3.3.2"是arm 3.3.2编译器版本，二者配置文件的位置都是"/usr/etc/fvdac"，"embeded-linux_3.3.2_root"是arm 3.3.2编译器版本且配置文件位于"/root"目录。配置文件指"murphytalk.conf, murphytalk_phrase_idx.txt, murphytalk_phrase.dat, pinyin_table.txt"
3，整理fs.log  fs.log.1  fs.log.2日志

10:26 2008-01-07
文件系统，yaffs+cramfs，续
删除了"/etc"目录的"pointercal"，"ppp"，"pcmcia"三个符号链接。
lrwxrwxrwx 1 root      root     15 01-04 15:28 pcmcia -> /usr/etc/pcmcia
lrwxrwxrwx 1 root      root     17 01-04 15:28 pointercal -> ../tmp/pointercal
lrwxrwxrwx 1 root      root     12 01-04 15:28 ppp -> /usr/etc/ppp
其中"pointercal"文件是qpe使用的触摸屏校准文件。ppp和pcmcia目录分别是ppp拨号和pcmcia卡的配置文件目录，暂时没有用到它们。

11:52 2008-01-07
登录启动bash：bash执行~/.bash_profile等文件；
非登录启动bash：bash执行~/.bashrc等文件。

14:45 2008-01-07
Linux，脚本学习，if语句
if语句中"[","]"和中间的表达式要有空格，如果写为：
[root@host yaffs+cramfs]# cat test.sh 
if [ -d /dev] ;then
        echo 1
fi
会提示：
[root@host yaffs+cramfs]# bash test.sh 
test.sh: line 1: [: missing `]'
写为"if [ -d /dev] ;then"正确。

16:18 2008-01-07
Linux，flash分区
bootloader bon, part; kernel mtd/nand三者要一致！

16:38 2008-01-07
启动fv-gui出错：
fv-gui: relocation error: /root/lib/libftpclient.so: undefined symbol: newData__7QGArray

17:16 2008-01-07
当前内核映像：
fv/kernel_driver/kernel/zImage_final_0107

18:43 2008-01-07
fvdac_0107.tar.gz是最新程序，其中lib/arm/lib是arm-linux 3.3.2库文件。
待做完成：实验verify/fv-gui能否正常运行。

11:23 2008-01-08
待做: study dlfcn.h -- dynamically loader

14:31 2008-01-08
由于根文件系统没有剩余空间，造成xwindows启动失败。
待做：记录详细错误信息。

15:13 2008-01-08
开发板文件系统
/etc/passwd
root:$1$$argFk5UDAxH96lBa.OLYW0:0:0:root:/root:/bin/sh
改为
root:$1$$argFk5UDAxH96lBa.OLYW0:0:0:root:/root:/bin/bash
否则串口启动时可以正常执行/root/.bash_profile，telnet登录时没有执行/root/.bash_profile

15:57 2008-01-08
文件系统
完成对fv-gui的支持。ffftroot_fv-gui.tar.gz。fftroot_fv-gui.yaffs和cramfs_im.cramfs。启动日志：fftroot_fv-gui.yaffs.log
当前内核映像："fv/kernel_driver/kernel/zImage_final_0107"

17:22 2008-01-08
文件系统，续（提高telnet登录速度）
现有telnet登录需要20s以上。下面的修改都是针对开发板的修改，因为开发板是telnet服务的服务器。
[root@(none) /]# cat /etc/hosts                                                 
127.0.0.1       localhost       localhost.localdomain                           
192.168.200.200 host                                                            
192.168.200.205 armboard                                                        
[root@(none) /]# cat /etc/services | grep telnet                                
telnet          23/tcp                                                          
telnet          23/udp   
没有效果。
从同一局域网的PC机中复制"/etc/resolv.conf"替换原有文件
[root@host etc]# cat /etc/resolv.conf
; generated by /sbin/dhclient-script
nameserver 211.167.240.29
nameserver 202.106.196.115
search host
速度明显提高，2-4s內完成连接。原因：
1，原有nameserver是错误的；
2，先前"/etc/hosts"的设置起了作用。
如果再次修改hosts文件：指明域名，速度会更快一下，1s内可以完成连接：
[root@(none) root]# cat /etc/hosts
127.0.0.1       localhost       localhost.localdomain
192.168.200.200 host localhost.localdomain 
192.168.200.205 armboard localhost.localdomain
如果删除"/etc/resolv.conf"，telnet完全没有延迟。
参考：
http://bbs.chinaunix.net/viewthread.php?tid=63484
telnet连接速度慢的问题

18:44 2008-01-08
生成modules.dep
根据内核Makefile，用下面命令生成modules.dep，出错，用PC机2.4内核depmod实验。
[root@host modules]# depmod -ae -F /usr/src/fft_linux/kernel/System.map -b /tmp -r 2.4.18-rmk7-pxa1
Version requires old depmod, but couldn't run depmod.old: No such file or directory
仍然不行，提示模块和体系结构不符，使用开发板的depmod：
建立指向/lib/modules的符号链接后，执行depmod：
[root@(none) lib]# depmod  -ae -F /tmp/nfs/kernel/System.map 
depmod: *** Unresolved symbols in /lib/modules/2.4.18-rmk7-pxa1/kernel/arch/arm/kernel/apm2.o
depmod:         pm_do_suspend
depmod:         pm_suggest_suspend
测试
[root@(none) 2.4.18-rmk7-pxa1]# modprobe mmcsd_slot
[root@(none) 2.4.18-rmk7-pxa1]# lsmod
Module                  Size  Used by    Not tainted
mmcsd_slot              3492   0 (unused)
mmcsd_core              6264   1 (autoclean)  [mmcsd_slot]

/lib/modules/2.4.18-rmk7-pxa1/kernel/drivers/mmcsd/mmcsd_slot.o:        /lib/modules/2.4.18-rmk7-pxa1/kernel/drivers/mmcsd/mmcsd_core.o
修改依赖关系：
/lib/modules/2.4.18-rmk7-pxa1/kernel/drivers/mmcsd/mmcsd_slot.o:        /lib/modules/2.4.18-rmk7-pxa1/kernel/drivers/mmcsd/mmcsd_core.o /lib/modules/2.4.18-rmk7-pxa1/kernel/drivers/mmcsd/mmcsd_disk.o
再次试验：
[root@(none) modules]# modprobe mmcsd_slot
[root@(none) modules]# lsmod
Module                  Size  Used by    Not tainted
mmcsd_slot              3492   0 (unused)
mmcsd_disk              3164   0 (autoclean)  (unused)
mmcsd_core              6264   1 (autoclean)  [mmcsd_slot mmcsd_disk]
[root@(none) modules]# mount /dev/mmc/disc0/part1  /tmp/nfs
[root@(none) modules]# ls /tmp/nfs
??  ??   ????  ????.txt     MSMETADATA  explorer.exe    wsctf.exe
??  ??   ????  ????.txt     Recycled    ignore_my_docs  zjtemp
??  ???  ????  ???????      bootex.log  music
??  ???  ????  AutoRun.inf  englishto   s1
待做：明天需要把整理后的文件系统重新下载。试验modprobe，改进mount-mmc脚本，完成驱动其他内容。

11:46 2008-01-09
Linux, sd驱动加载; bash, shell: for loop statement, 定义整数变量
改进mmcsd卡挂载脚本"mount-mmc"，该脚本已经移到"yaffs+cramfs/root/root/bin"目录
1，用modprobe替换insmod
if [ $?=0 ] &&  [ "$LSMOD_RESULT" != "" ]; then
        rmmod mmcsd_slot > /dev/null 2>&1
        insmod $MMCSD_PATH/mmcsd_core.o > /dev/null 2>&1
else
        insmod $MMCSD_PATH/mmcsd_core.o > /dev/null 2>&1
        usleep 500000
        insmod $MMCSD_PATH/mmcsd_disk.o > /dev/null 2>&1
        usleep 500000
        insmod $MMCSD_PATH/mmcsd_slot.o > /dev/null 2>&1
fi
改为：
if [ $?=0 ] &&  [ "$LSMOD_RESULT" != "" ]; then
        rmmod mmcsd_slot > /dev/null 2>&1
fi
modprobe mmcsd_slot
2，修改等待加载sd卡的方式
usleep 500000
改为
declare -i times=0
for (( times=0; times<5; times++ )); do
{
#       echo $times times wait
        usleep 100000
        if [ -b "$MMCSD_DEVICE" ]; then
                echo Found mmcsd device
                break
        fi
}
done

13:15 2008-01-09
文件系统：
由于没有dircolors命令（PC机：/usr/bin/dircolors），"/etc/profile.d/colorls.sh"执行没有效果。
"/root/.bashrc"文件：
alias ls='ls --color'
改为
alias ll='ls -l --color'
alias ls='ls --color'

13:31 2008-01-09
挂载优盘：
2440开发板
插入优盘：
# hub.c: new USB device usb-ohci-1.1, assigned address 3
scsi0 : SCSI emulation for USB Mass Storage devices
  Vendor: SanDisk   Model: Cruzer Micro      Rev: 0.1
  Type:   Direct-Access                      ANSI SCSI revision: 02
Attached scsi removable disk sda at scsi0, channel 0, id 0, lun 0
SCSI device sda: 1000944 512-byte hdwr sectors (512 MB)
sda: Write Protect is off
Partition check:
 /dev/scsi/host0/bus0/target0/lun0: p1
并建立和符号链接：
# ls -l /dev/sda1 
lr-xr-xr-x    1 0        0              34 Oct  5 15:58 /dev/sda1 -> scsi/host0/bus0/target0/lun0/part1
现有模块：
# lsmod
Module                  Size  Used by
ide-disk               10832   0
ide-probe-mod           8672   0
ide-mod                51616   0  [ide-disk ide-probe-mod]
mousedev                4560   0  (unused)
keybdev                 1968   0  (unused)
usb-storage            22640   0  (unused)
sd_mod                 10944   0
scsi_mod               56112   2  [usb-storage sd_mod]
usb-ohci-s3c2440        2928   0  (unused)
usb-ohci               16704   0  [usb-ohci-s3c2440]
usb-ohci-pool           2128   1  [usb-ohci-s3c2440 usb-ohci]
hid                    19168   0  (unused)
usbmouse                1920   0  (unused)
input                   3776   0  [mousedev keybdev hid usbmouse]
usbcore                35136   0  [usb-storage usb-ohci hid usbmouse]

2410开发板加载优盘驱动：
下文的OHCI(Open Host Controller Interface)一个开放的usb设备标准，Linux使用这个标准管理所有设备，如果不加载ohci驱动，所有usb设备都无法使用。
======================
如果不加载"usb-ohci-s3c2410"，插拔优盘没有信息提示，"/proc/bus/usb/drivers"内容争取，"/proc/bus/usb/devices"无内容。
[root@(none) root]# modprobe usb-storage
(cat /proc/kmsg)
<6>usb.c: registered new driver usbdevfs
<6>usb.c: registered new driver hub
<6>SCSI subsystem driver Revision: 1.00
<6>Initializing USB Mass Storage driver...
<6>usb.c: registered new driver usb-storage
<6>USB Mass Storage support registered.
[root@(none) root]# modprobe usb-ohci-s3c2410
(cat /proc/kmsg，此时优盘已经插入开发板)
<4>Initializing S3C2410 buffer pool for DMA workaround
<4>Pre-allocating d buffers for pool 0xx
<6>usb-ohci.c: USB OHCI at membase 0xe9000000, IRQ 26
<6>usb.c: new USB bus registered, assigned bus number 1
<6>hub.c: USB hub found
<4>port #1 suspened!
<4>port #0 alived!
<6>hub.c: 1 port detected
<6>hub.c: USB new device connect on bus1/1, assigned device number 2
<6>scsi0 : SCSI emulation for USB Mass Storage devices
<4>  Vendor: SanDisk   Model: Cruzer Micro      Rev: 0.1 
<4>  Type:   Direct-Access                      ANSI SCSI revision: 02
<7>WARNING: USB Mass Storage data integrity not assured
<7>USB Mass Storage device found at 2

挂载usbdevfs文件系统：（待做：查作用）
--------------------
[root@(none) root]# mount -t usbdevfs none /proc/bus/usb
[root@(none) root]# ls /proc/bus/usb/
001      devices  drivers  
[root@(none) root]# ls /proc/bus/usb/001/
001  002  

显示已经插入的usb设备信息
-------------------------
其中"Cls"表示usb设备类别，优盘都是8，hub是9
[root@(none) root]# cat /proc/bus/usb/devices 
//(bamvor: usb hub)
T:  Bus=01 Lev=00 Prnt=00 Port=00 Cnt=00 Dev#=  1 Spd=12  MxCh= 1
B:  Alloc=  0/900 us ( 0%), #Int=  0, #Iso=  0
D:  Ver= 1.10 Cls=09(hub  ) Sub=00 Prot=00 MxPS= 8 #Cfgs=  1
P:  Vendor=0000 ProdID=0000 Rev= 0.00
S:  Product=USB OHCI Root Hub
S:  SerialNumber=e9000000
C:* #Ifs= 1 Cfg#= 1 Atr=40 MxPwr=  0mA
I:  If#= 0 Alt= 0 #EPs= 1 Cls=09(hub  ) Sub=00 Prot=00 Driver=hub
E:  Ad=81(I) Atr=03(Int.) MxPS=   2 Ivl=255ms
//(bamvor: 刚刚插入的优盘)
T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  2 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=0781 ProdID=5151 Rev= 0.10
S:  Manufacturer=SanDisk Corporation
S:  Product=Cruzer Micro
S:  SerialNumber=20052243321d65524f8d
C:* #Ifs= 1 Cfg#= 1 Atr=80 MxPwr=100mA
I:  If#= 0 Alt= 0 #EPs= 2 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
E:  Ad=81(I) Atr=02(Bulk) MxPS=  64 Ivl=  0ms
E:  Ad=01(O) Atr=02(Bulk) MxPS=  64 Ivl=  0ms

显示现有usb设备：
----------------
[root@(none) root]# cat /proc/bus/usb/drivers  
         usbdevfs
         hub
         usb-storage

插拔优盘：(cat /proc/kmsg)
--------------------------
<6>usb.c: USB disconnect on device 2
<6>hub.c: USB new device connect on bus1/1, assigned device number 3
<7>WARNING: USB Mass Storage data integrity not assured
<7>USB Mass Storage device found at 3

15:01 2008-01-09
重启后再次重复上面的操作，无论如何也找不到usb-storage设备。
待做：
1，查"WARNING: USB Mass Storage data integrity not assured"原因并解决。
位于"drivers/usb/storage/usb.c"
2，2440挂载中：
Attached scsi removable disk sda at scsi0, channel 0, id 0, lun 0
SCSI device sda: 1000944 512-byte hdwr sectors (512 MB)
sda: Write Protect is off
Partition check:
 /dev/scsi/host0/bus0/target0/lun0: p1
语句在2410中没有，查原因。
查找"Attached scsi"在那个文件中，"drivers/scsi/sd.c"，编译为sd_mod.o，是"Linux scsi disk driver"。加载模块后，优盘可以正确加载。
此时有下面信息：
<4>Attached scsi removable disk sda at scsi0, channel 0, id 0, lun 0
<4>SCSI device sda: 1000944 512-byte hdwr sectors (512 MB)
<4>sda: Write Protect is off
<6> /dev/scsi/host0/bus0/target0/lun0: p1
3，热插拔脚本。（暂缓）
进展："17:29 2008-01-09"实验热插拔脚本
4，如何自动生成sdxx的设备文件？（暂缓）
5，开发板支持中文，（暂缓）
编译nls_utf8.o后，挂载优盘后，查看目录中文显示为是"?"，但如果把ls结果保存到文件，在PC机中查看的确是中文。
参考Unix编程实践精解。
进展："14:57 2008-01-10"arm板显示中文

注：
1，参考资料：
http://gentoo-wiki.com/HOWTO_USB_Mass_Storage_Device
HOWTO USB Mass Storage Device
对Linux支持优盘有全面的描述。
2， "/proc/scsi/scsi"和"/proc/scsi/usb-storage-0/0"有scsi设备（这里是优盘）的信息：
[root@(none) root]# cat /proc/scsi/scsi 
Attached devices: 
Host: scsi0 Channel: 00 Id: 00 Lun: 00
  Vendor: SanDisk  Model: Cruzer Micro     Rev: 0.1 
  Type:   Direct-Access                    ANSI SCSI revision: 02
[root@(none) root]# cat /proc/scsi/usb-storage-0/0 
   Host scsi0: usb-storage
       Vendor: SanDisk Corporation
      Product: Cruzer Micro
Serial Number: 20052243321D65524F8D
     Protocol: Transparent SCSI
    Transport: Bulk
         GUID: 078151512243321d65524f8d
     Attached: Yes

16:36 2008-01-09
驱动程序能否支持移动硬盘？
在开发板的信息：
"/proc/kmsg"：
<6>hub.c: USB new device connect on bus1/1, assigned device number 7
<6>scsi1 : SCSI emulation for USB Mass Storage devices
<4>  Vendor: HTS54101  Model: 0G9AT00           Rev: 0000
<4>  Type:   Direct-Access                      ANSI SCSI revision: 02
<4>Attached scsi disk sdb at scsi1, channel 0, id 0, lun 0
<4>SCSI device sdb: 195371568 512-byte hdwr sectors (100030 MB)
<6> /dev/scsi/host1/bus0/target0/lun0: p1 p2 p3 p4
<7>WARNING: USB Mass Storage data integrity not assured
<7>USB Mass Storage device found at 7

"/proc/bus/usb/devices"：
T:  Bus=01 Lev=01 Prnt=01 Port=00 Cnt=01 Dev#=  8 Spd=12  MxCh= 0
D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=04b4 ProdID=6830 Rev= 2.40
S:  Product=YuanTech PD2-USB
S:  SerialNumber=DEF10E5168D6
C:* #Ifs= 1 Cfg#= 1 Atr=c0 MxPwr=  2mA
I:  If#= 0 Alt= 0 #EPs= 3 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
E:  Ad=02(O) Atr=02(Bulk) MxPS=  64 Ivl=  0ms
E:  Ad=86(I) Atr=02(Bulk) MxPS=  64 Ivl=  0ms
E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl= 10ms

下面是在PC机上该移动硬盘的信息：
T:  Bus=05 Lev=01 Prnt=01 Port=01 Cnt=01 Dev#=  6 Spd=480 MxCh= 0
D:  Ver= 2.00 Cls=00(>ifc ) Sub=00 Prot=00 MxPS=64 #Cfgs=  1
P:  Vendor=04b4 ProdID=6830 Rev= 2.40
S:  Product=YuanTech PD2-USB
S:  SerialNumber=DEF10E5168D6
C:* #Ifs= 1 Cfg#= 1 Atr=c0 MxPwr=  2mA
I:* If#= 0 Alt= 0 #EPs= 3 Cls=08(stor.) Sub=06 Prot=50 Driver=usb-storage
E:  Ad=02(O) Atr=02(Bulk) MxPS= 512 Ivl=0ms
E:  Ad=86(I) Atr=02(Bulk) MxPS= 512 Ivl=0ms
E:  Ad=81(I) Atr=03(Int.) MxPS=   4 Ivl=64ms

17:29 2008-01-09
实验热插拔脚本
根据hotplug的帮助，要使用热插拔脚本内核需要允许KMOD和HOTPLUG：
CONFIG_KMOD=y:
Loadable module support
	--Enable loadable module support
		--Kernel module loader
CONFIG_HOTPLUG=y:
General setup
	--Support for hot-plugable devices）
然后去linux-hotplug.sourceforge.net下载代理软件(agent software)
下载了"hotplug-2004_03_29.tar.gz"，位于"fv/download"
应该使用etc(其它系统）目录的脚本，明天继续学习。需要先确认开发板中"/etc/rc.d/init.d/"中的脚本是否在Linux启动时执行了。
待做：完成hotplug。

11:38 2008-01-10
待做：查set encoding=utf-8的作用

14:57 2008-01-10
arm板显示中文
1，是否是telnet不支持？
在FC7上安装了"telnet-server-0.17-38.fc7.i386.rpm"，从FC7登录到FC7，中文显示正常，就是说不是telnet造成的arm板不支持中文；
2，是否是环境变量"LANG"的问题？
使LANG等于zh_CN.UTF-8，C(即export LANG=zh_CN.UTF-8，export LANG=C)分别测试"ls /tmp/usbdisk/ "和"ls /tmp/usbdisk/ > /tmp/nfs/temp/0110test"，都是前者乱码，后者在FC7上看正常。
在FC7下测试，zh_CN.UTF-8正常，C乱码。
3，字体问题？
可能不光是上述问题，可能是板子Linux没有找到中文字体。
bamvor: 可以参考X11的设置脚本，比较复杂。
参考：
http://topic.csdn.net/t/20030103/20/1324680.html
苦恼的嵌入式linux汉化的问题！
http://www.linuxpk.com/40781.html
Linux中文化之在Mandrake7.0下使用简体中文
http://www.52z.com/info/ArticleView/2004-10-15/Article_View_31001.Htm
Linux下中文字体的安装
4，从QT身上找思路：
1)，QT下文本编辑器中保存的中文文字在arm终端和PC下都是正确的，说明字符集是utf8。
2)，QT下虚拟终端" ls /tmp/usbdisk"是乱码，但是保存的文件是gb2312的，将其转为utf8后，在arm终端下可以正确显示。
另外LANG环境变量没有作用（"zh_CN.UTF-8"和"C"结果相同)。
这两个事实说明arm终端下支持中文没有问题。问题和ls，cat等命令有关。
5，测试命令
telnet下：
[root@(none) nls]# ls /tmp/nfs/temp/(按两下TAB键)
0110test1     log_0102.cap  mount-mmc     putty-0.60    测试
[root@(none) nls]# export LANG=zh_CN.UTF-8          
[root@(none) nls]# ls /tmp/nfs/temp/      
0110test1  log_0102.cap  mount-mmc  putty-0.60  ??????
minicom下：
[root@(none) root]# ls /tmp/nfs/temp/(按两下TAB键)
0110test1     log_0102.cap  mount-mmc     putty-0.60    测�򵋯�                   
[root@(none) root]# ls /tmp/nfs/temp/                                           
0110test1  log_0102.cap  mount-mmc  putty-0.60  ??????
telnet下：
[root@(none) nls]# ls /tmp/nfs/temp/ > /tmp/nfs/temp/0110test1 
[root@(none) nls]# cat /tmp/nfs/temp/0110test1
0110test1
log_0102.cap
mount-mmc
putty-0.60
测试
vi结果([root@(none) nls]# vi /tmp/nfs/temp/0110test1)：
^[[0m^[[0m0110test1^[[0m
^[[0mlog_0102.cap^[[0m
^[[01;32mmount-mmc^[[0m
^[[01;34mputty-0.60^[[0m
^[[01;34m^f^u^K^h^o^U^[[0m
^[[m
可能是busybox不支持国际化？这样看来和热插拔一样都很复杂，而且偏离硬件也比较远，暂停这两方面的工作。
参考资料：
1，Linux的国际化和本地化机制简介  文章指数:0  CSDN
自：http://blog.csdn.net/Gavin_Han/archive/2007/11/14/1884877.aspx
Blog推出文章指数概念，文章指数是对Blog文章综合评分后推算出的，综合评分项分别是该文章的点击量，回复次数，被网摘收录数量，文章长度和文章类型；满分100，每月更新一次。
为了更好地对国际化和本地化进行支持，Linux系统 提供了符合Posix标准的NLS(National Language Support)子系统。该子系统建筑在基于ASCII码的Linux核心上，为世界上不同地域、不同语言环境的应用提供国际化本地化支持。 
在NLS子系统中，Glibc函数库中提供与代码集相关的多字节字符与宽字符处理函数是Linux实用程序支持国际化本地化的核心，通过这些函数，实用程序把英文与各种本地文字同样处理。
libc通过一种"转换模式"来实现对多字节编码的支持。目前的Glibc采用UTF-8作为处理码。当接收到外部输入的多字节字符时，系统首先根据当前的Locale确定所使用的字符集，然后查找从当前字符集到UTF-8之间的转换模式，根据这种转换模式把输入的多字节字符转换为相应的UTF-8字符。相反，当需要输出字符时，系统再查找从UTF-8到当前字符集之间的转换模式，按照这种模式把要输出的UTF-8字符转换为当前字符集中的多字节字符。
Locale是Linux本地化工作的基础，标识不同的区域，是根据计算机用户所使用的语言，所在国家或者地区，以及当地的文化传统所定义的一个软件运行时的语言环境。它在/usr/lib/locales目录下面有不同的Locale。有关于local的详细介绍，参考：http://www.syxin.com/2006/03/localelocale.html
参考文档：http://www.ibm.com/developerworks/cn/linux/i18n/gb18030/
2007/11/14
Trackback: http://tb.blog.csdn.net/TrackBack.aspx?PostId=1884877

2，学习locale资料
http://www.syxin.com/2006/03/localelocale.html
关于locale的设定,为什么要设定locale
http://blog.csdn.net/eqxu/archive/2006/05/25/754799.aspx
linux 乱码 及解决方法 locale 可以利用iconv -l 来查看linux系统都支持哪种编码格式

3，如何判断字符集
如何判断文本文件的字符集编码？
自：http://java23.com/hb/20070625/get-encoding-of-text-file/
June 25, 2007 - 编程

通常我们读取文本文件内容的时候，必须知道文件的字符集编码，否则显示出来就是一堆乱码。我们可以通过文件开头的几个字节来判断。

以 “0xEF 0xBB 0xBF” 开头文本文件的为 “UTF-8″ 格式。
以 “0xFE 0xFF”开头的为 “UTF-16/UCS-2, little endian” 格式。
以 “0xFF 0xFE” 开头的为 “UTF-32/UCS-4, big endian” 格式。
以 “0xFF 0xFF 0×00 0×00″ 开头的为 “UTF-32/UCS-4, little endian” 格式。
以 “0×00 0×00 0xFE 0xFF” 开头的为 “UTF-32/UCS-4, big endian” 格式。

17:41 2008-01-10
使QT支持鼠标
mousedev usbmouse input usb-ohci-s3c2410
启动QT：
if test -e  "/dev/input/mouse0"; then
export QWS_MOUSE_PROTO=MouseMan:/dev/input/mice
#"export QWS_MOUSE_PROTO=MouseMan:/dev/input/mouse0"也可以
exec /Qtopia/qtopia-free-1.7.0/bin/qpe-mouse -qws
else             
exec /Qtopia/qtopia-free-1.7.0/bin/qpe -qws
fi

待做：
1，模块关系和作用，保存系统日志；
2，mice和mouse0的区别。
3，QT是如何支持usb鼠标的原理。
4，操作过程中出现下面错误（不一定与鼠标有关），解决。
modprobe: modprobe: Can't locate module net-pf-23
5，现有Qtopia是用qpe和qpe-mouse分别支持触摸屏，鼠标。

17:57 2008-01-10
文件系统，QT下使用鼠标的过程：
[root@(none) root]# lsmod           
Module                  Size  Used by    Not tainted
[root@(none) root]# modprobe usbmouse
(cat /proc/kmsg)
<6>usb.c: registered new driver usbdevfs
<6>usb.c: registered new driver hub
<6>usb.c: registered new driver usb_mouse
<6>usbmouse.c: v1.6:USB HID Boot Protocol mouse driver
[root@(none) root]# lsmod
Module                  Size  Used by    Not tainted
usbmouse                1800   0 (unused)
usbcore                52616   0 (autoclean)  [usbmouse]
input                   3688   0 (autoclean)  [usbmouse]
[root@(none) root]# mount -t usbdevfs none /proc/bus/usb/
[root@(none) root]# modprobe hid
(cat /proc/kmsg)
<6>usb.c: registered new driver hiddev
<6>usb.c: registered new driver hid
<6>hid-core.c: v1.8 Andreas Gal, Vojtech Pavlik <vojtech@suse.cz>
<6>hid-core.c: USB HID support drivers
[root@(none) root]# lsmod
Module                  Size  Used by    Not tainted
hid                    18984   0 (unused)
usbmouse                1800   0 (unused)
usbcore                52616   1 (autoclean)  [hid usbmouse]
input                   3688   0 (autoclean)  [hid usbmouse]
[root@(none) root]# ls /dev/input/
[root@(none) root]# modprobe mousedev
(cat /proc/kmsg)
<6>mice: PS/2 mouse device common for all mice
(此时系统建立了"/dev/input/mice"设备节点)
[root@(none) root]# ls /dev/input/mice  -l
crw-r--r--    1 root     root      13,  63 Dec 31  1969 /dev/input/mice
[root@(none) root]# cat /proc/bus/usb/devices 
[root@(none) root]# cat /proc/bus/usb/drivers 
         usbdevfs
         hub
         usb_mouse
 96-111: hiddev
         hid
[root@(none) root]# modprobe usb-ohci-s3c2410
(cat /proc/kmsg)
<4>Initializing S3C2410 buffer pool for DMA workaround
<4>Pre-allocating d buffers for pool 0xx
<6>usb-ohci.c: USB OHCI at membase 0xe9000000, IRQ 26
<6>usb.c: new USB bus registered, assigned bus number 1
<6>hub.c: USB hub found
<4>port #1 suspened!
<4>port #0 alived!
<6>hub.c: 1 port detected
(插入鼠标)
<6>hub.c: USB new device connect on bus1/1, assigned device number 2
<6>input0: USB HIDBP Mouse 413c:3010 on usb1:2.0
[root@(none) root]# ls /dev/input/mouse0  -l
crw-r--r--    1 root     root      13,  32 Dec 31  1969 /dev/input/mouse0

18:11 2008-01-10
如果使用"/dev/input/mouse0"，鼠标设备重新插拔后，鼠标无法使用。"/dev/input/mice"无此问题。待做，查原因。

18:45 2008-01-10
键盘：keybdev evdev usbkbdQ其余和鼠标相同。
/dev/input/event1
待做，改进
1，QT快捷键；看文档没有找到合适的接口给qpe添加快捷键，下次上网找。"QAccel"负责快捷键。
2，键盘中扩展键盘部分只有数字键盘功能。上下左右等作用没有。
(11:22 2008-01-11)
1)，找十六进制工具；
2)，学习Linux的usb和input结构。
3)，找出其中键码相关代码。

10:51 2008-01-11
文件系统，为键盘驱动加入小键盘功能，找十六进制工具
在arm板上加入十六进制查看工具"hexdump"，自"http://gd.tuwien.ac.at/softeng/Aegis/hexdump.html"。
在PC机下编译运行通过(./configure, make, 测试："bin/hexdump 文件")
为arm开发板编译：
[root@host hexdump-1.5]# ./configure --host=arm-linux
编译出错：
arm-linux-gcc  -g -O2 -I. -c error.c
In file included from ac/stdarg.h:46,
                 from error.c:24:
/usr/local/arm/3.3.2/lib/gcc-lib/arm-linux/3.3.2/include/varargs.h:4:2: #error "GCC no longer implements <varargs.h>."
/usr/local/arm/3.3.2/lib/gcc-lib/arm-linux/3.3.2/include/varargs.h:5:2: #error "Revise your code to use <stdarg.h>."
是配置的问题，先改config.h，然后再查如果正确configure。
修改config.h:
/* bamvor.modified.2008-01-11 */
/* #undef HAVE_STDARG_H */
#define HAVE_STDARG_H 1
configure相关代码：
3242 echo "$as_me:$LINENO: checking for working stdarg.h" >&5
3243 echo $ECHO_N "checking for working stdarg.h... $ECHO_C" >&6
3244 if test "$cross_compiling" = yes; then
3245   echo "$as_me:$LINENO: result: cross" >&5
......
3278 cat >>confdefs.h <<\_ACEOF
3279 #define HAVE_STDARG_H 1
3280 _ACEOF
待做，configure脚本看不懂，参考"GNU/Linux编程指南"学习。并解决上面问题。

13:24 2008-01-11
输入设备驱动文档："Documentation/input/input.txt"
键盘使用的是第一套扫描码，（A=0x1e, B=0x30......），用hexdump查看，结果和PC机下相同。说明驱动没有问题。
USB驱动：
"Documentation/usb"
usb-help.txt：网址。
hotplug.txt：usb设备的热插拔。热插拔脚本学习参考资料。

14:36 2008-01-11
桌面QT可以识别键盘（PS2）所有按键。
QT编译的问题？重新编译QT。

14:55 2008-01-11
待做，加入键盘驱动后的完善：
1，加入快捷键；
2，设置合适的焦点。

16:18 2008-01-11
解决小键盘问题：
1，编写了qkeyboardtest.cpp/h程序，显示按下案件的ascii和键码。位置"fv/kernel_driver/driver"。
1)，使用开发板qt库编译：上下左右等小键盘按键出了"Num Lock"都识别为与大键盘相同的按键。

16:45 2008-01-11
待做，实现虚拟控制台
getty -n 115200, vc/0
液晶屏幕上有反应：
getty: ioctl() TIOCSPGRP call failed: Inappropriate ioctl for device
(none) login: 
但是按键无反应或者显示内容不正确。

17:42 2008-01-11
QT中使用键盘，鼠标（触摸屏）
自：http://blog.chinaunix.net/u1/55409/showart_434344.html
在最后运行的时候，加上如下环境变量：
export QWS_MOUSE_PROTO=TPanel:/dev/h3600_tsraw（触摸屏具体名称和位置可能需要根据实际情况修改）
export QWS_MOUSE_PROTO=USB:/dev/input/mice
如果想让Qtopia支持USB标准键盘，在最后运行的时候，加上如下环境变量：
export QWS_KEYBOARD=USB:/dev/input/event0

bamvor: 使用上面键盘设定后，上下左右箭头可以识别了。另外在PC机上，做类似设置（当前export QWS_KEYBOARD=USB:/dev/input/event2），可以解决FC7下qt下没有键盘的问题。
参考资料：
1，http://doc.trolltech.com/4.1/qtopiacore-envvars.html
Environment Variables。介绍QT的环境变量；
2，http://doc.trolltech.com/4.1/qtopiacore-pointer.html
Pointer Handling。介绍QT定位设别的使用和设置。
3，http://doc.trolltech.com/2.3/accelerators.html
QT已有快捷键。
4，http://blog.21ic.com/user1/2177/archives/2006/32189.html
【转载】关于Qt下的触摸屏。待做：看。
位置："Documents/bamvor张健的文档/micro微电子与计算机/Embeded嵌入式系统/消费电子产品/display显示器件和GUI软件/GUI"
5，下载，阅读：
http://blog.ednchina.com/lionoftomorrow/75349/message.aspx
http://www.qtopia.org.cn/phpBB2/viewtopic.php?t=940
http://www.hhcn.com/cgi-bin/topic.cgi?forum=3&topic=473&start=24&show=0
http://www.hhcn.com/cgi-bin/topic.cgi?forum=3&topic=473&start=0&show=0
http://blog.chinaunix.net/u1/55409/showart_434344.html
http://www.up-tech.com/bbs/dispbbs.asp?boardID=4&ID=4973&page=4
待做：查QT对键盘鼠标的设置。

17:47 2008-01-11
待做：
1，查tslib。
2，从网上看，使QT支持触摸屏多少需要些周折，可能现有代码已经不是标准的QT2.3.2代码了。

18:11 2008-01-11
使用下面配置文件编译qt：
src/tools/qconfig-local_bamvor.h
#ifndef QT_H
#endif // QT_H

// Note that disabling more features will produce a libqte that is not
// compatible with other libqte builds.

#ifndef QT_DLL
#define QT_DLL // Internal
#endif

#define QT_QWS_IPAQ
//bamvor.add.2008-01-11.1_line
#define QT_QWS_IPAQ_RAW
// Platforms where mouse cursor is never required.
//#if defined(QT_QWS_IPAQ) || defined(QT_QWS_CASSIOPEIA) || defined(QT_QWS_SL5XXX)
//# define QT_NO_QWS_CURSOR
//# define QT_NO_QWS_MOUSE_AUTO
//#endif

命令：./configure -xplatform linux-arm-g++ -shared -debug       -qconfig local_bamvor  -qvfb -depths 16
这次自己编译的版本和现有arm开发板的版本完全想同。

19:17 2008-01-11
QT，键盘
键盘问题终于有了一些眉目：
代码："qt/src/kernel/qkeyboard_qws.cpp"
QWSUsbKeyboardHandler继承了QWSPC101KeyboardHandler。
对于USB键盘，按键处理由"QWSUsbKeyboardHandler::readKeyboardData()"函数负责，其间会调用"QWSPC101KeyboardHandler::doKey()"函数。
"QWSUsbKeyboardHandler::readKeyboardData()"除了上下左右外，都交给doKey()处理。
现在只是多了上下左右，说明doKey中处理其他小键盘按键不符合USB键盘实际情况。
修改方法：
1，设定为设置的键盘类型；
2，手工修改"QWSUsbKeyboardHandler::readKeyboardData()"代码。
待做：
1，使QT支持小键盘；（暂时完成，见"13:04 2008-01-14"1）
2，找出doKey把小键盘按键直接判断为数字的原因。（原因是KeyMap数组直接映射了对应按键到数字）
3，理解待做1完成的原因。

19:32 2008-01-11
待做：下载，学习，重要。http://www.ibm.com/developerworks/cn/aix/library/au-badunixhabits.html。UNIX 高手的 10 个习惯

11:07 2008-01-14
struct Myinputevent {

    unsigned int dummy1;
    unsigned int dummy2;
    unsigned short type;
    unsigned short code;
    unsigned int value;

};
要想实现QT中number lock功能，需要看shift和caplocks是如何实现的。

13:04 2008-01-14
待做：
1，支持完整键盘；（加入了部分按键，暂时完成），见"17:12 2008-01-14"
2，可以通过界面选择使用鼠标还是触摸屏；可以看看现有注册定位设备的函数有没有可以删除定位设备的。
3，加入音频驱动。

14:34 2008-01-14
"qt/src/kernel/vim qwindowsystem_qws.h"
    typedef struct KeyMap {
        int  key_code;
        ushort unicode;
        ushort shift_unicode;
        ushort ctrl_unicode;
    };


15:30 2008-01-14
待做：还需要解决键盘重新插拔的问题。

17:12 2008-01-14
修改QT键盘代码
只加入了Insert, Home等按键。补丁文件是："fv/app/qt/qkeyboard_qws.patch"，复制到fft_root解压缩后的目录，，命令：
patch qt/src/kernel/qkeyboard_qws.cpp < qkeyboard_qws.patch

11:51 2008-01-16
待做；
0，完善启动脚本。
1，重新编译QT库，在开发板尝试键盘驱动是否正确。
2，给键盘做符号链接。或和鼠标/触摸屏切换那样，由程序设置。
查QT更换语言时是怎么做的。

14:30 2008-01-22
待做：
1，日立文档：
1)，用户管理界面文档：类图，序列图。
2)，烧写Bootload, kernel, filesystem过程，所做的修改；
2，向叶博请假。（完成）
3，周一走时收拾好东西。

15:00 2008-01-22
网络，Linux下查询DNS：
[root@host ~]# nslookup 
> server
Default server: 211.167.240.29
Address: 211.167.240.29#53
Default server: 202.106.196.115
Address: 202.106.196.115#53
> exit

17:32 2008-01-22
学习hexdump
1, 待做，查"_("含义
static void usage _((void));

static void
usage()
{
        fprintf(stderr, "usage: %s [ <option>... ][ <infile> [ <outfile>
]]\n", progname);
        fprintf(stderr, "       %s -Help\n", progname);
        exit(1);
}
2, 看help.c/h
3, fopen, b参数。提高可移植性。
input = fopen(infile, "rb");
       The  mode  string  can  also  include the letter ‘‘b’’ either as a last
       character or as a character between the characters in any of  the  two-
       character  strings described above.  This is strictly for compatibility
       with C89 and has no effect; the ‘‘b’’ is ignored on all POSIX  conform-
       ing  systems, including Linux.  (Other systems may treat text files and
       binary files differently, and adding the ‘‘b’’ may be a  good  idea  if
       you  do I/O to a binary file and expect that your program may be ported
       to non-Unix environments.)

19:21 2008-01-22
arm开发板，带盒子
http://auction1.taobao.com/auction/50008090-50002918-50002928/item_detail-0db2-9ccde8761dee61faab33b9382ccdbe21.jhtml

10:56 2008-01-24
安装umbrello：FC7 kdesdk 3.5.8-2.fc7.i386

11:13 2008-01-24
待做：
1，修改用户信息时不能注册手指；
在PC机下会出错：
Core was generated by `./useradmindialog -qws'.
Program terminated with signal 6, Aborted.
#0  0x00219402 in __kernel_vsyscall ()
(gdb) where
#0  0x00219402 in __kernel_vsyscall ()
#1  0x00242fa0 in raise () from /lib/libc.so.6
#2  0x002448b1 in abort () from /lib/libc.so.6
#3  0x008c889a in handleCrash ()
   from /usr/src/FV_Project/qt/qtopia/lib/libqpe.so.1
#4  <signal handler called>
#5  0x0805c881 in QUserFingerInfo::addVRF (this=0x9509910)
    at userfingerinfo.cpp:268
#6  0x00e58ea7 in QObject::activate_signal ()
   from /usr/src/FV_Project/qt/qt/lib/libqte.so.2

2，启动增删改查用户信息时有时会死一段时间，然后程序报错退出。缺：错误信息。查。
18:11 2008-01-24
启动脚本修改完成，现有根文件系统。
fv/backup/root.yaffs.tar.gz

18:13 2008-01-24
待做：
明天写文档；修改启动脚本----指定键盘为USB键盘。
