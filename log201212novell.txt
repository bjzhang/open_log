.LOG
09:43 2012-12-03
virtualization, libvirt, xen, xend, support management save, bugzilla, cont10, deal with Jim reply
1, Jim_email_20121201
Bamvor Jian Zhang wrote:
> Implement the domainManagedSave, domainHasManagedSaveImage, and
> domainManagedSaveRemove functions in the libvirt legacy xen driver.
>

Cool, thanks for the patch!

In case others are interested, one motivation for adding this
functionality in the legacy xen driver is to avoid xen-only hacks in the
nova libvirt driver.

> domainHasManagedSaveImage check the managedsave image from filesystem
> everytime. This is different from qemu and libxl driver. In qemu or
> libxl driver, there is a hasManagesSave flags in virDomainObjPtr which
> is not used in xen legacy driver. This flag could not add into xen
> driver ptr either, because the driver ptr will be release at the end of
> every libvirt api calls. Meanwhile, AFAIK, xen store all the flags in
> xen not in libvirt xen driver. There is no need to add this flags in xen.
>

I think checking the filesystem is the only way to go since xend doesn't
have the notion of managedsave.  Do others see any issues with this
approach?

> ---
> i have test the following case for this patch:
> 1), "virsh managedsave" save domain to /var/lib/xen/save/domain_name.save.
> call xenUnifiedDomainManagedSave.
> 2), "virsh start": if managedsave image is exist, it should be boot from
> managed save image.
> call xenUnifiedDomainHasManagedSaveImage.
> 3), "virsh start --force-boot": fresh boot, delete the managed save image
> if exists.
> call xenUnifiedDomainHasManagedSaveImage,
> xenUnifiedDomainManagedSaveRemove.
> 4), "virsh managedsave-remove": remove managed save image.
> call xenUnifiedDomainManagedSaveRemove
> 5), "virsh undefine": undefine the domain, it will fail if mananed save
> image exist.
> call xenUnifiedDomainHasManagedSaveImage.
> 6), "virsh undefine --managed-save": undefine the domain, and remove
> mananed save image.
> call xenUnifiedDomainHasManagedSaveImage and
> xenUnifiedDomainManagedSaveRemove.
> 7), "virsh list --all --with-managed-save". list domain if managed save
> image exist. got nothing if non-exists.
> call xenUnifiedDomainHasManagedSaveImage.
> 8), "virsh list --all --without-managed-save". do not list the domain if
> managed save image exist.
> call xenUnifiedDomainHasManagedSaveImage.
>

Thanks for including your test cases.  I've tried these on your patch as
well and looks good!

>  src/xen/xen_driver.c | 109 ++++++++++++++++++++++++++++++++++++++++++++++++++-
>  src/xen/xen_driver.h |   2 +
>  2 files changed, 110 insertions(+), 1 deletion(-)
>
> diff --git a/src/xen/xen_driver.c b/src/xen/xen_driver.c
> index 5a40757..0b2418d 100644
> --- a/src/xen/xen_driver.c
> +++ b/src/xen/xen_driver.c
> @@ -67,6 +67,7 @@
>  #include "nodeinfo.h"
>
>  #define VIR_FROM_THIS VIR_FROM_XEN
> +#define XEN_SAVE_DIR LOCALSTATEDIR "/lib/libvirt/xen/save"
>

#include "configmake.h" is needed for LOCALSTATEDIR

>
>  static int
>  xenUnifiedNodeGetInfo(virConnectPtr conn, virNodeInfoPtr info);
> @@ -267,6 +268,7 @@ xenUnifiedOpen(virConnectPtr conn, virConnectAuthPtr auth, unsigned int flags)
>  {
>      int i, ret = VIR_DRV_OPEN_DECLINED;
>      xenUnifiedPrivatePtr priv;
> +    char ebuf[1024];
>
>  #ifdef __sun
>      /*
> @@ -406,6 +408,17 @@ xenUnifiedOpen(virConnectPtr conn, virConnectAuthPtr auth, unsigned int flags)
>      }
>  #endif
>
> +    if (virAsprintf(&priv->saveDir, "%s", XEN_SAVE_DIR) == -1) {
> +        virReportOOMError();
> +        goto fail;
> +    }
> +
> +    if (virFileMakePath(priv->saveDir) < 0) {
> +        VIR_ERROR(_("Failed to create save dir '%s': %s"), priv->saveDir,
> +                  virStrerror(errno, ebuf, sizeof(ebuf)));
> +        goto fail;
> +    }
> +
>      return VIR_DRV_OPEN_SUCCESS;
>
>  fail:
> @@ -437,6 +450,7 @@ xenUnifiedClose(virConnectPtr conn)
>          if (priv->opened[i])
>              drivers[i]->xenClose(conn);
>
> +    VIR_FREE(priv->saveDir);
>      virMutexDestroy(&priv->lock);
>      VIR_FREE(conn->privateData);
>
> @@ -1080,6 +1094,79 @@ xenUnifiedDomainSave(virDomainPtr dom, const char *to)
>      return xenUnifiedDomainSaveFlags(dom, to, NULL, 0);
>  }
>
> +static char *
> +xenUnifiedDomainManagedSavePath(xenUnifiedPrivatePtr priv, virDomainPtr dom)
> +{
> +    char *ret;
> +
> +    if (virAsprintf(&ret, "%s/%s.save", priv->saveDir, dom->name) < 0) {
> +        virReportOOMError();
> +        return NULL;
> +    }
> +
> +    VIR_DEBUG("managed save image: %s", ret);
> +    return ret;
> +}
> +
> +static int
> +xenUnifiedDomainManagedSave(virDomainPtr dom, unsigned int flags)
> +{
> +    GET_PRIVATE(dom->conn);
> +    char *name;
> +    int ret = -1;
> +
> +    virCheckFlags(0, -1);
> +
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
> +
> +    if (priv->opened[XEN_UNIFIED_XEND_OFFSET])
> +        ret = xenDaemonDomainSave(dom, name);
> +
> +cleanup:
> +    VIR_FREE(name);
> +    return ret;
> +}
> +
> +static int
> +xenUnifiedDomainHasManagedSaveImage(virDomainPtr dom, unsigned int flags)
> +{
> +    GET_PRIVATE(dom->conn);
> +    char *name;
> +    int ret = -1;
> +
> +    virCheckFlags(0, -1);
> +
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        return ret;
> +
> +    ret = virFileExists(name);
> +    VIR_FREE(name);
> +    return ret;
> +}
> +
> +static int
> +xenUnifiedDomainManagedSaveRemove(virDomainPtr dom, unsigned int flags)
> +{
> +    GET_PRIVATE(dom->conn);
> +    char *name;
> +    int ret = -1;
> +
> +    virCheckFlags(0, -1);
> +
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
>

I think we can do away with the cleanup label and simply return ret here.

> +
> +    ret = unlink(name);
> +    VIR_FREE(name);
> +
> +cleanup:
> +    return ret;
> +}
> +
>  static int
>  xenUnifiedDomainRestoreFlags(virConnectPtr conn, const char *from,
>                               const char *dxml, unsigned int flags)
> @@ -1504,16 +1591,33 @@ static int
>  xenUnifiedDomainCreateWithFlags(virDomainPtr dom, unsigned int flags)
>  {
>      GET_PRIVATE(dom->conn);
> +    char *name;
>      int i;
> +    int ret = -1;
>
>      virCheckFlags(0, -1);
>
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
> +
> +    if (virFileExists(name)) {
> +        if (priv->opened[XEN_UNIFIED_XEND_OFFSET]) {
> +            ret = xenDaemonDomainRestore(dom->conn, name);
> +            if (ret == 0)
> +                unlink(name);
> +        }
> +        VIR_FREE(name);
> +        goto cleanup;
> +    }
>

name is leaked here if virFileExists() fails.  You can initialize name
to NULL and then unconditionally free it in cleanup.

> +
>      for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i)
>          if (priv->opened[i] && drivers[i]->xenDomainCreate &&
>              drivers[i]->xenDomainCreate(dom) == 0)
>              return 0;
>
> -    return -1;
> +cleanup:
> +    return ret;
>  }
>
>  static int
> @@ -2218,6 +2322,9 @@ static virDriver xenUnifiedDriver = {
>      .domainGetState = xenUnifiedDomainGetState, /* 0.9.2 */
>      .domainSave = xenUnifiedDomainSave, /* 0.0.3 */
>      .domainSaveFlags = xenUnifiedDomainSaveFlags, /* 0.9.4 */
> +    .domainManagedSave = xenUnifiedDomainManagedSave, /* 1.0.1 */
> +    .domainHasManagedSaveImage = xenUnifiedDomainHasManagedSaveImage, /* 1.0.1 */
> +    .domainManagedSaveRemove = xenUnifiedDomainManagedSaveRemove, /* 1.0.1 */
>      .domainRestore = xenUnifiedDomainRestore, /* 0.0.3 */
>      .domainRestoreFlags = xenUnifiedDomainRestoreFlags, /* 0.9.4 */
>      .domainCoreDump = xenUnifiedDomainCoreDump, /* 0.1.9 */
> diff --git a/src/xen/xen_driver.h b/src/xen/xen_driver.h
> index b3fbcff..078980e 100644
> --- a/src/xen/xen_driver.h
> +++ b/src/xen/xen_driver.h
> @@ -200,6 +200,8 @@ struct _xenUnifiedPrivate {
>      /* Location of config files, either /etc
>       * or /var/lib/xen */
>      const char *configDir;
> +    /* Location of managed save dir, default /var/lib/libvirt/xen/save */
> +    char *saveDir;
>
>  # if WITH_XEN_INOTIFY
>      /* The inotify fd */
>

With exception of the few nits, looks good!  I would like to hear what
others think about checking existence of the managed save image on each invocation of domainHasManagedSaveImage().

Thanks,
Jim

09:48 2012-12-03
GTD
0, 9:30-11:59 13:40-14:33 -17:40

1, today
1), 10' work on libvirt manage save for xen legacy: update patch and reply to Jim. see"09:43 2012-12-03".
2), 40' fix bug in bridge-utils: https://bugzilla.novell.com/show_bug.cgi?id=789275. sr id 22942. how to using quilt, see"10:29 2012-12-03"
3), mailing list. devel-server. see"13:54 2012-12-03"
4), 10' work report. see"17:25 2012-12-03"

10:29 2012-12-03
osc, build service, obs/ibs, patch, try quilt commands
doc: http://147.2.207.240/~dmzhang/osc-quilt.markdown
1, bamvor@linux-bjrd:bridge-utils-1.4> quilt new bridge-utils-1.4-show-selected-bridge.patch
Patch patches/bridge-utils-1.4-show-selected-bridge.patch is now on top
2, bamvor@linux-bjrd:bridge-utils-1.4> quilt edit brctl/brctl_cmd.c
File brctl/brctl_cmd.c added to patch patches/bridge-utils-1.4-show-selected-bridge.patch
using gvim
bamvor@linux-bjrd:bridge-utils-1.4> EDITOR=gvim quilt edit brctl/brctl_cmd.c
File brctl/brctl_cmd.c is already in patch patches/bridge-utils-1.4-show-selected-bridge.patch
3, bamvor@linux-bjrd:bridge-utils-1.4> quilt diff
Index: bridge-utils-1.4/brctl/brctl_cmd.c
===================================================================
--- bridge-utils-1.4.orig/brctl/brctl_cmd.c
+++ bridge-utils-1.4/brctl/brctl_cmd.c
...//show the patch file
bamvor@linux-bjrd:bridge-utils-1.4> quilt refresh
Refreshed patch patches/bridge-utils-1.4-show-selected-bridge.patch
now xxx.patch is actually created in the patches directory(the parent directory).

13:54 2012-12-03
mailing list, devel-server, CI(Continous Integration), jenkin; obs, notification, hermes
1, Lin Ma
1), -CI server.
Contacted Bernhard M. Wiedemann to get some useful information about
the jenkins scripts in SUSE-Cloud automation project.

Created a local jenkins instance for kvm autotest. defined my own trigger
policy by creating two scripts:
One script monitors SLE 11 sp3 repo on ibs, if it detects any updates, it will
analyzes the update info to determine if there is a new qemu-kvm package.
If so, the another one will get the new qemu-kvm package name, remove
the old package and install the new package. Later,The test jobs will be
triggered to perform one by one and send out real notification through email.

I've deployed 40% kvm autotests scripts in this jenkins instance. Based on
aboved trigger policy, they works well. But the rest of kvm autotests scripts
don't work well, some of them need certain utility packages in guest image,
some of them need special configuration. I'm working on them to add/fix
these dependency.
2), olaf kirch and Vincent Untz reply to Lin Ma
> Cool, this looks extremely useful!
>
> This makes me wonder whether there's a mechanism to receive notifications
> for specific package updates from IBS without polling. Maybe you could ask
> Adrian Schröter if there are such notifications available somewhere in the
> dark depths of IBS...

You can configure hermes (https://mercurius.suse.de/ for IBS) to send
you a notification when there's a commit (by mail, rss feed, xmpp
message).

In hermes for OBS, the notifications can also be sent through a raw HTTP
GET query (which would probably be the simplest option for cases like
this, I guess).

Vincent

14:31 2012-12-03
mailing list, kernel, crash
1, "Mike Galbraith <mgalbraith@suse.de>"_answer_"Michal Kubecek <mkubecek@suse.cz>"_email_"[kernel] question: worker thread named [kworker/0:1] on every CPU"_20121130_2235
On Fri, 2012-11-30 at 15:35 +0100, Michal Kubecek wrote:
> Hello,
>
> in crash dumps for bnc#790939 I found something I don't understand. On
> every CPU, there is a process named "[kworker/0:1]" in RU state. I
> always thought the first number after the slash should be the CPU the
> thread is running on (or 'u' for unbound). But here I have threads with
> '0' on all CPU's.

Check pid, the name is a lie.

> Another strange thing is that except NMI or normal interrupt stack, all
> of them have only cpu_idle on stack (and possibly an Intel specific
> implementation).

Because they're really swapper.

> Are these threads result of normal operation or sign of a problem?

It's normal.

crash: vmlinux: no .gnu_debuglink section
GNU gdb (GDB) 7.0
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-unknown-linux-gnu"...

      KERNEL: vmlinux
    DUMPFILE: /proc/kcore
        CPUS: 64
        DATE: Fri Nov 30 18:21:23 2012
      UPTIME: 00:57:39
LOAD AVERAGE: 0.12, 0.08, 0.11
       TASKS: 533
    NODENAME: vogelweide
     RELEASE: 3.0.38-0.5-default
     VERSION: #1 SMP Fri Aug 3 09:02:17 UTC 2012 (358029e)
     MACHINE: x86_64  (2261 Mhz)
      MEMORY: 8 GB
         PID: 6764
     COMMAND: "crash"
        TASK: ffff88026d2c4040  [THREAD_INFO: ffff88026c156000]
         CPU: 16
       STATE: TASK_RUNNING (ACTIVE)

crash> ps|less
   PID    PPID  CPU       TASK        ST  %MEM     VSZ    RSS  COMM
>     0      0   0  ffffffff81a0b020  RU   0.0       0      0  [swapper]
>     0      2   1  ffff8802714aa300  RU   0.0       0      0  [kworker/0:0]
>     0      2   2  ffff8802714c6440  RU   0.0       0      0  [kworker/0:1]
>     0      2   3  ffff880271502580  RU   0.0       0      0  [kworker/0:1]
...

crash> task_struct ffff8802714aa300|grep cfs_rq
    cfs_rq = 0xffff88027e6311f0,
crash> struct cfs_rq 0xffff88027e6311f0|grep rq
struct cfs_rq {
  rq = 0xffff88027e631180,
  leaf_cfs_rq_list = {
crash> struct rq 0xffff88027e631180|grep idle
  idle = 0xffff8802714aa300,

Newer kernels are honest.

crash: vmlinux: no .gnu_debuglink section
GNU gdb (GDB) 7.0
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-unknown-linux-gnu"...

      KERNEL: vmlinux
    DUMPFILE: /proc/kcore
        CPUS: 64
        DATE: Fri Nov 30 18:51:18 2012
      UPTIME: 00:19:12
LOAD AVERAGE: 1.30, 1.35, 1.12
       TASKS: 1192
    NODENAME: vogelweide
     RELEASE: 3.0.50-rt74-0-rt
     VERSION: #1 SMP PREEMPT RT Fri Nov 9 13:48:16 UTC 2012 (c6efdc8)
     MACHINE: x86_64  (2260 Mhz)
      MEMORY: 8 GB
         PID: 7076
     COMMAND: "crash"
        TASK: ffff88026f21c400  [THREAD_INFO: ffff8802754a2000]
         CPU: 0
       STATE: TASK_RUNNING (ACTIVE)

crash> ps|less
   PID    PPID  CPU       TASK        ST  %MEM     VSZ    RSS  COMM
      0      0   0  ffffffff81a11020  RU   0.0       0      0  [swapper/0]
>     0      2   1  ffff880275818b30  RU   0.0       0      0  [swapper/1]
>     0      2   2  ffff880275870c70  RU   0.0       0      0  [swapper/2]
>     0      2   3  ffff8802758aadb0  RU   0.0       0      0  [swapper/3]
...


17:25 2012-12-03
work report - week 48
1, [devel-server] work report - week 48
1), working on bnc 782311: Snapshots stuck "queued" with Xen as HV.
discuss with Jim about my patch in private and then send it to upstream.
2), help Yadan Fan(Beijing L3 team) work on bnc#790928.
3), fix bug in bridge-utils. bnc#789275.

10:04 2012-12-04
GTD
0, 9:50-11:50 13:05-18:15

1, today
1), 40' libxl event: work on Ian Jackson comments. see"17:51 2012-11-30"
2), 30' talk with Jim. item""1-1), ""1-4).
3), 20' know something about fedora ARM status.
4), 13:12-13:35 14:09-18:04 send patch V2 for management save to upstream. see"11:45 2012-12-04"
5), 20' prepare environment for building kernel with kvm nested. see"16:30 2012-12-04"
6), Summary: 上次Jim说发了Upstream patch之后把链接贴到bugzilla上, 结果我忘了.

11:45 2012-12-04
virtualization, libvirt, xen, xend, support management save, bugzilla, cont11, work on patch v2 for upstream; test pass: ""6
1, Jim_20121204
1), email
>>  #define VIR_FROM_THIS VIR_FROM_XEN
>> +#define XEN_SAVE_DIR LOCALSTATEDIR "/lib/libvirt/xen/save"
>>
>>
>
> #include "configmake.h" is needed for LOCALSTATEDIR
>

BTW, you will also need to install this directory and add it to %files
in the spec file.  Squashing in the attached patch should do it.
2), attachment
diff --git a/libvirt.spec.in b/libvirt.spec.in
index 5b3f4e4..ec6fc8b 100644
--- a/libvirt.spec.in
+++ b/libvirt.spec.in
@@ -1719,6 +1719,9 @@ rm -f $RPM_BUILD_ROOT%{_sysconfdir}/sysctl.d/libvirtd
 %ghost %dir %{_localstatedir}/run/libvirt/libxl/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/libxl/
 %endif
+%if %{with_xen}
+%dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/xen/
+%endif
 %if %{with_network}
 %ghost %dir %{_localstatedir}/run/libvirt/network/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/network/
diff --git a/src/Makefile.am b/src/Makefile.am
index b5c20c8..2d36380 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -1768,6 +1768,9 @@ if WITH_UML
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/uml"
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/run/libvirt/uml"
 endif
+if WITH_XEN
+	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/xen"
+endif
 if WITH_NETWORK
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/network"
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/dnsmasq"
@@ -1814,6 +1817,9 @@ if WITH_UML
 	rmdir "$(DESTDIR)$(localstatedir)/lib/libvirt/uml" ||:
 	rmdir "$(DESTDIR)$(localstatedir)/run/libvirt/uml" ||:
 endif
+if WITH_XEN
+	rmdir "$(DESTDIR)$(localstatedir)/lib/libvirt/xen" ||:
+endif
 if WITH_NETWORK
 	rm -f $(DESTDIR)$(sysconfdir)/libvirt/qemu/networks/autostart/default.xml
 	rm -f $(DESTDIR)$(sysconfdir)/libvirt/qemu/networks/default.xml
2, compile and test
1), checking
(1), make check
pass
(2), make syntax-check
fail at(actual it always fail):
vulnerable_makefile_CVE-2009-4029
./Makefile.in:2033:     -find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
maint.mk: the above files are vulnerable; beware of running
  "make dist*" rules, and upgrade to fixed automake
  see http://bugzilla.redhat.com/542609 for details
(3), make -C tests valgrind
2), test
~/log/novell/hypervisor_and_tools/libvirt/managedsave
# ./loop_test.sh /etc/xen/vm/sles11_hvm_10_vm5.xml
3, study the Makefile.am and libvirt.spec.in
1), create directory during installation
(1), Makefile.am
install-data-local:
+if WITH_XEN
+	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/xen"
+endif
(2), target call procedure
((1)), in top Makefile
$(RECURSIVE_TARGETS) -> make xxx-am
((2)), in src/Makefile
make dir: install-am -> install-data-am -> install-data-local
rm dir: uninstall-am -> uninstall-local
notes: using "make --debug=j" can prove that the calling from install-am to install-data-local, but "install-data-am" is not displayed.
2), libvirt.spec.in
@@ -1719,6 +1719,9 @@ rm -f $RPM_BUILD_ROOT%{_sysconfdir}/sysctl.d/libvirtd
 %ghost %dir %{_localstatedir}/run/libvirt/libxl/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/libxl/
 %endif
+%if %{with_xen}
+%dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/xen/
+%endif
 %if %{with_network}
 %ghost %dir %{_localstatedir}/run/libvirt/network/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/network/
4, write comment.
1), comments unchanged
implement managedsave in libvirt xen legacy driver

Implement the domainManagedSave, domainHasManagedSaveImage, and
domainManagedSaveRemove functions in the libvirt legacy xen driver.

domainHasManagedSaveImage check the managedsave image from filesystem
everytime. This is different from qemu and libxl driver. In qemu or
libxl driver, there is a hasManagesSave flags in virDomainObjPtr which
is not used in xen legacy driver. This flag could not add into xen
driver ptr either, because the driver ptr will be release at the end of
every libvirt api calls. Meanwhile, AFAIK, xen store all the flags in
xen not in libvirt xen driver. There is no need to add this flags in xen.
2), comment after "---"
Changes since v1:
(1), add save dir in libvirt.spec.in and src/Makefile.am
(2), misc changes for return value and memory leak.

5, send patch
git format-patch --signoff --subject-prefix="PATCH V2" f5f80cec9e43442d12a445db14e6c01c026d946a
git send-email --no-chain-reply-to --annotate --to bjzhang@suse.com  0001-implement-managedsave-in-libvirt-xen-legacy-driver.patch

6, (12:14 2012-12-05)
managedsave test result: 100times loop successful.
log/novell/hypervisor_and_tools/libvirt/managedsave/loop_test.sh

7, upstream patch: still memory leak.
改还是没改干净. 结果还是Jim自己改了...
Jim_email_20121205
Bamvor Jian Zhang wrote:
> Implement the domainManagedSave, domainHasManagedSaveImage, and
> domainManagedSaveRemove functions in the libvirt legacy xen driver.
>
> domainHasManagedSaveImage check the managedsave image from filesystem
> everytime. This is different from qemu and libxl driver. In qemu or
> libxl driver, there is a hasManagesSave flags in virDomainObjPtr which
> is not used in xen legacy driver. This flag could not add into xen
> driver ptr either, because the driver ptr will be release at the end of
> every libvirt api calls. Meanwhile, AFAIK, xen store all the flags in
> xen not in libvirt xen driver. There is no need to add this flags in xen.
>
> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
>
[...]
> @@ -1505,15 +1591,32 @@ xenUnifiedDomainCreateWithFlags(virDomainPtr dom, unsigned int flags)
>  {
>      GET_PRIVATE(dom->conn);
>      int i;
> +    int ret = -1;
> +    char *name = NULL;
>
>      virCheckFlags(0, -1);
>
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
> +
> +    if (virFileExists(name)) {
> +        if (priv->opened[XEN_UNIFIED_XEND_OFFSET]) {
> +            ret = xenDaemonDomainRestore(dom->conn, name);
> +            if (ret == 0)
> +                unlink(name);
> +        }
> +        goto cleanup;
> +    }
> +
>      for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i)
>          if (priv->opened[i] && drivers[i]->xenDomainCreate &&
>              drivers[i]->xenDomainCreate(dom) == 0)
>              return 0;
>

Still a memory leak here.  I've squashed in the below patch and pushed
the result.  Thanks Bamvor.

Regards,
Jim

diff --git a/src/xen/xen_driver.c b/src/xen/xen_driver.c
index 8b44f17..3786176 100644
--- a/src/xen/xen_driver.c
+++ b/src/xen/xen_driver.c
@@ -1611,10 +1611,13 @@ xenUnifiedDomainCreateWithFlags(virDomainPtr
dom, unsigned int flags)
         goto cleanup;
     }

-    for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i)
+    for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i) {
         if (priv->opened[i] && drivers[i]->xenDomainCreate &&
-            drivers[i]->xenDomainCreate(dom) == 0)
-            return 0;
+            drivers[i]->xenDomainCreate(dom) == 0) {
+            ret = 0;
+            goto cleanup;
+        }
+    }

 cleanup:
     VIR_FREE(name);

8, message send on bugzilla by Jim
https://bugzilla.novell.com/show_bug.cgi?id=782311
https://bugzilla.novell.com/show_bug.cgi?id=782311#c8

James Fehlig <jfehlig@suse.com> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
             Status|ASSIGNED                    |NEEDINFO
       InfoProvider|                            |tbeitter@novell.com

--- Comment #8 from James Fehlig <jfehlig@suse.com> 2012-12-04 18:08:36 UTC ---
Ok, patch finally committed upstream

http://libvirt.org/git/?p=libvirt.git;a=commit;h=501bfad194140fe385704a01aa6c6125c6aba9dc

And a followup patch to fix a memory leak not noticed during review

http://libvirt.org/git/?p=libvirt.git;a=commit;h=cab0cfd5cfa9c2d2dfa9e04d586211f4db61ae32

I've backported and queued these patches for our next SP2 maintenance cycle,
although not quite sure when that will be.

Tilman, can you try the libvirt package from Devel:Virt:SLE-11-SP2?

http://download.suse.de/ibs/Devel:/Virt:/SLE-11-SP2/SUSE_SLE-11-SP2_Update_Test_standard/

13:50 2012-12-04
arm, server, fedora; qemu
1, fedora
https://fedoraproject.org/wiki/Architectures/ARM
includes support for Beagleboard-xM, Dreamplug, Guruplug, Highbank, iMX, Pandaboard, Sheevaplug, Trimslice, Versatile Express and more!
Bamvor: fedora support arm Versatile Express(QEMU) is useful for developers.
2, marvell arm based arm server. from 99$. support gigabit ethernet and wlan.
http://fedoraproject.org/wiki/Architectures/ARM/Kirkwood
http://www.globalscaletechnologies.com/default.aspx
3, Trimslice
http://fedoraproject.org/wiki/Architectures/ARM/Trimslice
    1 GHz NVIDA Tegra 2 (dual-core ARM Cortex A9)
    1 GB DDR2-667 RAM
    HDMI 1.3 max resolution 1920 x 1080
    Gigabit Ethernet (Realtek RTL8111DL)
    802.11 b/g/n WiFi

16:30 2012-12-04
virtualization, kvm, xen, xen on kvm, cont1, try to compile kernel
1, branch kernel
bamvor@linux-bjrd:suse> osc bco SUSE:SLE-11-SP2:Update kernel-default

Note: The branch has been created of a different project,
              SUSE:SLE-11-SP2:Update,
      which is the primary location of where development for
      that package takes place.
      That's also where you would normally make changes against.
      A direct branch of the specified package can be forced
      with the --nodevelproject option.
Bamvor: only got kernel-source package. seems all the kernel package in this package.
2, quilt setup kernel-default.spec
The %prep section of kernel-default.spec failed; results may be incomplete
The -v option will show rpm's output
3, (16:28 2012-12-05)
suse kernel is not support it.
maybe the only i could do is try opensuse.

13:57 2012-12-05
virtualization, libvirt, qemu, kvm, virtio hotplug
https://bugzilla.novell.com/show_bug.cgi?id=790928
1, report
Stephan Barth 2012-11-22 15:25:46 UTC

Created an attachment (id=514216) [details]
supportconfig from my lab machine

If a second disk is added to a KVM guest with

virsh attach-disk sles11-1 /var/lib/libvirt/images/sles11-1.img vdb

and then it is mounted on the guest and a single read operation like with

ll /mnt

is done, which is successful and after that the disk is removed with

virsh detach-disk sles11-1 vdb

the guest does not detect this. There is no event in dmesg or
/var/log/messages. Additionally if you run

fdisk -l

the command hangs when it tries to detect the second disk.
2, explain by developer
Bruce Rogers 2012-12-04 20:56:04 UTC

The hot-unplug support is at the pci device level. There is no automatic
notification to the block layer when the virtio pci-device is being removed, so
you do need to have the block device unused when the device is removed (eg
umount <device-file>).

So we do support hot-unplug of the virtio block pci device, but not in the same
way that you have come to expect for scsi, for example. The virtio protocol
does not include mechanisms for handling hotplug at that level, just at the pci
level.

We probably need to document this better.

13:58 2012-12-05
GTD
0, 12:00

1, today
1), 13:59-14:20 17:12- libxl event: work on Ian Jackson comments. see"17:51 2012-11-30"

10:10 2012-12-06
company, colleague, Joey Zheng, farewell
1, "Olaf Kirch <okir@suse.com>"_email_"[devel-server] Joey Zheng is about to leave us"_20121205_1906
Hi all,

Joey Zheng, leader of the Beijing Desktop team, is going to leave SUSE after
a long and very succesful carreer with us. He will move to his home town to
take care of his family. His last working day will be Friday this week.

We have not selected a successor for Joey yet. In the interim, David
Liang has agreed to step in as temporary supervisor for the team.
Please support David in this role.

Most of all, please join me in thanking Joey for his great contributions
to SUSE, and wishing him good luck for his personal and professional future.

Sincerely,
Olaf
--
Neo didn't bring down the Matrix. SOA did. (soafacts.com)
--------------------------------------------
Olaf Kirch - Director SUSE Linux Enterprise; R&D (okir@suse.com)
SUSE LINUX Products GmbH, Maxfeldstr. 5, 90409 Nürnberg, Germany
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)

2, Joey
Hi Olaf,

Thanks a lot for your great support these years. :)

Best Regards,
Joey Zheng

3, "Stefan Behlert <behlert@suse.com>"_email_20121205_2344
Joey,

I wish you all the best for your future!

It was a sad day when I heard about you leaving, as it was always fun to
work with you. We have been working together now for quite a while, and I
can just say that I hope we will be working to gether sometime in the
future!

Again, a big THANK YOU from me for the years of co-operation and everything
you did for the products, the department, and the people of SUSE!

All the best to you and your family.

        ciao,
          Stefan

4, Joey Zheng
My contact information is following:
Email & Gtalk: joey.yuzheng@gmail.com
IRC: jzheng on freenode.net
Sina weibo: _J_o_e_y_
Mobile: +8613511008202

Thanks,
Joey Zheng

10:56 2012-12-06
company, colleague, openSUSE Team member, Alberto Planas, report to Agustin Benito Bethencourt
"Agustin Benito Bethencourt <abebe@suse.com>"_"[devel] Please welcome Alberto Planas - new openSUSE Team member"_email_20121205_1838
Dear colleagues,

It's my pleasure to announce a new team member.

Alberto Planas Dominguez joined this Monday the openSUSE Team at SUSE. He will
be located in Nuremebrg between 18 and 24 months before moving back to his
country, to work for SUSE remotely.

Alberto has a wide experience working in different R&D projects and companies
as researcher, developer or manager. During his 15 year carrer he has worked
with many different technologies and frameworks (from Assembler to Ruby, from
JBoss to Django...) in different sectors (Biotechnology, financial) in a
variety of areas (analysis, tools development, monitoring, modelling...). He
is also a reputed technical writer with articles published in different IT
media.

Please join me in giving him a warm welcome and support him in getting used to
SUSE, across all teams.

By the way, Alberto is very interested in the local culture, history,
economy....as far as it do not goes through a fermentation process.

Next time I will add this as requirement in the opening description. :-)
Alberto....stand strong! I couldn't.

Saludos
--
Agustin Benito Bethencourt
openSUSE Team Lead at SUSE
abebe@suse.com

11:00 2012-12-06
GTD
0, 9:40-13:18 15:00-18:06

1, today
1), 11:01-13:17 23:00-23:50 libxl event: work on Ian Jackson comments. see"17:51 2012-11-30"
1.5h discuss with Jim about it. see"log/novell/im/NM20121206_Jim_Fehlig__discuss_about_libxl_event_bug.txt".
2), 15:00-15:43 read some code in xen arm. see"15:00 2012-12-06"
nap 20'

11:43 2012-12-06
software, skill, SCM: hg, extension, graph log, glog
http://mercurial.selenic.com/wiki/GraphlogExtension
Enable this extension by adding the following lines to your configuration file (hgrc):

[extensions]
graphlog =

15:00 2012-12-06
virtualization, xen, arm, read xen code; clone linux-xen
1, head.S
init_uart: specific to the PL011 UART.
all the uart code include start_xen is pl011 specific.
2, enter into C code. start_xen
3, prepare and finally boot domain 0
1), construct_dom0
r2 could be atags or dtd pointer.
/* FROM LINUX head.S

 * Kernel startup entry point.
 * ---------------------------
 *
 * This is normally called from the decompressor code.  The requirements
 * are: MMU = off, D-cache = off, I-cache = dont care, r0 = 0,
 * r1 = machine nr, r2 = atags or dtb pointer.
 *...
 */
2), init_idle_domain -> scheduler_init. calling domain_create() for what?
2), domain_unpause_by_systemcontroller -> vcpu_wake: call scheduler to wake cpu. scheduler are: arinc653, credit, credit2, sedf. credit should be the default for vm. for credit, it will call csched_vcpu_wake.
4, others
1), clone xen linux dom0 kernel. for future.
git clone git://xenbits.xen.org/people/ianc/linux.git
according to http://wiki.xen.org/wiki/Xen_ARMv7_with_Virtualization_Extensions
Linux kernel for dom0
The patches necessary to boot Linux as dom0 under Xen were merged upstream in v3.7. However in order to actually start guests a few additional patches are required. These patches can be found in the arm-privcmd-for-3.8 branch of git://xenbits.xen.org/people/ianc/linux.git

09:59 2012-12-07
mailing list, virtualization, xen, XenSummit, Call for Input/Action
"Lars Kurth"_email_"[Xen-devel] 2013 Xen event plan's : Call for Input/Action"
Hi everybody,

Next Xen Hackathon - vote on date/location needed
I have been working with a still to be disclosed vendor on a Xen Hackathon to be hosted in spring. The following options are on the table

    Option 1: May 16/17, Dublin, Ireland (preferred by vendor)
    Option 2: 2 days in February 11-14, Munich - note that FOSDEM is Feb 2 & 3
    Option 3: 2 days in March 18-22, Munich

Given that we had a Hackathon in Munich already and that I know that quite a few Xen devs (including me) are on vacation in the middle of March, my preference would be option 1. But I still wanted to put this to you to get a community view.

XenSummit EU, Oct 2013
I just signed the contracts to host XenSummit the week of Oct 21-25 at the Edinburgh International Conference Centre. The exact dates are still to be decided. That time coincides with the 10th birthday of Xen depending on how one counts: the 1.0 release was on Oct 2nd 2003, SOSP 2003 where Xen was presented was October 21 2003.

XenSummit US or Asia, April-June 2013
Given that the EU summit is some time away, it would make sense to host a XenSummit in either the US or Asia in late spring or early summer. Time-frame wise I was thinking of April to June, which should fit well with the Xen 4.3 release. The only problem is that there is no bigger event we could co-locate with. So I can only do this at a) significant cost to Xen.org or b) if a vendor in the community who has space to host 100-200 people and is based in the US or Asia would volunteer to provide their premises for a 2 day event. If you work for a vendor who can accomodate us, and you would be interested in hosting, please get in touch with me.

Best Regards
Lars

10:02 2012-12-07
GTD
0, 9:00-12:10 -18:00

1, today
1), 9:00-9:35 US/China Sync meeing.
2), test Jim xen4.2 patch. see"10:32 2012-12-07"

10:32 2012-12-07
(10:39 2012-12-10)
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont10, test Jim's patch
1, test with Jim
log/novell/hypervisor_and_tools
libvirt/xen4.2_support/loop_test.sh
migrate/test_case/20120904__lock_test/lock.sh
2, save fail(log start from libxl_domain_suspend.*create)
libxl: debug: libxl_event.c:512:libxl__ev_xswatch_register: watch w=0x714310 wpath=@releaseDomain token=3/0: register slotnum=3
libxl: debug: libxl_event.c:457:watchfd_callback: watch w=0x714310 wpath=@releaseDomain token=3/0: event epath=@releaseDomain
libxl: debug: libxl.c:1014:domain_death_xswatch_callback: [evg=0x71e990:5] from domid=5 nentries=1 rc=1
libxl: debug: libxl.c:1025:domain_death_xswatch_callback: [evg=0x71e990:5]   got=domaininfos[0] got->domain=5
libxl: debug: libxl.c:1052:domain_death_xswatch_callback:  exists shutdown_reported=0 dominf.flags=ffff0012
libxl: debug: libxl.c:1018:domain_death_xswatch_callback: [evg=0] all reported
libxl: debug: libxl.c:1081:domain_death_xswatch_callback: domain death search done
libxl: debug: libxl.c:761:libxl_domain_suspend: ao 0x70bd80: create: how=(nil) callback=(nil) poller=0x70c6a0
libxl: debug: libxl_dom.c:1104:libxl__toolstack_save: domain=5 toolstack data size=8
libxl: debug: libxl.c:800:libxl_domain_suspend: ao 0x70bd80: inprogress: poller=0x70c6a0, flags=i
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 5 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 5 save/restore helper [5831] exited with error status 255
libxl: debug: libxl_event.c:1501:libxl__ao_complete: ao 0x70bd80: complete, rc=-3
libxl: debug: libxl_event.c:1473:libxl__ao__destroy: ao 0x70bd80: destroy
3, test on jim previous version
libxl: debug: libxl.c:761:libxl_domain_suspend: ao 0x7f5958002150: create: how=(nil) callback=(nil) poller=0x6ae650
libxl: debug: libxl_dom.c:1104:libxl__toolstack_save: domain=1 toolstack data size=8
libxl: debug: libxl.c:800:libxl_domain_suspend: ao 0x7f5958002150: inprogress: poller=0x6ae650, flags=i
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 1 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 1 save/restore helper [9974] exited with error status 255
libxl: debug: libxl_event.c:1501:libxl__ao_complete: ao 0x7f5958002150: complete, rc=-3
libxl: debug: libxl_event.c:1473:libxl__ao__destroy: ao 0x7f5958002150: destroy
4, analysis:
1), it is the same error
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 5 save/restore helper stdout pipe
2), test on with xl cmd, seems the same error.
linux-work:/var/lib/xen/images_2/sles11_sp2_pv # xl save sles11_sp2_pv sles11_sp2_pv.save
Saving to sles11_sp2_pv.save new xl format (info 0x0/0x0/419)
libxl: cannot execute /usr/lib/xen/bin/libxl-save-helper: No such file or directory
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 3 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 3 save/restore helper [10222] exited with error status 255
xl: fatal error: xl_cmdimpl.c:2995, rc=-3: libxl_domain_suspend(ctx, domid, fd, 0, NULL)
3), get the helper in the run_helper(xen/tools/libxl_save_callout.c):
    *arg++ = getenv("LIBXL_SAVE_HELPER") ?: LIBEXEC "/" "libxl-save-helper";
LIBXL_SAVE_HELPER is definitly not defined. So, that means LIBEXEC=/usr/lib/xen/bin, I got the same thing in the build log:
echo "LIBEXEC=\"/usr/lib/xen/bin\"" >>"stubdompath.sh".tmp
but, it should not happen.
try setting the ENV. \TODO: figure out why LIBEXEC is wrong. maybe it is a bug?
4), add ENV
linux-work:/usr/lib64/xen/bin # export LIBXL_SAVE_HELPER=`pwd`/libxl-save-helperlinux-work:/usr/lib64/xen/bin # echo $LIBXL_SAVE_HELPER
/usr/lib64/xen/bin/libxl-save-helper
xl successful.
virsh fail if i do not boot libvirtd with that env.
virsh successful sometime, but sometimes fail. daemon dead while fail. but save image is right(virsh restore successful after re-start libvirtd).
one of error:
(gdb) where
#0  0x0000000000000000 in ?? ()
#1  0x00007fffea6c0f47 in libxl_osevent_occurred_timeout (ctx=<optimized out>,
    for_libxl=0x71ed08) at libxl_event.c:1043
#2  0x00007ffff76e629a in virEventPollDispatchTimeouts ()
    at util/event_poll.c:450
#3  virEventPollRunOnce () at util/event_poll.c:643
#4  0x00007ffff76e4f5b in virEventRunDefaultImpl () at util/event.c:247
#5  0x00007ffff7800fcd in virNetServerRun (srv=0x6b2d10)
    at rpc/virnetserver.c:1004
#6  0x000000000040e608 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1355
it seems that it is a deregister issue.
(gdb) p *(libxl__ev_time*)for_libxl
$3 = {func = 0, infinite = 0, entry = {tqe_next = 0x0, tqe_prev = 0x71f168},
  abs = {tv_sec = 1355133330, tv_usec = 147371}, for_app_reg = 0x719bf0}
\TODO: do i apply all the patches?
5), try new version.

10:57 2012-12-07
software skill, shell, test, run program with specific library; LD_LIBRARY_PATH; glibc debug flags: MALLOC_PERTURB_ and MALLOC_CHECK_
1, cat libvirt/run
#!/bin/bash -
# libvirt 'run' programs locally script
# Copyright (C) 2012 Red Hat, Inc.
#
# With this script you can run libvirt programs without needing to
# install them first.  You just have to do for example:
#
#   ./run ./tools/virsh [args ...]
#
# If you are already in the tools/ subdirectory, then the following
# command will also work:
#
#   ../run ./virsh [...]
#
# You can also run the C programs under valgrind like this:
#
#   ./run valgrind [valgrind opts...] ./program
#
# or under gdb:
#
#   ./run gdb --args ./program
#
# This also works with sudo (eg. if you need root access for libvirt):
#
#   sudo ./run ./tools/virsh list --all
#
#----------------------------------------------------------------------

# Find this script.
b=/home/suse/work/source/virtualization/libvirt/libvirt

library_path="$b/src/.libs"
if [ -z "$LD_LIBRARY_PATH" ]; then
    LD_LIBRARY_PATH=$library_path
else
    LD_LIBRARY_PATH="$library_path:$LD_LIBRARY_PATH"
fi
export LD_LIBRARY_PATH

export LIBVIRT_DRIVER_DIR="$b/src/.libs"
export LIBVIRTD_PATH="$b/daemon/libvirtd"

# For Python.
export PYTHON=/usr/bin/python
if [ -z "$PYTHONPATH" ]; then
    PYTHONPATH="$b/python:$b/python/.libs"
else
    PYTHONPATH="$b/python:$b/python/.libs:$PYTHONPATH"
fi
export PYTHONPATH

# This is a cheap way to find some use-after-free and uninitialized
# read problems when using glibc.
random_val="$(awk 'BEGIN{srand(); print 1+int(255*rand())}' < /dev/null)"
export MALLOC_PERTURB_=$random_val

# Run the program.
exec $b/libtool --mode=execute "$@"

2, about MALLOC_PERTURB_ and MALLOC_CHECK_
1), MALLOC_PERTURB_
http://udrepper.livejournal.com/11429.html
Seems like the number of people who know this feature is still almost zero. Well, RH developers know it and we have some who use it all the time on development machines. Basically, setting this environment variable causes the malloc functions in libc to return memory which has been wiped and clear memory when it is returned. Of course this does not affect calloc which always does clear the memory.

The reason for this exercise is, of course, to f ind code which uses memory returned by malloc without initializing it and code which uses code after it is freed. valgrind can do this but it's costly to run. The MALLOC_PERTURB_ exchanges the ability to detect problems in 100% of the cases with speed.

The byte value used to initialize values returned by malloc is the byte value of the environment value. The value used to clear memory is the bitwise inverse. Setting MALLOC_PERTURB_ to zero disables the feature.

This technique can find hard to detect bugs. It is therefore suggested to always use this flag (at least temporarily) when testing out code or a new distribution. That's a hint for all the brave souls testing FC6t1.

2), "Jim Meyering"_20110527
please set both MALLOC_PERTURB_ and MALLOC_CHECK_ envvars

Now, bootstrapping emacs on Fedora 15 x86_64
(with env settings as below) fails with a segfault.

If you develop emacs, or even if you just build from sources regularly,
on a glibc-based system, do us all a favor and build with these envvar
settings:

    export MALLOC_PERTURB_=$((RANDOM % 255 + 1))
    export MALLOC_CHECK_=3

Why?  Because that helps you expose malloc-related problems far earlier.
I've found numerous bugs that way.  The trouble is that you have to
be ready to debug, or at least ready to retry with

    env MALLOC_PERTURB_=0 MALLOC_CHECK_=0 make ...

to see if things work better without protection.

Until recently, I've been building like this to work around
a problem that I traced back to a commit in emacs several years ago:

    make bootstrap RUN_TEMACS='MALLOC_CHECK_=0 ./temacs'

However, today, even with that, make bootstrap is failing with a
segfault (in various places) that goes away when I turn off malloc
robustness checking via both variables for the whole process
and not just one of them when running temacs:

    MALLOC_PERTURB_=0 MALLOC_CHECK_=0 make bootstrap

That suggests a very recent change (within the last 24 hrs)
makes emacs act to differently when MALLOC_PERTURB_=N causes glibc
to scribble nonzero (N) bytes into each just freed buffer.

3), MALLOC_CHECK_
Q: 在执行一个程序时，出现如下错误：
*** glibc detected *** double free oｒ corruption : 0x0937d008 ***
是怎么回事？
A:   设置MALLOC_CHECK_环境变量再运行程序，呵呵，错误信息消失

MALLOC_CHECK_=0   ./myprogram

MALLOC_CHECK_支持如下设置:
0 - 不产生错误信息，也不中止这个程序
1 - 产生错误信息，但是不中止这个程序
2 - 不产生错误信息，但是中止这个程序
3 - 产生错误信息，并中止这个程序

10:39 2012-12-10
GTD
0, 9:40-17:59

1, today
1), 30' reorganize my stuff.
2), 30' 16:32-17:58 test Jim xen4.2 patch. see"10:32 2012-12-07".
nap'

11:32 2012-12-10
software skill, shell, find, search file by size then output
1, using "-printf" format the output
suse@linux-work:~/work/download> find . -type f -size +50M -printf "%p %s\\n"
suse@linux-work:~/work/download> find . -type f -size +50M -printf "%p %s\\n"./kernel/linux-3.3.7.tar.bz2 78958012
./virtualization/VMware-Player-4.0.2-591240.x86_64.rar 129695725
2, using "-exec" to call external command
suse@linux-work:~/work/download> find . -type f -size +50M -exec ls -lh '{}' \;
suse@linux-work:~/work/download> find . -type f -size +50M -exec ls -lh '{}' \;
-rw-r--r-- 1 suse users 76M May 22  2012 ./kernel/linux-3.3.7.tar.bz2
-rw-r--r-- 1 suse users 124M May  8  2012 ./virtualization/VMware-Player-4.0.2-591240.x86_64.rar

10:40 2012-12-11
GTD
0, 9:40-11:52 13:48-19:05

1, today
1), 11:10-11:52 13:48-19:05 upstream reply about my reporting bug to xenlight. see"11:16 2012-12-11"
nap 20'
2), summary: it is a good way for me to build rpm, i could know more about the package organization.

11:16 2012-12-11
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont11, deal with xen upstream reply
1, upstream reply. continue from "17:51 2012-11-30"
1), Ian J_20121207
Ian Campbell writes ("Re: [PATCH] fix race condition between libvirtd event
handling and libxl fd deregister"):
> Can we provide, or (more likely) require the application to provide, a
> lock (perhaps per-event or, again more likely, per-event-loop) which
> must be held while processing callbacks and also while events are being
> registered/unregistered with the application's event handling subsystem?
> With such a lock in place the application would be able to guarantee
> that having returned from the deregister hook any further events would
> be seen as spurious events by its own event processing loop.

I think this might be difficult to get right without deadlocks.

...
> Last half brained idea would be to split the deregistration into two.
> libxl calls up to the app saying "please deregister" and the app calls
> back to libxl to say "I am no longer watching for this event and
> guarantee that I won't deliver it any more". (Presumably this would be
> implemented by the application via some combination of the above). This
> could be done in a somewhat compatible way by allowing the deregister
> hook to return "PENDING".

This is in fact straightforward and is a subset of the existing API.
If we have libxl always call timeout_modify with abs={0,0}, it will
get timeout_occurred when the application's event loop has dealt with
it.  We can simply never call timeout_deregister.

I have implemented this in the 2-patch RFD series I'm about to send.
NB this series has been complied but not (as yet) executed by me...

Ian.
2), Ian C_20121210
> I think this might be difficult to get right without deadlocks.

I took Bamvor's most recent response to mean that a per-event lock was
already in place in libvirt and inferred that this was the reason why
the originally proposed one line fix worked for them. Perhaps I
misunderstood?
3), Ian J reply to Ian_C
Yes, I think that's what Bamvor meant but I don't think it's correct
that such a lock eliminates the race.  libvirt has to release that
lock before making the callback (to follow the libxl locking rules
which are necessary to avoid deadlock).

I'm not surprised that the original patch makes Bamvor's symptoms go
away.  Bamvor had one of the possible races (the fd-related one) but
not the other.
4), Ian_J reply Ian_C
Ian Jackson writes ("Re: [PATCH] fix race condition between libvirtd event
handling and libxl fd deregister"):
> I'm not surprised that the original patch makes Bamvor's symptoms go
> away.  Bamvor had one of the possible races (the fd-related one) but
> not the other.

Here (followups to this message, shortly) is v3 of my two-patch series
which after conversation with Ian C I think fully fixes the race, and
which I have tested now.

Bamvor, can you test this and let us know hwether it fixes your problem?
5), Jim reply Ian_J
> Yes, I think that's what Bamvor meant but I don't think it's correct
> that such a lock eliminates the race.  libvirt has to release that
> lock before making the callback (to follow the libxl locking rules
> which are necessary to avoid deadlock).
>
And it does.  The event loop lock is released just before invoking the
callback, and re-acquired just after the callback returns.
2, plan
1), test with Ian J v3 patch to make sure whether it will fix my bugs or not.
and whether it will fix the bug i encounter yestoday.
reply the email at the end of today.

3, reply
Ok. i am working on it.  will send the test result to u.
BTW, without your patches, i encounter the time race condition during libvirt save vm sometimes.

4, compile
the patch is upstream patch, try to build through build service local build.
notes: do not save from web browser, it is malformed. save from email client(my groupwise) is right.
1), fail when I compile for sle11 sp2
bamvor@linux-bjrd:xen> osc build --clean SLE_11_SP2 x86_64
Building xen.spec for SLE_11_SP2/x86_64
Getting buildinfo from server and store to /home/bamvor/sda3/home/novell/work/source/virtualization/libvirt/build_service/home:bjzhang:branches:Devel:Virt:SLE-11-SP3/xen/.osc/_buildinfo-SLE_11_SP2-x86_64.xml
Getting buildconfig from server and store to /home/bamvor/sda3/home/novell/work/source/virtualization/libvirt/build_service/home:bjzhang:branches:Devel:Virt:SLE-11-SP3/xen/.osc/_buildconfig-SLE_11_SP2-x86_64
buildinfo is broken... it says:
unresolvable: conflict for provider of libgcc43, (provider libgcc43 is conflicted by installed libgcc46), conflict for provider of libgomp1 >= 4.6.1_20110701-0.13.9 needed by gcc46, (provider libgomp46 conflicts with installed libgomp43)
2), build with sles11 sp2 update test.
lots of fails.
3), this vm-monitor seems remove from xen4.3
ERROR: link target doesn't exist (neither in build root nor in installed system):
  /etc/xen/scripts/set-lock -> /etc/xen/scripts/vm-monitor
4), currently error
RPM build errors:
    File not found: /var/tmp/xen-4.3-build/usr/bin/tapdisk-ioemu
    File not found: /var/tmp/xen-4.3-build/bin/domu-xenstore
    File not found by glob: /var/tmp/xen-4.3-build/bin/xenstore-*
    File not found: /var/tmp/xen-4.3-build/usr/bin/serial-split
    Installed (but unpackaged) file(s) found:
   /etc/sysconfig/xencommons
   /etc/sysconfig/xendomains

15:23 2012-12-11
virtualization, libvirt, xen, libxl, block stats; qemu, QMP
1, QMP(QEMU Monitor protocol)
http://wiki.qemu.org/QMP
The QEMU Monitor Protocol (QMP) is a JSON-based protocol which allows applications to communicate with a QEMU instance.
Bamvor: it seems a new way for send monitor command to qemu.
2, calling
libxl_cdrom_insert -> libxl__qmp_insert_cdrom -> qpm_run_command
libxl__qmp_xxx and qpm_xxx is implemented in libxl_qmp.c
3, it should be useful for me to implement the block stats in libvirt. i could add this commands in libxl and xl then add it to libvirt.

09:53 2012-12-12
GTD
0, 9:55-11:36 12:01-18:20 22:50-23:40

1, today
1), 10:09-11:36 12:01-12:12 60' 22:50-23:40 upstream reply about my reporting bug to xenlight. see"10:12 2012-12-12".
2), 12:12-13:18 reading.
3), 13:19-14:20 Linux3.7 see"13:25 2012-12-12"

10:12 2012-12-12
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont12, deal with xen upstream reply, test with Jim improvement
1, Jim_reply_Ian_J
1), patch 1/2: fd
Hi Ian,

Thanks for the patches! I've found some time to test them in the context
of Xen 4.2 and have some comments. For this patch, only a few nits below.

> @@ -72,7 +180,8 @@ int libxl__ev_fd_register(libxl__gc *gc, libxl__ev_fd *ev,
>
>      DBG("ev_fd=%p register fd=%d events=%x", ev, fd, events);
>
> -    rc = OSEVENT_HOOK(fd_register, fd, &ev->for_app_reg, events, ev);
> +    rc = OSEVENT_HOOK(fd,register, alloc, fd, &ev->nexus->for_app_reg,
>

Nit, should there be a space between 'fd,' and 'register'? Also, not
that gcc complained, but register is a keyword.

> +                      events, ev->nexus);
>      if (rc) goto out;
>
>      ev->fd = fd;
> @@ -97,7 +206,7 @@ int libxl__ev_fd_modify(libxl__gc *gc, libxl__ev_fd *ev, short events)
>
>      DBG("ev_fd=%p modify fd=%d events=%x", ev, ev->fd, events);
>
> -    rc = OSEVENT_HOOK(fd_modify, ev->fd, &ev->for_app_reg, events);
> +    rc = OSEVENT_HOOK(fd,modify, noop, ev->fd, &ev->nexus->for_app_reg, events);
>

Same nit here, and in a few other uses of OSEVENT_HOOK* below.

Regards,
Jim
2), patch 2/2: timeout
> This is a forwards-compatible change for applications using the libxl
> API, and will hopefully eliminate these races in callback-supplying
> applications (such as libvirt) without the need for corresponding
> changes to the application.
I'm not sure how to avoid changing the application (libvirt). Currently,
the libvirt libxl driver removes the timeout from the libvirt event loop
in the timeout_deregister() function. This function is never called now
and hence the timeout is never removed. I had to make the following
change in the libxl driver to use your patches

diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index 302f81c..d8f078e 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -225,16 +225,11 @@ static int libxlTimeoutRegisterEventHook(void *priv,

static int libxlTimeoutModifyEventHook(void *priv ATTRIBUTE_UNUSED,
void **hndp,
- struct timeval abs_t)
+ struct timeval abs_t ATTRIBUTE_UNUSED)
{
- struct timeval now;
- int timeout;
struct libxlOSEventHookTimerInfo *timer_info = *hndp;

- gettimeofday(&now, NULL);
- timeout = (abs_t.tv_usec - now.tv_usec) / 1000;
- timeout += (abs_t.tv_sec - now.tv_sec) * 1000;
- virEventUpdateTimeout(timer_info->id, timeout);
+ virEventRemoveTimeout(timer_info->id);
return 0;
}

I could also call virEventUpdateTimeout() with a timeout of 0 to make it
fire on the next iteration of the event loop, and then remove the
timeout in the callback before invoking
libxl_osevent_occurred_timeout(). But either way, changes need to be
made to the application.

> @@ -294,7 +288,12 @@ static int time_register_finite(libxl__gc *gc, libxl__ev_time *ev,
>  static void time_deregister(libxl__gc *gc, libxl__ev_time *ev)
>  {
>      if (!ev->infinite) {
> -        OSEVENT_HOOK_VOID(timeout,deregister, release, ev->nexus->for_app_reg);
> +        struct timeval right_away = { 0, 0 };
> +        if (ev->nexus) /* only set if app provided hooks */
> +            ev->nexus->ev = 0;
> +        OSEVENT_HOOK_VOID(timeout,modify,
>

Nit again about the space here.

> +                          noop /* release nexus in _occurred_ */,
> +                          ev->nexus->for_app_reg, right_away);
>

I had to change this to &ev->nexus->for_app_reg to get it to work
properly. But with this change, and the aforementioned hack to the
libvirt libxl driver, I'm not seeing the race any longer.

Regards,
Jim
2, continue from "11:16 2012-12-11"4-4)
1), tapdisk-ioemu is not compiled in qemu-traditional-dir.
it is because the build-tapdisk-ioemu.patch is not applied, add ioemu series patch.
2), File not found: /var/tmp/xen-4.3-build/bin/domu-xenstore
enable patch xen-destdir.diff, and there is small changes in "tools/firmware/etherboot/Makefile", fix it.
3), File not found by glob: /var/tmp/xen-4.3-build/bin/xenstore-*
this is also cause by "2)", because all xenstore-* in "/bin" is link from domu-xenstore
4), File not found: /var/tmp/xen-4.3-build/usr/bin/serial-split
serial-split.patch
5), Installed (but unpackaged) file(s) found:
   /etc/sysconfig/xencommons
   /etc/sysconfig/xendomains
add the following line in "%file" section
/etc/sysconfig/xendomains
/etc/sysconfig/xencommons
notes: add the follows thing in "%install" section means installation not packaging:
install -m755 %SOURCE32 $RPM_BUILD_ROOT/etc/sysconfig/xendomains
install -m755 %SOURCE32 $RPM_BUILD_ROOT/etc/sysconfig/xencommons
3, still some errors
... checking filelist
xen-tools: "/etc/sysconfig/xencommons" is not allowed anymore in SuSE Linux.
xen-tools: "/etc/sysconfig/xendomains" is not allowed anymore in SuSE Linux.

4, local build successful but remote build fail:
[  404s] mv: cannot stat `/var/tmp/xen-4.3-build/boot/xen-4.3-19.1.gz': No such file or directory
comment the line in xen.spec:
XEN_EXTRAVERSION=%version-%release
#XEN_EXTRAVERSION=${XEN_EXTRAVERSION#%{xvers}}
sed -i "s/XEN_EXTRAVERSION[\t ]*.=.*\$/XEN_EXTRAVERSION  = $XEN_EXTRAVERSION/" xen/Makefile
2), finally, both compile pass

5, test.
1), libvirtd crash
(1), # virsh start sles11_sp2_pv
error: Failed to start domain sles11_sp2_pv
error: End of file while reading data: Input/output error
error: Failed to reconnect to the hypervisor
(2), debugger libvirtd
(gdb) where
#0  *__GI___libc_free (mem=0x100000000) at malloc.c:3704
#1  0x00007f6cbfc0907c in libxl_device_vtpm_list_free (list=0x100000000, nr=0)
    at libxl_utils.c:862
#2  0x00007f6cbfbf8fff in libxl_domain_config_dispose (d_config=0x7f6cc4d49650)
    at libxl_create.c:58
#3  0x00007f6cbfe42610 in libxlVmStart (driver=0x6dc120, vm=0x718a80,
    start_paused=false, restore_fd=-1) at libxl/libxl_driver.c:838
#4  0x00007f6cbfe44865 in libxlDomainCreateWithFlags (dom=<optimized out>,
    flags=0) at libxl/libxl_driver.c:2824
#5  0x00007f6ccccfd2c7 in virDomainCreate (domain=0x715970) at libvirt.c:8328
#6  0x000000000042e816 in remoteDispatchDomainCreate (args=<optimized out>,
    rerr=<optimized out>, msg=<optimized out>, client=<optimized out>,
    server=<optimized out>) at remote_dispatch.h:1066
#7  remoteDispatchDomainCreateHelper (server=<optimized out>,
    client=<optimized out>, msg=<optimized out>, rerr=0x7f6cc4d49bf0,
    args=<optimized out>, ret=<optimized out>) at remote_dispatch.h:1044
#8  0x00007f6cccd500f3 in virNetServerProgramDispatchCall (
    msg=<optimized out>, client=<optimized out>, server=<optimized out>,
    prog=<optimized out>) at rpc/virnetserverprogram.c:431
#9  virNetServerProgramDispatch (prog=0x6b84b0, server=0x6ad500,
    client=0x7f6cb8001360, msg=0x7f6cb8000dd0) at rpc/virnetserverprogram.c:304
#10 0x00007f6cccd5590e in virNetServerProcessMsg (srv=<optimized out>,
    client=0x7f6cb8001360, prog=0x0, msg=0x7f6cb8000dd0)
    at rpc/virnetserver.c:171
#11 0x00007f6cccd56543 in virNetServerHandleJob (jobOpaque=<optimized out>,
    opaque=0x6ad500) at rpc/virnetserver.c:192
#12 0x00007f6cccc50296 in virThreadPoolWorker (opaque=<optimized out>)
    at util/threadpool.c:144
#13 0x00007f6cccc4f887 in virThreadHelper (data=<optimized out>)
    at util/threads-pthread.c:161
#14 0x00007f6cc98ca7b6 in start_thread (arg=<optimized out>)
    at pthread_create.c:301
#15 0x00007f6cc921f9cd in clone ()
    at ../sysdeps/unix/sysv/linux/x86_64/clone.S:112
#16 0x0000000000000000 in ?? ()
2), it should be the xen-devel, xen-libs, xen-tools is changed after update to xen4.3, So, recompile libvirt.
get error in restore(start, reboot, shutdown, save successful):
libxl-save-helper: debug: complete r=0: Success
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=xvda spec.backend=tap
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f8660049568 wpath=/local/domain/0/backend/vbd/12/51712/state token=2/1d: register slotnum=2
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f8660049568 wpath=/local/domain/0/backend/vbd/12/51712/state token=2/1d: event epath=/local/domain/0/backend/vbd/12/51712/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vbd/12/51712/state wanted state 2 still waiting state 1
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x7f8660049568 wpath=/local/domain/0/backend/vbd/12/51712/state token=2/1d: event epath=/local/domain/0/backend/vbd/12/51712/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/12/51712/state wanted state 2 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f8660049568 wpath=/local/domain/0/backend/vbd/12/51712/state token=2/1d: deregister slotnum=2
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f8660049568: deregister unregistered
libxl: debug: libxl_device.c:919:device_hotplug: calling hotplug script: /etc/xen/scripts/block add
libxl: debug: libxl_dm.c:1135:libxl__spawn_local_dm: Spawning device-model /usr/lib/xen/bin/qemu-system-i386 with arguments:
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   /usr/lib/xen/bin/qemu-system-i386
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -xen-domid
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   12
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -chardev
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   socket,id=libxl-cmd,path=/var/run/xen/qmp-libxl-12,server,nowait
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -mon
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   chardev=libxl-cmd,mode=control
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -xen-attach
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -name
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   sles11_sp2_pv
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -vnc
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   127.0.0.1:1
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -M
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   xenpv
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   -m
libxl: debug: libxl_dm.c:1137:libxl__spawn_local_dm:   513
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f8660043768 wpath=/local/domain/0/device-model/12/state token=2/1e: register slotnum=2
libxl: error: libxl_exec.c:396:spawn_timeout: domain 12 device model: startup timed out
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f8660043768 wpath=/local/domain/0/device-model/12/state token=2/1e: deregister slotnum=2
libxl: debug: libxl_event.c:472:watchfd_callback: watch epath=/local/domain/0/device-model/12/state token=2/1e: empty slot
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f8660043768: deregister unregistered
libxl: error: libxl_dm.c:1204:device_model_spawn_outcome: domain 12 device model: spawn failed (rc=-3)
libxl: error: libxl_qmp.c:690:libxl__qmp_initialize: Connection error: No such file or directory
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x7f866004ed08 wpath=/local/domain/0/backend/vif/12/0/state token=2/1f: register slotnum=2
libxl: debug: libxl_event.c:661:devstate_timeout: backend /local/domain/0/backend/vif/12/0/state wanted state 2  timed out
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x7f866004ed08 wpath=/local/domain/0/backend/vif/12/0/state token=2/1f: deregister slotnum=2
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x7f866004ed08: deregister unregistered
libxl: error: libxl_device.c:861:device_backend_callback: unable to connect device with path /local/domain/0/backend/vif/12/0
libxl: error: libxl_create.c:1117:domcreate_attach_vtpms: unable to add nic devices
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x6d2968 wpath=/local/domain/0/backend/vbd/12/51712/state token=2/20: register slotnum=2
libxl: debug: libxl_event.c:559:libxl__ev_xswatch_register: watch w=0x6e52c8 wpath=/local/domain/0/backend/vif/12/0/state token=3/21: register slotnum=3
libxl: debug: libxl_event.c:478:watchfd_callback: watch w=0x6d2968 epath=/local/domain/0/backend/vif/12/0/state token=2/1f: counter != 20
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x6d2968 wpath=/local/domain/0/backend/vbd/12/51712/state token=2/20: event epath=/local/domain/0/backend/vbd/12/51712/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vbd/12/51712/state wanted state 6 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x6d2968 wpath=/local/domain/0/backend/vbd/12/51712/state token=2/20: deregister slotnum=2
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x6d2968: deregister unregistered
libxl: debug: libxl_device.c:919:device_hotplug: calling hotplug script: /etc/xen/scripts/block remove
libxl: debug: libxl_event.c:472:watchfd_callback: watch epath=/local/domain/0/backend/vbd/12/51712/state token=2/20: empty slot
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x6e52c8 wpath=/local/domain/0/backend/vif/12/0/state token=3/21: event epath=/local/domain/0/backend/vif/12/0/state
libxl: debug: libxl_event.c:647:devstate_watch_callback: backend /local/domain/0/backend/vif/12/0/state wanted state 6 still waiting state 5
libxl: debug: libxl_device.c:955:device_hotplug_timeout_cb: killing hotplug script /etc/xen/scripts/block remove because of timeout
libxl: error: libxl_exec.c:129:libxl_report_child_exitstatus: /etc/xen/scripts/block remove [11963] died due to fatal signal Killed
libxl: debug: libxl_event.c:503:watchfd_callback: watch w=0x6e52c8 wpath=/local/domain/0/backend/vif/12/0/state token=3/21: event epath=/local/domain/0/backend/vif/12/0/state
libxl: debug: libxl_event.c:643:devstate_watch_callback: backend /local/domain/0/backend/vif/12/0/state wanted state 6 ok
libxl: debug: libxl_event.c:596:libxl__ev_xswatch_deregister: watch w=0x6e52c8 wpath=/local/domain/0/backend/vif/12/0/state token=3/21: deregister slotnum=3
libxl: debug: libxl_event.c:608:libxl__ev_xswatch_deregister: watch w=0x6e52c8: deregister unregistered
libxl: debug: libxl_device.c:919:device_hotplug: calling hotplug script: /etc/xen/scripts/vif-bridge offline
libxl: debug: libxl_device.c:955:device_hotplug_timeout_cb: killing hotplug script /etc/xen/scripts/vif-bridge offline because of timeout
libxl: error: libxl_exec.c:129:libxl_report_child_exitstatus: /etc/xen/scripts/vif-bridge offline [11984] died due to fatal signal Killed
libxl: debug: libxl_event.c:1569:libxl__ao_complete: ao 0x7f8660042c20: complete, rc=-3
libxl: debug: libxl_event.c:1541:libxl__ao__destroy: ao 0x7f8660042c20: destroy

10:20 2012-12-12
company, IT, IP-migration, nfs; OPS-services
"Maximilian Maher <mmaher@suse.de>"_email_"[devel] IP-Migration NOW / SUSE R&D is leaving 10.10.0.0/16"_20121211
Dear Colleagues,

after migrating all servers and the dynamic IP range, OPS-Services
will finally start today (2012-12-11) to move the workstations inside
R&D to the new 10.120.0.0/16 address range. The DNS and static DHCP
entries for the desktop hosts will be migrated to the new range now.

A List of the new Addresses can be found here:
- http://w3.suse.de/~mrueckert/iplist.txt
(list of new addresses for desktop hosts).

Especially for static IP address assignments please proceed as follows:
https://wiki.innerweb.novell.com/index.php/SUSE/Development/OPS/Services/Network
(howto change the setup, mainly DNS, YP and local IP address)

It would be the best if you reboot your machine unless you can make
sure all NFS mounts from loki (for example your NFS based home
directory) are freshly mounted on your system (note: a simple
"remount" will not change the address from which a client has mounted
something).

OPS-Services is available on #infra at irc://irc.suse.de or via
rd-adm@suse.de to help with problems.

The only server addresses still active in 10.10.X.X at this moment are
hilbert, wotan and loki and the old IPs on these machines will be shut
down by Thursday morning (2012-12-13).

Regards,
Your OPS-Services Team

13:25 2012-12-12
kernel, features, 3.7, 3.8
1, link
http://kernelnewbies.org/Linux_3.7
2, core features
For those that haven't been paying attention to the Phoronix articles in the prior weeks about the Linux 3.7 kernel, some of the new features to this kernel include:
- Improved power management for Radeon GPUs.
- Improved Intel graphics support for new hardware.
- The Nouveau DRM driver was largely reworked.
- Other Direct Rendering Manager changes.
- 64-bit ARM support a.k.a. ARMv8 / AArch64.
- ARM Xen virtualization support for the Cortex-A15.
- A single ARM Linux kernel now supports multiple devices.
- Nintendo Wii Balance Board driver support.
- Intel Supervisor Mode Access Prevention (SMAP) handling.
- Oracle SPARC-T4 processor support.
- New work within the staging tree.
- Audio Run-Time Power Management.
- JFS TRIM support when using the file-system on SSDs.
- EXT4 enhancements.
- Btrfs hole-punching and other new capabilities for the experimental file-system.
- The Intel AES-NI support is now faster by utilizing parallel AES-NI hardware pipelines.
- Support for loading firmware files directly rather than relying on udev.
- Xen EFI video mode support.
- IPv6 Netfilter improvements.
2, AArch64
ARM64/AArch64 Support Going Into Linux 3.7 Kernel
http://www.phoronix.com/scan.php?page=news_item&px=MTE5NjQ
ARMv8 AArch64 Support For GCC Keeps Coming
http://www.phoronix.com/scan.php?page=news_item&px=MTE0Mjk
3, One Kernel Can Now Handle Multiple ARM Platforms
http://www.phoronix.com/scan.php?page=news_item&px=MTE5ODI
1), introduction
Supporting multi-platform ARM kernels
http://lwn.net/Articles/496400/
using device tree to move the arm board difference out of kernel.
2), details in git:
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=9cd11c0c47b8690b47e7573311ce5c483cb344ed
Pull ARM soc multiplatform enablement from Olof Johansson:
 "This is a pretty significant branch.  It's the introduction of the
  first multiplatform support on ARM, and with this (and the later
  branch) merged, it is now possible to build one kernel that contains
  support for highbank, vexpress, mvebu, socfpga, and picoxcell.  More
  platforms will be convered over in the next few releases.
  Two critical last things had to be done for this to be practical and
  possible:
   * Today each platform has its own include directory under
     mach-<mach>/include/mach/*, and traditionally that is where a lot
     of driver/platform shared definitions have gone, such as platform
     data structures.  They now need to move out to a common location
     instead, and this branch moves a large number of those out to
     include/linux/platform_data.
   * Each platform used to list the device trees to compile for its
     boards in mach-<mach>/Makefile.boot.
3), ARM: initial multiplatform support
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=387798b37c8dd0ae24c0ac12ba456dd76865bca3
author	Rob Herring <rob.herring@calxeda.com>	
	Thu, 6 Sep 2012 18:41:12 +0000 (13:41 -0500)
committer	Rob Herring <rob.herring@calxeda.com>	
	Fri, 14 Sep 2012 14:22:06 +0000 (09:22 -0500)
This lets us build a multiplatform kernel for experimental purposes.
However, it will not be useful for any real work, because it relies
on a number of useful things to be disabled for now:
* SMP support must be turned off because of conflicting symbols.
  Marc Zyngier has proposed a solution by adding a new SOC
  operations structure to hold indirect function pointers
  for these, but that work is currently stalled
* We turn on SPARSE_IRQ unconditionally, which is not supported
  on most platforms. Each of them is currently in a different
  state, but most are being worked on.
* A common clock framework is in place since v3.4 but not yet
  being used. Work on this is on its way.
* DEBUG_LL for early debugging is currently disabled.
* THUMB2_KERNEL does not work with allyesconfig because the
  kernel gets too big
[Rob Herring]: Rebased to not be dependent on the mass mach header rename.
As a result, omap2plus, imx, mxs and ux500 are not converted. Highbank,
picoxcell, mvebu, and socfpga are converted.
4, Xen ARM
see"13:58 2012-12-12"
5, kernel 3.8
http://www.phoronix.com/scan.php?page=news_item&px=MTIxNjQ

13:58 2012-12-12
virtualization, xen, arm, PVH
1, Xen For ARM Is Set For The Linux 3.7 Kernel
http://www.phoronix.com/scan.php?page=news_item&px=MTE5NjE
early announce for xen arm from Stefano Stabellini
https://lkml.org/lkml/2011/11/29/265
2, xen hypervisor diff
http://xenbits.xen.org/people/sstabellini/diff
save it to "work/source/virtualization/xen/upstream/arm/diff_xen_arm_PVH_initial_port".  it is useful for me to know the changes for porting to ARM.

14:04 2012-12-12
compiler, gcc, arm, Tuning Performance
ARM Cortex-A15 GCC Compiler Tuning Performance
http://www.phoronix.com/scan.php?page=news_item&px=MTI0MjI
The ARM options being compared in this article include the stock compiler flags (no additional CFLAGS/CXXFLAGS set) compared to:

-mtune=cortex-a15
This option is very similar to the -mcpu= option, except that instead of specifying the actual target processor type, and hence restricting which instructions can be used, it specifies that GCC should tune the performance of the code as if the target were of the type specified in this option, but still choosing the instructions it generates based on the CPU specified by a -mcpu= option. For some ARM implementations better performance can be obtained by using this option.

-marm
Select between generating code that executes in ARM and Thumb states. The default for most configurations is to generate code that executes in ARM state, but the default can be changed by configuring GCC with the --with-mode=state configure option.

-mfpu=neon
This specifies what floating-point hardware (or hardware emulation) is available on the target. Permissible names are: `vfp', `vfpv3', `vfpv3-fp16', `vfpv3-d16', `vfpv3-d16-fp16', `vfpv3xd', `vfpv3xd-fp16', `neon', `neon-fp16', `vfpv4', `vfpv4-d16', `fpv4-sp-d16', `neon-vfpv4', `fp-armv8', `neon-fp-armv8', and `crypto-neon-fp-armv8'. If the selected floating-point hardware includes the NEON extension (e.g. -mfpu=`neon'), note that floating-point operations are not generated by GCC's auto-vectorization pass unless -funsafe-math-optimizations is also specified. This is because NEON hardware does not fully implement the IEEE 754 standard for floating-point arithmetic (in particular denormal values are treated as zero), so the use of NEON instructions may lead to a loss of precision.

10:54 2012-12-13
GTD
0, 10:30-17:56

1, today
1), 10:50-11:50 15:12-17:56 upstream reply about my reporting bug to xenlight. see"10:12 2012-12-12"5. "11:05 2012-12-13"

11:05 2012-12-13
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont13, xen upstream reply
1, discuss in upstream
1), Iac_J reply to Jim patch0001
Jim Fehlig writes ("Re: [Xen-devel] [PATCH 1/2] libxl: fix stale fd event callback race"):
> Thanks for the patches! I've found some time to test them in the context
> of Xen 4.2 and have some comments. For this patch, only a few nits below.

Thanks for the review and testing.

> > - rc = OSEVENT_HOOK(fd_register, fd, &ev->for_app_reg, events, ev);
> > + rc = OSEVENT_HOOK(fd,register, alloc, fd, &ev->nexus->for_app_reg,
> >
>
> Nit, should there be a space between 'fd,' and 'register'?

I did this deliberately because the macro uses token pasting to turn
this into fd_register, at least in many of the uses.

>>Also, not that gcc complained, but register is a keyword.

The token "register" gets pasted together with other things by the
preprocessor before the compiler sees it, so it's correct as far as
the language spec goes. As for it being potentially confusing,
changing what appears here is difficult without changing the names
in libxl_osevent_hooks.

Thanks,
Ian.

2), patch0002
(1), Ian_J reply to Jim
Jim Fehlig writes ("Re: [Xen-devel] [PATCH 2/2] libxl: fix stale timeout event callback race"):
> Ian Jackson wrote:
> > This is a forwards-compatible change for applications using the libxl
> > API, and will hopefully eliminate these races in callback-supplying
> > applications (such as libvirt) without the need for corresponding
> > changes to the application.

When I wrote this of course I forgot to mention that previously libxl
would never call libxl_osevent_hooks->timeout_modify and now it never
calls ->timeout_deregister.

So this change can expose bugs in the application's implementation of
->timeout_modify.

> I'm not sure how to avoid changing the application (libvirt). Currently,
> the libvirt libxl driver removes the timeout from the libvirt event loop
> in the timeout_deregister() function. This function is never called now
> and hence the timeout is never removed. I had to make the following
> change in the libxl driver to use your patches

I think this is because of a bug of the kind I describe above.

> - gettimeofday(&now, NULL);
> - timeout = (abs_t.tv_usec - now.tv_usec) / 1000;
> - timeout += (abs_t.tv_sec - now.tv_sec) * 1000;

Specifically, this code has an integer arithmetic overflow.

If libxl calls this function with a value of abs_t which is more than
about INT_MAX/1000 seconds (24 days on a 32-bit machine) in the past,
the calculation (abs_t.tv_sec - now.tv_sec) * 1000; overflows.

And the patch makes libxl always pass abs_t={0,0} which is more than
24 days ago unless the code is running during January 1970 :-).

> - virEventUpdateTimeout(timer_info->id, timeout);

Also, what does this do if timeout is negative ?

Thanks,
Ian.
(2), Ian_J reply to Jim
> Specifically, this code has an integer arithmetic overflow.

If you look at beforepoll_internal in libxl_event.c, near line 859,
you can see how I tackled this same problem there.
(3), Jim
Ian Jackson wrote:
> Jim Fehlig writes ("Re: [Xen-devel] [PATCH 2/2] libxl: fix stale timeout event callback race"):
>
>> Ian Jackson wrote:
>>
>>> This is a forwards-compatible change for applications using the libxl
>>> API, and will hopefully eliminate these races in callback-supplying
>>> applications (such as libvirt) without the need for corresponding
>>> changes to the application.
>>>
>
> When I wrote this of course I forgot to mention that previously libxl
> would never call libxl_osevent_hooks->timeout_modify and now it never
> calls ->timeout_deregister.
>
> So this change can expose bugs in the application's implementation of
> ->timeout_modify.
>
>
>> I'm not sure how to avoid changing the application (libvirt). Currently,
>> the libvirt libxl driver removes the timeout from the libvirt event loop
>> in the timeout_deregister() function. This function is never called now
>> and hence the timeout is never removed. I had to make the following
>> change in the libxl driver to use your patches
>>
>
> I think this is because of a bug of the kind I describe above.
>
>
>> - gettimeofday(&now, NULL);
>> - timeout = (abs_t.tv_usec - now.tv_usec) / 1000;
>> - timeout += (abs_t.tv_sec - now.tv_sec) * 1000;
>>
>
> Specifically, this code has an integer arithmetic overflow.
>

Well, this patch is removing that buggy code :).  After again reading
libxl_event.h, I'm considering the below patch in the libvirt libxl
driver.  The change is primarily inspired by this comment for
libxl_osevent_occurred_timeout:

/* Implicitly, on entry to this function the timeout has been
 * deregistered.  If _occurred_timeout is called, libxl will not
 * call timeout_deregister; if it wants to requeue the timeout it
 * will call timeout_register again.
 */

Regards,
Jim

diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index 302f81c..d4055be 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -184,6 +184,8 @@ static void libxlTimerCallback(int timer
ATTRIBUTE_UNUSED, void *timer_v)
 {
     struct libxlOSEventHookTimerInfo *timer_info = timer_v;

+    virEventRemoveTimeout(timer_info->id);
+    timer_info->id = -1;
     libxl_osevent_occurred_timeout(timer_info->priv->ctx,
timer_info->xl_priv);
 }

@@ -225,16 +227,12 @@ static int libxlTimeoutRegisterEventHook(void *priv,

 static int libxlTimeoutModifyEventHook(void *priv ATTRIBUTE_UNUSED,
                                        void **hndp,
-                                       struct timeval abs_t)
+                                       struct timeval abs_t
ATTRIBUTE_UNUSED)
 {
-    struct timeval now;
-    int timeout;
     struct libxlOSEventHookTimerInfo *timer_info = *hndp;

-    gettimeofday(&now, NULL);
-    timeout = (abs_t.tv_usec - now.tv_usec) / 1000;
-    timeout += (abs_t.tv_sec - now.tv_sec) * 1000;
-    virEventUpdateTimeout(timer_info->id, timeout);
+    if (timer_info->id > 0)
+        virEventUpdateTimeout(timer_info->id, 0);
     return 0;
 }
(4), Ian J
Jim Fehlig writes ("Re: [Xen-devel] [PATCH 2/2] libxl: fix stale timeout event callback race"):
> Ian Jackson wrote:
> > Specifically, this code has an integer arithmetic overflow.
>
> Well, this patch is removing that buggy code :).

I think you need to have some code somewhere which does the
complicated arithmetic dance to avoid the integer overflow.  Does your
timer registration function have the same bug ?

>  After again reading
> libxl_event.h, I'm considering the below patch in the libvirt libxl
> driver.  The change is primarily inspired by this comment for
> libxl_osevent_occurred_timeout:
...
> /* Implicitly, on entry to this function the timeout has been
>  * deregistered.  If _occurred_timeout is called, libxl will not
>  * call timeout_deregister; if it wants to requeue the timeout it
>  * will call timeout_register again.
>  */

Well your patch is only correct when used with the new libxl, with my
patches.

> diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
> index 302f81c..d4055be 100644
> --- a/src/libxl/libxl_driver.c
> +++ b/src/libxl/libxl_driver.c
> @@ -184,6 +184,8 @@ static void libxlTimerCallback(int timer
> ATTRIBUTE_UNUSED, void *timer_v)
>  {
>      struct libxlOSEventHookTimerInfo *timer_info = timer_v;
>
> +    virEventRemoveTimeout(timer_info->id);
> +    timer_info->id = -1;

I don't understand why you need this.  Doesn't libvirt remove timers
when they fire ?  If it doesn't, do they otherwise not keep
reoccurring ?

Ian.
2, i could not 复现 the error i meet yestoday. "10:12 2012-12-12"5-2)
3, virsh list fail at CTX_LOCK
Program received signal SIGSEGV, Segmentation fault.
__pthread_mutex_lock (mutex=0x656666663778307d) at pthread_mutex_lock.c:50
50        unsigned int type = PTHREAD_MUTEX_TYPE (mutex);
(gdb) where
#0  __pthread_mutex_lock (mutex=0x656666663778307d) at pthread_mutex_lock.c:50
#1  0x00007fffea6c0241 in libxl__ctx_lock (ctx=<optimized out>)
    at libxl_internal.h:2696
#2  libxl_osevent_occurred_timeout (ctx=<optimized out>, for_libxl=0x6d1900)
    at libxl_event.c:1096
#3  0x00007ffff76e63fa in virEventPollDispatchTimeouts ()
    at util/event_poll.c:450
#4  virEventPollRunOnce () at util/event_poll.c:643
#5  0x00007ffff76e50bb in virEventRunDefaultImpl () at util/event.c:247
#6  0x00007ffff78014ed in virNetServerRun (srv=0x6b2cc0)
    at rpc/virnetserver.c:1121
#7  0x000000000040eb18 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1449
the ctx is not valid in libxl__ctx_lock. maybe it is because the timeout issue mentioned by Jim?
4, patch with Jim patch, still fail
Program received signal SIGABRT, Aborted.
0x00007ffff3c26b55 in *__GI_raise (sig=<optimized out>)
    at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
64        return INLINE_SYSCALL (tgkill, 3, pid, selftid, sig);
(gdb) where
#0  0x00007ffff3c26b55 in *__GI_raise (sig=<optimized out>)
    at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
#1  0x00007ffff3c28131 in *__GI_abort () at abort.c:92
#2  0x00007ffff3c1fa10 in *__GI___assert_fail (assertion=0x7fffea6caecd "!r",
    file=0x7fffea6caebc "libxl_internal.h", line=2697,
    function=0x7fffea6d3980 "libxl__ctx_lock") at assert.c:81
#3  0x00007fffea6c0300 in libxl__ctx_lock (ctx=<optimized out>)
    at libxl_internal.h:2697
#4  libxl_osevent_occurred_timeout (ctx=<optimized out>,
    for_libxl=0x7fffe001afc0) at libxl_event.c:1096
#5  0x00007ffff76e63fa in virEventPollDispatchTimeouts ()
    at util/event_poll.c:450
#6  virEventPollRunOnce () at util/event_poll.c:643
#7  0x00007ffff76e50bb in virEventRunDefaultImpl () at util/event.c:247
#8  0x00007ffff78014ed in virNetServerRun (srv=0x6b2cb0)
    at rpc/virnetserver.c:1121
#9  0x000000000040eb18 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1449

13:28 2012-12-13
software skill, X11, randr, xrandr, print display output mode

9:20 2012-12-14
software skill, paste, suse paste
1, http://paste.opensuse.org/
could paste it without any id.
or login with http://openid.net/(google account is ok).

09:56 2012-12-14
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont14, discuss with Jim and continue to debug
0, Jim patch: btw, here is the latest libvirt patch I am testing - http://paste.opensuse.org/15212799
1, no output after
libxl-save-helper: debug: complete r=0: Success
2, but even save successful
there is still error, maybe this lead to save fail?
libxl: error: libxl_blktap2.c:80:libxl__device_destroy_tapdisk: Failed to destroy tap device id 4471 minor 0: Input/output error
libxl: error: libxl.c:1450:devices_destroy_cb: libxl__devices_destroy failed for 1
1), tap is the backend driver from the "virsh restore".
libxl: debug: libxl_device.c:229:libxl__device_disk_set_backend: Disk vdev=hda spec.backend=tap
2), fail at 2nd save. but i do not record the result.
3, several save/restore successful. but hang in vm reboot.
re-test
BTW:  got error while exit virt-viewer:
2012-12-14 12:58:45.909+0000: 4222: error : virNetSocketReadWire:1293 : End of file while reading data: Input/output error
4, hang again.
libxl__domain_suspend
libxl__xc_domain_save
run_helper
Detaching after fork from child process 8406.
libxl__domain_suspend_device_model
[New Thread 0x7ffff7fdc700 (LWP 8407)]
[Thread 0x7ffff7fdc700 (LWP 8407) exited]
libxl__xc_domain_save_done
libxl__domain_suspend_device_model
[New Thread 0x7ffff7fdc700 (LWP 8408)]
[Thread 0x7ffff7fdc700 (LWP 8408) exited]
libxl__domain_save_device_model
domain_suspend_done
2012-12-14 13:09:08.672+0000: 4227: warning : virEventPollUpdateTimeout:263 : Ignoring invalid update timer 0
Detaching after fork from child process 8418.
2012-12-14 13:09:08.694+0000: 4227: warning : virEventPollUpdateTimeout:263 : Ignoring invalid update timer 0
Detaching after fork from child process 8440.
2012-12-14 13:09:08.702+0000: 4227: warning : virEventPollUpdateTimeout:263 : Ignoring invalid update timer 0
5, discuss with Jim, i found that i miss some of him comments
2012-12-14 08:25:16.791+0000: 5459: warning : virEventPollUpdateTimeout:263 : Ignoring invalid update timer 0
Jim: those go away if you make the &ev->nexus->for_app_re change to Ian's patch.
Jim already mention it in http://lists.xen.org/archives/html/xen-devel/2012-12/msg00937.html
after this save still hang(it is what we expect).
6, (10:27 2012-12-18)
the reason of assertion/segfaults, from 20121217 conversation with Jim:
Jim Fehlig: Hey, just wanted to let you know that I found the source of the libxl assertions/segfaults
Jim Fehlig: when destroying or shutting down a domain, there is a race between destroying the libxlDomainObjPrivate object (which frees libxl_ctx) and processing the timer callbacks
Jim Fehlig: so the libxlDomainObjPrivate object gets freed before calling libxl_osevent_occurred_timeout
Jim Fehlig: and we assert or bomb in libxl
Jim Fehlig: I'll spend some time tomorrow hacking up a patch to fix this
Jim Fehlig: will have to figure out how to restructure the libxlDomainObjPrivate object so that we can use virObject
Jim Fehlig: then ref/unref to ensure the object isn't cleaned up until all references are dropped

12:26 2012-12-14
GTD
0, -12:26 13:33-23:59

1, today
1), talk with Jim. discuss about libxl xen4.2 bug. see"09:56 2012-12-14"
2), 这周又梦游了, Jim的comments有遗漏, 可能影响了测试结果.

16:08 2012-12-14
virtualization, arm, kvm
https://wiki.linaro.org/PeterMaydell/KVM/HowTo

10:22 2012-12-17
GTD
0, 10:00-11:48 12:52-18:50 20:13-21:40

1, today
1), 10:44-11:09 work report. see"10:44 2012-12-17"
2), 11:10-11:48 20:15-21:40 fix xen install issue. see"11:09 2012-12-17"
3), Summary: 又到周一, 感觉上周没啥实质性进展阿. work report写啥呢?
今天下午又基本没干什么, 总是这样明日复明日.

10:44 2012-12-17
(18:14 2012-12-18)
work report - week 49, 50
1, [devel-server] work report - week 49, 50
1), working on bnc 782311: Snapshots stuck "queued" with Xen as HV.
send v2 patch to upstream. upstream accept it.
2), working on libxl xen4.2 support with Jim.
test and debug the lastest patch from xen and libvirt. some failure is fix with the lastest patch from xen mailing list. So, continue to debug the others.
3), during compiling xen-unstable, found a failuse while search the libxl-save-helper and pygrub. i am not suse it is a bug or not, debug and write a patch to upstream.

11:09 2012-12-17
virtualization, xen, build error, libxl-save-helper not found
1, my question is why libxl-save-helper is installed in /usr/lib64/xen/bin. but run_helper search it in the /usr/lib/xen/bin.
1), config/StdGNU.mk:
LIBEXEC = $(PREFIX)/lib/xen/bin
2),
in tools/libxl/Makefile:
$(INSTALL_PROG) libxl-save-helper $(DESTDIR)$(PRIVATE_BINDIR)

where PRIVATE_BINDIR = $(PRIVATE_PREFIX)/bin in config/StdGNU.mk
and PRIVATE_PREFIX = $(LIBDIR)/xen

#define LIBDIR "/usr/lib64" in tools/libxl/_paths.h
but #define LIBEXEC "/usr/lib/xen/bin"

run_helper should look in the same dir

2, libxl-save-helper should be installed in /usr/lib/xen/bin?
http://lists.xen.org/archives/html/xen-devel/2012-06/msg01573.html
 * A new helper program libxl-save-helper (which does both save and
   restore).  It will be installed in /usr/lib/xen/bin.

4, 怎么看还是不明白, 只好直接local build一下看看.
1), create individul xen upstream project. see"21:01 2012-12-17"
next. compare xen4.2 and xen-unstable in local build.

16:00 2012-12-17
arm, server, Quad Cortex-A9 with 4M L2 cache
http://www.calxeda.com/technology/products/processors/ecx-1000-techspecs/

16:15 2012-12-17
arm, allwinner, A10, bsp
1, git clone git://github.com/linux-sunxi/sunxi-bsp.git
2, ./confinure
Usage: ./configure <board>

supported boards:
        * a13_mid a13_mid-android
        * a13_olinuxino a13_olinuxino-android
        * cubieboard cubieboard-android
        * cubieboard_512 cubieboard_512-android
        * gooseberry_a721 gooseberry_a721-android
        * hackberry hackberry-android
        * hyundai_a7hd hyundai_a7hd-android
        * mele_a1000 mele_a1000-android
        * mini-x mini-x-android
        * mk802 mk802-android
        * zatab zatab-android
3, ./configure mk802
3, suse@linux-bjrd:sunxi-bsp> ls
allwinner-tools  configure    mali-libs  scripts       u-boot-sunxi
cedarx-libs      linux-sunxi  README.md  sunxi-boards
chosen_board.mk  Makefile     rootfs     sunxi-tools

21:01 2012-12-17
build service, ibs, create own package
1, bamvor@linux-bjrd:obs> osc co home:bjzhang
A    home:bjzhang
2, osc meta pkg -e home:bjzhang xen_4.3
这是最优化的创建「包」的方式，因为它会略过学姐也懒得写的 title 和 description ，直接在你的车库下创建一个名字是 application_name 的子文件夹。
upload this package: osc ci
3, adding files. and "osc add xxx", then "osc commit -m xxx".

10:25 2012-12-18
GTD
0, 10:10-12:00 13:10-18:50

1, today
1), 10:30-12:00 15:39-18:47 fix xen install issue. see"10:41 2012-12-18"
2), 17:55-18:14 work report. see"10:44 2012-12-17"

10:41 2012-12-18
virtualization, xen, build error, libxl-save-helper not found, cont1
1, xl save in xl, xen4.2:
linux-work:/var/lib/xen/images_2/bjz_04_sles11_sp2 # xl save 2 2.save
Saving to 2.save new xl format (info 0x0/0x0/511)
libxl: cannot execute /usr/lib/xen/bin/libxl-save-helper: No such file or directory
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 2 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 2 save/restore helper [4553] exited with error status 255
xl: fatal error: xl_cmdimpl.c:2995, rc=-3: libxl_domain_suspend(ctx, domid, fd, 0, NULL)
2, discuss with Chunyan, check other cmd in /usr/lib64/xen/bin
1), xenconsole
libxl_console_exec: get xenconsole from libxl__private_binddir_path().
2), pygrub.
get from LIBEXEC, but it worked.
3, look into how pygrub invoked.
1), log system
(1), LOG -> LIBXL__LOG -> libxl__log -> libxl__logv -> xtl_log -> xtl_logv -> stdiostream_vmessage
min_level is set by xtl_createlogger_stdiostream and xtl_stdiostream_set_minlevel.
the default minmsglevel passed by main(xl.c) is XTL_PROCESS.
xentoollog.h:
typedef enum xentoollog_level {
    XTL_NONE, /* sentinel etc, never used for logging */
    XTL_DEBUG,
    XTL_VERBOSE,
    XTL_DETAIL,
    XTL_PROGRESS, /* also used for "progress" messages */
    XTL_INFO,
    XTL_NOTICE,
    XTL_WARN,
    XTL_ERROR,
    XTL_CRITICAL,
    XTL_NUM_LEVELS
} xentoollog_level;
2),
libxl: debug: libxl_bootloader.c:429:bootloader_disk_attached_cb: /usr/lib/xen/bin/pygrub doesn't exist, falling back to config path
3), the core function for creating pygrub is bootloader_gotptys
the call stack got form gdb
#0  bootloader_gotptys (egc=0x7fffffffd360, op=0x6260b0)
    at libxl_bootloader.c:451
#1  0x00007ffff79a4bf1 in openpty_exited (egc=0x7fffffffd360, child=0x6260d8,
    pid=4837, status=0) at libxl_aoutils.c:275
#2  0x00007ffff79ad355 in childproc_reaped (egc=0x7fffffffd360,
    pid=<optimized out>, status=<optimized out>) at libxl_fork.c:264
#3  0x00007ffff79ada5b in libxl__fork_selfpipe_woken (egc=0x7fffffffd360)
    at libxl_fork.c:300
#4  0x00007ffff79aa491 in afterpoll_internal (egc=0x7fffffffd360,
    poller=0x6259b0, nfds=2, fds=0x627b20, now=...) at libxl_event.c:1008
#5  0x00007ffff79ab007 in eventloop_iteration (egc=0x7fffffffd360,
    poller=0x6259b0) at libxl_event.c:1440
#6  0x00007ffff79ab52a in libxl__ao_inprogress (ao=0x625dd0,
    file=<optimized out>, line=<optimized out>, func=<optimized out>)
    at libxl_event.c:1685
#7  0x00007ffff7991247 in do_domain_create (ctx=<optimized out>,
    d_config=<optimized out>, domid=0x7fffffffd5dc, restore_fd=1,
    ao_how=<optimized out>, aop_console_how=0x0) at libxl_create.c:1242
#8  0x00007ffff79915f4 in libxl_domain_create_new (ctx=0x7fffffffd360,
    d_config=0x6260b0, domid=0x12e5, ao_how=<optimized out>,
    aop_console_how=<optimized out>) at libxl_create.c:1263
#9  0x000000000041582b in create_domain (dom_info=0x7fffffffd940)
    at xl_cmdimpl.c:1995
4), the function call for bootloader_gotptys
bootloader_disk_attached_cb -> libxl__openptys -> libxl__ev_child_fork
libxl__ev_child_fork: put callback(bootloader_gotptys) on the callback of libxl__ev_child

do_domain_create -> AO_INPROGRESS -> libxl__ao_inprogress -> eventloop_iteration -> afterpoll_internal -> libxl__fork_selfpipe_woken -> childproc_reaped

15:18 2012-12-19
GTD
0, 12:30

1, today
1), 15:31 fix xen install issue.
2), 4h talk with Jim. discuss about libxl xen4.2 bug. see"18:15 2012-12-19"

18:15 2012-12-19
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont15, debug and test with Jim lastest patch, fail
0, current status
Jim_email_20121219_1404. patch: ~/log/novell/hypervisor_and_tools/libvirt/xen4.2_support/20121219_Jim_Patch_race_fix/libxl-race-fix-v0.patch
Hi Bamvor,
Attached is my latest version of a patch to fix the libxl races.  It is
compile-tested only!!  I'm too tired to start testing it now, but
thought I would pass it along to you for review/comment.  I'll start
testing it first thing tomorrow morning.
Unfortunately, we need to keep a list of all registered timeouts and
fds, and ensure they are deregistered (removed from libvirt's event
loop) before freeing the associated libxlDomainObjPrivate object.  If
not, when the libxl_ctx is freed, fd's and timeouts that are still
registered can have their callbacks invoked, which is not good since
everything is being freed, including the libxl_ctx :).
This patch keeps a list of registered timeouts and fds in the
libxlDomainObjPrivate struct.  The info struct associated with timeouts
and fds is also reference counted to ensure it is not freed by the
activities of another thread.
Even if the patch worked as is, it would needs some adjustments before
sending upstream.  E.g. the code to add/remove items from the list can
probably be macro-ized.  But that shouldn't prevent a review of the
general approach to fixing the races, so any thoughts you might have
would be appreciated.

1, start fail
(gdb) where
#0  0x00007ff53fd37b55 in *__GI_raise (sig=<optimized out>)
    at ../nptl/sysdeps/unix/sysv/linux/raise.c:64
#1  0x00007ff53fd39131 in *__GI_abort () at abort.c:92
#2  0x00007ff53fd74c2f in __libc_message (do_abort=2,
    fmt=0x7ff53fe40078 "*** glibc detected *** %s: %s: 0x%s ***\n")
    at ../sysdeps/unix/sysv/linux/libc_fatal.c:186
#3  0x00007ff53fd7a358 in malloc_printerr (action=2,
    str=0x7ff53fe401d8 "double free or corruption (fasttop)",
    ptr=<optimized out>) at malloc.c:6261
#4  0x00007ff53fd7f2fc in *__GI___libc_free (mem=<optimized out>)
    at malloc.c:3733
#5  0x00007ff543801629 in virFree (ptrptr=0x7fff88de7350) at util/memory.c:309
#6  0x00007ff5438167b2 in virObjectUnref (anyobj=<optimized out>)
    at util/virobject.c:145
#7  0x00007ff5437f6b11 in virEventPollCleanupTimeouts ()
    at util/event_poll.c:534
#8  0x00007ff5437f757b in virEventPollRunOnce () at util/event_poll.c:650
1), this is because libxlOSEventHookInfoPtr is free twice.
(gdb) frame 7
#7  0x00007ff5437f6b11 in virEventPollCleanupTimeouts ()
    at util/event_poll.c:534
(gdb) p opaque
    $1 = (void *) 0x6cc840
(gdb) p *(libxlOSEventHookInfoPtr
    $3 = (libxlOSEventHookInfoPtr) 0xdeadbeef
2), find out the first time it released.
(1), it indeed release twice:
> cat gdb.txt |grep 0x70f5e0
libxlTimerCallback: info<0x70f5e0>
virObjectRef<0x70f5e0>
virObjectUnref<0x70f5e0>
virObjectUnref<0x70f5e0>
(2),
libxlTimerCallback: info<0x7ff924004330>
virObjectRef<0x7ff924004330>
#0  virObjectRef (anyobj=0x7ff924004330) at util/virobject.c:162
#1  0x00007ff92c5b2180 in libxlTimerCallback (timer=<optimized out>, timer_info=0x7ff924004330) at libxl/libxl_driver.c:254
virObjectUnref<0x7ff924004330>
#0  virObjectUnref (anyobj=0x7ff924004330) at util/virobject.c:128
#1  0x00007ff9393a83fa in virEventPollDispatchTimeouts () at util/event_poll.c:450
virObjectUnref<0x7ff924004330>
#0  virObjectUnref (anyobj=0x7ff924004330) at util/virobject.c:128
#1  0x00007ff9393a7b11 in virEventPollCleanupTimeouts () at util/event_poll.c:534
3), i do not understand why. all i could do is comment virOjectRef and virObjectUnref in libxlTimerCallback. see what happened.
(1), after change this, fail at virEventPollCleanupTimeouts, which means timeout not fail, fail at fd event.
(2), if i remove the samething in the libxlFDEventCallback, still fail at virEventPollCleanupTimeouts
4), if i only comment virObjectUnref, create and destroy is ok.
but save fail at
(gdb) frame
#0  libxlRemoveEventFDRegistrationInfo (event=<optimized out>)
    at libxl/libxl_driver.c:205
205             if (temp->id == event->id) {
(1),
(gdb) where
#0  libxlRemoveEventFDRegistrationInfo (event=<optimized out>)
    at libxl/libxl_driver.c:205
#1  libxlFDDeregisterEventHook (priv=0x7fb2ac05a5a0, fd=45, hnd=0x6c37f8)
    at libxl/libxl_driver.c:223
#2  0x00007fb2b47487e1 in libxl__ev_fd_deregister (gc=0x6c3ac0, ev=0x6c7da0)
    at libxl_event.c:231
#3  0x00007fb2b4743473 in helper_failed (egc=0x7fb2ba07f7e0, shs=0x6c7d28,
    rc=-3) at libxl_save_callout.c:243
#4  0x00007fb2b4743cc9 in helper_stdout_readable (egc=0x7fb2ba07f7e0,
    ev=0x6c7da0, fd=45, events=<optimized out>, revents=16)
    at libxl_save_callout.c:268
#5  0x00007fb2b474742d in afterpoll_internal (egc=0x7fb2ba07f7e0,
    poller=0x6ae480, nfds=4, fds=0x6c84f0, now=...) at libxl_event.c:995
#6  0x00007fb2b4748007 in eventloop_iteration (egc=0x7fb2ba07f7e0,
    poller=0x6ae480) at libxl_event.c:1440
#7  0x00007fb2b474852a in libxl__ao_inprogress (ao=0x6c3ab0,
    file=<optimized out>, line=<optimized out>, func=<optimized out>)
    at libxl_event.c:1685
#8  0x00007fb2b472a2b8 in libxl_domain_suspend (ctx=<optimized out>, domid=18,
    fd=40, flags=0, ao_how=<optimized out>) at libxl.c:784
5), discuss with Jim about my status.
ref: ~/log/novell/im/NM20121219_Jim_Fehlig__discuss_about_libxl_event_bug.txt

11:23 2012-12-20
GTD
0, 10:20-12:08 13:39-15:00 20:21-22:30

1, today
1), 30' read mail.
2), -12:08 13:39-14:30 20:22-22:30 test Jim patch for libxl xen4.2 bug. see"11:28 2012-12-20".
3), read ARM_ARM doc for shareable. see"23:34 2012-12-20"

11:28 2012-12-20
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont16, debug and test with Jim lastest patch
1, Jim_email_20121220_0746. patch:
~/log/novell/hypervisor_and_tools/libvirt/xen4.2_support/20121220_Jim_Patch_race_fix/0001-libxl-Use-consistent-style-for-function-definitions.patch
~/log/novell/hypervisor_and_tools/libvirt/xen4.2_support/20121220_Jim_Patch_race_fix/0002-Fix-races-in-libxl-driver.patch
Hi Bamvor,
Here are some patches that seem to be working for me.  The first is just
some cleanup, the second one does the real work.
The segfault and virObject{Ref,Unref} issues you mentioned where caused
by a double free AFAICT.  virObjectUnref actually frees the object when
the refcount drops to 0, so there was no need for me to free it again in
libxlOSEventHookInfoDispose.  In fact, we don't have anything in that
object to dispose so I simply removed the function.
Please run these patches through your tests.  I think the patches are in
decent shape for upstream submission, so let me know if you spot any
issues or have any comments.
2, test
1), hvm
(1), create pass.
(2), shutdown(1/2 fail), not sure whether the following log is root cause or not.
libxl: error: libxl_blktap2.c:80:libxl__device_destroy_tapdisk: Failed to destroy tap device id 4767 minor 0: Input/output error
(3), save fail
Program received signal SIGSEGV, Segmentation fault.
__pthread_mutex_lock (mutex=0x10) at pthread_mutex_lock.c:50
50        unsigned int type = PTHREAD_MUTEX_TYPE (mutex);
(gdb) where
#0  __pthread_mutex_lock (mutex=0x10) at pthread_mutex_lock.c:50
#1  0x00007fc1148a1bb5 in libxlFDDeregisterEventHook (priv=<optimized out>,
    fd=46, hnd=0x6ca768) at libxl/libxl_driver.c:233
#2  0x00007fc1146717e1 in libxl__ev_fd_deregister (gc=0x6cb820, ev=0x6caf40)
    at libxl_event.c:231
#3  0x00007fc11466c2a0 in libxl__srm_callout_callback_complete (retval=0,
    errnoval=0, user=0x6caec8) at libxl_save_callout.c:393
#4  0x00007fc11466d514 in libxl__srm_callout_received_save (
    msg=0x7fc11afaa65a "te r=0", len=<optimized out>, user=0x6caec8)
    at _libxl_save_msgs_callout.c:173
#5  0x00007fc11466cd78 in helper_stdout_readable (egc=0x7fc11afaa7e0,
    ev=0x6caf40, fd=46, events=<optimized out>, revents=<optimized out>)
    at libxl_save_callout.c:283
#6  0x00007fc11467042d in afterpoll_internal (egc=0x7fc11afaa7e0,
    poller=0x7fc10c04e250, nfds=4, fds=0x7fc10c04cc80, now=...)
    at libxl_event.c:995
#7  0x00007fc114671007 in eventloop_iteration (egc=0x7fc11afaa7e0,
    poller=0x7fc10c04e250) at libxl_event.c:1440

it all zero in virMutexPtr
(gdb) p hnd
$2 = (void *) 0x6ca768
(gdb) p &((libxlEventHookInfoPtr*)hnd)->priv->regLock
$3 = (virMutex *) 0x7fc10c055cf0
(gdb) p *(&((libxlEventHookInfoPtr*)hnd)->priv->regLock)
$4 = {lock = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0,
      __kind = 0, __spins = 0, __list = {__prev = 0x0, __next = 0x0}},
    __size = '\000' <repeats 39 times>, __align = 0}}
2), pv
(1), start fail. similar to hvm save. they both fail at __pthread_mutex_lock. and virMutexPtr is emptry.
Program received signal SIGSEGV, Segmentation fault.
__pthread_mutex_lock (mutex=0x1cafe0028) at pthread_mutex_lock.c:50
50        unsigned int type = PTHREAD_MUTEX_TYPE (mutex);
(gdb) where
#0  __pthread_mutex_lock (mutex=0x1cafe0028) at pthread_mutex_lock.c:50
#1  0x00007f016fe06bb5 in libxlFDDeregisterEventHook (priv=<optimized out>,
    fd=41, hnd=0x7f0168003798) at libxl/libxl_driver.c:233
#2  0x00007f016fbd67e1 in libxl__ev_fd_deregister (gc=0x7f0168000cc0,
    ev=0x7f0168002ae8) at libxl_event.c:231
#3  0x00007f016fbcfea3 in datacopier_check_state (egc=0x7f0176d10430,
    dc=0x7f0168002a78) at libxl_aoutils.c:73
#4  0x00007f016fbcfff2 in datacopier_writable (egc=0x7f0176d10430,
    ev=0x7f0168002ae8, fd=<optimized out>, events=<optimized out>, revents=4)
    at libxl_aoutils.c:221
#5  0x00007f016fbd542d in afterpoll_internal (egc=0x7f0176d10430,
    poller=0x7f0168001890, nfds=7, fds=0x7f0168003a90, now=...)
    at libxl_event.c:995
#6  0x00007f016fbd6007 in eventloop_iteration (egc=0x7f0176d10430,
    poller=0x7f0168001890) at libxl_event.c:1440
(2), at first, i thought this is because libxlDomainObjPrivateFree is called before libxlFDDeregisterEventHook, but it is not happened from code view or from gdb log.
So, what if libxlFDDeregisterEventHook is failed at the first time? it is in the pv start. and it will be failed while libxlFDDeregisterEventHook is called before libxlDomainObjPrivateAlloc. test it in gdb, gdb log approve it.
(3), but the libxlFDRegisterEventHook is three times before libxlFDDeregisterEventHook. and it not fail at virMutexLock. why?
priv is 0x712d60. the but virMutex is diff:
in fd register: 0x717d60
in fd deregister: 0x712d70

3, try to fix the issue in ""2-2)-(2).

3, email
i patch u two patches to libvirt upstream code. and test hvm start, shutdown, save and pv start.
hvm shutdown, hvm save and pv start fail. hvm shutdown and pv start both fail at seqfault in the pthread_mutex_lock in which lock is 0. and called from libxlFDDeregisterEventHook.

at first, i thought the failure in pv start is because libxlDomainObjPrivateFree is called before libxlFDDeregisterEventHook, but it is not happened from code or from gdb log.
So, what if libxlFDDeregisterEventHook is failed at the first time? it is in the pv start. and it will be failed while libxlFDDeregisterEventHook is called before libxlDomainObjPrivateAlloc. test it in gdb, gdb log approve it.
from gdb log, the priv is 0x712d60 same in fd register and deregister. the but virMutex is different:
in fd register: 0x717d60
in fd deregister: 0x712d70

23:34 2012-12-20
architecture, arm, ARM_ARM, Multiprocessor, shareable, inner shareable, outer shareable
In a VMSA implementation, a particular subsystem with two clusters of processors has the requirement that: 
in each cluster, the data or unified caches of the processors in the cluster are transparent for all data accesses with the Inner Shareable attribute
however, between the two clusters, the caches: 
— are not transparent for data accesses that have only the Inner Shareable attribute
— are transparent for data accesses that have the Outer Shareable attribute.
In this system, each cluster is in a different shareability domain for the Inner Shareable attribute, but all components of the subsystem are in the same shareability domain for the Outer Shareable attribute.
A system might implement two such subsystems. If the data or unified caches of one subsystem are not transparent to the accesses from the other subsystem, this system has two Outer Shareable shareability domains

10:59 2012-12-21
GTD
0, 10:30-17:30

1, today
1), 11:00-12:05 13:54- test Jim patch for libxl xen4.2 bug. see"11:00 2012-12-21"
2), 12:10-13:05 Celen Chen share her exchange trip in EMEA. see"12:05 2012-12-21"

11:00 2012-12-21
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont16, debug and test with Jim lastest patch, cont1
1, continue from "11:28 2012-12-20"
2, the priv pointer is different, why? it should be the same one.
bamvor@linux-work:20121220_Jim_Patch_race_fix> grep virMutex gdb.txt
libxlFDRegisterEventHook: virMutexLock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexUnlock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexLock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexUnlock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexLock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexUnlock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexLock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexUnlock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexLock<0x70ccc0> @ priv<0x70ccb0>
libxlFDRegisterEventHook: virMutexUnlock<0x70ccc0> @ priv<0x70ccb0>
libxlFDDeregisterEventHook: virMutexLock<0x1cafe0028> @ priv<0x1cafe0018>
1), the function pointer is differnet in fd_register and fd_deregister. so as to, so change it:
Index: xen-unstable.hg/tools/libxl/libxl_event.h
===================================================================
--- xen-unstable.hg.orig/tools/libxl/libxl_event.h
+++ xen-unstable.hg/tools/libxl/libxl_event.h
@@ -283,13 +283,13 @@ typedef struct libxl_osevent_hooks {
                      short events, void *for_libxl);
   int (*fd_modify)(void *user, int fd, void **for_app_registration_update,
                    short events);
-  void (*fd_deregister)(void *user, int fd, void *for_app_registration);
+  void (*fd_deregister)(void *user, int fd, void **for_app_registration);
   int (*timeout_register)(void *user, void **for_app_registration_out,
                           struct timeval abs, void *for_libxl);
   int (*timeout_modify)(void *user, void **for_app_registration_update,
                          struct timeval abs)
       /* only ever called with abs={0,0}, meaning ASAP */;
-  void (*timeout_deregister)(void *user, void *for_app_registration)
+  void (*timeout_deregister)(void *user, void **for_app_registration)
       /* will never be called */;
 } libxl_osevent_hooks;
2), after fix this, pv start pass. I guess Jim already mentioned this in xen mailing list. i just missing, how foolish am i.
if virsh reboot just after virsh start/create, it will fail. i thought it is acceptable:  the user could not reboot the machine just after it power on. 
3, hvm save/restore
1), 1st pass, 2nd save hang.
2), test again, fail 1st:
Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7f7a9808e7e0 (LWP 4531)]
0x00007f7a8a9d44e2 in libxlFDEventCallback (watch=<optimized out>, fd=45, vir_events=0, fd_info=0x7f7a80001480) at libxl/libxl_driver.c:161
161         libxl_osevent_occurred_fd(info->priv->ctx, info->xl_priv, fd, 0, events);
(gdb) where
#0  0x00007f7a8a9d44e2 in libxlFDEventCallback (watch=<optimized out>, fd=45,
    vir_events=0, fd_info=0x7f7a80001480) at libxl/libxl_driver.c:161
#1  0x00007f7a977ca66e in virEventPollDispatchHandles (fds=<optimized out>,
    nfds=<optimized out>) at util/event_poll.c:500
#2  virEventPollRunOnce () at util/event_poll.c:646

(gdb) p fd_info
$1 = (void *) 0x7fffdc0020c0
(gdb) p (libxlEventHookInfoPtr*)fd_info
$2 = (libxlEventHookInfoPtr *) 0x7fffdc0020c0
(gdb) p ((libxlEventHookInfoPtr*)fd_info)->priv
Cannot access memory at address 0x2cafe0021
3), test it again, hand at 3rd save.

4, email to Jim
Hi, Jim

here is the update for testing u patch.
1, the reason of the failure i report yestoday is because the fd/timer degister info pointer.
if i update the followings in xen and modify "void *hnd" to "void **hdnp" in libxlXXDeregisterEventHook in libvirt libxl driver. the pv start is ok. 
Index: xen-unstable.hg/tools/libxl/libxl_event.h
===================================================================
--- xen-unstable.hg.orig/tools/libxl/libxl_event.h
+++ xen-unstable.hg/tools/libxl/libxl_event.h
@@ -283,13 +283,13 @@ typedef struct libxl_osevent_hooks {
                      short events, void *for_libxl);
   int (*fd_modify)(void *user, int fd, void **for_app_registration_update,
                    short events);
-  void (*fd_deregister)(void *user, int fd, void *for_app_registration);
+  void (*fd_deregister)(void *user, int fd, void **for_app_registration);
   int (*timeout_register)(void *user, void **for_app_registration_out,
                           struct timeval abs, void *for_libxl);
   int (*timeout_modify)(void *user, void **for_app_registration_update,
                          struct timeval abs)
       /* only ever called with abs={0,0}, meaning ASAP */;
-  void (*timeout_deregister)(void *user, void *for_app_registration)
+  void (*timeout_deregister)(void *user, void **for_app_registration)
       /* will never be called */;
 } libxl_osevent_hooks;

2, after this modify, hvm vm save maybe hang or seqfault at libxl_osevent_occurred_fd because of wrong fd_info.

best wishes
Bamvor

12:05 2012-12-21
lunch and learning, QA, Celen Chen share her exchange trip in EMEA
1, openqa.opensuse.org
2, GenToo testing automated
Tinderbox
3, hamsta: auto test?
4, MMtest: kernel test and some userspace test.
5, Selenium & webdriver: for web UI automation
6, cucumber

15:57 2012-12-24
GTD
0, 10:00-18:46 20:37-21:25

1, today
1), 30' fruit time.
2), 17:35-18:46 21:10-21:21 fix xen install issue. see"16:00 2012-12-24".
3), 20:37-21:02 send tty console patch for libvirt upstream. see"21:00 2012-12-24"
4), summary: 今天又是下午才开始工作的, 如果总是这样, 怎么可能达到自己一边工作一边做xen arm的计划呢?

16:00 2012-12-24
virtualization, xen, build error, libxl-save-helper not found, cont2
1, plan:
write a patch for save and pygrub.
2, patch is ok. write patch for xen-unstable.

17:48 2012-12-24
virtualization, xen, arm, read xen code, cont1
1, there is a arm32 dir in xen/arch/arm: 
changeset:   26317:b094ba4bf985
user:        Ian Campbell <ian.campbell@citrix.com>
date:        Wed Dec 19 14:16:30 2012 +0000
summary:     xen: arm: introduce arm32 as a subarch of arm.

2, all the assemble in the arm32 directory:
arm32 > ls
asm-offsets.c  entry.S  head.S  lib  Makefile  mode_switch.S  proc-ca15.S

21:00 2012-12-24
virtualization, libvirt, xen, libxlDomainOpenConsole, current status and next
1, status
1), the patch is missing. So, it had better try git hub tomorrow. after i send xen patch.
2), there is a API virConsoleOpen for handling console opening and locking. I chould use this API.

11:10 2012-12-25
GTD
0, 11:00-18:12

1, today
1), 1h try OMAP3530: output to ttyS1. see"13:28 2012-12-25"
2), 14:22-15:28 fix xen install issue. see"14:30 2012-12-25".
nap 20'
3), 30' work report. see"15:28 2012-12-25"
4), 
3), send tty console patch for libvirt upstream. ref"21:00 2012-12-24"

2, daily work
1), tracking xen-arm update.
2), read libvirt and xen-devel quickly, should less that 30minutes.
3), read linux news
http://www.linux.com/
http://www.phoronix.com/scan.php?page=home

3, week plan
1), send xen libexec patch.
2), send console patch to upstream.
3), test Jim lastest Patch.

4, next
1), send xen libexec patch.
1), test Jim patch for libxl xen4.2 bug. see"11:00 2012-12-21"
3), re-read all the patch about libxl xen4.2.
1), got arm technical symposia pdf.
2), libvirt blkstats:
(1), add block stats in libxl_qmp.c, add cmd in xl.
(2), add patch in libvirt, send it to Jim. if the former patch only accept by xen-unstable not xen4.2-testing. i could not send patch to libvirt upstream.
3), try xen on kvm.
4), 对于vi不能方便查找keywords这个事情, 实在不能忍了, 如果这周能把managed save和bridge-utils bug fix, 就把这个做一个.

3, next week
1), work on lock patch.
2), try to build MK802 kernel on obs. speed up. i want it work on opensuse12.3
2), read kernel doc: "10:36 2012-11-23"
1), read code for patch. see"10:25 2012-11-23"2-2)-(2).
2), after "1)" finish. try xen on kvm.
3), read the mail on "Andrew Wafaa <awafaa@opensuse.org>"_email_"[opensuse-arm] Fwd: [fedora-arm] ARMv8 Bootstrap Project"_20121122
3), work on xen on ARM. ref"22:33 2012-11-19"
4), check the error from "10:18 2012-11-15"2
2012-11-15 04:02:45.318+0000: 4307: error : virNodeGetSecurityModel:9567 : this function is not supported by the connection driver: virNodeGetSecurityModel
5), ask jim to invite me to xen irc.

3, next next
1), gsoc: "22:23 2012-11-17"
1), notes about Huawei from eet-china.
2), read bug:https://bugzilla.novell.com/show_bug.cgi?id=781425

2, next
1), try to improve attach-disk, detach-disk in libxl driver, see"18:17 2012-11-07"4
2), test attach-disk command. see"10:41 2012-10-30"2
3), maybe libxl and qemu could communicate with qemu through xenstore?

libxl_dm.c:
        /* Find uuid and the write the vnc password to xenstore for qemu. */
        t = xs_transaction_start(ctx->xsh);
        vm_path = libxl__xs_read(&gc,t,libxl__sprintf(&gc, "%s/vm", p->dom_path));
        if (vm_path) {
            /* Now write the vncpassword into it. */
            pass_stuff = libxl__calloc(&gc, 3, sizeof(char *));
            pass_stuff[0] = "vncpasswd";
            pass_stuff[1] = info->vncpasswd;
            libxl__xs_writev(&gc,t,vm_path,pass_stuff);

3, for Jim
1), xenlight event lock in libvirt. see"16:52 2012-11-06"2-1).

4, next month
1), opensuse on MK802
(1), generate the 512MB version with opensuse12.2 RC2 which enable yast fist run.
(2), try opensuse based on ubuntu kernel in order to solve the error from miniand.
2), try armv8 emulator and read armv8 kernel code.

14:30 2012-12-25
virtualization, xen, build error, libxl-save-helper not found, cont3, write upstream patch
1, patch is 
# HG changeset patch
# Parent c4114a042410d3bdec3a77c30b2e85366d7fbe1d
change libexec to private binder dir for pygrub bootloader and libxl-save-helper

in current xen, libexec is /usr/lib/xen/bin, while the private binder is /usr/lib64/xen/bin. but some command in private binder dir is called from libexec which lead to the following error:
1, for pygrub bootloader:
libxl: debug: libxl_bootloader.c:429:bootloader_disk_attached_cb: /usr/lib/xen/bin/pygrub doesn't exist, falling back to config path
2, for save:
libxl: cannot execute /usr/lib/xen/bin/libxl-save-helper: No such file or directory
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 3 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 3 save/restore helper [10222] exited with error status 255

there are two ways to fix above error. the first one is make such command store in the /usr/lib/xen/bin and /usr/lib64/xen/bin(symbol link to previous on), e.g. qemu-dm. The second way is using private binder dir instead of libexec dir. e.g. xenconsole.
For me, the latter one is suitable for pygrub and libxl-save-helper.

diff -r c4114a042410 tools/libxl/libxl_bootloader.c
--- a/tools/libxl/libxl_bootloader.c	Fri Dec 21 17:05:38 2012 +0000
+++ b/tools/libxl/libxl_bootloader.c	Tue Dec 25 15:14:41 2012 +0800
@@ -419,7 +419,7 @@ static void bootloader_disk_attached_cb(
         const char *bltmp;
         struct stat st;
 
-        bltmp = libxl__abs_path(gc, bootloader, libxl__libexec_path());
+        bltmp = libxl__abs_path(gc, bootloader, libxl__private_bindir_path());
         /* Check to see if the file exists in this location; if not,
          * fall back to checking the path */
         LOG(DEBUG, "Checking for bootloader in libexec path: %s", bltmp);
diff -r c4114a042410 tools/libxl/libxl_save_callout.c
--- a/tools/libxl/libxl_save_callout.c	Fri Dec 21 17:05:38 2012 +0000
+++ b/tools/libxl/libxl_save_callout.c	Tue Dec 25 15:14:41 2012 +0800
@@ -172,7 +172,7 @@ static void run_helper(libxl__egc *egc, 
     shs->stdout_what = GCSPRINTF("domain %"PRIu32" save/restore helper"
                                  " stdout pipe", domid);
 
-    *arg++ = getenv("LIBXL_SAVE_HELPER") ?: LIBEXEC "/" "libxl-save-helper";
+    *arg++ = getenv("LIBXL_SAVE_HELPER") ?: PRIVATE_BINDIR "/" "libxl-save-helper";
     *arg++ = mode_arg;
     const char **stream_fd_arg = arg++;
     for (i=0; i<num_argnums; i++)

15:28 2012-12-25
work report - week 51
1, [devel-server] work report - week 51
1), write a patch for fixing the wrong path in libxl.
2), working on libxl xen4.2 support with Jim.
test the lastest patch from Jim. more error has been fixed.

15:32 2012-12-25
company, suse, olaf kirch, Merry Christmas
"Olaf Kirch <okir@suse.com>"_email_"[devel-server] Merry Christmas, SLE Team!"_20121221_1252
Dear all,

The year is coming to an end - it hasn't quite ended yet, but I guess many
of you are either on vacation already, or are close to wrapping things
up for the Christmas break.

Time to look back!

To begin with, many thanks to all of you for your work during this year,
for your dedication and your commitment to our team and our products. We
certainly saw a lot of changes happening this year. After having been acquired
by Attachmate, the whole organization went through a phase of unvertainty,
and coming to terms with the changes. But I think it is fair to say at the
end of this year, that we have come out of this phase, and that we are
stronger than we were going into it.

SUSE is a business unit of its own now, and we are performing really well.
The SLE products are at the root of this success, and it is thanks to
you and your work that this is so. Earlier this year, we have delivered
SLE 11 SP2 - on schedule (erm, _revised_ schedule :), and in great quality.
And customers love it, and the field loves it - including our new 3.0 kernel.

We have also started to work on SLE 12, by forming virtual teams and
looking into what we want to do for our next major release (ETA: some time
in 2014). Early next year, we will start putting stakes in the ground and
begin to address individual aspects of SLE 12 ahead of time.

We welcomed the SLE Desktop into our department, making us the largest
department in SUSE R&D with close to 70 people. I'm learning new things about
the desktop all the time... We also welcomed a number of new people joining
us from other SUSE departments, or from outside the company. I feel it's great
to have you here, ladies and gentlemen - and I hope you feel welcome and
at home here.

If SLE is the root, then we also saw a new sapling grow from it -
SUSE Cloud. For those involved in the project, this was (and continues
to be) quite a ride. In a way, we are embarking on a new adventure - new
technology, a large body of code, decidedly un-SLE-ish development model,
funny schedules :-)

But at the same time, IaaS is an evolutionary step forward when you're
building operating systems. I am looking forward to see us steer the
product towards sane schedules, a sane scope, and to see this sapling
grow into a strong, fresh plantyielding plenty of fruit!

In looking back, it has been an eventful year, but despite some interesting
challenges, I think it has also been a very successful year. I want to thank
all of you again for being part of this, and for driving it. Hats off to a
fantastic team!

So in closing, I wish you and your families a happy Christmas time, and
a happy new year!

Looking forward to see/hear/read from you next year -

Sincerely,
Olaf
-- 
Neo didn't bring down the Matrix. SOA did. (soafacts.com)
--------------------------------------------
Olaf Kirch - Director SUSE Linux Enterprise; R&D (okir@suse.com)
SUSE LINUX Products GmbH, Maxfeldstr. 5, 90409 Nürnberg, Germany
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg) 

14:00 2012-12-26
GTD
0, 11:00-17:52

1, today
1), put libvirt and xen to github. see"14:02 2012-12-26"

14:02 2012-12-26
software, github, put libvirt and xen to github
0, compare git and hg
http://blog.csdn.net/shaobo_wu/article/details/6090765
1, help from github after create a new repo:
Create a new repository on the command line
touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:bjzhang/libvirt.git
git push -u origin master

Push an existing repository from the command line
git remote add origin git@github.com:bjzhang/libvirt.git
git push -u origin master
2, for libvirt
1), git remote add github git@github.com:bjzhang/libvirt.git
2), push all the refs/heads/* to gibhub
> git push --all github
Counting objects: 98637, done.                  
Delta compression using up to 8 threads.        
Compressing objects: 100% (19394/19394), done.  
Writing objects: 100% (98637/98637), 100.25 MiB | 416 KiB/s, done.
Total 98637 (delta 82495), reused 94686 (delta 78817)             
To git@github.com:bjzhang/libvirt.git                             
 * [new branch]      bjz_master -> bjz_master                     
 * [new branch]      libxl_api_small -> libxl_api_small           
 * [new branch]      libxl_attach_detach_disk -> libxl_attach_detach_disk
 * [new branch]      libxl_lock_impl -> libxl_lock_impl                  
 * [new branch]      libxl_lock_use -> libxl_lock_use                    
 * [new branch]      libxl_lock_v2_0911 -> libxl_lock_v2_0911            
 * [new branch]      libxl_lock_v2_test -> libxl_lock_v2_test            
 * [new branch]      libxl_lock_v3_1011 -> libxl_lock_v3_1011            
 * [new branch]      libxl_lock_v3_improvement -> libxl_lock_v3_improvement
 * [new branch]      libxl_lock_v4_1029 -> libxl_lock_v4_1029              
 * [new branch]      libxl_lock_v4_1102 -> libxl_lock_v4_1102              
 * [new branch]      libxl_migration -> libxl_migration                    
 * [new branch]      libxl_migration_cyliu -> libxl_migration_cyliu        
 * [new branch]      master -> master                                      
 * [new branch]      migration_lock -> migration_lock                      
 * [new branch]      xen42_support -> xen42_support                        
 * [new branch]      xen_managed_save -> xen_managed_save                  
 * [new branch]      xen_managed_save_v1 -> xen_managed_save_v1            
 * [new branch]      xen_managed_save_v1_1 -> xen_managed_save_v1_1        
 * [new branch]      xen_managed_save_v2_upstream_v1 -> xen_managed_save_v2_upstream_v1                                                                         
 * [new branch]      xen_managed_save_v3_u_v2 -> xen_managed_save_v3_u_v2       
> git branch
  bjz_master                         
  libxl_api_small                    
  libxl_attach_detach_disk           
  libxl_lock_impl                    
  libxl_lock_use                     
  libxl_lock_v2_0911                 
  libxl_lock_v2_test                 
  libxl_lock_v3_1011                 
  libxl_lock_v3_improvement          
  libxl_lock_v4_1029                 
  libxl_lock_v4_1102                 
  libxl_migration                    
  libxl_migration_cyliu              
* master                             
  migration_lock                     
  xen42_support                      
  xen_managed_save                   
  xen_managed_save_v1                
  xen_managed_save_v1_1              
  xen_managed_save_v2_upstream_v1    
  xen_managed_save_v3_u_v2           
> git branch -a
  bjz_master                            
  libxl_api_small                       
  libxl_attach_detach_disk              
  libxl_lock_impl                       
  libxl_lock_use                        
  libxl_lock_v2_0911                    
  libxl_lock_v2_test                    
  libxl_lock_v3_1011                    
  libxl_lock_v3_improvement             
  libxl_lock_v4_1029                    
  libxl_lock_v4_1102                    
  libxl_migration                       
  libxl_migration_cyliu                 
* master                                
  migration_lock                        
  xen42_support                         
  xen_managed_save                      
  xen_managed_save_v1                   
  xen_managed_save_v1_1                 
  xen_managed_save_v2_upstream_v1       
  xen_managed_save_v3_u_v2              
  remotes/github/bjz_master             
  remotes/github/libxl_api_small        
  remotes/github/libxl_attach_detach_disk
  remotes/github/libxl_lock_impl         
  remotes/github/libxl_lock_use          
  remotes/github/libxl_lock_v2_0911      
  remotes/github/libxl_lock_v2_test
  remotes/github/libxl_lock_v3_1011
  remotes/github/libxl_lock_v3_improvement
  remotes/github/libxl_lock_v4_1029
  remotes/github/libxl_lock_v4_1102
  remotes/github/libxl_migration
  remotes/github/libxl_migration_cyliu
  remotes/github/master
  remotes/github/migration_lock
  remotes/github/xen42_support
  remotes/github/xen_managed_save
  remotes/github/xen_managed_save_v1
  remotes/github/xen_managed_save_v1_1
  remotes/github/xen_managed_save_v2_upstream_v1
  remotes/github/xen_managed_save_v3_u_v2
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
  remotes/origin/v0.10.2-maint
  remotes/origin/v0.9.11-maint
  remotes/origin/v0.9.6-maint
3, for xen
1), use the hg git tool
http://hg-git.github.com/
(1), install python setup tools
zypper in python-setuptools
(2), install hg-git
# easy_install hg-git                                                       
/usr/lib64/python2.6/site-packages/setuptools/package_index.py:7: DeprecationWarning: the md5 module is deprecated; use hashlib instead                         
  from md5 import md5                                                           
Searching for hg-git                                                            
Reading http://pypi.python.org/simple/hg-git/                                   
Reading http://hg-git.github.com/                                               
Best match: hg-git 0.3.4                                                        
Downloading http://pypi.python.org/packages/source/h/hg-git/hg-git-0.3.4.tar.gz#md5=a2a34f60dd5ce66ba9015caa70f3f7e9
Processing hg-git-0.3.4.tar.gz                                                  
Running hg-git-0.3.4/setup.py -q bdist_egg --dist-dir /tmp/easy_install-eFvPHl/hg-git-0.3.4/egg-dist-tmp-4JToyh                                                 
zip_safe flag not set; analyzing archive contents...                            
hggit.__init__: module references __file__                                      
Adding hg-git 0.3.4 to easy-install.pth file                                    

Installed /usr/local/lib64/python2.6/site-packages/hg_git-0.3.4-py2.6.egg
Processing dependencies for hg-git
Searching for dulwich>=0.8.0                                             
Reading http://pypi.python.org/simple/dulwich/                           
Reading http://samba.org/~jelmer/dulwich                                 
Reading http://launchpad.net/dulwich                                     
Best match: dulwich 0.8.7                                                
Downloading http://samba.org/~jelmer/dulwich/dulwich-0.8.7.tar.gz        
Processing dulwich-0.8.7.tar.gz                                          
Running dulwich-0.8.7/setup.py -q bdist_egg --dist-dir /tmp/easy_install-H_5fuG/dulwich-0.8.7/egg-dist-tmp-Icag_i                                               
zip_safe flag not set; analyzing archive contents...                            
dulwich.tests.test_index: module references __file__
dulwich.tests.utils: module references __file__
dulwich.tests.__init__: module references __file__
dulwich.tests.test_pack: module references __file__
dulwich.tests.test_objects: module references __file__
dulwich.tests.test_repository: module references __file__
Adding dulwich 0.8.7 to easy-install.pth file
Installing dul-web script to /usr/local/bin
Installing dulwich script to /usr/local/bin
Installing dul-daemon script to /usr/local/bin

Installed /usr/local/lib64/python2.6/site-packages/dulwich-0.8.7-py2.6-linux-x86_64.egg
Finished processing dependencies for hg-git
(3), make sure the following line in the .hgrc
[extensions]
hgext.bookmarks =
hggit = 
(4), help from hg-git
http://hg-git.github.com/
$ cd hg-git # (a Mercurial repository)
$ hg bookmark -r default master # make a bookmark of master for default, so a ref gets created
$ hg push git+ssh://git@github.com/schacon/hg-git.git
$ hg push
(5), actual step
the link is git@github.com:bjzhang/xen.git.
> hg bookmark -r default master
> hg push git@github.com:bjzhang/xen.git
pushing to git@github.com:bjzhang/xen.git
abort: repository git@github.com:bjzhang/xen.git not found!
> hg push git+ssh://git@github.com/bjzhang/xen.git
pushing to git+ssh://git@github.com/bjzhang/xen.git
exporting hg objects to git
...
it is not response after the whole night.
try the verbose mode
> hg push -B master -v git+ssh://git@github.com/bjzhang/xen.git
it will convert all the revision. there are 26319 commits it will take a long time(maybe 7 hours) to convert it.
22972

10:28 2012-12-27
GTD
0, 10:28-18:08

