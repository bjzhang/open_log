.LOG
09:43 2012-12-03
virtualization, libvirt, xen, xend, support management save, bugzilla, cont10, deal with Jim reply
1, Jim_email_20121201
Bamvor Jian Zhang wrote:
> Implement the domainManagedSave, domainHasManagedSaveImage, and
> domainManagedSaveRemove functions in the libvirt legacy xen driver.
>   

Cool, thanks for the patch!

In case others are interested, one motivation for adding this
functionality in the legacy xen driver is to avoid xen-only hacks in the
nova libvirt driver.

> domainHasManagedSaveImage check the managedsave image from filesystem
> everytime. This is different from qemu and libxl driver. In qemu or
> libxl driver, there is a hasManagesSave flags in virDomainObjPtr which
> is not used in xen legacy driver. This flag could not add into xen
> driver ptr either, because the driver ptr will be release at the end of
> every libvirt api calls. Meanwhile, AFAIK, xen store all the flags in
> xen not in libvirt xen driver. There is no need to add this flags in xen.
>   

I think checking the filesystem is the only way to go since xend doesn't
have the notion of managedsave.  Do others see any issues with this
approach?

> ---
> i have test the following case for this patch:
> 1), "virsh managedsave" save domain to /var/lib/xen/save/domain_name.save.
> call xenUnifiedDomainManagedSave.
> 2), "virsh start": if managedsave image is exist, it should be boot from
> managed save image.
> call xenUnifiedDomainHasManagedSaveImage.
> 3), "virsh start --force-boot": fresh boot, delete the managed save image
> if exists.
> call xenUnifiedDomainHasManagedSaveImage,
> xenUnifiedDomainManagedSaveRemove.
> 4), "virsh managedsave-remove": remove managed save image.
> call xenUnifiedDomainManagedSaveRemove
> 5), "virsh undefine": undefine the domain, it will fail if mananed save
> image exist.
> call xenUnifiedDomainHasManagedSaveImage.
> 6), "virsh undefine --managed-save": undefine the domain, and remove
> mananed save image.
> call xenUnifiedDomainHasManagedSaveImage and
> xenUnifiedDomainManagedSaveRemove.
> 7), "virsh list --all --with-managed-save". list domain if managed save
> image exist. got nothing if non-exists.
> call xenUnifiedDomainHasManagedSaveImage.
> 8), "virsh list --all --without-managed-save". do not list the domain if
> managed save image exist.
> call xenUnifiedDomainHasManagedSaveImage.
>   

Thanks for including your test cases.  I've tried these on your patch as
well and looks good!

>  src/xen/xen_driver.c | 109 ++++++++++++++++++++++++++++++++++++++++++++++++++-
>  src/xen/xen_driver.h |   2 +
>  2 files changed, 110 insertions(+), 1 deletion(-)
>
> diff --git a/src/xen/xen_driver.c b/src/xen/xen_driver.c
> index 5a40757..0b2418d 100644
> --- a/src/xen/xen_driver.c
> +++ b/src/xen/xen_driver.c
> @@ -67,6 +67,7 @@
>  #include "nodeinfo.h"
>  
>  #define VIR_FROM_THIS VIR_FROM_XEN
> +#define XEN_SAVE_DIR LOCALSTATEDIR "/lib/libvirt/xen/save"
>   

#include "configmake.h" is needed for LOCALSTATEDIR

>  
>  static int
>  xenUnifiedNodeGetInfo(virConnectPtr conn, virNodeInfoPtr info);
> @@ -267,6 +268,7 @@ xenUnifiedOpen(virConnectPtr conn, virConnectAuthPtr auth, unsigned int flags)
>  {
>      int i, ret = VIR_DRV_OPEN_DECLINED;
>      xenUnifiedPrivatePtr priv;
> +    char ebuf[1024];
>  
>  #ifdef __sun
>      /*
> @@ -406,6 +408,17 @@ xenUnifiedOpen(virConnectPtr conn, virConnectAuthPtr auth, unsigned int flags)
>      }
>  #endif
>  
> +    if (virAsprintf(&priv->saveDir, "%s", XEN_SAVE_DIR) == -1) {
> +        virReportOOMError();
> +        goto fail;
> +    }
> +
> +    if (virFileMakePath(priv->saveDir) < 0) {
> +        VIR_ERROR(_("Failed to create save dir '%s': %s"), priv->saveDir,
> +                  virStrerror(errno, ebuf, sizeof(ebuf)));
> +        goto fail;
> +    }
> +
>      return VIR_DRV_OPEN_SUCCESS;
>  
>  fail:
> @@ -437,6 +450,7 @@ xenUnifiedClose(virConnectPtr conn)
>          if (priv->opened[i])
>              drivers[i]->xenClose(conn);
>  
> +    VIR_FREE(priv->saveDir);
>      virMutexDestroy(&priv->lock);
>      VIR_FREE(conn->privateData);
>  
> @@ -1080,6 +1094,79 @@ xenUnifiedDomainSave(virDomainPtr dom, const char *to)
>      return xenUnifiedDomainSaveFlags(dom, to, NULL, 0);
>  }
>  
> +static char *
> +xenUnifiedDomainManagedSavePath(xenUnifiedPrivatePtr priv, virDomainPtr dom)
> +{
> +    char *ret;
> +
> +    if (virAsprintf(&ret, "%s/%s.save", priv->saveDir, dom->name) < 0) {
> +        virReportOOMError();
> +        return NULL;
> +    }
> +
> +    VIR_DEBUG("managed save image: %s", ret);
> +    return ret;
> +}
> +
> +static int
> +xenUnifiedDomainManagedSave(virDomainPtr dom, unsigned int flags)
> +{
> +    GET_PRIVATE(dom->conn);
> +    char *name;
> +    int ret = -1;
> +
> +    virCheckFlags(0, -1);
> +
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
> +
> +    if (priv->opened[XEN_UNIFIED_XEND_OFFSET])
> +        ret = xenDaemonDomainSave(dom, name);
> +
> +cleanup:
> +    VIR_FREE(name);
> +    return ret;
> +}
> +
> +static int
> +xenUnifiedDomainHasManagedSaveImage(virDomainPtr dom, unsigned int flags)
> +{
> +    GET_PRIVATE(dom->conn);
> +    char *name;
> +    int ret = -1;
> +
> +    virCheckFlags(0, -1);
> +
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        return ret;
> +
> +    ret = virFileExists(name);
> +    VIR_FREE(name);
> +    return ret;
> +}
> +
> +static int
> +xenUnifiedDomainManagedSaveRemove(virDomainPtr dom, unsigned int flags)
> +{
> +    GET_PRIVATE(dom->conn);
> +    char *name;
> +    int ret = -1;
> +
> +    virCheckFlags(0, -1);
> +
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
>   

I think we can do away with the cleanup label and simply return ret here.

> +
> +    ret = unlink(name);
> +    VIR_FREE(name);
> +
> +cleanup:
> +    return ret;
> +}
> +
>  static int
>  xenUnifiedDomainRestoreFlags(virConnectPtr conn, const char *from,
>                               const char *dxml, unsigned int flags)
> @@ -1504,16 +1591,33 @@ static int
>  xenUnifiedDomainCreateWithFlags(virDomainPtr dom, unsigned int flags)
>  {
>      GET_PRIVATE(dom->conn);
> +    char *name;
>      int i;
> +    int ret = -1;
>  
>      virCheckFlags(0, -1);
>  
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
> +
> +    if (virFileExists(name)) {
> +        if (priv->opened[XEN_UNIFIED_XEND_OFFSET]) {
> +            ret = xenDaemonDomainRestore(dom->conn, name);
> +            if (ret == 0)
> +                unlink(name);
> +        }
> +        VIR_FREE(name);
> +        goto cleanup;
> +    }
>   

name is leaked here if virFileExists() fails.  You can initialize name
to NULL and then unconditionally free it in cleanup.

> +
>      for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i)
>          if (priv->opened[i] && drivers[i]->xenDomainCreate &&
>              drivers[i]->xenDomainCreate(dom) == 0)
>              return 0;
>  
> -    return -1;
> +cleanup:
> +    return ret;
>  }
>  
>  static int
> @@ -2218,6 +2322,9 @@ static virDriver xenUnifiedDriver = {
>      .domainGetState = xenUnifiedDomainGetState, /* 0.9.2 */
>      .domainSave = xenUnifiedDomainSave, /* 0.0.3 */
>      .domainSaveFlags = xenUnifiedDomainSaveFlags, /* 0.9.4 */
> +    .domainManagedSave = xenUnifiedDomainManagedSave, /* 1.0.1 */
> +    .domainHasManagedSaveImage = xenUnifiedDomainHasManagedSaveImage, /* 1.0.1 */
> +    .domainManagedSaveRemove = xenUnifiedDomainManagedSaveRemove, /* 1.0.1 */
>      .domainRestore = xenUnifiedDomainRestore, /* 0.0.3 */
>      .domainRestoreFlags = xenUnifiedDomainRestoreFlags, /* 0.9.4 */
>      .domainCoreDump = xenUnifiedDomainCoreDump, /* 0.1.9 */
> diff --git a/src/xen/xen_driver.h b/src/xen/xen_driver.h
> index b3fbcff..078980e 100644
> --- a/src/xen/xen_driver.h
> +++ b/src/xen/xen_driver.h
> @@ -200,6 +200,8 @@ struct _xenUnifiedPrivate {
>      /* Location of config files, either /etc
>       * or /var/lib/xen */
>      const char *configDir;
> +    /* Location of managed save dir, default /var/lib/libvirt/xen/save */
> +    char *saveDir;
>  
>  # if WITH_XEN_INOTIFY
>      /* The inotify fd */
>   

With exception of the few nits, looks good!  I would like to hear what
others think about checking existence of the managed save image on each invocation of domainHasManagedSaveImage().

Thanks,
Jim

09:48 2012-12-03
GTD
0, 9:30-11:59 13:40-14:33 -17:40

1, today
1), 10' work on libvirt manage save for xen legacy: update patch and reply to Jim. see"09:43 2012-12-03".
2), 40' fix bug in bridge-utils: https://bugzilla.novell.com/show_bug.cgi?id=789275. sr id 22942. how to using quilt, see"10:29 2012-12-03"
3), mailing list. devel-server. see"13:54 2012-12-03"
4), 10' work report. see"17:25 2012-12-03"

10:29 2012-12-03
osc, build service, obs/ibs, patch, try quilt commands
doc: http://147.2.207.240/~dmzhang/osc-quilt.markdown
1, bamvor@linux-bjrd:bridge-utils-1.4> quilt new bridge-utils-1.4-show-selected-bridge.patch
Patch patches/bridge-utils-1.4-show-selected-bridge.patch is now on top
2, bamvor@linux-bjrd:bridge-utils-1.4> quilt edit brctl/brctl_cmd.c 
File brctl/brctl_cmd.c added to patch patches/bridge-utils-1.4-show-selected-bridge.patch
using gvim
bamvor@linux-bjrd:bridge-utils-1.4> EDITOR=gvim quilt edit brctl/brctl_cmd.c
File brctl/brctl_cmd.c is already in patch patches/bridge-utils-1.4-show-selected-bridge.patch
3, bamvor@linux-bjrd:bridge-utils-1.4> quilt diff
Index: bridge-utils-1.4/brctl/brctl_cmd.c     
===================================================================
--- bridge-utils-1.4.orig/brctl/brctl_cmd.c                        
+++ bridge-utils-1.4/brctl/brctl_cmd.c                             
...//show the patch file
bamvor@linux-bjrd:bridge-utils-1.4> quilt refresh
Refreshed patch patches/bridge-utils-1.4-show-selected-bridge.patch
now xxx.patch is actually created in the patches directory(the parent directory). 

13:54 2012-12-03
mailing list, devel-server, CI(Continous Integration), jenkin; obs, notification, hermes
1, Lin Ma
1), -CI server.
Contacted Bernhard M. Wiedemann to get some useful information about 
the jenkins scripts in SUSE-Cloud automation project.

Created a local jenkins instance for kvm autotest. defined my own trigger 
policy by creating two scripts:
One script monitors SLE 11 sp3 repo on ibs, if it detects any updates, it will 
analyzes the update info to determine if there is a new qemu-kvm package. 
If so, the another one will get the new qemu-kvm package name, remove
the old package and install the new package. Later,The test jobs will be 
triggered to perform one by one and send out real notification through email.

I've deployed 40% kvm autotests scripts in this jenkins instance. Based on 
aboved trigger policy, they works well. But the rest of kvm autotests scripts 
don't work well, some of them need certain utility packages in guest image, 
some of them need special configuration. I'm working on them to add/fix 
these dependency.
2), olaf kirch and Vincent Untz reply to Lin Ma
> Cool, this looks extremely useful!
> 
> This makes me wonder whether there's a mechanism to receive notifications
> for specific package updates from IBS without polling. Maybe you could ask
> Adrian Schröter if there are such notifications available somewhere in the
> dark depths of IBS...

You can configure hermes (https://mercurius.suse.de/ for IBS) to send
you a notification when there's a commit (by mail, rss feed, xmpp
message).

In hermes for OBS, the notifications can also be sent through a raw HTTP
GET query (which would probably be the simplest option for cases like
this, I guess).

Vincent

14:31 2012-12-03
mailing list, kernel, crash
1, "Mike Galbraith <mgalbraith@suse.de>"_answer_"Michal Kubecek <mkubecek@suse.cz>"_email_"[kernel] question: worker thread named [kworker/0:1] on every CPU"_20121130_2235
On Fri, 2012-11-30 at 15:35 +0100, Michal Kubecek wrote:
> Hello,
> 
> in crash dumps for bnc#790939 I found something I don't understand. On
> every CPU, there is a process named "[kworker/0:1]" in RU state. I
> always thought the first number after the slash should be the CPU the
> thread is running on (or 'u' for unbound). But here I have threads with
> '0' on all CPU's.

Check pid, the name is a lie.
 
> Another strange thing is that except NMI or normal interrupt stack, all
> of them have only cpu_idle on stack (and possibly an Intel specific
> implementation).

Because they're really swapper.
 
> Are these threads result of normal operation or sign of a problem?

It's normal.
 
crash: vmlinux: no .gnu_debuglink section
GNU gdb (GDB) 7.0
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-unknown-linux-gnu"...

      KERNEL: vmlinux
    DUMPFILE: /proc/kcore
        CPUS: 64
        DATE: Fri Nov 30 18:21:23 2012
      UPTIME: 00:57:39
LOAD AVERAGE: 0.12, 0.08, 0.11
       TASKS: 533
    NODENAME: vogelweide
     RELEASE: 3.0.38-0.5-default
     VERSION: #1 SMP Fri Aug 3 09:02:17 UTC 2012 (358029e)
     MACHINE: x86_64  (2261 Mhz)
      MEMORY: 8 GB
         PID: 6764
     COMMAND: "crash"
        TASK: ffff88026d2c4040  [THREAD_INFO: ffff88026c156000]
         CPU: 16
       STATE: TASK_RUNNING (ACTIVE)

crash> ps|less
   PID    PPID  CPU       TASK        ST  %MEM     VSZ    RSS  COMM
>     0      0   0  ffffffff81a0b020  RU   0.0       0      0  [swapper]
>     0      2   1  ffff8802714aa300  RU   0.0       0      0  [kworker/0:0]
>     0      2   2  ffff8802714c6440  RU   0.0       0      0  [kworker/0:1]
>     0      2   3  ffff880271502580  RU   0.0       0      0  [kworker/0:1]
...

crash> task_struct ffff8802714aa300|grep cfs_rq
    cfs_rq = 0xffff88027e6311f0, 
crash> struct cfs_rq 0xffff88027e6311f0|grep rq
struct cfs_rq {
  rq = 0xffff88027e631180, 
  leaf_cfs_rq_list = {
crash> struct rq 0xffff88027e631180|grep idle
  idle = 0xffff8802714aa300,

Newer kernels are honest.

crash: vmlinux: no .gnu_debuglink section
GNU gdb (GDB) 7.0
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-unknown-linux-gnu"...

      KERNEL: vmlinux
    DUMPFILE: /proc/kcore
        CPUS: 64
        DATE: Fri Nov 30 18:51:18 2012
      UPTIME: 00:19:12
LOAD AVERAGE: 1.30, 1.35, 1.12
       TASKS: 1192
    NODENAME: vogelweide
     RELEASE: 3.0.50-rt74-0-rt
     VERSION: #1 SMP PREEMPT RT Fri Nov 9 13:48:16 UTC 2012 (c6efdc8)
     MACHINE: x86_64  (2260 Mhz)
      MEMORY: 8 GB
         PID: 7076
     COMMAND: "crash"
        TASK: ffff88026f21c400  [THREAD_INFO: ffff8802754a2000]
         CPU: 0
       STATE: TASK_RUNNING (ACTIVE)

crash> ps|less
   PID    PPID  CPU       TASK        ST  %MEM     VSZ    RSS  COMM
      0      0   0  ffffffff81a11020  RU   0.0       0      0  [swapper/0]
>     0      2   1  ffff880275818b30  RU   0.0       0      0  [swapper/1]
>     0      2   2  ffff880275870c70  RU   0.0       0      0  [swapper/2]
>     0      2   3  ffff8802758aadb0  RU   0.0       0      0  [swapper/3]
...


17:25 2012-12-03
work report - week 48
1, [devel-server] work report - week 48
1), working on bnc 782311: Snapshots stuck "queued" with Xen as HV. 
discuss with Jim about my patch in private and then send it to upstream.
2), help Yadan Fan(Beijing L3 team) work on bnc#790928. 
3), fix bug in bridge-utils. bnc#789275.

10:04 2012-12-04
GTD
0, 9:50-11:50 13:05-18:15

1, today
1), 40' libxl event: work on Ian Jackson comments. see"17:51 2012-11-30"
2), 30' talk with Jim. item""1-1), ""1-4).
3), 20' know something about fedora ARM status. 
4), 13:12-13:35 14:09-18:04 send patch V2 for management save to upstream. see"11:45 2012-12-04"
5), 20' prepare environment for building kernel with kvm nested. see"16:30 2012-12-04"
6), Summary: 上次Jim说发了Upstream patch之后把链接贴到bugzilla上, 结果我忘了. 

11:45 2012-12-04
virtualization, libvirt, xen, xend, support management save, bugzilla, cont11, work on patch v2 for upstream; test pass: ""6
1, Jim_20121204
1), email
>>  #define VIR_FROM_THIS VIR_FROM_XEN
>> +#define XEN_SAVE_DIR LOCALSTATEDIR "/lib/libvirt/xen/save"
>>   
>>     
>
> #include "configmake.h" is needed for LOCALSTATEDIR
>   

BTW, you will also need to install this directory and add it to %files
in the spec file.  Squashing in the attached patch should do it.
2), attachment
diff --git a/libvirt.spec.in b/libvirt.spec.in
index 5b3f4e4..ec6fc8b 100644
--- a/libvirt.spec.in
+++ b/libvirt.spec.in
@@ -1719,6 +1719,9 @@ rm -f $RPM_BUILD_ROOT%{_sysconfdir}/sysctl.d/libvirtd
 %ghost %dir %{_localstatedir}/run/libvirt/libxl/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/libxl/
 %endif
+%if %{with_xen}
+%dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/xen/
+%endif
 %if %{with_network}
 %ghost %dir %{_localstatedir}/run/libvirt/network/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/network/
diff --git a/src/Makefile.am b/src/Makefile.am
index b5c20c8..2d36380 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -1768,6 +1768,9 @@ if WITH_UML
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/uml"
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/run/libvirt/uml"
 endif
+if WITH_XEN
+	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/xen"
+endif
 if WITH_NETWORK
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/network"
 	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/dnsmasq"
@@ -1814,6 +1817,9 @@ if WITH_UML
 	rmdir "$(DESTDIR)$(localstatedir)/lib/libvirt/uml" ||:
 	rmdir "$(DESTDIR)$(localstatedir)/run/libvirt/uml" ||:
 endif
+if WITH_XEN
+	rmdir "$(DESTDIR)$(localstatedir)/lib/libvirt/xen" ||:
+endif
 if WITH_NETWORK
 	rm -f $(DESTDIR)$(sysconfdir)/libvirt/qemu/networks/autostart/default.xml
 	rm -f $(DESTDIR)$(sysconfdir)/libvirt/qemu/networks/default.xml
2, compile and test
1), checking
(1), make check
pass
(2), make syntax-check
fail at(actual it always fail): 
vulnerable_makefile_CVE-2009-4029
./Makefile.in:2033:     -find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
maint.mk: the above files are vulnerable; beware of running
  "make dist*" rules, and upgrade to fixed automake
  see http://bugzilla.redhat.com/542609 for details
(3), make -C tests valgrind
2), test
~/log/novell/hypervisor_and_tools/libvirt/managedsave 
# ./loop_test.sh /etc/xen/vm/sles11_hvm_10_vm5.xml
3, study the Makefile.am and libvirt.spec.in
1), create directory during installation
(1), Makefile.am
install-data-local:
+if WITH_XEN
+	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/lib/libvirt/xen"
+endif
(2), target call procedure
((1)), in top Makefile
$(RECURSIVE_TARGETS) -> make xxx-am
((2)), in src/Makefile
make dir: install-am -> install-data-am -> install-data-local
rm dir: uninstall-am -> uninstall-local
notes: using "make --debug=j" can prove that the calling from install-am to install-data-local, but "install-data-am" is not displayed.
2), libvirt.spec.in
@@ -1719,6 +1719,9 @@ rm -f $RPM_BUILD_ROOT%{_sysconfdir}/sysctl.d/libvirtd
 %ghost %dir %{_localstatedir}/run/libvirt/libxl/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/libxl/
 %endif
+%if %{with_xen}
+%dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/xen/
+%endif
 %if %{with_network}
 %ghost %dir %{_localstatedir}/run/libvirt/network/
 %dir %attr(0700, root, root) %{_localstatedir}/lib/libvirt/network/
4, write comment. 
1), comments unchanged
implement managedsave in libvirt xen legacy driver

Implement the domainManagedSave, domainHasManagedSaveImage, and
domainManagedSaveRemove functions in the libvirt legacy xen driver.

domainHasManagedSaveImage check the managedsave image from filesystem
everytime. This is different from qemu and libxl driver. In qemu or
libxl driver, there is a hasManagesSave flags in virDomainObjPtr which
is not used in xen legacy driver. This flag could not add into xen
driver ptr either, because the driver ptr will be release at the end of
every libvirt api calls. Meanwhile, AFAIK, xen store all the flags in
xen not in libvirt xen driver. There is no need to add this flags in xen.
2), comment after "---"
Changes since v1:
(1), add save dir in libvirt.spec.in and src/Makefile.am 
(2), misc changes for return value and memory leak.

5, send patch
git format-patch --signoff --subject-prefix="PATCH V2" f5f80cec9e43442d12a445db14e6c01c026d946a
git send-email --no-chain-reply-to --annotate --to bjzhang@suse.com  0001-implement-managedsave-in-libvirt-xen-legacy-driver.patch

6, (12:14 2012-12-05)
managedsave test result: 100times loop successful.
log/novell/hypervisor_and_tools/libvirt/managedsave/loop_test.sh

7, upstream patch: still memory leak. 
改还是没改干净. 结果还是Jim自己改了...
Jim_email_20121205
Bamvor Jian Zhang wrote:
> Implement the domainManagedSave, domainHasManagedSaveImage, and
> domainManagedSaveRemove functions in the libvirt legacy xen driver.
>
> domainHasManagedSaveImage check the managedsave image from filesystem
> everytime. This is different from qemu and libxl driver. In qemu or
> libxl driver, there is a hasManagesSave flags in virDomainObjPtr which
> is not used in xen legacy driver. This flag could not add into xen
> driver ptr either, because the driver ptr will be release at the end of
> every libvirt api calls. Meanwhile, AFAIK, xen store all the flags in
> xen not in libvirt xen driver. There is no need to add this flags in xen.
>
> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
>   
[...]
> @@ -1505,15 +1591,32 @@ xenUnifiedDomainCreateWithFlags(virDomainPtr dom, unsigned int flags)
>  {
>      GET_PRIVATE(dom->conn);
>      int i;
> +    int ret = -1;
> +    char *name = NULL;
>  
>      virCheckFlags(0, -1);
>  
> +    name = xenUnifiedDomainManagedSavePath(priv, dom);
> +    if (!name)
> +        goto cleanup;
> +
> +    if (virFileExists(name)) {
> +        if (priv->opened[XEN_UNIFIED_XEND_OFFSET]) {
> +            ret = xenDaemonDomainRestore(dom->conn, name);
> +            if (ret == 0)
> +                unlink(name);
> +        }
> +        goto cleanup;
> +    }
> +
>      for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i)
>          if (priv->opened[i] && drivers[i]->xenDomainCreate &&
>              drivers[i]->xenDomainCreate(dom) == 0)
>              return 0;
>   

Still a memory leak here.  I've squashed in the below patch and pushed
the result.  Thanks Bamvor.

Regards,
Jim

diff --git a/src/xen/xen_driver.c b/src/xen/xen_driver.c
index 8b44f17..3786176 100644
--- a/src/xen/xen_driver.c
+++ b/src/xen/xen_driver.c
@@ -1611,10 +1611,13 @@ xenUnifiedDomainCreateWithFlags(virDomainPtr
dom, unsigned int flags)
         goto cleanup;
     }
 
-    for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i)
+    for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i) {
         if (priv->opened[i] && drivers[i]->xenDomainCreate &&
-            drivers[i]->xenDomainCreate(dom) == 0)
-            return 0;
+            drivers[i]->xenDomainCreate(dom) == 0) {
+            ret = 0;
+            goto cleanup;
+        }
+    }
 
 cleanup:
     VIR_FREE(name);

8, message send on bugzilla by Jim
https://bugzilla.novell.com/show_bug.cgi?id=782311
https://bugzilla.novell.com/show_bug.cgi?id=782311#c8

James Fehlig <jfehlig@suse.com> changed:

           What    |Removed                     |Added
----------------------------------------------------------------------------
             Status|ASSIGNED                    |NEEDINFO
       InfoProvider|                            |tbeitter@novell.com

--- Comment #8 from James Fehlig <jfehlig@suse.com> 2012-12-04 18:08:36 UTC ---
Ok, patch finally committed upstream

http://libvirt.org/git/?p=libvirt.git;a=commit;h=501bfad194140fe385704a01aa6c6125c6aba9dc

And a followup patch to fix a memory leak not noticed during review

http://libvirt.org/git/?p=libvirt.git;a=commit;h=cab0cfd5cfa9c2d2dfa9e04d586211f4db61ae32

I've backported and queued these patches for our next SP2 maintenance cycle,
although not quite sure when that will be.

Tilman, can you try the libvirt package from Devel:Virt:SLE-11-SP2?

http://download.suse.de/ibs/Devel:/Virt:/SLE-11-SP2/SUSE_SLE-11-SP2_Update_Test_standard/

13:50 2012-12-04
arm, server, fedora; qemu
1, fedora
https://fedoraproject.org/wiki/Architectures/ARM
includes support for Beagleboard-xM, Dreamplug, Guruplug, Highbank, iMX, Pandaboard, Sheevaplug, Trimslice, Versatile Express and more! 
Bamvor: fedora support arm Versatile Express(QEMU) is useful for developers. 
2, marvell arm based arm server. from 99$. support gigabit ethernet and wlan. 
http://fedoraproject.org/wiki/Architectures/ARM/Kirkwood
http://www.globalscaletechnologies.com/default.aspx
3, Trimslice
http://fedoraproject.org/wiki/Architectures/ARM/Trimslice
    1 GHz NVIDA Tegra 2 (dual-core ARM Cortex A9)
    1 GB DDR2-667 RAM
    HDMI 1.3 max resolution 1920 x 1080
    Gigabit Ethernet (Realtek RTL8111DL)
    802.11 b/g/n WiFi 

16:30 2012-12-04
virtualization, kvm, xen, xen on kvm, cont1, try to compile kernel
1, branch kernel
bamvor@linux-bjrd:suse> osc bco SUSE:SLE-11-SP2:Update kernel-default

Note: The branch has been created of a different project,
              SUSE:SLE-11-SP2:Update,
      which is the primary location of where development for
      that package takes place.
      That's also where you would normally make changes against.
      A direct branch of the specified package can be forced
      with the --nodevelproject option.
Bamvor: only got kernel-source package. seems all the kernel package in this package. 
2, quilt setup kernel-default.spec
The %prep section of kernel-default.spec failed; results may be incomplete
The -v option will show rpm's output
3, (16:28 2012-12-05)
suse kernel is not support it. 
maybe the only i could do is try opensuse.

13:57 2012-12-05
virtualization, libvirt, qemu, kvm, virtio hotplug
https://bugzilla.novell.com/show_bug.cgi?id=790928
1, report
Stephan Barth 2012-11-22 15:25:46 UTC

Created an attachment (id=514216) [details]
supportconfig from my lab machine

If a second disk is added to a KVM guest with

virsh attach-disk sles11-1 /var/lib/libvirt/images/sles11-1.img vdb

and then it is mounted on the guest and a single read operation like with

ll /mnt

is done, which is successful and after that the disk is removed with

virsh detach-disk sles11-1 vdb

the guest does not detect this. There is no event in dmesg or
/var/log/messages. Additionally if you run

fdisk -l

the command hangs when it tries to detect the second disk.
2, explain by developer
Bruce Rogers 2012-12-04 20:56:04 UTC

The hot-unplug support is at the pci device level. There is no automatic
notification to the block layer when the virtio pci-device is being removed, so
you do need to have the block device unused when the device is removed (eg
umount <device-file>).

So we do support hot-unplug of the virtio block pci device, but not in the same
way that you have come to expect for scsi, for example. The virtio protocol
does not include mechanisms for handling hotplug at that level, just at the pci
level.

We probably need to document this better.

13:58 2012-12-05
GTD
0, 12:00

1, today
1), 13:59-14:20 17:12- libxl event: work on Ian Jackson comments. see"17:51 2012-11-30"

10:10 2012-12-06
company, colleague, Joey Zheng, farewell
1, "Olaf Kirch <okir@suse.com>"_email_"[devel-server] Joey Zheng is about to leave us"_20121205_1906
Hi all,

Joey Zheng, leader of the Beijing Desktop team, is going to leave SUSE after
a long and very succesful carreer with us. He will move to his home town to
take care of his family. His last working day will be Friday this week.

We have not selected a successor for Joey yet. In the interim, David
Liang has agreed to step in as temporary supervisor for the team.
Please support David in this role.

Most of all, please join me in thanking Joey for his great contributions
to SUSE, and wishing him good luck for his personal and professional future.

Sincerely,
Olaf
-- 
Neo didn't bring down the Matrix. SOA did. (soafacts.com)
--------------------------------------------
Olaf Kirch - Director SUSE Linux Enterprise; R&D (okir@suse.com)
SUSE LINUX Products GmbH, Maxfeldstr. 5, 90409 Nürnberg, Germany
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg) 

2, Joey
Hi Olaf,

Thanks a lot for your great support these years. :)

Best Regards,
Joey Zheng

3, "Stefan Behlert <behlert@suse.com>"_email_20121205_2344
Joey,

I wish you all the best for your future!

It was a sad day when I heard about you leaving, as it was always fun to
work with you. We have been working together now for quite a while, and I
can just say that I hope we will be working to gether sometime in the
future!

Again, a big THANK YOU from me for the years of co-operation and everything
you did for the products, the department, and the people of SUSE!

All the best to you and your family.

        ciao,
          Stefan

4, Joey Zheng
My contact information is following:
Email & Gtalk: joey.yuzheng@gmail.com
IRC: jzheng on freenode.net
Sina weibo: _J_o_e_y_
Mobile: +8613511008202

Thanks,
Joey Zheng

10:56 2012-12-06
company, colleague, openSUSE Team member, Alberto Planas, report to Agustin Benito Bethencourt 
"Agustin Benito Bethencourt <abebe@suse.com>"_"[devel] Please welcome Alberto Planas - new openSUSE Team member"_email_20121205_1838
Dear colleagues,

It's my pleasure to announce a new team member.

Alberto Planas Dominguez joined this Monday the openSUSE Team at SUSE. He will 
be located in Nuremebrg between 18 and 24 months before moving back to his 
country, to work for SUSE remotely.

Alberto has a wide experience working in different R&D projects and companies 
as researcher, developer or manager. During his 15 year carrer he has worked 
with many different technologies and frameworks (from Assembler to Ruby, from 
JBoss to Django...) in different sectors (Biotechnology, financial) in a 
variety of areas (analysis, tools development, monitoring, modelling...). He 
is also a reputed technical writer with articles published in different IT 
media. 

Please join me in giving him a warm welcome and support him in getting used to
SUSE, across all teams.

By the way, Alberto is very interested in the local culture, history, 
economy....as far as it do not goes through a fermentation process.

Next time I will add this as requirement in the opening description. :-) 
Alberto....stand strong! I couldn't.

Saludos
-- 
Agustin Benito Bethencourt
openSUSE Team Lead at SUSE
abebe@suse.com

11:00 2012-12-06
GTD
0, 9:40-13:18 15:00-18:06

1, today
1), 11:01-13:17 23:00-23:50 libxl event: work on Ian Jackson comments. see"17:51 2012-11-30"
1.5h discuss with Jim about it. see"log/novell/im/NM20121206_Jim_Fehlig__discuss_about_libxl_event_bug.txt".
2), 15:00-15:43 read some code in xen arm. see"15:00 2012-12-06"
nap 20'

11:43 2012-12-06
software, skill, SCM: hg, extension, graph log, glog
http://mercurial.selenic.com/wiki/GraphlogExtension
Enable this extension by adding the following lines to your configuration file (hgrc):

[extensions]
graphlog = 

15:00 2012-12-06
virtualization, xen, arm, read xen code; clone linux-xen
1, head.S
init_uart: specific to the PL011 UART.
all the uart code include start_xen is pl011 specific.
2, enter into C code. start_xen
3, prepare and finally boot domain 0
1), construct_dom0
r2 could be atags or dtd pointer. 
/* FROM LINUX head.S

 * Kernel startup entry point.
 * ---------------------------
 *
 * This is normally called from the decompressor code.  The requirements
 * are: MMU = off, D-cache = off, I-cache = dont care, r0 = 0,
 * r1 = machine nr, r2 = atags or dtb pointer.
 *...
 */
2), init_idle_domain -> scheduler_init. calling domain_create() for what? 
2), domain_unpause_by_systemcontroller -> vcpu_wake: call scheduler to wake cpu. scheduler are: arinc653, credit, credit2, sedf. credit should be the default for vm. for credit, it will call csched_vcpu_wake.
4, 
5, others
1), clone xen linux dom0 kernel. for future. 
git clone git://xenbits.xen.org/people/ianc/linux.git
according to http://wiki.xen.org/wiki/Xen_ARMv7_with_Virtualization_Extensions
Linux kernel for dom0
The patches necessary to boot Linux as dom0 under Xen were merged upstream in v3.7. However in order to actually start guests a few additional patches are required. These patches can be found in the arm-privcmd-for-3.8 branch of git://xenbits.xen.org/people/ianc/linux.git 

09:59 2012-12-07
mailing list, virtualization, xen, XenSummit, Call for Input/Action
"Lars Kurth"_email_"[Xen-devel] 2013 Xen event plan's : Call for Input/Action"
Hi everybody,

Next Xen Hackathon - vote on date/location needed
I have been working with a still to be disclosed vendor on a Xen Hackathon to be hosted in spring. The following options are on the table

    Option 1: May 16/17, Dublin, Ireland (preferred by vendor)
    Option 2: 2 days in February 11-14, Munich - note that FOSDEM is Feb 2 & 3
    Option 3: 2 days in March 18-22, Munich

Given that we had a Hackathon in Munich already and that I know that quite a few Xen devs (including me) are on vacation in the middle of March, my preference would be option 1. But I still wanted to put this to you to get a community view.

XenSummit EU, Oct 2013
I just signed the contracts to host XenSummit the week of Oct 21-25 at the Edinburgh International Conference Centre. The exact dates are still to be decided. That time coincides with the 10th birthday of Xen depending on how one counts: the 1.0 release was on Oct 2nd 2003, SOSP 2003 where Xen was presented was October 21 2003.

XenSummit US or Asia, April-June 2013
Given that the EU summit is some time away, it would make sense to host a XenSummit in either the US or Asia in late spring or early summer. Time-frame wise I was thinking of April to June, which should fit well with the Xen 4.3 release. The only problem is that there is no bigger event we could co-locate with. So I can only do this at a) significant cost to Xen.org or b) if a vendor in the community who has space to host 100-200 people and is based in the US or Asia would volunteer to provide their premises for a 2 day event. If you work for a vendor who can accomodate us, and you would be interested in hosting, please get in touch with me.

Best Regards
Lars

10:02 2012-12-07
GTD
0, 9:00-12:10 -18:00

1, today
1), 9:00-9:35 US/China Sync meeing. 
2), test Jim xen4.2 patch. see"10:32 2012-12-07"

10:32 2012-12-07
(10:39 2012-12-10)
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont10, test Jim's patch
1, test with Jim 
log/novell/hypervisor_and_tools
libvirt/xen4.2_support/loop_test.sh
migrate/test_case/20120904__lock_test/lock.sh
2, save fail(log start from libxl_domain_suspend.*create)
libxl: debug: libxl_event.c:512:libxl__ev_xswatch_register: watch w=0x714310 wpath=@releaseDomain token=3/0: register slotnum=3
libxl: debug: libxl_event.c:457:watchfd_callback: watch w=0x714310 wpath=@releaseDomain token=3/0: event epath=@releaseDomain
libxl: debug: libxl.c:1014:domain_death_xswatch_callback: [evg=0x71e990:5] from domid=5 nentries=1 rc=1
libxl: debug: libxl.c:1025:domain_death_xswatch_callback: [evg=0x71e990:5]   got=domaininfos[0] got->domain=5
libxl: debug: libxl.c:1052:domain_death_xswatch_callback:  exists shutdown_reported=0 dominf.flags=ffff0012
libxl: debug: libxl.c:1018:domain_death_xswatch_callback: [evg=0] all reported
libxl: debug: libxl.c:1081:domain_death_xswatch_callback: domain death search done
libxl: debug: libxl.c:761:libxl_domain_suspend: ao 0x70bd80: create: how=(nil) callback=(nil) poller=0x70c6a0
libxl: debug: libxl_dom.c:1104:libxl__toolstack_save: domain=5 toolstack data size=8
libxl: debug: libxl.c:800:libxl_domain_suspend: ao 0x70bd80: inprogress: poller=0x70c6a0, flags=i
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 5 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 5 save/restore helper [5831] exited with error status 255
libxl: debug: libxl_event.c:1501:libxl__ao_complete: ao 0x70bd80: complete, rc=-3
libxl: debug: libxl_event.c:1473:libxl__ao__destroy: ao 0x70bd80: destroy
3, test on jim previous version
libxl: debug: libxl.c:761:libxl_domain_suspend: ao 0x7f5958002150: create: how=(nil) callback=(nil) poller=0x6ae650
libxl: debug: libxl_dom.c:1104:libxl__toolstack_save: domain=1 toolstack data size=8
libxl: debug: libxl.c:800:libxl_domain_suspend: ao 0x7f5958002150: inprogress: poller=0x6ae650, flags=i
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 1 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 1 save/restore helper [9974] exited with error status 255
libxl: debug: libxl_event.c:1501:libxl__ao_complete: ao 0x7f5958002150: complete, rc=-3
libxl: debug: libxl_event.c:1473:libxl__ao__destroy: ao 0x7f5958002150: destroy
4, analysis:
1), it is the same error
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 5 save/restore helper stdout pipe
2), test on with xl cmd, seems the same error. 
linux-work:/var/lib/xen/images_2/sles11_sp2_pv # xl save sles11_sp2_pv sles11_sp2_pv.save
Saving to sles11_sp2_pv.save new xl format (info 0x0/0x0/419)
libxl: cannot execute /usr/lib/xen/bin/libxl-save-helper: No such file or directory
libxl: error: libxl_utils.c:363:libxl_read_exactly: file/stream truncated reading ipc msg header from domain 3 save/restore helper stdout pipe
libxl: error: libxl_exec.c:118:libxl_report_child_exitstatus: domain 3 save/restore helper [10222] exited with error status 255
xl: fatal error: xl_cmdimpl.c:2995, rc=-3: libxl_domain_suspend(ctx, domid, fd, 0, NULL)
3), get the helper in the run_helper(xen/tools/libxl_save_callout.c):
    *arg++ = getenv("LIBXL_SAVE_HELPER") ?: LIBEXEC "/" "libxl-save-helper";
LIBXL_SAVE_HELPER is definitly not defined. So, that means LIBEXEC=/usr/lib/xen/bin, I got the same thing in the build log:
echo "LIBEXEC=\"/usr/lib/xen/bin\"" >>"stubdompath.sh".tmp
but, it should not happen.
try setting the ENV. \TODO: figure out why LIBEXEC is wrong. maybe it is a bug?
4), add ENV
linux-work:/usr/lib64/xen/bin # export LIBXL_SAVE_HELPER=`pwd`/libxl-save-helperlinux-work:/usr/lib64/xen/bin # echo $LIBXL_SAVE_HELPER
/usr/lib64/xen/bin/libxl-save-helper
xl successful.
virsh fail if i do not boot libvirtd with that env. 
virsh successful sometime, but sometimes fail. daemon dead while fail. but save image is right(virsh restore successful after re-start libvirtd).
one of error: 
(gdb) where
#0  0x0000000000000000 in ?? ()
#1  0x00007fffea6c0f47 in libxl_osevent_occurred_timeout (ctx=<optimized out>,
    for_libxl=0x71ed08) at libxl_event.c:1043
#2  0x00007ffff76e629a in virEventPollDispatchTimeouts ()
    at util/event_poll.c:450
#3  virEventPollRunOnce () at util/event_poll.c:643
#4  0x00007ffff76e4f5b in virEventRunDefaultImpl () at util/event.c:247
#5  0x00007ffff7800fcd in virNetServerRun (srv=0x6b2d10)
    at rpc/virnetserver.c:1004
#6  0x000000000040e608 in main (argc=<optimized out>, argv=<optimized out>)
    at libvirtd.c:1355
it seems that it is a deregister issue. 
(gdb) p *(libxl__ev_time*)for_libxl
$3 = {func = 0, infinite = 0, entry = {tqe_next = 0x0, tqe_prev = 0x71f168},
  abs = {tv_sec = 1355133330, tv_usec = 147371}, for_app_reg = 0x719bf0}
\TODO: do i apply all the patches? 
5), try new version. 

10:57 2012-12-07
software skill, shell, test, run program with specific library; LD_LIBRARY_PATH; glibc debug flags: MALLOC_PERTURB_ and MALLOC_CHECK_ 
1, cat libvirt/run
#!/bin/bash -
# libvirt 'run' programs locally script
# Copyright (C) 2012 Red Hat, Inc.
#
# With this script you can run libvirt programs without needing to
# install them first.  You just have to do for example:
#
#   ./run ./tools/virsh [args ...]
#
# If you are already in the tools/ subdirectory, then the following
# command will also work:
#
#   ../run ./virsh [...]
#
# You can also run the C programs under valgrind like this:
#
#   ./run valgrind [valgrind opts...] ./program
#
# or under gdb:
#
#   ./run gdb --args ./program
#
# This also works with sudo (eg. if you need root access for libvirt):
#
#   sudo ./run ./tools/virsh list --all
#
#----------------------------------------------------------------------

# Find this script.
b=/home/suse/work/source/virtualization/libvirt/libvirt

library_path="$b/src/.libs"
if [ -z "$LD_LIBRARY_PATH" ]; then
    LD_LIBRARY_PATH=$library_path
else
    LD_LIBRARY_PATH="$library_path:$LD_LIBRARY_PATH"
fi
export LD_LIBRARY_PATH

export LIBVIRT_DRIVER_DIR="$b/src/.libs"
export LIBVIRTD_PATH="$b/daemon/libvirtd"

# For Python.
export PYTHON=/usr/bin/python
if [ -z "$PYTHONPATH" ]; then
    PYTHONPATH="$b/python:$b/python/.libs"
else
    PYTHONPATH="$b/python:$b/python/.libs:$PYTHONPATH"
fi
export PYTHONPATH

# This is a cheap way to find some use-after-free and uninitialized
# read problems when using glibc.
random_val="$(awk 'BEGIN{srand(); print 1+int(255*rand())}' < /dev/null)"
export MALLOC_PERTURB_=$random_val

# Run the program.
exec $b/libtool --mode=execute "$@"

2, about MALLOC_PERTURB_ and MALLOC_CHECK_ 
1), MALLOC_PERTURB_
http://udrepper.livejournal.com/11429.html
Seems like the number of people who know this feature is still almost zero. Well, RH developers know it and we have some who use it all the time on development machines. Basically, setting this environment variable causes the malloc functions in libc to return memory which has been wiped and clear memory when it is returned. Of course this does not affect calloc which always does clear the memory.

The reason for this exercise is, of course, to f ind code which uses memory returned by malloc without initializing it and code which uses code after it is freed. valgrind can do this but it's costly to run. The MALLOC_PERTURB_ exchanges the ability to detect problems in 100% of the cases with speed.

The byte value used to initialize values returned by malloc is the byte value of the environment value. The value used to clear memory is the bitwise inverse. Setting MALLOC_PERTURB_ to zero disables the feature.

This technique can find hard to detect bugs. It is therefore suggested to always use this flag (at least temporarily) when testing out code or a new distribution. That's a hint for all the brave souls testing FC6t1.

2), "Jim Meyering"_20110527
please set both MALLOC_PERTURB_ and MALLOC_CHECK_ envvars

Now, bootstrapping emacs on Fedora 15 x86_64
(with env settings as below) fails with a segfault.

If you develop emacs, or even if you just build from sources regularly,
on a glibc-based system, do us all a favor and build with these envvar
settings:

    export MALLOC_PERTURB_=$((RANDOM % 255 + 1))
    export MALLOC_CHECK_=3

Why?  Because that helps you expose malloc-related problems far earlier.
I've found numerous bugs that way.  The trouble is that you have to
be ready to debug, or at least ready to retry with

    env MALLOC_PERTURB_=0 MALLOC_CHECK_=0 make ...

to see if things work better without protection.

Until recently, I've been building like this to work around
a problem that I traced back to a commit in emacs several years ago:

    make bootstrap RUN_TEMACS='MALLOC_CHECK_=0 ./temacs'

However, today, even with that, make bootstrap is failing with a
segfault (in various places) that goes away when I turn off malloc
robustness checking via both variables for the whole process
and not just one of them when running temacs:

    MALLOC_PERTURB_=0 MALLOC_CHECK_=0 make bootstrap

That suggests a very recent change (within the last 24 hrs)
makes emacs act to differently when MALLOC_PERTURB_=N causes glibc
to scribble nonzero (N) bytes into each just freed buffer.

3), MALLOC_CHECK_
Q: 在执行一个程序时，出现如下错误：
*** glibc detected *** double free oｒ corruption : 0x0937d008 ***
是怎么回事？  
A:   设置MALLOC_CHECK_环境变量再运行程序，呵呵，错误信息消失

MALLOC_CHECK_=0   ./myprogram

MALLOC_CHECK_支持如下设置: 
0 - 不产生错误信息，也不中止这个程序
1 - 产生错误信息，但是不中止这个程序
2 - 不产生错误信息，但是中止这个程序
3 - 产生错误信息，并中止这个程序

10:39 2012-12-10
GTD
0, 9:40-17:59

1, today
1), 30' reorganize my stuff.
2), 30' 16:32-17:58 test Jim xen4.2 patch. see"10:32 2012-12-07".
nap'

11:32 2012-12-10
software skill, shell, find, search file by size then output
1, using "-printf" format the output
suse@linux-work:~/work/download> find . -type f -size +50M -printf "%p %s\\n"
suse@linux-work:~/work/download> find . -type f -size +50M -printf "%p %s\\n"./kernel/linux-3.3.7.tar.bz2 78958012
./virtualization/VMware-Player-4.0.2-591240.x86_64.rar 129695725
2, using "-exec" to call external command
suse@linux-work:~/work/download> find . -type f -size +50M -exec ls -lh '{}' \;
suse@linux-work:~/work/download> find . -type f -size +50M -exec ls -lh '{}' \;
-rw-r--r-- 1 suse users 76M May 22  2012 ./kernel/linux-3.3.7.tar.bz2
-rw-r--r-- 1 suse users 124M May  8  2012 ./virtualization/VMware-Player-4.0.2-591240.x86_64.rar

10:40 2012-12-11
GTD
0, 9:40-11:52 13:48-

1, today
1), 11:10-11:52 13:48- upstream reply about my reporting bug to xenlight. see"11:16 2012-12-11"

2, daily work
1), tracking xen-arm update. 
2), read libvirt and xen-devel quickly, should less that 30minutes. 

3, next
2), 30' 16:32-17:58 test Jim xen4.2 patch. see"10:32 2012-12-07".
2), test Jim xen4.2 patch. see"10:32 2012-12-07"
3), send console patch. 
4), try xen on kvm. 
5), try build kernel for MK802. 
4), 对于vi不能方便查找keywords这个事情, 实在不能忍了, 如果这周能把managed save和bridge-utils bug fix, 就把这个做一个. 
1), work on lock patch. 
2), try to build MK802 on obs. 
3), CANCEL? search and answer the question from Ian C, maybe i should create a new thread?. ref"10:31 2012-11-25"

3, next week
1), got arm technical symposia pdf. 
2), read kernel doc: "10:36 2012-11-23"
1), read code for patch. see"10:25 2012-11-23"2-2)-(2). 
2), after "1)" finish. try xen on kvm. 
3), read the mail on "Andrew Wafaa <awafaa@opensuse.org>"_email_"[opensuse-arm] Fwd: [fedora-arm] ARMv8 Bootstrap Project"_20121122
3), work on xen on ARM. ref"22:33 2012-11-19"
4), check the error from "10:18 2012-11-15"2
2012-11-15 04:02:45.318+0000: 4307: error : virNodeGetSecurityModel:9567 : this function is not supported by the connection driver: virNodeGetSecurityModel
5), ask jim to invite me to xen irc. 

3, next next
1), gsoc: "22:23 2012-11-17"
1), notes about Huawei from eet-china.
2), read bug:https://bugzilla.novell.com/show_bug.cgi?id=781425 

2, next
1), try to improve attach-disk, detach-disk in libxl driver, see"18:17 2012-11-07"4
2), test attach-disk command. see"10:41 2012-10-30"2
3), maybe libxl and qemu could communicate with qemu through xenstore?

libxl_dm.c: 
        /* Find uuid and the write the vnc password to xenstore for qemu. */
        t = xs_transaction_start(ctx->xsh);
        vm_path = libxl__xs_read(&gc,t,libxl__sprintf(&gc, "%s/vm", p->dom_path));
        if (vm_path) {
            /* Now write the vncpassword into it. */
            pass_stuff = libxl__calloc(&gc, 3, sizeof(char *));
            pass_stuff[0] = "vncpasswd";
            pass_stuff[1] = info->vncpasswd;
            libxl__xs_writev(&gc,t,vm_path,pass_stuff);

3, for Jim
1), xenlight event lock in libvirt. see"16:52 2012-11-06"2-1). 

4, next month
1), opensuse on MK802
(1), generate the 512MB version with opensuse12.2 RC2 which enable yast fist run. 
(2), try opensuse based on ubuntu kernel in order to solve the error from miniand. 
2), try armv8 emulator and read armv8 kernel code.  

11:16 2012-12-11
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont11, deal with xen upstream reply
1, upstream reply. continue from "17:51 2012-11-30"
1), Ian J_20121207
Ian Campbell writes ("Re: [PATCH] fix race condition between libvirtd event 
handling and libxl fd deregister"):
> Can we provide, or (more likely) require the application to provide, a
> lock (perhaps per-event or, again more likely, per-event-loop) which
> must be held while processing callbacks and also while events are being
> registered/unregistered with the application's event handling subsystem?
> With such a lock in place the application would be able to guarantee
> that having returned from the deregister hook any further events would
> be seen as spurious events by its own event processing loop.

I think this might be difficult to get right without deadlocks.

...
> Last half brained idea would be to split the deregistration into two.
> libxl calls up to the app saying "please deregister" and the app calls
> back to libxl to say "I am no longer watching for this event and
> guarantee that I won't deliver it any more". (Presumably this would be
> implemented by the application via some combination of the above). This
> could be done in a somewhat compatible way by allowing the deregister
> hook to return "PENDING".

This is in fact straightforward and is a subset of the existing API.
If we have libxl always call timeout_modify with abs={0,0}, it will
get timeout_occurred when the application's event loop has dealt with
it.  We can simply never call timeout_deregister.

I have implemented this in the 2-patch RFD series I'm about to send.
NB this series has been complied but not (as yet) executed by me...

Ian.
2), Ian C_20121210
> I think this might be difficult to get right without deadlocks.

I took Bamvor's most recent response to mean that a per-event lock was
already in place in libvirt and inferred that this was the reason why
the originally proposed one line fix worked for them. Perhaps I
misunderstood?
3), Ian J reply to Ian_C
Yes, I think that's what Bamvor meant but I don't think it's correct
that such a lock eliminates the race.  libvirt has to release that
lock before making the callback (to follow the libxl locking rules
which are necessary to avoid deadlock).

I'm not surprised that the original patch makes Bamvor's symptoms go
away.  Bamvor had one of the possible races (the fd-related one) but
not the other.
4), Ian_J reply Ian_C
Ian Jackson writes ("Re: [PATCH] fix race condition between libvirtd event 
handling and libxl fd deregister"):
> I'm not surprised that the original patch makes Bamvor's symptoms go
> away.  Bamvor had one of the possible races (the fd-related one) but
> not the other.

Here (followups to this message, shortly) is v3 of my two-patch series
which after conversation with Ian C I think fully fixes the race, and
which I have tested now.

Bamvor, can you test this and let us know hwether it fixes your problem?
5), Jim reply Ian_J
> Yes, I think that's what Bamvor meant but I don't think it's correct
> that such a lock eliminates the race.  libvirt has to release that
> lock before making the callback (to follow the libxl locking rules
> which are necessary to avoid deadlock).
>   
And it does.  The event loop lock is released just before invoking the
callback, and re-acquired just after the callback returns.
2, plan
1), test with Ian J v3 patch to make sure whether it will fix my bugs or not.
and whether it will fix the bug i encounter yestoday.
reply the email at the end of today.

3, reply
Ok. i am working on it.  will send the test result to u.
BTW, without your patches, i encounter the time race condition during libvirt save vm sometimes.

4, compile
the patch is upstream patch, try to build through build service local build.
notes: do not save from web browser, it is malformed. save from email client(my groupwise) is right.
1), fail when I compile for sle11 sp2
bamvor@linux-bjrd:xen> osc build --clean SLE_11_SP2 x86_64
Building xen.spec for SLE_11_SP2/x86_64
Getting buildinfo from server and store to /home/bamvor/sda3/home/novell/work/source/virtualization/libvirt/build_service/home:bjzhang:branches:Devel:Virt:SLE-11-SP3/xen/.osc/_buildinfo-SLE_11_SP2-x86_64.xml
Getting buildconfig from server and store to /home/bamvor/sda3/home/novell/work/source/virtualization/libvirt/build_service/home:bjzhang:branches:Devel:Virt:SLE-11-SP3/xen/.osc/_buildconfig-SLE_11_SP2-x86_64
buildinfo is broken... it says:
unresolvable: conflict for provider of libgcc43, (provider libgcc43 is conflicted by installed libgcc46), conflict for provider of libgomp1 >= 4.6.1_20110701-0.13.9 needed by gcc46, (provider libgomp46 conflicts with installed libgomp43)
2), build with sles11 sp2 update test.
lots of fails. currently fail at
ERROR: link target doesn't exist (neither in build root nor in installed system):
  /etc/xen/scripts/set-lock -> /etc/xen/scripts/vm-monitor


15:23 2012-12-11
virtualization, libvirt, xen, libxl, block stats; qemu, QMP
1, QMP(QEMU Monitor protocol)
http://wiki.qemu.org/QMP
The QEMU Monitor Protocol (QMP) is a JSON-based protocol which allows applications to communicate with a QEMU instance.
Bamvor: it seems a new way for send monitor command to qemu.
2, calling
libxl_cdrom_insert -> libxl__qmp_insert_cdrom -> qpm_run_command
libxl__qmp_xxx and qpm_xxx is implemented in libxl_qmp.c
3, it should be useful for me to implement the block stats in libvirt. i could add this commands in libxl and xl then add it to libvirt.

