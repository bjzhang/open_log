
10:19 2011-1-4
时间管理
0, 9:30

1, 本日
1), 20'+20'+30' 和bianyingfeng讨论VC0718 Cortex-A8 ple.
2), 10' xiaotao clkswitch回信. 
3), 10' 和支持Xiekeyang Linux. 
4), performance monitor 原型coding. 见"15:47 2011-1-4".
5), 感觉今天没有工作状态...，但是自己也不应该太不抓紧时间。

15:47 2011-1-4
VC0882, android, AE, power, performance, performance monior, 续, coding, 续
1, zhaoyuan确认需求
1.       不需要支持多人使用。
2.       时间间隔以10ms为周期累加，真实的统计周期靠start stop之间的间隔决定
3．可以通过shell 输入start stop
bamvor: start, stop之间不会切频. 需要提供sys和clkswitch两套接口.  
2, (20:36 2011-1-5)今天写文档速度超慢, 很多东西想不明白. 
1), 现在在想统计内容是通过结构体返回还是返回某个数据? 
返回某个数据. 
2), 现在是用户需要的数据, 用户配置的数据和统计读出的数据混在一起了. 该怎么处理呢? 是都放在一起, 还是分开?
用户需要的数据可能会变化, 还是单独保存比较好. 后面两个是和硬件相关的, 可以放一起. 也就是把硬件相关和无关的分开放. 

10:13 2011-1-5
时间管理
0, 9:46

1, 本日
1), 45' 阅读《这辈子，只能这样吗？》.见"9:21 2011-1-5".
2), 30' bianyingfeng VC0718 Cortex-A8 ple, 调试总结. 见"10:34 2011-1-5"
3), 20' 发板级调试总结提醒邮件. 见"11:02 2011-1-5".
4), 10' 回复yangmin板级调试邮件. 
5), 5h: 计划用四个小时完成performance monitor文档初稿，后天上午修改并发邮件给zhaoyuan,  bianrongguang.
6), 总结: 今天计划严重delay, 看来晚上要加班. 虽然加了班, 但是code基本没写, 看来明天还要加班. 如果这周没法meeting进度, 下周要和aiguo, beizhan讨论了. 

10:34 2011-1-5
VC0718, Cortex-A8, ple, 总结, 思考
bianyingfeng实验Cortex-A8 ple至少有二周的时间了. 
最后是发现链接脚本中初始化页表地址是1Mbyte, sram也才1Mbyte, 所以绕回了. 
到昨天是bianyingfeng先看到中断mask没有打开, 但是用ICE直接修改寄存器可以打开. 我当时分析说ICE写和arm写一样, 提醒bianyingfeng跟踪汇编代码, 看到汇编和实际代码不一致, 我觉得不可能, 所以和bianyingfeng一起实验, 看到bianyingfeng一开始单步跟踪时的异常跳转指令没有跳转, 才发现是代码不对导致的问题. 之前bianyingfeng做的很多时间都没有意义了. 
但是我当时没有想到是链接脚本的问题. 这个是我很大的疏忽, 当初移植arm环境时其实是知道这一点的. 
感觉自己具体工作做的还是太少, 方法上还是不够注意.

11:02 2011-1-5
VC0882, 板级问题, 总结, 文档, 续, 再发提醒邮件
hi, all

目前只收到fanxiaofan, lvboxue, qiaowei, qiqingchao, wangwenlei, yinxingjie的总结, 希望大家本周完成, 麻烦各manager帮忙督促一下. 
PS: 大家也可以写出板子设计上不合理的地方, 便于后面项目改进. 

hi, beizhan, xuelian
测试同事是否也要写? 现在我一个也没有收到. 

thanks
zhangjian

11:06 2011-1-6
时间管理
0, 9:40

1, 本日
1), 1.5h android AE performance monitor文档, 见"11:19 2011-1-6".
2), 15:49-17:10 20:40-21:55 android AE performance monitor资料搜集和coding准备. 见"11:19 2011-1-6"4开始.
3), 17:24-19:00 882 sv clock.
4), 总结: 本来希望performance monitor能否读出数据, 今天实在来不及了, 目前最简单版本编译通过, 明天先调试这个版本, 然后丰富功能. 

11:19 2011-1-6
VC0882, android, AE, power, performance, performance monior, 续, coding, 续2
1, 进展缓慢啊. 按照"17:21 2010-12-27"的计划. 我应该在3号之前完成performance monitor代码, 这个肯定不可能了, 估计下周可以完成. 
pmu的东西之前zhengwei和wenlei已经讲过, 看起来是DVFS和I2C两个部分要修改. 计划delay一周. 

1月7日前: 完成AE erformace monitor文档. 先把需求定下来. 
1月10日-1月14日: 完成performane monitor代码. 
1月17日-1月21日: 完成pmu代码整理, 周二或周三review一次. 

2, \todo 加入一个调试接口. 每次打印出当前抓到的数据. 
sys文件系统下能否打印大于4k的数据? \todo check. 
内部设计: class0只允许一个模块设置, 如果多个模块设置, kernel直接报错. sys不修改class. 

3, 收集相关论文：
1), dvfs
动态电压与频率调节在降低功耗中的作用[转]
http://hi.baidu.com/airzhutao/blog/item/8686994a096e1c2e08f7ef19.html
可以参考，只是参考文献都在2006年之前。
估计还是可以看看TI是怎么做的。 
2), 
Performance Counters for Linux Wed Jan 13 05:26:47 UTC 2010 
http://tblog29.appspot.com/blog/1004

4, (15:49 2011-1-6)现在这样做还是有点不太放心, 看看TI的DVFS是怎么做的, 里面应该也有类似的performance monitor吧. 
1), TI OMAP3530 power管理功能还是很丰富的. DVFS等多个方法. 
2), 之前老边提到的网站: 
http://elinux.org/OMAP_Power_Management
里面说目前dvfs是根据cpu负载调整频率. 
没有找到我希望知道的bus和ddr的情况. 

5, 下面这篇文章也是说OMAP3530里面只定义了少数几个频点. 
http://processors.wiki.ti.com/index.php/Power_Efficient_System_using_OMAP35x
P-states defined in the Linux PSP for OMAP35x  OPP  ARM Frequency (MHz)  DSP Frequency (MHz)  VDD1 (Volts)  
5  600  430  1.35  
4  550  400  1.27  
3  500  360  1.20  
2  250  180  1.00  
1  125  90  0.95  

6, (16:35 2011-1-6)觉得没法集中精力.
还是写代码吧. 
参考cpufreq, 感觉放在"/sys/devices/system"下面比较合适. 
注册使用"sysdev_class_register"就可以. 参考"drivers/base/cpu.c".
建立目录(drivers/cpufreq/cpufreq.c): 
cpufreq_global_kobject = kobject_create_and_add("cpufreq", &cpu_sysdev_class.kset.kobj);

但是cpuidle里面是这样的(drivers/cpuidle/sysfs.c): 
return sysfs_create_group(&cls->kset.kobj, &cpuclass_attr_group);

7, 看来sysfs目录这个事情一两下也看不清, 先做简单的, 计划今天把cpu, bus, ddrc, de性能参数得到.

8, (21:34 2011-1-6)
1), 初步写了一版, 今天需要编译通过, 明天再调试.
(1), struct定义后没有加",":
/opt/share/zhangjian/development/performance_monitor/code/vc088x_monitor.h:150: error: two or more data types in declaration specifiers
/opt/share/zhangjian/development/performance_monitor/code/vc088x_monitor.h:169: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'bus_clock
(2), 没有include irq头文件:
/opt/share/zhangjian/development/performance_monitor/code/vc088x_monitor.h:178: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'v8monitor_handler'
(3), 函数里面没有参数会提示:
/opt/share/zhangjian/development/performance_monitor/code/vc088x_monitor.h:199: warning: function declaration isn't a prototype
所以没有参数的需要加"void".

11:20 2011-1-7
VC0882, android, AE, performance monitor, design doc review, \todo
1, 整理文档, 下周发出来.
2, 主要增加名词解释, 根据讨论修改接口和使用方法. 
3, 春节前完成即可, FPGA上不使用. 

14:42 2011-1-7
时间管理
0, 9:44

1, 本日
1), 10:10-11:30 android AE performance monitor, design doc review, 见"11:20 2011-1-7".
2), 14:43-16:46 我的工作总结. 见"14:44 2011-1-7". 两个小时, 这是不是有点慢呢? 
3), 16:50-18:40 调试performance monitor, 第一版代码可以工作. 先保证工程正确, 再逐步细化. 见"17:39 2011-1-7".

14:44 2011-1-7
VC0882, 项目安排, 工作, 近期工作总结
1, LiDongLiang邮件"你写个近期工作总结"今日
Zhangjain
你现在事情有些多
我想让顾召辉 进来一起做电源管理相关的事情
帮你分担一些
你总结一下你近期要做的工作，包括年前和年后SV阶段
写完后发给我
我好跟aiguo说

2, 其实这个事情我最近也在想. 参"11:19 2011-1-6".
zhangjian2lidongliang邮件.
我的工作主要是power和zhaoyuan android事情. 
1), 目前已完成的工作. 
(1), 明确了我performance monitor和ddr的工作. 两部分工作已经形成初步文档. performance monitor刚刚开始coding. 
(2), 了解了882 power工作内容. 浏览了power代码. 

2), sv之前的工作: 
(1), android下performance monitor文档需要整理, 完成coding. 预计需要7个工作日. 
提供Linux下ddr进入/退出自刷新代码; 提供clkswitch函数(cpu, bus, ddrc). 这些代码在panda_os下基本是现成的.
(2), 882 power, 我自己感觉这部分还需要3周, 包括代码整理, review和调试时间: 
a, pmu模式转换代码只支持FPGA, 需要完善流程, 支持ASIC, 另外代码也不太规范, 可能需要整理. 
b, DVFS: zhengwei基础代码是有的, 但是没有和7882实际联调过, 如果希望保证sv阶段顺利, 最好在FPGA阶段联调. 
另外DVFS需要提供给系统层的API(包括硬件方式API和软件方式API). 具体API需求还需要和xiaotao, dongliang讨论. 
c, 7882: 7882本身wenlei已经测试过, 只是在ASIC里面I2C由系统I2C改为PMU I2C, 所以需要修改所有I2C读写函数, 基本case测试通过. 

3), sv阶段: 
测试power各项功能, 其中dvfs这部分需要和切频联调, 联调需要IC提供温度, 电压, 频率表格. 预计芯片回来后dvfs工作会比pmu状态切换多. 

4), sv后zhaoyuan andoird工作: 
(1), 在芯片上调试之前代码, 估计ddr问题会多一些.
(2), 需要提供ddr参数, 调试android下切频. 
(3), 尝试系统最高运行频率(cpu, bus, ddr). 这个事情还没有思路. 

5), 其它: 
(1), 之前dongliang, xiaotao确定的系统级测试还没有讨论. 当时需要把clk, ddr, power三个结合在一起测试, 也就是系统在不同的工作点(operation point)之前切换等. 
(2), 板级总结. 我自己的还没有写, 模块的总结也不全. 
(3), arm benchmark初步研究, 之前aiguo要求1月30日前完成. 这个事情我自己还没有思路. 
(4), cache lockdown: pmu模式转换需要cache lockdown api, 由yangxing提供, 不过yangxing最近也比较忙, 可能还要过1-2周才可能, 需要在FPGA上测试pmu状态转换时就用上. 

3, 问题:
882 pmu I2C连接到7882 I2C. 也就是说7882所有I2C寄存器都需要在882 pmu寄存器中有对应寄存器.
bamvor: 和zhengwei讨论, 882还有单独的pmu I2C. 

17:39 2011-1-7
VC0882, android, AE, power, performance, performance monior, 续, debug, 调试第一版代码
1, 加载模块出错: 
# insmod vc088x_monitor.ko
vc088x_monitor: relocation out of range, section 2 reloc 0 sym '__gnu_mcount_nc'
insmod: can't insert 'vc088x_monitor.ko': invalid module format
去掉tracer后:
# insmod vc088x_monitor.ko
vc088x_monitor: module license 'unspecified' taints kernel.
Disabling lock debugging due to kernel taint
vc088x_monitor: relocation out of range, section 2 reloc 0 sym 'free_irq'
insmod: can't insert 'vc088x_monitor.ko': invalid module format
# insmod vc088x_monitor.ko
vc088x_monitor: relocation out of range, section 2 reloc 0 sym 'free_irq'
insmod: can't insert 'vc088x_monitor.ko': invalid module format
这个就和当初wenlei的"relocation out of range"错误类似了. 
2, 怀疑是在kernel目录中编译模块和在单独目录编译模块参数不同. 
先直接编译到内核, \todo 基本代码调试通过后再解决这个问题. 
3, writel(数据, 地址). 又写反了. 
0xC8818000

11:25 2011-01-08
时间管理
0, (在家工作)

1, 本日
为了赶进度, 今天希望把sysfs建立节点这个事情完成. 
1), 11:31-11:45 sysfs文件系统节点和目录的建立, 见"11:31 2011-01-08". 

11:31 2011-01-08
VC0882, android, AE, power, performance, performance monior, 续, sysfs文件系统coding
1, 目的: 
在/sys/devices/system/建立monitor目录, 并加入原本计划加入的目录. 

17:07 2011-01-08
嵌入式, linaro, 相关网址
1, http://www.linaro.org/getting-started
很多视频
http://www.eetimes.com/electrical-engineers/education-training
https://launchpad.net/~linaro-community
2, We are pleased to announce the replacement of our forums by a new "AskLinaro" service.
See http://ask.linaro.org/

10:15 2011-1-10
时间管理
0, 10:00-18:40

1, 本日
1), 10:25-10:42 logAssistant周末改进进展. 见"10:28 2011-1-10".
2), 10:50-11:29 绩效考核. 见"10:51 2011-1-10". 
3), 20' 读书笔记. 见"9:36 2011-1-10".
4), 50' 编写递归搜索脚本. 见"14:30 2011-1-10".
5), 2h: performance monitor: 测试数据是否合理. 调试为什么ko不行. 希望开始写sysfs接口. 见"15:19 2011-1-10". 
6), 30' 支持guzhaohui学习dmac. 

10:29 2011-1-10
软件技巧, 正则表达式, perl, logAssistant, android, sl4a
1, 周末在家的时间
在我的mp4上把logAssistant用起来了. 
1), 问题: 现在不知道怎么和pc上的脚本合并, 似乎android上没法使用perl的其它"库", "use Encode"等会出错. 
2), 为了避免上面说的"use Encode"没法用, 其实也改进了脚本: 如果编码是utf8就不需要调用Encode了. 
3), 调试时发现没法打开output.txt, 后来发现是view要求使用url, 而不是一般perl使用的目录. 
例如"/sdcard/log/output.txt"使用view时应该写为"file:///sdcard/log/output.txt". 这个也可以理解, 因为view是android api.
2, 具体修改如下: 
1), 文件开始不能使用"#!/usr/bin/perl".
2), 使用对话框而不是命令行传参数:
use Android;
my $droid = Android->new();
my $file = $droid->dialogGetInput("log assistant", "please input log filename", "log201101vimicro.txt")->{'result'};
$opt_f = "/sdcard/log/".$file;
#$opt_f = "/sdcard/log/log201101vimicro.txt";
$opt_k = $droid->dialogGetInput("log assistant", "please input keyword", "VC0882")->{'result'};
$opt_i = 1;
$opt_c = $droid->dialogGetInput("log assistant", "please input content keyword", ".")->{'result'};
$opt_o = "/sdcard/log/output.txt";
其中"dialogGetInput"的参数依次是标题, 提示信息和默认值, 默认值可选. 
3), 如前所述, utf8编码不需要转换(这点已经合并到pc版本).
my $keyword_utf8 = Encode::encode("utf8", $keyword);
改为
my $keyword_utf8 = $keyword;
if ( $cur_env_locale eq "gb2312" ) {
    $keyword_utf8 = Encode::encode("utf8", $keyword);
}

10:51 2011-1-10
项目, 绩效考核, 2010全年考核, 2010工作总结, 2011计划
1, aiguo邮件"今日"
send: Feng Bei Zhan; Li Dong Liang; Ling Ming; Cai Jin; Zhang jian; Yin xingjie; Feng lijun; Xie keyang
大家尽快把你和你们team的考核搞定给我！如果有什么不清楚，直接找我！

2, bamvor: 
fenglijun记得是report给yinxingjie的, 看来和xiekeyang情况类似, 只是其他人帮忙带. 
记得上次aiguo还是发给所有人的, 现在已经只发给leader了. 

3, 我的2010工作总结和2011计划:
1), 2010年工作总结
(1), VC0882 FPGA环境准备和稳定性调试.
(2), VC0882 Cortex-A8和Coresight验证, 并支持同事使用.
(3), 在VC0882 bootloader工作中承担clkrst, padc, uart等工作.
(4), VC0882 SV准备, 主要负责power(VC0882 pmu, VA7882)工作.
2), 2011年工作计划:
(1), VC0882 SV验证, 主要负责power(VC0882 pmu, VA7882)工作. 
(2), 参与赵原android team, 承担clk和power中的部分开发.
(3), 继续在VC0882项目, 希望把VC0882的power部分(含clk)做的更好, 充分发挥出VC0882和VA7882自身特色. 
(4), 希望2011更有更多工作集中在Linux kernel/driver中. 

4, 希望的绩效面谈要点, 见"9:29 2010-12-29".

15:19 2011-1-10
VC0882, android, AE, power, performance, performance monior, 续, debug, 续
1, 原计划: 测试数据是否合理. 调试为什么ko不行. 希望开始写sysfs接口
后来想了想, 感觉只要读数据正确, 应该不会不合理. 还是先设计架构, 希望本周周三就能完成所有代码. 
2, ko为什么不行需要优先调试一下. 
对比了在kernel目录和kernel目录外编译的ko, 编译选项完全一样. 
现在没有台子, 等有了台子再试验.
3, 整理架子
1), 更新文档.
(1), 不需要保存每次结果吧．每次中断后，我直接累加了结果．不用.
(2), 已经确认的问题: 之前讨论有个bus利用率=bus ddr数据/bus clock, 这个实际是就是bus的实际带宽. 
(3), 添加: v8monitor_get_max_bandwidth: 得到理论带宽. 
(4), 修改: Data改为efficiency, 表示占总线带宽. 百分比.
2), sysfs下面能否得到当前目录? 
如果可以, 就能很好的和已有接口融合. 
续"11:19 2011-1-6"6进行分析.
show函数会传入"sysdev_class_attribute"这个参数. 
include/linux/sysdev.h
struct sysdev_class_attribute {
	struct attribute attr;
	ssize_t (*show)(struct sysdev_class *, struct sysdev_class_attribute *,
			char *);
	ssize_t (*store)(struct sysdev_class *, struct sysdev_class_attribute *,
			 const char *, size_t);
};
里面包含的"attribute", 可以看到name等信息(include/linux/sysfs.h):
struct attribute {
	const char		*name;
	struct module		*owner;
	mode_t			mode;
#ifdef CONFIG_DEBUG_LOCK_ALLOC
	struct lock_class_key	*key;
	struct lock_class_key	skey;
#endif
};

3), 建立group(最低层目录)
cpuidle_add_class_sysfs()->sysfs_create_group()->internal_create_group()->sysfs_create_subdir()->create_dir()
cpuidle_add_class_sysfs()的参数就是"cpu_sysdev_class".

4), 之前没有想明白如何得到更多级目录. 
刚才又认真看了代码, 发现register_cpu()->sysdev_register(). 后者就是建立我要的marb, ddr这种目录的. 想一想是合理的, sysdev_class_register注册class, 肯定还需要注册设备啊. 我自己应该能想到的.

20:30 2011-01-11
时间管理
0, (本日病假)

20:34 2011-01-11
VC0882, android, AE, power, performance, performance monior, 续, sysfs
1, 希望用一个小时完成sysfs实验.
一个小时很快就过去了. 原本希望用class, device, attribute group这种方式, 看来如果加入了device就会复杂. 
现在没搞清楚, cpufreq里面的"freq_attr"是怎么搞出来的. 

10:01 2011-1-12
时间管理
0, 9:40-17:20

1, 本日
1), 9:40-10:25 和zhicheng讨论VC0718 clk.
2), 30' 和xiaotao讨论VC0882 clk.
3), 14:00-16:21 VC0882 clk review. liuxiaotao, lidongliang. 
4), 1h: 调试performance monitor. 见"16:47 2011-1-12".

16:47 2011-1-12
VC0882, android, AE, power, performance, performance monior, 续, sysfs, debug
1, 断点
break calibrate_delay
break vc088x_sysfs_init

2, 调试
1), 注册ddr有问题:
sysdev_class_register ret is 0
;sysdev_register(&marb_device) ret is 0
;<4>------------[ cut here ]------------
WARNING: at fs/sysfs/dir.c:462 sysfs_add_one+0x3c/0x44()
sysfs: duplicate filename 'monitor-1' can not be created
Modules linked in:
[<c002e458>] (dump_stack+0x0/0x14) from [<c004d030>] (warn_slowpath+0x74/0x88)
[<c004cfbc>] (warn_slowpath+0x0/0x88) from [<c00e81a0>] (sysfs_add_one+0x3c/0x44)
 r3:c7877c60 r2:c030c414
 r7:c7817e8c r6:c789a608 r5:c789a5a8 r4:ffffffef
[<c00e8164>] (sysfs_add_one+0x0/0x44) from [<c00e87f8>] (create_dir+0x58/0xa0)
 r5:c7817e58 r4:c789a5a8
[<c00e87a0>] (create_dir+0x0/0xa0) from [<c00e8888>] (sysfs_create_dir+0x48/0x5c)
 r7:c0350bc4 r6:00000000 r5:c0350bc4 r4:c0350bc4
 [<c00e8840>] (sysfs_create_dir+0x0/0x5c) from [<c0182050>] (kobject_add_internal+0xc8/0x1a0)
 r4:c0350bc4
[<c0181f88>] (kobject_add_internal+0x0/0x1a0) from [<c0182218>] (kobject_add_varg+0x44/0x50)
 r8:00000000 r7:c0350bc4 r6:00000000 r5:c0350bc4 r4:00000000
r3:c78d98c0
[<c01821d4>] (kobject_add_varg+0x0/0x50) from [<c018225c>] (kobject_init_and_add+0x38/0x40)
 r6:c0350bc4 r5:00000000 r4:c0350bc4 r3:c7817f18
[<c0182228>] (kobject_init_and_add+0x4/0x40) from [<c01b3dcc>] (sysdev_register+0x68/0xe4)
 r5:c0350bbc r4:c0350b48
[<c01b3d64>] (sysdev_register+0x0/0xe4) from [<c0035e28>] (vc088x_sysfs_init+0x60/0xa8)
 r8:00000000 r7:00000000 r6:c0035dc8 r5:00000000 r4:00000001
[<c0035dc8>] (vc088x_sysfs_init+0x0/0xa8) from [<c00292c4>] (do_one_initcall+0x6c/0x1c0)
 r4:c002453c r3:00000000
[<c0029258>] (do_one_initcall+0x0/0x1c0) from [<c0008414>] (kernel_init+0xa0/0x1
10)
 r8:00000000 r7:00000000 r6:00000000 r5:c0024370 r4:c002453c
[<c0008374>] (kernel_init+0x0/0x110) from [<c005030c>] (do_exit+0x0/0x664)
 r5:00000000 r4:00000000
---[ end trace 1b75b31a2719ed1d ]---
kobject_add_internal failed for monitor-1 with -EEXIST, don't try to register things with the same name in the same directory.
[<c002e458>] (dump_stack+0x0/0x14) from [<c01820f4>] (kobject_add_internal+0x16c/0x1a0)
[<c0181f88>] (kobject_add_internal+0x0/0x1a0) from [<c0182218>] (kobject_add_varg+0x44/0x50)
 r8:00000000 r7:c0350bc4 r6:00000000 r5:c0350bc4 r4:00000000
r3:c78d98c0
[<c01821d4>] (kobject_add_varg+0x0/0x50) from [<c018225c>] (kobject_init_and_add+0x38/0x40)
 r6:c0350bc4 r5:00000000 r4:c0350bc4 r3:c7817f18
[<c0182228>] (kobject_init_and_add+0x4/0x40) from [<c01b3dcc>] (sysdev_register+0x68/0xe4)
 r5:c0350bbc r4:c0350b48
[<c01b3d64>] (sysdev_register+0x0/0xe4) from [<c0035e28>] (vc088x_sysfs_init+0x6
0/0xa8)
 r8:00000000 r7:00000000 r6:c0035dc8 r5:00000000 r4:00000001
[<c0035dc8>] (vc088x_sysfs_init+0x0/0xa8) from [<c00292c4>] (do_one_initcall+0x6c/0x1c0)
 r4:c002453c r3:00000000
[<c0029258>] (do_one_initcall+0x0/0x1c0) from [<c0008414>] (kernel_init+0xa0/0x110)
 r8:00000000 r7:00000000 r6:00000000 r5:c0024370 r4:c002453c
[<c0008374>] (kernel_init+0x0/0x110) from [<c005030c>] (do_exit+0x0/0x664)
 r5:00000000 r4:00000000
sysdev_register(&ddr_device) ret is -17

我强制把这个ret改为0, 实验注册attribute group, 目录有问题。
/sys/devices/system/monitor/monitor-1/cpu

11:28 2011-1-13
时间管理
0, 9:55-18:50

1, 本日
1), 上午不知干啥了.. 
2), 下午1h: 和aiguo绩效面谈. 见"9:29 2010-12-29"3.
3), 16:00-18:45 ICP 年终总结会.

15:46 2011-1-13
项目, 考核, 年终总结会
1, aiguo邮件, send: Feng Bei Zhan; Li Dong Liang; Cai Jin; Ling Ming; Zhang jian; Yin xingjie; Shu Yu; liao zhicheng
如果明天下午没有特别的事情，我们明天下午4点开始开年终总结会，manager和我们team核心员工参加，核心员工可以写点自己的总结，也可以不写，形式自由！如果晚上没有什么事情，晚上请大家吃饭。希望大家考虑几件事情：
1) 2010年的总结，总结自己做的最好的三件事情，做的不太好的三件事情
2) 2011年的计划，给出自己11年最希望解决的三件事情，或者希望达成的三件事情；
3) 对team的建议和意见，包括我本人的建议和意见，最好三条；
4) 对公司的建议和意见，包括yinong本人的建议和意见，最好三条；
5) 讨论team发展方向，达成什么样的目标；
6) 个人的发展方向，期望，目标，可实现性等；
7) 等等，大家补充。

2, 我自己的总结: 
1) 2010年的总结，总结自己做的最好的三件事情，做的不太好的三件事情
好: 882环境, arm和coresight验证, log工具重写.
不好: 882 bootloader clk; 计划不好; 沟通或表达能力欠缺. 
2) 2011年的计划，给出自己11年最希望解决的三件事情，或者希望达成的三件事情；
882和kernel power. 
模拟器. 
希望trace没问题. 
3) 对team的建议和意见，包括我本人的建议和意见，最好三条；
team buiding; training; 
平时也要多交流. 
多给大家思考的时间. 对于刚毕业的人来说, 需要多思考, 有时总是被别人带着做会把他自己限制住. 例如yangxing(不提名字?)的毕业论文, 他会觉得没东西可写. 
4) 对公司的建议和意见，包括yinong本人的建议和意见，最好三条；
做新的AP. 手机/MID市场机会很多, 像三系列做成系列才能有市场. 
同时开始研究Cortex-A9/A15, 如果还要做消费电子, 肯定要用. 
882遇到的一大困难就是预研不够. 
对每个人的发展: 每天有一小时做长远的事, 思考. 
5) 讨论team发展方向，达成什么样的目标；
担心做成小而全, 现在铺的比较开. 
6) 个人的发展方向，期望，目标，可实现性等；
技术. Linux kernel. 
7) 等等，大家补充。

bamvor: 会上beizhan对我提出一个希望. 我有时兴趣太广, 希望安排好时间, 不要影响项目. 

3, lidongliang邮件_今日
2010年度总结
aiguo
1. 亮点：
	- 梯队成型
	- 承担最重要的两个项目：882,718. 并得到大家的认可
	- 2010年半只脚跨入系统级设计
2. 暗点：
	- 管理没有跟的上
	- 创新不够。技术/管理突破不多
	- 凝聚力不如以前
3. 2011 年心愿
	- 882 顺利量产，特别希望能体现我们team 能力的地方做好
	- 718 能够顺利进入产品研发阶段，更进一步
	- 增强团队的凝聚力，战斗力

caijin
1. 亮点：
2. 暗点：
	- 以前做IP的验证，现在做DSP的验证，按照旧思路验证功能，没有重视接口的验证
	- 技术方面积累比较有限
	- 工作方式缺少计划性
3. 三件事
	- 718 做好
	- linux 玩好，希望能对底层有全面认识
	- 带好 team 
4. 对aiguo建议
	- 有压力时顶，有好处争
5. 对yinong建议
	- 更多的支持员工/部门的发展
6. 部门发展
	- 向ICV学习，方法学探索等。我们目前凭以前的经验在做。
    bamvor: 方法上的改进, 如何做测试覆盖, 如何验证一个芯片? 
	- 希望部门在linux 方面积累更多经验
7. 个人发展
	- 技术角度
		- arm
		- 编解码
		- linux
		- 工具的研究

lingming
1. 亮点
	- video 入门
	- usb 更多了解
	- 管理上入门
2. 暗点
	- 自己负责的模块有些bug
	- 管理上不够成熟。好的方法没有坚持下来
	- 时间管理做得不好。有不少的事情可以让别人做
	- 别人的方案没有细看
3. 2011年
	- 718 顺利进行
	- linux 上的研究
	- 项目及时间管理做得更好
4. team 意见
	- 矩阵式管理做得更好。大项目拆成子系统。
5. aiguo建议
	- 多组织学习管理方面内容
6. 公司建议
	- Yinong 和Dave 不要太专注于技术
7. team 发展方向
	- android 或者监控要上层次
8. 个人发展
	- linux
	- 管理

beizhan
1. 亮点
	- 882 的顺利tapeout。在一段时间（一个月）内验证进度超过ICV，yinong 表示认可
	- 放弃了530，380
	- soc 系统了解的更多
2. 暗点
	- 思路窄。DE的大屏测试没有开展起来，后来在guye的提议下做了
	- 放弃了EMI burst。减少了882 的亮点。当时争取一下可能能做起来	
	- 没有深入到部分模块，例如gpu
3. 2011年期望
	- 882 上量看到我们做的东西。
		- 上量时要体现我们的价值。抓重点
	- schedule 的定义要更加准确。要有自己的判断
4. 个人期望
	- linux/android 学习
	- 产品的全部流程走一遍
5. 部门建议
	- delay 并非是必不可取的，需要反过来看问题
	- 系统及产品要更多的关心。要有自己的注释及意见在里面
6. Yinong建议
	- 细节把握太多
	- 对市场了解太少
	- IC2 与其它team的平衡
7. Aiguo建议
	- 与其他人的区别在哪里？关心的重点在哪里？

shuyu
1. 2011 年期望
	- linux/android 学习
	- 了解bootloader
	- 598 奖金第二笔

zhangjian
1. 亮点
	- 882 环境
	- arm 验证
	- 日志工具
2. 不足
	- 882 bootloader clock 
	- 具体的工作安排的不是很合理
	- 表达
3. 希望
	- 882 power
	- 882 中的trace 应用
	- 模拟器的研究及应用
4. team 建议
	- 给大家更多的思考时间
5. 公司建议
	- 产品的规划，roadmap
6. 项目建议
	- 产品的预研
	- 给每个人每天都留出来一个小时的时间。创新性的内容。
	- 产品铺得太开，是否不利于产品的发展
7. 个人发展
	- 技术深入发展，着重模拟器

xingjie
1. 不足
	- 882 CIF 中的两个BUG
	- 希望能至始至终的做完项目
2. 亮点
	- 加强文档
	- nucleus 验证中video 系统级部分形成框架
	- 深入到技术细节
3. team 建议
	- 2010年扩展较快。如何逐步提高team的技术水平
	- 团队文化：挑战困难，迎难而上
		- Yinong评价：狼群战术
4. aiguo 建议
	- 新人对公司了解不足。与新人多交流，鼓舞士气。
5. Yinong 建议
	- 遵守既定政策。
6. 公司建议
	- 继承性不强
7. 2011希望
	- 了解监控产品
	- 了解linux驱动，sdk


zhicheng
1. 不足
	- 表达不足
	- 心不够静
	- 不会推事情
2. 对公司建议
	- 高深的东西但没赚到钱。别人很简单的产品却赚了很多钱。			
3. aiguo建议
	- 队伍大了，怎么充分利用资源做些事情。
4. Yinong建议
5. 2011期望			
			
			
lidongliang
1) 2010年的总结，总结自己做的最好的三件事情，做的不太好的三件事情
	- 做的好的三件事
		- 598 SV 验证及量产的顺利进行；
		- 882 bootloader 的按期完成；
		- linux/android 的学习及研究；基本入门。
	- 做的不好的三件事
		- 598 SV 中遗漏的biu bug；
		- 882 bootloader；
			- review过程中部分内容不够细致，例如ddram；
			- 对仿真的促进不够有力，导致一些问题遗留到后面才得以解决；
		- 与大家的沟通还不够充分。种种原因，沟通基本限于工作相关的几个人，与部门其它同事沟通不足；
2) 2011年的计划，给出自己11年最希望解决的三件事情，或者希望达成的三件事情；		
	- 882 SV验证及量产的顺利进行。尤其是我们负责的功耗，时钟，ddr部分
	- 真正的熟悉 android 系统，包括整体架构，重要模块原理等。
	- 为部门技术发展做出应有的贡献。例如linux/android 培训等。
	- 带好team，保持旺盛的士气。
3) 对team的建议和意见，包括我本人的建议和意见，最好三条；		
	- team building。个人建议频率高一些，例如2月一次，每次花较少的钱，办较多的事，吃饭，打牌即可。
	- aiguo 如果有时间，定期与工程师都谈一谈。例如3个月一轮？。aiguo的意见对工程师影响很大，而且非常鼓舞士气。
	- 
4) 对公司的建议和意见，包括yinong本人的建议和意见，最好三条；		
	- 奖金按时发，不要拖欠，不要找茬克扣。否则很影响公司在员工心中的形象。
	- 
5) 讨论team发展方向，达成什么样的目标；		
	- 大力加强team 研发能力，经常性的training。
	- 往上层发展，做更多的事情，承担更多的责任。
	- 更多的接触市场，接触客户，逐渐能在一定程度上把握住产品的方向。
6) 个人的发展方向，期望，目标，可实现性等；		
	- 深入的技术研究，尤其是android/linux。
	- 带领team 做好公司的项目，为公司做出更大的贡献。
	- 在管理上希望能做的更好些。

10:21 2011-1-14
时间管理
0, 10:00-18:35

1, 本日
1), 30' 时间管理: 整理上下班时间. 写昨日工作. 看邮件. 今日计划.
被2)打断
2), 20' 和xiaotao, dongliang讨论VC0882 clk测试. 
3), 11:05-11:38 14:25- performance monitor必须完成第一稿, 可以把关键模块数据读出. 
4), 10' 和fuyali讨论VC0882 pmu testplan. 
5), 30' 环境支持: bianyingfeng/qiaowei: VC0718 usb模块使用0x80000000地址有问题, yangmin: VC0718 rvdebugger无法连接(一个板子有问题, 一个板子没问题), caijin: 汇编和c语言单步执行结果不同, 前者正确, 后者错误. 

11:13 2011-1-14
VC0882, android, AE, power, performance, performance monior, 续, sysfs, debug, 续
1, 续"16:47 2011-1-12". 
之前有问题是因为sysdev_register只能注册为class名字的编号. 例如monitor0, monitor1...
看来需要参考cpufreq里面: 
	cpufreq_global_kobject = kobject_create_and_add("cpufreq",
						&cpu_sysdev_class.kset.kobj);
修改后目录正确, 但是cat没有反应. 
2, "14:46 2011-1-14"开始以为是没有加"\n"结束. 后来发现不是. 
难道是因为没有注册device? 这样就比较复杂了.
参考cpuidle\sysfs.c里面
static SYSDEV_CLASS_ATTR(current_driver, 0444, show_current_driver, NULL);

SYSDEV_CLASS_ATTR定义(include/linux/sysdev.h):
#define SYSDEV_CLASS_ATTR(_name,_mode,_show,_store) 		\
	struct sysdev_class_attribute attr_##_name = 		\
		_SYSDEV_CLASS_ATTR(_name,_mode,_show,_store)
不行就把class注册改为"kobject_create_and_add"试试. 
改为为"SYSDEV_CLASS_ATTR"可以. 
(15:45 2011-1-14)改为宏定义后有问题. 
#define MARB_PORT_STATICS(_point_name)                                  \
static ssize_t show_##_point_name##_rclass(struct sysdev_class *class,  \
                           struct sysdev_class_attribute *attr, \
                           char *buf)                           \
{                                                               \
        return sprintf(buf, "%s rclass test\n", #_point_name);  \
}                                                               \
static SYSDEV_CLASS_MODULE_ATTR(##_point_name##, rclass, 0444, show_##_point_name##_rclass, NULL)
改为: 
#define MARB_PORT_STATICS(_point_name)                                  \
static ssize_t show_##_point_name##_rclass(struct sysdev_class *class,  \
                           struct sysdev_class_attribute *attr, \
                           char *buf)                           \
{                                                               \
        return sprintf(buf, "%s rclass test\n", #_point_name);  \
}                                                               \
static SYSDEV_CLASS_MODULE_ATTR(_point_name, rclass, 0444, show_##_point_name##_rclass, NULL)
错误信息: 
arch/arm/mach-omap2/vc088x_sysfs.c:50: error: pasting "(" and "cpu" does not give a valid preprocessing token
arch/arm/mach-omap2/vc088x_sysfs.c:50: error: pasting "cpu" and "," does not give a valid preprocessing token
因为宏"SYSDEV_CLASS_MODULE_ATTR"里面也会做替换, 如果再加"##"做替换, 相当于需要"##cpu##"替换, 这样就错了. 

11:23 2011-1-14
软件技巧, vi, 替换, 从当前行开始替换后面5行(也就是一共替换6行)
如下命令给当前行开始的6行加入注释符号"//".
":.,+5s/^/\/\//g"

14:53 2011-01-15
时间管理
0, 在家工作

1, 本周总结和下周计划
自己对于时间掌控还是很不够.
这一周很快就过去了, 请假时间一共一天半. 绩效面谈占了半天. 882 clk讨论用了半天, 支持其他同事估计也有半天时间. 实际工作时间只有2天。
看起来李妈妈在的时候应该多加一些班, 这样也许才能从容一些.
按理说还是可以完成performance monitor工作的 .这部分工作本身也由于sysfs不熟悉进展慢一些, 至少还需要两天才能完成. 
还要考虑下下周年会会担误时间.

本周周未看882 power code. 
下周安排:
确认周一上午是否需要请假. 
周一, 周二上午给882 power.
周二下午把performance monitor文档发给zhaoyuan team. 
周三周四完成performance monitor初版.
一天时间留给882 clk, 支持和杂事.
中午时间看linux/android clk and power.

8:51 2011-1-17
VC0882, SV准备, power, pmu, code分析和改进
1, pmu初始化需要配置pmu I2C addr register.
2, question: 
1), pmu get wake up id: same basefunc for different wake up source?
3, dvfs似乎只实现了软件方式. 
4, pmu相关中断:
IntrHigh, IntrLow是为了对应interrupt里面64bit中断的高32位和低32位中断寄存器. 应该用interrupt模块的接口. \todo 修改. 
5, mode transition需要与mas流程对比. 从idle开始. 
(1), idle没问题.
(2), halt, 见代码"VIM_PMU_NormalToHalt". 
A, 阅读代码并注释: 
    // 1 Software：保护现场
    //bamvor: 系统没有掉电, 应该没有现场需要保护. 
    //至少cpu没有现场要保护. 如果有掉电的模块(vcodec, gpu), 需要保护该模块的现场. 
    // 2.1 在确保各个AXI master都处于IDLE状态后
    //bamvor: 这个应该可以通过查询各模块状态得到, 问题是是否需要呢? 
    //如果只是测试pmu基本功能不需要, 如果希望确认系统halt切换是否正常, 还是需要的. 
    //可以作为第二阶段任务. 
    // 4 Software把后面要执行的指令放到Cache里，并准备从Cache执行
    // L2 Cache 1 way = 16k
    //bamvor: \todo 依赖yangming cache lockdown程序. 

    // 5 Software 在Cache里执行下面的指令：
    //VIM_PMU_CpuIcachePrefetch((int)_VIM_PMU_Halt, 1024);
    //bamvor: HaltIntoAndExitSelfRefresh函数需要找zhengwei, beihua, yanglei确认
    //asic和fpga有无差异. 

    // 6 PMU Hardware: disable XCLK to PSO

    // normal to halt end!!!!
    //bamvor: 后面还有步骤, 需要对照前面, 做反向操作, 
    //1), 产生pll, cpu, bus, ddr等模块的clkswitch, 
    //2), vcodec/gpu的重新上电
B, \todo: 除了ddr进入selfrefresh需要确认, 其余代码没有大问题. 
C, \todo: 思考_确认: 从normal到halt时, pso没有掉电, 但是pmu域不会给pso域提供xclk时钟, 是否此时pll就没法工作了(因为xclk从有到无再到有, pll是模拟电路, 是否有问题?), 如果是模拟电路有问题, usbphy, ddrphy也都没法工作. 
D, 降低功耗的方法: 如果在vcodec和gpu不使用时, 关闭电源或降低电压gate clk, 功耗应该可以再下降一些. 具体是关电话还是停时钟, 可能要看模块初始化复杂程序, 像vcodec驱动是自己写的, 应该比较容易. 不论是关电源还是停时钟, 都可以在data abort里面检测到并打开.
a, 这两个模块在panda_os里面可以用, 在android里面可能不好做, 将来对比panda_os和android功耗可以考虑这些因素. 
b, 例如android里面关闭屏幕且播放mp3时就可以关闭这两个模块. 
(3), sleep
normal2sleep和normal2halt代码差异只在wfi之前有一个PMU_DDRPHY_LP_ENABLE=1(使ddrphy进入low power模式).
这两部分代码是否和合并? 如果合并需要确保搬移到cache/sram时可以完整搬移, 没有遗漏. 

9:59 2011-1-17
时间管理
0, 9:30-15:15

1, 本日
1), 40' 11:35-12:05 882 pmu, code分析和改进. 见"8:51 2011-1-17".
2), 30' 支持zhicheng VC0718 bootloader: 不用timer直接用arm delay行不行? 如果icache和btb开关确定可以. 但是timer还有get current time的用法, 这个用arm难以准备得到. 
3), 60' 邮件, 杂, 业内动态(www.eetimes.com). 
4), 20' VC0882总结(tapeout至今), 见"11:27 2011-1-17"

11:27 2011-1-17
VC0882, 总结, tapeout至今
1, Fengbeizhan邮件:
在882里的人员，请简单总结一下最近从tape out 到现在的工作情况，简单总结一下，然后尽快发给我。
2, zhangjian总结:
1), 已完成工作
(1), VC0882 FPGA总结;
(2), VC0882 power文档和代码阅读, 本周二讨论具体工作. 
(3), zhaoyuan AE工作: 和zhaoyuan team同事讨论我的工作(arm, ddr, clkswitch, performance monitor). 开始做performance monitor coding, 预计还需要4天完成coding和debug.
2), 下一步工作: 
(1), VC0882 power: 加入ASIC code, 讨论和完成dvfs相关代码(包含和clkswitch的联合测试).
(2), performance monitor coding and debug: 四天. 
(3), 最近时间很近, 板级调试总结没怎么做. 等882 power差不多了再开始. 

9:55 2011-1-18
时间管理
0, 9:42

1, 本日
1), 10:10-10:50 VC0882 power讨论. 见"10:01 2011-1-18".
2), 14:00-16:20 17:xx-18:20 VC0882 sv testplan review. 见"16:31 2011-1-18".
3), 总结: 原本计划下午给zhaoyuan发文档, 现在要做testplan review. 本来计划抽时间给zhaoyuan team发文档, 但是中间好像是看VC0882 power, 所以没有完成。

10:01 2011-1-18
VC0882, SV准备, power, pmu, code分析和改进, 续, meeting minutes
1, 按功能划分:
1), pmu模式转换:
(1), power on/down: ok. 需要了解sv板子和evb板(不急)的上电流程. 
(2), idle: ok
(3), halt, sleep: 流程不完整, 加入asic与fpga差异代码. 
2), pmu dvfs: 
(1), I2C读写接口需要支持硬件和软件两种方式. 尽量使用硬件方式. 
FPGA阶段硬件方式做过单独测试没有和7882联调, 所以联调是重点. 
(2), dvfs只实现了软件方式. 需要增加硬件方式. 提供两组api. 
pmu部分dvfs测试只调整电压. 调压调频在系统级测试中过. 
3), 7882功能本身应该都没有问题. 暂时只看882用到的部分. 
2, meeting minutes:
1), 需要sv板电路图.
2), 进入/退出自刷新函数. 给halt和sleep使用. lidongliang
3), 本周zhangjian完成: pmu代码框架. 
4), 预计下周一, 二讨论:
(1), review pmu, clk, ddr api. 
(2), power, clkswitch, ddr系统级单独讨论. 
3, 问题:
1), replica的确需要切频到和目标频率一致的值. 

11:33 2011-1-18
arm bench mark资料
1, 附件中代码是arm提供的测试代码, 里面speed_indicative是测试速度的, power_indicative和power_indicative_max是测试功耗的(我感觉也可以做为bench mark的参考)

2, 我之前搜集的资料("20:01 2010-4-16"), 2比较有用, 我记得当时zhangpu用里面提到的nbench测试过. 
1), Java: 基于ThumbEE JIT的dalvik比普通dalvik性能提升1.7倍: 
http://code.google.com/p/0xdroid/issues/detail?id=56
2), OMAP3530 benchmark: 一个博主的OMAP3530与x86, arm9, arm11性能比较. 包括整数和
浮点(NEON)测试: http://forum.linuxbj.com/node/9
3), 一个基于android的性能测试, 包括2D, 3D, Web Browser, JavaVM(Dalvik)等等:
http://code.google.com/p/rowboat/wiki/Benchmarks

3, yangxing搜集的资料, yangxing邮件: 
是用\\10.0.2.36\sqmshare\share\主流Mid评测_ICP\android常用软件包\性能测试软件 里面的bench mark吗？这里面有我找的好几个主流测试软件。
bamvor: 目录是"\\10.0.2.36\sqmshare\share\主流Mid评测_ICP", 里面有评测资料. 

16:31 2011-1-18
VC0882, SV准备, testplan review, clk, ddr, pmu, audio
1, clk
1), AE希望在gpu运行时动态切gpu频率. 
ZJ: 当时我们说和模块owner讨论一下, 看看复杂程度. 因为现在事情多, 时间紧. 
2), 确定了cpu, bus, ddr, gpu频点. 
2, 系统级测试
1), 希望clk, pmu, ddr做系统级测试, 包括clkswitch, normal<->sleep, 多个master对ddr访问. 
ZJ: 这个之前咱们一直说讨论还没来的及讨论. 要不要今天和AE敲定需求. 
3, ddr
1), 优先测试ddr3, 后面测试lpddr和ddr2.
2), beihua: ddr training大约需要几千个cycle, 也就是x0us量级. 

12:03 2011-1-20
时间管理
0, 9:52

1, 本日
1), 10:00-10:30 11:20-12:03 14:30-16:09 rvdebugger文档整理. \todo 继续. 
2), 10:30-11:05 给ICD training rvdebugger使用.
3), 50' VC0718 bootloader讨论. 
4), 10' 日志整理. 
5), 16:20-17:04 飘过.  

10:09 2011-1-25
VC0882, SV准备, clk, power, liuxiaotao, zhangjian工作讨论
1, zhangjian power工作安排；
支持xiaotao环境调试. 写power代码. 
2, 882 panda_os sv环境(liuxiaotao)。
1), 882 sv需要512M memory, 目前只支持256M, 可以参考718修改.
2), 
	VIM_UART_HwInit( UART_AASP_CUR_NUM, 115200, 0, 0, 0, 0, 0 );
	VIM_PADC_Init();    // wangzhengwei update @210-06-03
	VIM_CLKRST_Init();
改为
	VIM_CLKRST_Init();
    VIM_UART_HwInit( UART_AASP_CUR_NUM, 115200, 0, 0, 0, 0, 0 );
VIM_PADC_Init();应该不需要. 尽量在后面模块init做. 
3), VIM_CLKRST_MoudleInit()讨论
(1), 注释: VIM_CLKRST_ModuleDisableALL. 
(2), 确认Stor_Peri_clk_gt有没有开. 注意切频流程: 关--切频--开. 
(3), 确认MODULE_ACLK用法. 
(4), 确认模块默认是否有没有变化:
确保uart, timer等最小系统和sd模块时钟正确.
(5), 发所有模块的默认频率. 
4), sv宏. 
发信提醒. 编译加"-sv", 去掉"-define=XCLK_48MHZ=1".
5), 模块时钟打印: 加入模块时钟状态(开/关).

11:19 2011-1-25
时间管理
0, 9:40

1, 本日
1), 1h: 讨论VC0882 sv准备工作, 见"10:09 2011-1-25".
2), 请假.
3), 整理日志.
4), 关注android, 实验android模拟器.
5), 40' 更新performance monitor文档. 感觉写的还是不太顺, 明天修改后再发给zhaoyuan. 
6), 80' 支持yangxing, liaozhicheng. 40' yangxing调试VC0718 emi bootloader; 40' liaozhicheng VC0718 bootloader. 
7), performance monitor coding.  见"18:22 2011-1-25".
8), 总结：放了四天假，今天第一天上班，效率凑合。

18:22 2011-1-25
VC0882, android, AE, power, performance, performance monior, 续, coding
1, 把monitor和sysfs代码合并. 
又遇到"does not give a valid preprocessing token", 参考"17:56 2008-6-3"修改, 
把
static SYSDEV_CLASS_MODULE_ATTR(_point, ##_ch##_attr, 0444, show_##_point##_##_ch##_attr,  store_##_point##_##_ch##_attr)
改为
static SYSDEV_CLASS_MODULE_ATTR(_point, _ch##_attr, 0444, show_##_point##_##_ch##_attr,  store_##_point##_##_ch##_attr)
2, 预处理通过, 结果:
arch/arm/mach-omap2/vc088x_monitor.c:12: warning: initialization from incompatible pointer type
3, (9:04 2011-01-26)已经修改了其它错误，只剩下上面这个warning了。
4, (14:45 2011-1-26)发现是因为2.6.29和2.6.35里面sysdev_class_attribute定义不同: 
2.6.29定义: 
struct sysdev_class_attribute {
        struct attribute attr;
        ssize_t (*show)(struct sysdev_class *, char *);
        ssize_t (*store)(struct sysdev_class *, const char *, size_t);
}
2.6.35.3定义: 
struct sysdev_class_attribute {
	struct attribute attr;
	ssize_t (*show)(struct sysdev_class *, struct sysdev_class_attribute *,
			char *);
	ssize_t (*store)(struct sysdev_class *, struct sysdev_class_attribute *,
			 const char *, size_t);
};
内核版本参见"15:11 2008-5-13"6. 

12:52 2011-1-26
时间管理
0, 10:12

1, 本日
1), 30' 13:40- debug performance monitor. 
2), 60' 和fandong讨论VC0882筛片程序(clk, power). Linux可执行程序.
3), 30' 和yangxing讨论VC0718环境. 疑似CF code问题导致软件执行错误. 

15:06 2011-1-26
VC0882, VC0718, arm, 链接脚本差异造成718 ple测试出错
882 arm L2 ple测试页表地址较大查过了718 sram的范围, 然后地址绕回. 现象正好是从0x0地址都是页表. 

10:57 2011-1-27
时间管理
0, 9:50

1, 本日
1), 10:58-12:05 performance monitor文档修改. 见"11:08 2011-1-27".
2), 今天要完成performance monitor第一版. <实际未完成>
3), 下周开始写power代码. 

11:08 2011-1-27
VC0882, android, AE, power, performance, performance monior, 续, 文档修改和coding
1, 写文档中遇到疑问: 
ddr utilization = active cycle / total cycle. 这个值到什么情况需要切频呢?
看shuyu的performance monitor, 从60%-70%到9x%都有. 
2, (15:44 2011-1-31)当时和1月28日写代码的目的是试通基本的使用通路. 
就是enable, trigger后可以得到正确的数据. 下一步计划是用户空间可以读到各个数据. 

15:59 2011-1-27
VC0882, SV准备, ddr参数
1, lidongliang今日邮件.
由于我们的bootloader 中通过strap pin 可以选择4种频率
8 strap_pin[14:13] 2
 选择PLL:CPU:ACLK:PCLK/DBG 的时钟频率
 00: 时钟0(使用PLL6，480_240_120_60 MHz)
 01: 时钟1(使用PLL6，480_60_60_60 MHz)
 10: 时钟2(使用PLL6，480_480_160_80 MHz)
 11: 低时钟，使用xclk
如果不使用xclk， PLL的时钟是480 MHz
Cpu，bus，ddr都会挂载到pll6上
给ddr 的频率能提供 160,120,240 共计三种
我们可以先调试160，和 120 两种
需要你相应的准备好ddrc的配置参数
附件是xiaotao 在前面邮件中提到的文件
你可以参考着设计
具体ddrc的型号和链接方式你应该清楚吧
任何问题，随时讨论

2, zhangjian回复邮件
我不太明白为什么用这两个频率，ddrc的频率不是要通过512info配置么？
另外根据beihua提供的ddr3特性，0-125MHz是dll off的范围。300M以上是正常工作频率。125-300MHz应该可以在dll on下工作，但是需要调试。
这样120, 160两频率其实都不是ddr3颗粒的默认工作范围。再说beihua也不敢说dll off一定没问题。
所以我感觉从ddr3颗粒角度看先用一个300MHz以上的频率似乎更为保险。
当然这个可能是对ddr3了解较多的人比较了解，例如beihua。

3, 后来和dongliang讨论, 原因如下:
beihua自己提出的是166和100Mhz. 
dongliang希望是先不使用512info, 因为使用512info要求sd/nand是正确的. 使用120和160两个频率可以直接利用已有的pll频率. 

19:40 2011-1-27
VC0882, SV, 环境调试
1, bootloader有打印. 
除了xclk以外的频率都在配置时钟时出错。xclk情况下可以启动到usb boot。
2, beihua改写ddrc 26Mhz脚本。
3, lvhaifang量pll供电正常。
4, clk umonitor, from liuzixi今日邮件
xclk_out1: 
bit[24]@60051000 = 1'b0
bit[25:24]@60050000 = 2'b11
um: 
bit[15:14]@60051320=2'b00
bit[31:0]@60051340=32'haaaa_aaaa                                   KEYPAD[15:0] used as umout[31:16]
um_ctrl :  @600510f0
5, dongliang比较了rom内容，一致。
6, 开始发现ddr寄存器无法访问，后来发现是ddrc mclk cfg配置流程不正确。
exit ddrphy lp mode;
enable ddrc ckd;
dll reset
ungate ddrc gate;
ddrc switch
7, beihua调试ddr
1), DQS Drift Compensation Enable时data training有问题。diable后正确。
2), 简单读写正确。但是大量读写(>2Mbyte)出现6000多个错误。
3), beihua和dr.yang用0x5a调试。
先实验读，读如果没问题，再实验写。
160MHz调试有问题.
4), 实验26Mhz.
xclk时, clock上有直流. 
像是有odt. 在ddr子板上有odt. 
去掉clk上的电阻, 电容, 直流分量有改善。但是training结果不对。
5), 实验96MHz
data training也有错。

8, huangwei: 
gate stor时如果操作stor clock tree下面的divider和enable, gate会有风险: 没法配置进去.
(11:20 2011-1-28)后来huangwei又看了代码：发现stor下面直属的divier和enable都是通过stor clksrc gate前面的时钟同步的，所以gate对于这些divider和enable配置没有影响。但是配置peri下面的模块时就需要打开stor clksrc。
bamvor: 这个描述和bootloader已有流程一致，和之前code review huangwei的建议也yizhi。

9, lidongliang邮件"882 SV 调试状态（1月27日）"20100128_0224
882 SV调试状态，1月27日
1. ice 可以连接，可以读写sram，配置寄存器
2 .一级bootloader 
- 可以跑起来，串口有打印信息
- 使用xclk 方式能跑到usb boot 阶段
- 在bootloader中切频方式运行，会出错，无法运行到usb boot
出错误的位置不固定，出现data abort，prefetch abort 等异常
错误原因尚不清楚
3. ddr
- 调试芯片ddr3，256MB * 2， AE 产品板ddram
- 低频率(26MHz, 96MHz)下data training 出错
- 较高频率(166MHz)下，data training 正确，但
    - 内存数据读写可能影响到其它地址的数据
    - 个别地址数据读写出错。目前还没有找到规律

23:00 2011-1-27
(17:03 2011-5-12)
VC0882, umonitor, 文档, BGA445, BGA604
liuzixi邮件_20110127.
D:\work\VC0882\Documentation\VC0882 ASIC umonitor userguide 2011_01_27.doc
liuzixi邮件_20110512.
D:\VC0882\document\sv test report\VC0882 ASIC umonitor userguide_20110512

11:22 2011-1-28
时间管理
0, 10:10

1, 本日
1), 请假。
2), performance monitor debug。改了部分code但init不过。
3), vc0882 sv sd boot debug.
4), 总结：感觉能力积累还是不够，时间长了调东西就慢。今天调试sd boot, 走了很多弯路，简单说就是没想清楚就动手。首先是环境没搭好，strap pin配置和需求不符。后面遇到问题就应该及时用rvdebugger。

11:29 2011-1-28
VC0882, 假期, 项目假, 截至今天我项目假已休3天还有7天

11:57 2011-1-28
VC0882, SV, 环境调试, 续
1, 今天新出的一套板子可以在240, 60, 480三个频率弹出优盘. 
2, 今天两个板子的ddr 26MHz都是正确的: 比较24Mbyte数据正确.
3, yangzuoxing邮件"882 SV 目前的最新进展"20110128_1145
昨天晚上我们遇到两个问题，一个是一级BOOTLOADER的BOOT过程中死掉了，另外一个是DDR在166MHZ下不稳定。
刚才这两个问题我们有了新的进展：
1.       DDR在26MHZ下FILL MEMORY 一个 24MB的文件比对通过
2.       换了一个新的SV板，一级BOOTLOADER可以弹出U盘了。
4, 电流, 正常工作电流是0.1-0.2A. 大于此电流可能是板子短路. 昨天1号板一个是vdd_core虚焊一个是短路(电流0.5A). vdd_core虚焊可能造成cpu运行不稳定. 
5, 下午实验上午正确的2号板发现ddr training结果错误. 原因可能是中午加了垫圈. 
6, (19:57 2011-1-28)
继续调试sd boot. 用rvdebugger加载符号表调试. 
1), 发现clk bypass。所以ddr clk没有打开。
2), 打开如下时钟：
//disable #define VIM_BOOT_CLKRST_BYPASS_DDRC     (BIT4)
//disable #define VIM_BOOT_CLKRST_BYPASS_UPHY     (BIT18)
//disable #define VIM_BOOT_CLKRST_BYPASS_UPHYPLL  (BIT19)
//disable #define VIM_BOOT_CLKRST_BYPASS_SW_DLL_RST  (BIT20)
//disable #define VIM_BOOT_CLKRST_BYPASS_DDRPHY_IO_CFG  (BIT21)
3), 但是发现pmu里面设置lp mode流程和现在不符。
经过单步实验，这样没有问题。问题出在前面ddrc不需要switch，但我512info配置了switch而且配置了错误的频率。
后方发现ddrc虽然不需要switch，但是switch函数里面会打开ddrc时钟，dll reset，退出phy lp mode，所以ddrc switch不能bypass。为了避免ddrc实际不做switch，需要配置ddrc switch寄存器为原有寄存器值：0x10000。
7), (22:15 2011-1-28)二级boot本身有问题。修改后正确。

10:29 2011-1-29
VC0882, SV, 最小环境
1, 关闭mmu, 关闭cache(原来可能开了icache).
可以跑到aasp, nucleus thread正确.
2, 支持zouweiran, 底板2+cpu板4+6号芯片: 480MHz usb boot有时不行. 换芯片后可以.
但ddr不稳定. 
3, 开mmu和cache后有问题.
4, (12:21 2011-1-29)
上午调试dmac@ddr 26MHz跑死，引起软件重起。
刚才有芯片ddr training失败是ddr socket接触不好。
5, (15:28 2011-1-29)
下午实验ddrc 48Mhz。dmac实验发现比xclk 26MHz稳定。
beihua比较了两个频率的step time都是2.xnm。但是pll分出的48Mhz的transition比26Mhz的好一些。
transition time是指从10%到90%的时间。
liuxiaotao在48Mhz下做dmac测试，大约半小时没有出错。看起来比26Mhz稳定很多。

17:01 2011-1-29
rvdebugger脚步学习
//include D:\VC0882\document\tools\test.inc
//print "this is a script example"
//"doloop" is a macro, it must follow a "." after define. 
//"PRINTF" and "SETMEM" is cli command. It must enclose with "$".(both at beginning and end of the line)


define /R int doloop(start, count)
int start;
int count;
{
	int i;
	unsigned int val;
	unsigned int addr;
	unsigned offset;

	i = 0;
	offset = start;
	do {
		//set address
		addr = @sp+offset;
		//read value at address and assign to variable val
		$ce /R val = *((unsigned long*)addr)$;
		offset=offset+4;
		//output result to rvdebugger cmd windows.
		$PRINTF "value is 0x%08x addr is 0x%08x", val, addr$;
		i++;
	} while (i < count);
	return addr;
}
.

printf "%d\n", doloop(-20, 20)

17:08 2011-1-29
VC0882, SV, 环境准备, 总结: 今日进展
1, 家里有事, 早点回家. 

2, 今日已完成工作
1), 环境支持支持
(1), 为beihua提供rvdebugger脚本支持, 加入了delay函数. 
(2), ghost中毒pc和配置两台机器环境.
(3), 支持zouweiran调试sv板. 
2), 测试ddr3
(1), 和liuxiaotao一起调试ddr3 26Mhz(xclk). dmac测试很快出错. 
据beihua和zixi后来分析此频率timing比48MHz和80MHz都差. 
(2), 和liuxiaotao一起调试ddr3 48Mhz. dmac测试半小时正确. 
(3), 测试80MHz下dmac搬运. 初步测试正确. 计划测试半小时. 

3, 明日计划
测试bootloader 512info切频.

13:49 2011-1-30
(13:07 2011-3-15)
工具, logAssistant, 功能改进: 加入同义词, 近义词功能; 支持在整个section(包括keyword)内多个content关键字搜索
1, 工具需求
1), 同义词, 近义词功能
开始以为同义词, 近义词功能需要大改架构. 后来想一想. 可以在得到搜索关键字时就把A根据同义词近义词字典展开为A|B|C. 这样后面架构不需要修改. 
同义词近义词字典参考之前的日志. 
测试case: 搜索"无线"可以找到"12:48 2010-7-16".
同义词, 近义词字典:
(1), 无线|wireless|wifi
2, section内多个关键字搜索
其实只需要把content都保存再查找就可以. 
唯一的风险是占用memory过多. 
测试case: 
keyword line: "."
content keyword: bash|shell for
可以找到"14:30 2011-1-10".
3), 今天可能没有时间, 希望明天解决. 

14:49 2011-1-30
时间管理
0, 13:30

1, 本日
1), 14:30 bootloader 512info 切频测试. 见"14:56 2011-1-30".
被2)打断. 
2), 1h: 支持beihua rvdebugger环境. 添加"VIM_HAL_WRITE_UINT32_BITMASK"和"VIM_HAL_READ_UINT32_BITCHECK_LOOP"两个函数. 提供ddr3@200MHz@pll400MHz配置. 见"16:20 2011-1-30".
3), 总结: 工作总结见"21:06 2011-1-30". 

14:56 2011-1-30
VC0882, SV, 环境, bootloader 512info切频测试
1, 计划:
1), 用perl脚本转换rvdebugger ddrc脚本. 第一次可以只转换ddr寄存器数组. 后面再逐步完善. 
2), 测试cpu=50MHz, 100MHz, bus=50MHz, ddrc=48MHz, 80MHz, 120MHz, 同时打开所有模块时钟. 
3), 为了简单计划用usb boot测试. 
2, 写ddrc 512info. 
完成第一个脚本, ddrc 80MHz. 
3, usb下载512info正确. 
1), 但是ddrc pll配置错误.
后来发现是512info打包文件都是按16进制, 所以我写32就是0x32, 就配置了过多的寄存器.
改为0x20. 
2), ddrc init命令还是要发的.
3), 已经试通了usb boot. 但是似乎是bin的问题. 没法启动到aasp.
4), 经过实验证明不是bin的问题. 怀疑是cpu,bus太高, 把cpu, bus改为xclk后正确. 
实验之后才想起来, 在socket上cpu, bus最高分别是50MHz, 48MHz. 
5), 下一步实验cpu=48MHz, bus=48MHz.
也pass.
6), 实验
cpu=48MHz, bus=48MHz, ddrc=166MHz(dll on). pass
4, 

16:20 2011-1-30
VC0882, SV, rvdebugger环境支持, rvdebugger脚本, bitmask, bitcheck, pause命令
1, 今天支持beihua编写166MHz ddr脚本. beihua需要VIM_HAL_WRITE_UINT32_BITMASK, VIM_HAL_READ_UINT32_BITCHECK两个函数的功能. 因为要写的寄存器其余bit的值是预先不知道的(可能和温度有关). 所以必须增加函数. 
在昨天加入的delay函数(如下)基础上, 改写.
define /R void delay(count)
int count;
{
	int i;
     	i = count;
	do {
		i--;
//		if ( count % 10000 ) {
//			$printf ".";$
//		}
	} while ( i > 0);
//	$printf "\n";$
}
.

2, VIM_HAL_WRITE_UINT32_BITMASK函数写的比较顺利, 虽然第一次写这类函数, 也只用了大约10分钟. 
//usage, 
//VIM_HAL_WRITE_UINT32_BITMASK(0x20000000, 0x10, 0x10)
//reg ICP VIM_HAL_WRITE_UINT32_BITMASK(vc0882/panda_os/hal/VIM_HAL_DRIVER.h)
//change value in address(0x20000000) to 0x10 with mask, if previous value in 
//0x20000000 is 0x0, the result is 0x10.
define /R void VIM_HAL_WRITE_UINT32_BITMASK(addr, mask, val)
int addr;
int mask;
int val;
{
  int ori_val;
  $ce ori_val = *((unsigned long*)addr)$;
  ori_val = ori_val & (~mask);
  ori_val = ori_val | val;
  $ce *((unsigned long*)addr) = ori_val$;
}
.

3, 后面VIM_HAL_READ_UINT32_BITCHECK_LOOP遇到一些问题, 用了30'.
1), 预算优先级错误: 
if ( reg_val & val == val )
应该是
if ( ( reg_val & val ) == val )
2), 如果查不到状态. 循环次数太多时会一直用ce读寄存器, 最后rvdebugger就死了, 所以后来加入loop_count, 并且建议循环不要超过0x1000次.
3), 后来为了debug, 加入了"pause"命令. 见"4".
//usage, 
//VIM_HAL_READ_UINT32_BITCHECK_LOOP(0x20000000, 0x10, 0)
//reg ICP VIM_HAL_READ_UINT32_BITCHECK(vc0882/panda_os/hal/VIM_HAL_DRIVER.h)
//check value in address(0x20000000) whether 0x10 or not.
//suggestion: loop_count not larger than 0x1000, bigger loop_count maybe lead to rvdebugger down!!!
define /R void VIM_HAL_READ_UINT32_BITCHECK_LOOP(addr, val, loop_count)
int addr;
int val;
int loop_count;
{
  int reg_val;
  while( loop_count > 0 ) {
    $ce reg_val = *((unsigned long*)addr)$;
    loop_count--;
    if ( ( reg_val & val ) == val ) {
      $printf "check 0x%08x register value<0x%08x> successful!\n"$;
      return;
    }
  }
  $printf "check 0x%08x register value<0x%08x> fail!, select cannel currrent command in Debug menu\n"$;
  $pause$;
  $disconnect$;
}
.

4, 调试
可以用pause命令暂停. 暂停后按回车继续, 按ESC退出. 如果退出后无法断开, 使用rvdebugger debug菜单的"cannel currrent command"选项取消当前命令, 然后再断开. 

21:06 2011-1-30
VC0882, SV, 环境准备, 总结: 今日进展
1, 今日进展
1), 调试bootloader usbboot和512info切频. 
(1), 如下三组频率测试通过(strappin切频到cpu=240MHz): 
cpu=Xclk, bus=Xclk, ddrc=48Mhz(dll_off)
cpu=48MHz, bus=48MHz, ddrc=48Mhz(dll_off)
cpu=48MHz, bus=48MHz, ddrc=160Mhz(dll_on)
(2), 编写perl脚本, 从ddrc脚本转换到512info.
(3), 相关512info, 脚本, 打包文件都已上传到
D:\VC0882\882bootloader\QA_CFG_SV\DDR3\usbboot
D:\VC0882\882bootloader\tools\DfuPack\scripts
2), 环境支持. 
增加bitmask, bitcheck两个rvdebugger脚本宏定义.
便于在rvdebugger中读写寄存器. 功能与ICP panda_os中VIM_HAL_WRITE_UINT32_BITMASK, VIM_HAL_READ_UINT32_BITCHECK两个函数相同. 

2, 明日计划
1), 测试bootloader sdboot. 

15:38 2011-1-31
时间管理
0, 15:10

1, 本日
1), VC0882 bootloader sdboot. 见"15:48 2011-1-31".
2), 大家今天的情况. 见"21:02 2011-1-31".
3), performance monitor code debug. 今天希望解决上次新写的代码. 参见"11:08 2011-1-27". 
4), 总结. 工作总结见"22:03 2011-1-31". 

15:48 2011-1-31
VC0882, bootloader, sdboot
1, 验证strappin cpu=240MHz情况下sdboot正确性. 需要使用与usb boot相同的脚本生成ddr参数. 
1), sd需要实验HC, SC两种卡, 高低时钟的情况. 正沿反沿是否需要实验? 
2), 昨天的ddr脚本需要改进.

2, 打包info结果不对. 后来发现是打包时注释引起打包结果错误.
如下注释掉sdSampleFallingEdge和sdInternalDiv会引起打包错误, sdReconfigBypass的值会不起作用. 
[SDIOInfor]
//sdSampleFallingEdge = 0x99      // 是否在sdclk 下降沿采集数据
//sdInternalDiv = 0x100           // 见sdio 模块寄存器 CLK_CONTROL 描述
sdReconfigBypass = 0x23         // SD/MMC 卡中存放infor 的地址信息，固定存放4份infor, 每份infor由一个地址保存

3, 打包结果一直不对. 最后dongliang发现是sd读卡器有写保护.
经验: 如果是sd烧写submit速度很快, 说明是正常写入. 如果时间很长, 可能就是写保护. 
sd烧写工具用以sector为单位一个sector是512bytes.
如果希望确认烧写是否正确, 可以用winhex(\\10.0.2.208\Software\DevelopTool\WinHex13.9)确认是否烧写成功. 

4, 最后试验cpu48_bus48_ddrc48, cpu48_bus48_ddrc160通过。
已上传到"D:\VC0882\882bootloader\QA_CFG_SV\DDR3\sdboot". 

21:02 2011-1-31
VC0882, SV, 环境调试, clkswitch, arm最高频率测试, ddr最高频率
1, xiaotao clkswitch 到166MHz不稳定可能是没有data training。现在切频流程不稳定，可能是这个原因。暂时把之前data training结果直接配进去。
另外，zq也是同样原因。所以将来可能需要切频在sram切频，然后做data training和zq calibration。
2, liuzixi: 试验cpu600 while ddrc 120MHz(dll off)初步可用. @ddrc 160M fail. 
同样@ddrc120Mhz(dll off), cpu=700, 800MHz正确。
3, beihua: ddr3 200MHz需要加散射片, 可以较长时间做dmac. 不加散射片dmac在1'内出错.
(12:40 2011-2-1)后来实验发现在cpu400_ddr200比cpuXclk_ddr200稳定。前者加散射片情况下dmac正确。

22:03 2011-1-31
VC0882, SV, 工作进展
1, 今天调试了bootloader sd boot. 
试验cpu48_bus48_ddrc48, cpu48_bus48_ddrc160通过。
已上传到"D:\VC0882\882bootloader\QA_CFG_SV\DDR3\sdboot". 

2, 明日计划
1), 准备882 pmu测试。
