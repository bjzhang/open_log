.LOG
10:52 2013-07-01
GTD
0, 10:40-17:21

1, today
1), 10:50-11:20 work report. see"10:54 2013-07-01"
2), 13:57-17:20 xen arm patch. see"14:38 2013-07-01"
1h personal stuff

10:54 2013-07-01
work report - week 25, 26
1, bnc#815201
1), it could be fixed if update qemu to the lastest one. but update the major version is not allowed and the migration code is changed from qemu-1.3 to qemu-1.5.
2), after some debug, i found that there is a overflow in the clean up in migration. if i fix this, test 30times succesfull. provide the package to reporter for test.
2, US/China virtualization sync.

14:38 2013-07-01
virtualization, xen, arm, allwinner A31, sun6i, c env patch v2, cont1
1, build
make dist-xen XEN_TARGET_ARCH=arm32 CROSS_COMPILE=arm-linux-gnueabihf- CONFIG_EARLY_PRINTK=sun6i CONFIG_DTB_FILE=/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/sun6i.dtb CONFIG_LOAD_ADDRESS=0x40000000
mkimage -A arm -T kernel -a 0x40200000 -e 0x40200000 -C none -d "xen/xen.bin" xen-uImage
boot:
fatload mmc 0:2 40008000 linux/xen-uImage
bootm 40008000
2, do i need include omap5432 patch in my patch. i guess not.
3, hang in cpu init
Starting kernel ...

- UART enabled -
- CPU 00000000 booting -
- Machine ID 00000f34 -
- Started in Secure state -
- Entering Hyp mode -
- Zero BSS -
- Setting up control registers -
4, (10:13 2013-07-02)
after debug i know that, bl is wrong. because bl will take the pc+4 as lr, which is obvious wrong. i should set lr through the adr instruction like kernel:
	adr	lr, BSYM(1f)			@ return (PIC) address
1f: 
    xxx

2), BTW, the compile command
arm-linux-gnueabihf-gcc -D__ASSEMBLY__ -include /home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include/xen/config.h -O1 -fno-omit-frame-pointer -marm -g -fno-strict-aliasing -Wall -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-but-set-variable -Wno-unused-local-typedefs -fno-builtin -fno-common -Wredundant-decls -iwithprefix include -Werror -Wno-pointer-arith -pipe -I/home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include -fno-stack-protector -fno-exceptions -Wnested-externs -msoft-float -mcpu=cortex-a15 -mfpu=vfpv3 -mfloat-abi=softfp -DGCC_HAS_VISIBILITY_ATTRIBUTE -fno-optimize-sibling-calls -DEARLY_PRINTK -DEARLY_PRINTK_INC=\"debug-8250.inc\" -DEARLY_PRINTK_BAUD= -DEARLY_UART_BASE_ADDRESS=0x01c28000 -g -D__XEN__ -include /home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include/xen/config.h -DVERBOSE -fno-omit-frame-pointer -DCONFIG_FRAME_POINTER -MMD -MF .head.o.d -DCONFIG_DTB_FILE=\"/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/sun6i.dtb\" -c arm32/head.S -o arm32/head.o

5, what does AT ( XEN_PHYS_START ) mean?
this specfied the load address.

6, write v2 patch.
1), \TODO modify head.S
is it worth that create a seperated lookup_processor_type function in proc-v7.S?
2), patch 1 commit message
xen: arm: introduce Cortex-A7 support

Introduce Cortex-A7 with a scalable proc_info_list which including cpu id
and cpu initialize function.
In head.S, search cpu specific MIDR in procinfo and call such initialize
function. Currently, support Cortex-A7 and Cortex-A15.

3), patch 2 commit message:
xen: arm: implement early prink for 8250 uart

implement early printk for 8250 uart which is used by lots of arm SOC, such as
Allwinner A31(sun6i) and OMAP5432.

4), finish v2 version, review it again and send it out.

---
it seems that it would better create a common head for both debug-8250.inc and
ns16550.c when ns16550.c is worked on arm soc.

5), send patch
git format-patch --cover-letter --signoff -n2
git send-email --no-chain-reply-to --annotate --to xen-devel@lists.xen.org --cc ian.campbell@citrix.com --cc julien.grall@linaro.org --cc Stefano.Stabellini@eu.citrix.com --cc andre.przywara@calxeda.com --cc bjzhang@suse.com --cc baozich@gmail.com 000*.patch

7, add mode switch patch and test again.
fail

8, todo 
1), try the same thing as Chao baozi, check where it failed.
if it fail after mmu flush, is that mean there is some memory map fail in sun6i?
2), if fail. find out why load/store exclusive fail, is it because other core not started? try it on kernel.
3), do i need to modify mcpu in gcc command?
i guess not. because BIG.little technology.
4), and addr in Makefile.
0x80000000 -> 0x40000000, is it necessary?

16:35 2013-07-01
mailing list, virtualization, xen, hypercall
"Xu, Dongxiao dongxiao.xu@intel.com"_email_"[Xen-devel] About hypercalls"_20130701_1506
to: cooldharma06、 xen-devel 
For hypercall definition in Xen, please refer to:
hypercall_table in XEN/arch/x86/x86_64/entry.S.
 
About the hypercall caller in Linux kernel size, please refer to:
KERNEL/arch/x86/include/asm/xen/hypercall.h.
 
Thanks,
Dongxiao
 
9:26 2013-7-2
mailing list, virtualization, kvm, arm, Cortex-A57
1, Huawei has had worked on kvm support Cortex-A57, is it means that huawei'A57 will out on 2014?
[PATCH 0/6][RFC] AArch64 support for Versatile Express using KVM
1), m.hamayun@virtualopensystems.com
The work has been sponsored by Huawei, and developed in collaboration with Huawei Technologies Duesseldorf GmbH, European Research Center Munich (ERC). A working tree of this implementation is available on the "kvm-aarch64" branch of the following github repository.

https://github.com/virtualopensystems/qemu.git
2), Peter Maydell peter.maydell@linaro.org 
This rather overlaps with a bunch of work John Rigby has already done
(though not yet published to the mailing lists):

https://git.linaro.org/gitweb?p=people/pmaydell/qemu-aarch64.git;a=shortlog;h=refs/heads/kvm-aarch64-wip

so now we need to reconcile the two trees. If you'd let us know
you were doing this a bit earlier we could probably have
coordinated something...

3), Andreas Färber afaerber@suse.de
Andreas join the discussion, because he is a qemu developer.

2, same series patch: about how to pick up kernel headers
Peter Maydell peter.maydell@linaro.org 
Sorry, this bit is wrong; ignore it. We pick the kernel headers based
on $cpu, not $target, so get the aarch64 ones whether we're building
arm-softmmu or aarch64-softmmu.

10:08 2013-07-02
GTD
0, 9:40-21:14

1, today
1), 20' mailing list: kvm. see"9:26 2013-7-2"
2), 10:12-11:30 14:00-19:00 20:43-21:20 xen arm patch. see"14:38 2013-07-01"4
3), after finish the patch check the Chen baozi discuss status.

10:11 2013-07-03
GTD
0, 10:10-21:43

1, today
1), 20'(in subway): check the mail.
2), 10:40-11:40 15:30-15:51 reply to virsh save hang bug. see"10:40 2013-07-03"
3), debug the console patch. see"15:51 2013-07-03"

2, next
3), arm call.
4), continue to debug xen for sun6i. ref"14:38 2013-07-01"8

10:34 2013-07-03
company, suse, hackweek, award
1, "Melanie Reichel"_email_"Your Hackweek IX Awards for Best openSUSE Project"_20130702_1753
Hi Alex, Bamvor Jian, Bernhard, David, Dirk, Marcus, Max, Michael, Reinhard and Robert,

I wanted to congratulate you on your win for Best openSUSE Project during Hackweek IX.

Your award is one week, so 5 work days, of ITO time.
Please show this email to your manager as a proof that you have received this additional ITO time to work on this project. You can take that time during the next 12 months in agreement with your manager.

Congratulations again on your great project!

Would you be able to send me the email addresses of your external team mates so that I know how to get in contact with them?
Andrew Wafaa
Guillaume Gardet

Best,
Melanie

2, "Alexander Graf <agraf@suse.de>" reply
On 07/02/2013 11:53 AM, Melanie Reichel wrote:
> Hi Alex, Bamvor Jian, Bernhard, David, Dirk, Marcus, Max, Michael, Reinhard and Robert,
>
> I wanted to congratulate you on your win for Best openSUSE Project during Hackweek IX.
>
> Your award is one week, so 5 work days, of ITO time.
> Please show this email to your manager as a proof that you have received this additional ITO time to work on this project. You can take that time during the next 12 months in agreement with your manager.
>
> Congratulations again on your great project!
Thanks a lot! Kudos to everyone who got ARM up and rolling on openSUSE 
so far :).

>
> Would you be able to send me the email addresses of your external team mates so that I know how to get in contact with them?
Happily :)

> Andrew Wafaa
awafaa@opensuse.org
> Guillaume Gardet
guillaume.gardet@opensuse.org

Alex

10:40 2013-07-03
virtualization, libvirt, kvm, bnc#815201, save hang, cont6
1, try the same version with report.
1), only update to qemu or update kvm, qemu and qemu-tools.
after check the kvm package, i know that why Martin got the different result.
because qemu-kvm is compile from seperated qemu source. i need to fix this into both kvm and qemu package.

2, reply
Hi, Martin

sorry for the wrong package, i have patch the qemu-kvm in kvm package.
kvm 1.3 is different from kvm 1.5, the latter one is a script calling qemu-system-x86_64. i do not notice this before.
i test 100times pass with this package, including 76times save while vm memory used more than 2Gbytes.

could u please test it again?

BTW: my package version: kernel-desktop-3.7.10-1.1.1.x86_64, libvirt-1.0.2-1.3.1, libvirt-client-1.0.2-1.3.1, qemu-1.3.1-3.4.1, qemu-tools-1.3.1-3.4.1, kvm-1.3.1-3.5.1

do u update other package in opensuse12.3 update?

11:19 2013-07-03
community, opensuse, public openSUSE ARM team call
"Andrew Wafaa <awafaa@opensuse.org>"_email_"[opensuse-arm] Public ARM call details"_20130701_1730
All,

Please find below the dial-in details for the first public openSUSE
ARM team call. This call will take place on 03July at 1000UTC. For
those that are unable to dial in, we will also be on IRC if that is
any easier for you to participate in:

Participant code: 0180154#

• UK (Toll Free): 0800 141 2084
• UK Cambridge: +44 1223 406065
• UK Sheffield: +44 114 282 8002
• USA (Toll Free): +1 866 880 1148
• USA San Jose: +1 408 576 1502
• India (Toll Free) 18004254138
• India Bangalore +91 80 25185500
• Japan: +81 45 345 5355
• Germany: +49 89 45604050
• Norway: +47 7318 7518
• Sweden: +46 46313131
• France: +33 4 97 23 51 01
• Taiwan (Hsinchu): +886 3 5657119
• Shanghai (Toll Free): 4006-782-367

Kind regards,

Andy

--
Andrew Wafaa
IRC: FunkyPenguin
GPG: 0x3A36312F
--
To unsubscribe, e-mail: opensuse-arm+unsubscribe@opensuse.org
To contact the owner, e-mail: opensuse-arm+owner@opensuse.org

15:51 2013-07-03
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont4, rebase

16:19 2013-07-03
company, colleague, openSUSE team, Tomás Chvátal, report to Agustin Benito Bethencourt
"Agustin Benito Bethencourt <abebe@suse.com>"_email_"[devel] new openSUSE Team member"_20130702_1519
Hi,

I am happy to announce that Tomás Chvátal joined the openSUSE Team at SUSE 
today, coming from L3/QA Maintenace. He is located now in room 5.16 (5th 
floor), together with Michal Hrusecky, the other Team member at Prague office. 

Tomas has a wide experience in openSUSE since he contributes to factory 
regularly. He is also a Gentoo project Board member, which provides him an 
interesting background in Linux based distributions.

Welcome Tomas.

Saludos
-- 
Agustin Benito Bethencourt
openSUSE Team Lead at SUSE
abebe@suse.com

17:20 2013-07-03
xen, arm, sun6i
1, hang at
    memset(this_cpu(xen_dommap), 0, DOMHEAP_SECOND_PAGES*PAGE_SIZE);
\TODO: do i actually enter into hyp mode???

19:55 2013-07-03
1, Patch 1
1), Ian C
> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > Introduce Cortex-A7 with a scalable proc_info_list which including cpu id
> > and cpu initialize function.
> > In head.S, search cpu specific MIDR in procinfo and call such initialize
> > function. Currently, support Cortex-A7 and Cortex-A15.
> 
> I like the general shape of it, thanks!
> 
> A few comments below.
> 
> > Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
> 
> > diff --git a/xen/arch/arm/arm32/head.S b/xen/arch/arm/arm32/head.S
> > index 0588d54..d62401d 100644
> > --- a/xen/arch/arm/arm32/head.S
> > +++ b/xen/arch/arm/arm32/head.S
> > @@ -20,6 +20,7 @@
> >  #include <asm/config.h>
> >  #include <asm/page.h>
> >  #include <asm/processor-ca15.h>
> > +#include <asm/processor-ca7.h>
> >  #include <asm/asm_defns.h>
> >  
> >  #define ZIMAGE_MAGIC_NUMBER 0x016f2818
> > @@ -188,15 +189,33 @@ skip_bss:
> >  
> >          PRINT("- Setting up control registers -\r\n")
> >  
> > -        /* Read CPU ID */
> > +        /* Get processor specific proc info */
> >          mrc   CP32(r0, MIDR)
> >          ldr   r1, =(MIDR_MASK)
> >          and   r0, r0, r1
> > -        /* Is this a Cortex A15? */
> > -        ldr   r1, =(CORTEX_A15_ID)
> > -        teq   r0, r1
> > -        bleq  cortex_a15_init
> > +        ldr   r1, = __proc_info_start
> > +        add   r1, r1, r10
> > +        ldr   r2, = __proc_info_end
> > +        add   r2, r2, r10
> > +1:      ldr   r3, [r1]
> > +        teq   r0, r3
> > +        beq   2f
> > +        add   r1, r1, #PROCINFO_sizeof
> > +        cmp   r1, r2
> > +        blo   1b
> > +        mov   r4, r0
> > +        PRINT("- Missing processor info: ")
> > +        mov   r0, r4
> > +        bl    putn
> > +        PRINT(" -\r\n")
> > +        b     fail
> > +2:
> 
> At the end of all this r1 == physical address of the platform
> information?
yes
> Can the initial comment say "Get processor specific proc info into rX" please.
sure
> If you could also follow the lead of other code in this file and
> obsessively comment what it is doing that would be great. e.g. comments
> like "r1 := physical address of start of table", "r2 := physical address
> of end of table" etc.
ok. i will
> 
> >  
> > +        /* Set return address(PIC) */
> > +        /* XXX: it only work while thumb2 is not enable in xen */
> 
> That's true of lots/all of our asm. Lets ignore that for now (no need to
> comment).
ok
> Since we already have physoffset in r10 would it be clearer to make use
> of that?
sorry if i am wrong. do u mean change "adr lr, 1f" to something like 
"add lr, pc, r10"?
> 
> > +        adr   lr, 1f
> > +        add   pc, r1, #PROCINFO_cpu_init 
> > +1:
> >          /* Set up memory attribute type tables */
> >          ldr   r0, =MAIR0VAL
> >          ldr   r1, =MAIR1VAL
> 
> > diff --git a/xen/arch/arm/arm32/proc-v7.S b/xen/arch/arm/arm32/proc-v7.S
> > new file mode 100644
> > index 0000000..2d46dca
> > --- /dev/null
> > +++ b/xen/arch/arm/arm32/proc-v7.S
> > @@ -0,0 +1,36 @@
> [...]
> > +#include <asm/asm_defns.h>
> > +#include <asm/arm32/processor.h>
> > +
> > +.globl v7_init
> > +v7_init:
> > +        /* Set up the SMP bit in ACTLR */
> > +        mrc   CP32(r0, ACTLR)
> > +        orr   r0, r0, #(ACTLR_V7_SMP) /* enable SMP bit */
> > +        mcr   CP32(r0, ACTLR)
> > +        mov   pc, lr
> 
> Lets put the __v7_ca7mp_proc_info and __v7_ca15mp_proc_info here,
> calling v7_init directly and do away with proc-ca15.S and proc-ca7.S.
Ok. 
So, i will remove proc-ca15.S and proc-ca7.S?
> 
> > +
> > +/*
> > + * Local variables:
> > + * mode: ASM
> > + * indent-tabs-mode: nil
> > + * End:
> > + */
> 
> > diff --git a/xen/include/asm-arm/arm32/procinfo.h b/xen/include/asm-arm/arm32/procinfo.h
> > new file mode 100644
> > index 0000000..7e7a775
> > --- /dev/null
> > +++ b/xen/include/asm-arm/arm32/procinfo.h
> > @@ -0,0 +1,30 @@
> > +/*
> > + * include/asm-arm/arm32/procinfo.h
> 
> I suggest to put this in just include/asm-arm/procinfo.h. The same
> struct should eventually apply to 64-bit too.
ok.
> 
> [...]
> > +#ifndef __ASM_ARM_ARM32_PROCINFO_H
> > +#define __ASM_ARM_ARM32_PROCINFO_H
> > +
> > +struct proc_info_list {
> > +	unsigned int		cpu_val;
> 
> I think we should include "unsigned int cpu_mask" here too and remove
> MIDR_MASK. Will need equivalent changes in head.S as well.
yes, i need to do this for Aarch64 extesion in future.
> 
> > +	unsigned long		cpu_init;        /* used by head.S */
> > +};
> > +
> > +#endif
> > diff --git a/xen/include/asm-arm/processor-ca15.h b/xen/include/asm-arm/processor-ca15.h
> > index 06cdbdd..96438f0 100644
> > --- a/xen/include/asm-arm/processor-ca15.h
> > +++ b/xen/include/asm-arm/processor-ca15.h
> > @@ -1,9 +1,6 @@
> >  #ifndef __ASM_ARM_PROCESSOR_CA15_H
> >  #define __ASM_ARM_PROCESSOR_CA15_H
> >  
> > -
> > -#define CORTEX_A15_ID     (0x410FC0F0)
> > -
> >  /* ACTLR Auxiliary Control Register, Cortex A15 */
> >  #define ACTLR_CA15_SNOOP_DELAYED      (1<<31)
> >  #define ACTLR_CA15_MAIN_CLOCK         (1<<30)
> > @@ -26,7 +23,6 @@
> >  #define ACTLR_CA15_OPT                (1<<9)
> >  #define ACTLR_CA15_WFI                (1<<8)
> >  #define ACTLR_CA15_WFE                (1<<7)
> > -#define ACTLR_CA15_SMP                (1<<6)
> 
> Lets leave this for completeness even if we aren't using it.
i was thinking about it. if i define the following
#define ACTLR_CA15_SMP                ACTLR_V7_SMP
i need include asm/arm/processor.h which including CP micros.
> 
> >  #define ACTLR_CA15_PLD                (1<<5)
> >  #define ACTLR_CA15_IP                 (1<<4)
> >  #define ACTLR_CA15_MICRO_BTB          (1<<3)

2, patch 2
1), Ian C
> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > diff --git a/xen/arch/arm/arm32/debug-8250.inc b/xen/arch/arm/arm32/debug-8250.inc
> > new file mode 100644
> > index 0000000..c11357d
> > --- /dev/null
> > +++ b/xen/arch/arm/arm32/debug-8250.inc
> > @@ -0,0 +1,48 @@
> > +/*
> > + * xen/arch/arm/arm32/debug-8250.inc
> > + *
> > + * 8250 specific debug code
> > + *
> > + * Bamvor Jian Zhang <bjzhang@suse.com>
> > + * Copyright (c) 2013 SUSE
> > + *
> > + * This program is free software; you can redistribute it and/or modify
> > + * it under the terms of the GNU General Public License as published by
> > + * the Free Software Foundation; either version 2 of the License, or
> > + * (at your option) any later version.
> > + *
> > + * This program is distributed in the hope that it will be useful,
> > + * but WITHOUT ANY WARRANTY; without even the implied warranty of
> > + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
> > + * GNU General Public License for more details.
> > + */
> > +
> > +
> > +#define UART_TX           (0x00<<2)    /* Out: Transmit buffer */
> > +#define UART_LSR          (0x05<<2)    /* In:  Line Status Register */
> 
> Is the shift 2 on Baozi's platform too? Perhaps this could be a #define
> provided in the same style as EARLY_UART_BASE_ADDRESS or via some other
> means?
> 
> The definitions themselves duplicate those in
> xen/drivers/char/ns16550.c, perhaps we could refactor those into a
> suitable header?
yes. it should be. meanwhile considering the shift bit and other things. 
i am not sure how to merge the headers until i got the ns16550 actual used by
arm SOC. 
> 
> > +
> > +#define UART_LSR_THRE     0x20         /* Xmit holding register empty */
> > +
> > +/* 8250 UART wait UART to be ready to transmit
> > + * rb: register which contains the UART base address
> > + * rc: scratch register */
> > +.macro early_uart_ready rb, rc
> > +1:
> > +        ldr   \rc, [\rb, #UART_LSR]    /* <- UART_LSR (Line Status Register) */
> > +        tst   \rc, #UART_LSR_THRE      /* Check BUSY bit */
> > +        beq   1b                       /* Wait for the UART to be ready */
> > +.endm
> > +
> > +/* 8250 UART transmit character
> > + * rb: register which contains the UART base address
> > + * rt: register which contains the character to transmit */
> > +.macro early_uart_transmit rb, rt
> > +        str   \rt, [\rb, #UART_TX]     /* -> UART_TX */
> > +.endm
> > +
> > +/*
> > + * Local variables:
> > + * mode: ASM
> > + * indent-tabs-mode: nil
> > + * End:
> > + */

2), Chan Baozi

On Jul 3, 2013, at 7:09 PM, Ian Campbell <Ian.Campbell@citrix.com> wrote:

> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
>> diff --git a/xen/arch/arm/arm32/debug-8250.inc b/xen/arch/arm/arm32/debug-8250.inc
>> new file mode 100644
>> index 0000000..c11357d
>> --- /dev/null
>> +++ b/xen/arch/arm/arm32/debug-8250.inc
>> @@ -0,0 +1,48 @@
>> +/*
>> + * xen/arch/arm/arm32/debug-8250.inc
>> + *
>> + * 8250 specific debug code
>> + *
>> + * Bamvor Jian Zhang <bjzhang@suse.com>
>> + * Copyright (c) 2013 SUSE
>> + *
>> + * This program is free software; you can redistribute it and/or modify
>> + * it under the terms of the GNU General Public License as published by
>> + * the Free Software Foundation; either version 2 of the License, or
>> + * (at your option) any later version.
>> + *
>> + * This program is distributed in the hope that it will be useful,
>> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
>> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>> + * GNU General Public License for more details.
>> + */
>> +
>> +
>> +#define UART_TX           (0x00<<2)    /* Out: Transmit buffer */
>> +#define UART_LSR          (0x05<<2)    /* In:  Line Status Register */
> 
> Is the shift 2 on Baozi's platform too? Perhaps this could be a #define
> provided in the same style as EARLY_UART_BASE_ADDRESS or via some other
> means?
Yes, mine has the shift 2 too. It is because every register's size is 4-Bytes on both of our platforms.

However, it seems this patch doesn't work on OMAP543 (I've modified EARLY_UART_BASE_ADDRESS to 0x48020000 which is the correct address). I'm looking for the reasons…

> 
> The definitions themselves duplicate those in
> xen/drivers/char/ns16550.c, perhaps we could refactor those into a
> suitable header?
+1

> 
>> +
>> +#define UART_LSR_THRE     0x20         /* Xmit holding register empty */
>> +
>> +/* 8250 UART wait UART to be ready to transmit
>> + * rb: register which contains the UART base address
>> + * rc: scratch register */
>> +.macro early_uart_ready rb, rc
>> +1:
>> +        ldr   \rc, [\rb, #UART_LSR]    /* <- UART_LSR (Line Status Register) */
>> +        tst   \rc, #UART_LSR_THRE      /* Check BUSY bit */
>> +        beq   1b                       /* Wait for the UART to be ready */
>> +.endm
>> +
>> +/* 8250 UART transmit character
>> + * rb: register which contains the UART base address
>> + * rt: register which contains the character to transmit */
>> +.macro early_uart_transmit rb, rt
>> +        str   \rt, [\rb, #UART_TX]     /* -> UART_TX */
>> +.endm
>> +
>> +/*
>> + * Local variables:
>> + * mode: ASM
>> + * indent-tabs-mode: nil
>> + * End:
>> + */
> 
> 
3), Chen Baozi
> However, it seems this patch doesn't work on OMAP543 (I've modified EARLY_UART_BASE_ADDRESS to 0x48020000 which is the correct address). I'm looking for the reasons…
After fixing a typo when modifying EARLY_UART_BASE_ADDRESS and making clean the working tree, it works for me. Sorry for my carelessness.

4), Chen Baozi

> diff --git a/docs/misc/arm/early-printk.txt b/docs/misc/arm/early-printk.txt
> index fbc3208..eaa66a1 100644
> --- a/docs/misc/arm/early-printk.txt
> +++ b/docs/misc/arm/early-printk.txt
> @@ -13,6 +13,7 @@ where mach is the name of the machine:
>    - exynos5250: printk with the second UART
>    - midway: printk with the pl011 on Calxeda Midway processors
>    - fastmodel: printk on ARM Fastmodel software emulators
> +  - sun6i: printk with 8250 on Allwinner A31 processors
Could this be better to add:

    - omap5432: printk with 8250 compatible UART on OMAP5432 processors

>  
>  The base address and baud rate is hardcoded in xen/arch/arm/Rules.mk,
>  see there when adding support for new machines.
> diff --git a/xen/arch/arm/Rules.mk b/xen/arch/arm/Rules.mk
> index 422ed04..51e823d 100644
> --- a/xen/arch/arm/Rules.mk
> +++ b/xen/arch/arm/Rules.mk
> @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
>  EARLY_PRINTK_BAUD := 115200
>  EARLY_UART_BASE_ADDRESS := 0xfff36000
>  endif
> +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
> +# uart configured at 115200 by bootloader
> +EARLY_PRINTK_INC := 8250
> +EARLY_UART_BASE_ADDRESS := 0x01c28000
> +endif

EARLY_UART_BASE_ADDRESS on OMAP5432 is 0x48020000, so I think we'd better to add another case to support it? For example:

+ifeq ($(CONFIG_EARLY_PRINTK), omap5432)
+# uart configured at 115200 by bootloader
+EARLY_PRINTK_INC := 8250
+EARLY_UART_BASE_ADDRESS := 0x48020000
+endif

5), Ian C
> On Wed, 2013-07-03 at 19:50 +0800, Chen Baozi wrote:
> > On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > 
> > > implement early printk for 8250 uart which is used by lots of arm SOC, such as
> > > Allwinner A31(sun6i) and OMAP5432.
> > > 
> > > Signed-off-by: Bamvor Jian Zhang <bjzhang@xxxxxxxx>
> > > ---
> > >  docs/misc/arm/early-printk.txt    |  1 +
> > >  xen/arch/arm/Rules.mk             |  5 ++++
> > >  xen/arch/arm/arm32/debug-8250.inc | 48 +++++++++++++++++++++++++++++++++++++++
> > >  3 files changed, 54 insertions(+)
> > >  create mode 100644 xen/arch/arm/arm32/debug-8250.inc
> > > 
> > > diff --git a/docs/misc/arm/early-printk.txt b/docs/misc/arm/early-printk.txt
> > > index fbc3208..eaa66a1 100644
> > > --- a/docs/misc/arm/early-printk.txt
> > > +++ b/docs/misc/arm/early-printk.txt
> > > @@ -13,6 +13,7 @@ where mach is the name of the machine:
> > >    - exynos5250: printk with the second UART
> > >    - midway: printk with the pl011 on Calxeda Midway processors
> > >    - fastmodel: printk on ARM Fastmodel software emulators
> > > +  - sun6i: printk with 8250 on Allwinner A31 processors
> > Could this be better to add:
> > 
> >     - omap5432: printk with 8250 compatible UART on OMAP5432 processors
> > 
> > >  
> > >  The base address and baud rate is hardcoded in xen/arch/arm/Rules.mk,
> > >  see there when adding support for new machines.
> > > diff --git a/xen/arch/arm/Rules.mk b/xen/arch/arm/Rules.mk
> > > index 422ed04..51e823d 100644
> > > --- a/xen/arch/arm/Rules.mk
> > > +++ b/xen/arch/arm/Rules.mk
> > > @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
> > >  EARLY_PRINTK_BAUD := 115200
> > >  EARLY_UART_BASE_ADDRESS := 0xfff36000
> > >  endif
> > > +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
> > > +# uart configured at 115200 by bootloader
> > > +EARLY_PRINTK_INC := 8250
> > > +EARLY_UART_BASE_ADDRESS := 0x01c28000
> > > +endif
> > 
> > EARLY_UART_BASE_ADDRESS on OMAP5432 is 0x48020000, so I think we'd
> > better to add another case to support it?
> 
> Yes, this is exactly what should happen. You could either send a patch
> on top of Bamvor's or perhaps he would be willing to integrate these
> bits into his existing patch.
yes, i'd like to do it. meanwhile adding omap5432 uart support is a little
bit confuse with my cover letter. 
how about i send one patch for Cortex-A7 support. and another series patch 
for 8250 compatibility uart. which including
1/3: debug-8250.inc
2/3: sun6i changes in early-printk.txt and Rules.mk.
3/3: omap5432 changes in early-printk.txt and Rules.mk.

> 
> >  For example:
> > 
> > +ifeq ($(CONFIG_EARLY_PRINTK), omap5432)
> > +# uart configured at 115200 by bootloader
> > +EARLY_PRINTK_INC := 8250
> > +EARLY_UART_BASE_ADDRESS := 0x48020000
> > +endif
> 
> Ian.

21:21 2013-07-03
ARM Cortex-A7 support in Linux
http://comments.gmane.org/gmane.linux.ports.arm.kernel/237252

