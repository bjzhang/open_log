.LOG
10:52 2013-07-01
GTD
0, 10:40-17:21

1, today
1), 10:50-11:20 work report. see"10:54 2013-07-01"
2), 13:57-17:20 xen arm patch. see"14:38 2013-07-01"
1h personal stuff

10:54 2013-07-01
work report - week 25, 26
1, bnc#815201
1), it could be fixed if update qemu to the lastest one. but update the major version is not allowed and the migration code is changed from qemu-1.3 to qemu-1.5.
2), after some debug, i found that there is a overflow in the clean up in migration. if i fix this, test 30times succesfull. provide the package to reporter for test.
2, US/China virtualization sync.

14:38 2013-07-01
virtualization, xen, arm, allwinner A31, sun6i, c env patch v2, cont1
1, build
make dist-xen XEN_TARGET_ARCH=arm32 CROSS_COMPILE=arm-linux-gnueabihf- CONFIG_EARLY_PRINTK=sun6i CONFIG_DTB_FILE=/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/sun6i.dtb CONFIG_LOAD_ADDRESS=0x40000000
mkimage -A arm -T kernel -a 0x40200000 -e 0x40200000 -C none -d "xen/xen.bin" xen-uImage
boot:
fatload mmc 0:2 40008000 linux/xen-uImage
bootm 40008000
2, do i need include omap5432 patch in my patch. i guess not.
3, hang in cpu init
Starting kernel ...

- UART enabled -
- CPU 00000000 booting -
- Machine ID 00000f34 -
- Started in Secure state -
- Entering Hyp mode -
- Zero BSS -
- Setting up control registers -
4, (10:13 2013-07-02)
after debug i know that, bl is wrong. because bl will take the pc+4 as lr, which is obvious wrong. i should set lr through the adr instruction like kernel:
	adr	lr, BSYM(1f)			@ return (PIC) address
1f: 
    xxx

2), BTW, the compile command
arm-linux-gnueabihf-gcc -D__ASSEMBLY__ -include /home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include/xen/config.h -O1 -fno-omit-frame-pointer -marm -g -fno-strict-aliasing -Wall -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-but-set-variable -Wno-unused-local-typedefs -fno-builtin -fno-common -Wredundant-decls -iwithprefix include -Werror -Wno-pointer-arith -pipe -I/home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include -fno-stack-protector -fno-exceptions -Wnested-externs -msoft-float -mcpu=cortex-a15 -mfpu=vfpv3 -mfloat-abi=softfp -DGCC_HAS_VISIBILITY_ATTRIBUTE -fno-optimize-sibling-calls -DEARLY_PRINTK -DEARLY_PRINTK_INC=\"debug-8250.inc\" -DEARLY_PRINTK_BAUD= -DEARLY_UART_BASE_ADDRESS=0x01c28000 -g -D__XEN__ -include /home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include/xen/config.h -DVERBOSE -fno-omit-frame-pointer -DCONFIG_FRAME_POINTER -MMD -MF .head.o.d -DCONFIG_DTB_FILE=\"/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/sun6i.dtb\" -c arm32/head.S -o arm32/head.o

5, what does AT ( XEN_PHYS_START ) mean?
this specfied the load address.

6, write v2 patch.
1), \TODO modify head.S
is it worth that create a seperated lookup_processor_type function in proc-v7.S?
2), patch 1 commit message
xen: arm: introduce Cortex-A7 support

Introduce Cortex-A7 with a scalable proc_info_list which including cpu id
and cpu initialize function.
In head.S, search cpu specific MIDR in procinfo and call such initialize
function. Currently, support Cortex-A7 and Cortex-A15.

3), patch 2 commit message:
xen: arm: implement early prink for 8250 uart

implement early printk for 8250 uart which is used by lots of arm SOC, such as
Allwinner A31(sun6i) and OMAP5432.

4), finish v2 version, review it again and send it out.

---
it seems that it would better create a common head for both debug-8250.inc and
ns16550.c when ns16550.c is worked on arm soc.

5), send patch
git format-patch --cover-letter --signoff -n2
git send-email --no-chain-reply-to --annotate --to xen-devel@lists.xen.org --cc ian.campbell@citrix.com --cc julien.grall@linaro.org --cc Stefano.Stabellini@eu.citrix.com --cc andre.przywara@calxeda.com --cc bjzhang@suse.com --cc baozich@gmail.com 000*.patch

7, add mode switch patch and test again.
fail

8, todo 
1), try the same thing as Chao baozi, check where it failed.
if it fail after mmu flush, is that mean there is some memory map fail in sun6i?
2), if fail. find out why load/store exclusive fail, is it because other core not started? try it on kernel.
3), do i need to modify mcpu in gcc command?
i guess not. because BIG.little technology.
4), and addr in Makefile.
0x80000000 -> 0x40000000, is it necessary?

16:35 2013-07-01
mailing list, virtualization, xen, hypercall
"Xu, Dongxiao dongxiao.xu@intel.com"_email_"[Xen-devel] About hypercalls"_20130701_1506
to: cooldharma06、 xen-devel 
For hypercall definition in Xen, please refer to:
hypercall_table in XEN/arch/x86/x86_64/entry.S.
 
About the hypercall caller in Linux kernel size, please refer to:
KERNEL/arch/x86/include/asm/xen/hypercall.h.
 
Thanks,
Dongxiao
 
9:26 2013-7-2
mailing list, virtualization, kvm, arm, Cortex-A57
1, Huawei has had worked on kvm support Cortex-A57, is it means that huawei'A57 will out on 2014?
[PATCH 0/6][RFC] AArch64 support for Versatile Express using KVM
1), m.hamayun@virtualopensystems.com
The work has been sponsored by Huawei, and developed in collaboration with Huawei Technologies Duesseldorf GmbH, European Research Center Munich (ERC). A working tree of this implementation is available on the "kvm-aarch64" branch of the following github repository.

https://github.com/virtualopensystems/qemu.git
2), Peter Maydell peter.maydell@linaro.org 
This rather overlaps with a bunch of work John Rigby has already done
(though not yet published to the mailing lists):

https://git.linaro.org/gitweb?p=people/pmaydell/qemu-aarch64.git;a=shortlog;h=refs/heads/kvm-aarch64-wip

so now we need to reconcile the two trees. If you'd let us know
you were doing this a bit earlier we could probably have
coordinated something...

3), Andreas Färber afaerber@suse.de
Andreas join the discussion, because he is a qemu developer.

2, same series patch: about how to pick up kernel headers
Peter Maydell peter.maydell@linaro.org 
Sorry, this bit is wrong; ignore it. We pick the kernel headers based
on $cpu, not $target, so get the aarch64 ones whether we're building
arm-softmmu or aarch64-softmmu.

10:08 2013-07-02
GTD
0, 9:40-21:14

1, today
1), 20' mailing list: kvm. see"9:26 2013-7-2"
2), 10:12-11:30 14:00-19:00 20:43-21:20 xen arm patch. see"14:38 2013-07-01"4
3), after finish the patch check the Chen baozi discuss status.

10:11 2013-07-03
GTD
0, 10:10-21:43

1, today
1), 20'(in subway): check the mail.
2), 10:40-11:40 15:30-15:51 reply to virsh save hang bug. see"10:40 2013-07-03"
3), debug the console patch. see"15:51 2013-07-03"
4), 40' arm call.
5), discuss with mac_ and other guys about how to enable kvm-arm on a Cortex-A7 SOC. see"13:15 2013-07-04"

10:34 2013-07-03
company, suse, hackweek, award
1, "Melanie Reichel"_email_"Your Hackweek IX Awards for Best openSUSE Project"_20130702_1753
Hi Alex, Bamvor Jian, Bernhard, David, Dirk, Marcus, Max, Michael, Reinhard and Robert,

I wanted to congratulate you on your win for Best openSUSE Project during Hackweek IX.

Your award is one week, so 5 work days, of ITO time.
Please show this email to your manager as a proof that you have received this additional ITO time to work on this project. You can take that time during the next 12 months in agreement with your manager.

Congratulations again on your great project!

Would you be able to send me the email addresses of your external team mates so that I know how to get in contact with them?
Andrew Wafaa
Guillaume Gardet

Best,
Melanie

2, "Alexander Graf <agraf@suse.de>" reply
On 07/02/2013 11:53 AM, Melanie Reichel wrote:
> Hi Alex, Bamvor Jian, Bernhard, David, Dirk, Marcus, Max, Michael, Reinhard and Robert,
>
> I wanted to congratulate you on your win for Best openSUSE Project during Hackweek IX.
>
> Your award is one week, so 5 work days, of ITO time.
> Please show this email to your manager as a proof that you have received this additional ITO time to work on this project. You can take that time during the next 12 months in agreement with your manager.
>
> Congratulations again on your great project!
Thanks a lot! Kudos to everyone who got ARM up and rolling on openSUSE 
so far :).

>
> Would you be able to send me the email addresses of your external team mates so that I know how to get in contact with them?
Happily :)

> Andrew Wafaa
awafaa@opensuse.org
> Guillaume Gardet
guillaume.gardet@opensuse.org

Alex

10:40 2013-07-03
virtualization, libvirt, kvm, bnc#815201, save hang, cont6
1, try the same version with report.
1), only update to qemu or update kvm, qemu and qemu-tools.
after check the kvm package, i know that why Martin got the different result.
because qemu-kvm is compile from seperated qemu source. i need to fix this into both kvm and qemu package.

2, reply
Hi, Martin

sorry for the wrong package, i have patch the qemu-kvm in kvm package.
kvm 1.3 is different from kvm 1.5, the latter one is a script calling qemu-system-x86_64. i do not notice this before.
i test 100times pass with this package, including 76times save while vm memory used more than 2Gbytes.

could u please test it again?

BTW: my package version: kernel-desktop-3.7.10-1.1.1.x86_64, libvirt-1.0.2-1.3.1, libvirt-client-1.0.2-1.3.1, qemu-1.3.1-3.4.1, qemu-tools-1.3.1-3.4.1, kvm-1.3.1-3.5.1

do u update other package in opensuse12.3 update?

11:19 2013-07-03
community, opensuse, public openSUSE ARM team call
"Andrew Wafaa <awafaa@opensuse.org>"_email_"[opensuse-arm] Public ARM call details"_20130701_1730
All,

Please find below the dial-in details for the first public openSUSE
ARM team call. This call will take place on 03July at 1000UTC. For
those that are unable to dial in, we will also be on IRC if that is
any easier for you to participate in:

Participant code: 0180154#

• UK (Toll Free): 0800 141 2084
• UK Cambridge: +44 1223 406065
• UK Sheffield: +44 114 282 8002
• USA (Toll Free): +1 866 880 1148
• USA San Jose: +1 408 576 1502
• India (Toll Free) 18004254138
• India Bangalore +91 80 25185500
• Japan: +81 45 345 5355
• Germany: +49 89 45604050
• Norway: +47 7318 7518
• Sweden: +46 46313131
• France: +33 4 97 23 51 01
• Taiwan (Hsinchu): +886 3 5657119
• Shanghai (Toll Free): 4006-782-367

Kind regards,

Andy

--
Andrew Wafaa
IRC: FunkyPenguin
GPG: 0x3A36312F
--
To unsubscribe, e-mail: opensuse-arm+unsubscribe@opensuse.org
To contact the owner, e-mail: opensuse-arm+owner@opensuse.org

15:51 2013-07-03
(14:19 2013-07-04)
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont4, rebase
1, compile

16:19 2013-07-03
company, colleague, openSUSE team, Tomás Chvátal, report to Agustin Benito Bethencourt
"Agustin Benito Bethencourt <abebe@suse.com>"_email_"[devel] new openSUSE Team member"_20130702_1519
Hi,

I am happy to announce that Tomás Chvátal joined the openSUSE Team at SUSE 
today, coming from L3/QA Maintenace. He is located now in room 5.16 (5th 
floor), together with Michal Hrusecky, the other Team member at Prague office. 

Tomas has a wide experience in openSUSE since he contributes to factory 
regularly. He is also a Gentoo project Board member, which provides him an 
interesting background in Linux based distributions.

Welcome Tomas.

Saludos
-- 
Agustin Benito Bethencourt
openSUSE Team Lead at SUSE
abebe@suse.com

17:20 2013-07-03
xen, arm, sun6i
1, hang at
    memset(this_cpu(xen_dommap), 0, DOMHEAP_SECOND_PAGES*PAGE_SIZE);
\TODO: do i actually enter into hyp mode???

19:55 2013-07-03
virtualization, xen, arm, allwinner A31, sun6i, c env patch v2, cont2, upstream reply
1, Patch 1
1), Ian C
> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > Introduce Cortex-A7 with a scalable proc_info_list which including cpu id
> > and cpu initialize function.
> > In head.S, search cpu specific MIDR in procinfo and call such initialize
> > function. Currently, support Cortex-A7 and Cortex-A15.
> 
> I like the general shape of it, thanks!
> 
> A few comments below.
> 
> > Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
> 
> > diff --git a/xen/arch/arm/arm32/head.S b/xen/arch/arm/arm32/head.S
> > index 0588d54..d62401d 100644
> > --- a/xen/arch/arm/arm32/head.S
> > +++ b/xen/arch/arm/arm32/head.S
> > @@ -20,6 +20,7 @@
> >  #include <asm/config.h>
> >  #include <asm/page.h>
> >  #include <asm/processor-ca15.h>
> > +#include <asm/processor-ca7.h>
> >  #include <asm/asm_defns.h>
> >  
> >  #define ZIMAGE_MAGIC_NUMBER 0x016f2818
> > @@ -188,15 +189,33 @@ skip_bss:
> >  
> >          PRINT("- Setting up control registers -\r\n")
> >  
> > -        /* Read CPU ID */
> > +        /* Get processor specific proc info */
> >          mrc   CP32(r0, MIDR)
> >          ldr   r1, =(MIDR_MASK)
> >          and   r0, r0, r1
> > -        /* Is this a Cortex A15? */
> > -        ldr   r1, =(CORTEX_A15_ID)
> > -        teq   r0, r1
> > -        bleq  cortex_a15_init
> > +        ldr   r1, = __proc_info_start
> > +        add   r1, r1, r10
> > +        ldr   r2, = __proc_info_end
> > +        add   r2, r2, r10
> > +1:      ldr   r3, [r1]
> > +        teq   r0, r3
> > +        beq   2f
> > +        add   r1, r1, #PROCINFO_sizeof
> > +        cmp   r1, r2
> > +        blo   1b
> > +        mov   r4, r0
> > +        PRINT("- Missing processor info: ")
> > +        mov   r0, r4
> > +        bl    putn
> > +        PRINT(" -\r\n")
> > +        b     fail
> > +2:
> 
> At the end of all this r1 == physical address of the platform
> information?
yes
> Can the initial comment say "Get processor specific proc info into rX" please.
sure
> If you could also follow the lead of other code in this file and
> obsessively comment what it is doing that would be great. e.g. comments
> like "r1 := physical address of start of table", "r2 := physical address
> of end of table" etc.
ok. i will
> 
> >  
> > +        /* Set return address(PIC) */
> > +        /* XXX: it only work while thumb2 is not enable in xen */
> 
> That's true of lots/all of our asm. Lets ignore that for now (no need to
> comment).
ok
> Since we already have physoffset in r10 would it be clearer to make use
> of that?
sorry if i am wrong. do u mean change "adr lr, 1f" to something like 
"add lr, pc, r10"?
> 
> > +        adr   lr, 1f
> > +        add   pc, r1, #PROCINFO_cpu_init 
> > +1:
> >          /* Set up memory attribute type tables */
> >          ldr   r0, =MAIR0VAL
> >          ldr   r1, =MAIR1VAL
> 
> > diff --git a/xen/arch/arm/arm32/proc-v7.S b/xen/arch/arm/arm32/proc-v7.S
> > new file mode 100644
> > index 0000000..2d46dca
> > --- /dev/null
> > +++ b/xen/arch/arm/arm32/proc-v7.S
> > @@ -0,0 +1,36 @@
> [...]
> > +#include <asm/asm_defns.h>
> > +#include <asm/arm32/processor.h>
> > +
> > +.globl v7_init
> > +v7_init:
> > +        /* Set up the SMP bit in ACTLR */
> > +        mrc   CP32(r0, ACTLR)
> > +        orr   r0, r0, #(ACTLR_V7_SMP) /* enable SMP bit */
> > +        mcr   CP32(r0, ACTLR)
> > +        mov   pc, lr
> 
> Lets put the __v7_ca7mp_proc_info and __v7_ca15mp_proc_info here,
> calling v7_init directly and do away with proc-ca15.S and proc-ca7.S.
Ok. 
So, i will remove proc-ca15.S and proc-ca7.S?
> 
> > +
> > +/*
> > + * Local variables:
> > + * mode: ASM
> > + * indent-tabs-mode: nil
> > + * End:
> > + */
> 
> > diff --git a/xen/include/asm-arm/arm32/procinfo.h b/xen/include/asm-arm/arm32/procinfo.h
> > new file mode 100644
> > index 0000000..7e7a775
> > --- /dev/null
> > +++ b/xen/include/asm-arm/arm32/procinfo.h
> > @@ -0,0 +1,30 @@
> > +/*
> > + * include/asm-arm/arm32/procinfo.h
> 
> I suggest to put this in just include/asm-arm/procinfo.h. The same
> struct should eventually apply to 64-bit too.
ok.
> 
> [...]
> > +#ifndef __ASM_ARM_ARM32_PROCINFO_H
> > +#define __ASM_ARM_ARM32_PROCINFO_H
> > +
> > +struct proc_info_list {
> > +	unsigned int		cpu_val;
> 
> I think we should include "unsigned int cpu_mask" here too and remove
> MIDR_MASK. Will need equivalent changes in head.S as well.
yes, i need to do this for Aarch64 extesion in future.
> 
> > +	unsigned long		cpu_init;        /* used by head.S */
> > +};
> > +
> > +#endif
> > diff --git a/xen/include/asm-arm/processor-ca15.h b/xen/include/asm-arm/processor-ca15.h
> > index 06cdbdd..96438f0 100644
> > --- a/xen/include/asm-arm/processor-ca15.h
> > +++ b/xen/include/asm-arm/processor-ca15.h
> > @@ -1,9 +1,6 @@
> >  #ifndef __ASM_ARM_PROCESSOR_CA15_H
> >  #define __ASM_ARM_PROCESSOR_CA15_H
> >  
> > -
> > -#define CORTEX_A15_ID     (0x410FC0F0)
> > -
> >  /* ACTLR Auxiliary Control Register, Cortex A15 */
> >  #define ACTLR_CA15_SNOOP_DELAYED      (1<<31)
> >  #define ACTLR_CA15_MAIN_CLOCK         (1<<30)
> > @@ -26,7 +23,6 @@
> >  #define ACTLR_CA15_OPT                (1<<9)
> >  #define ACTLR_CA15_WFI                (1<<8)
> >  #define ACTLR_CA15_WFE                (1<<7)
> > -#define ACTLR_CA15_SMP                (1<<6)
> 
> Lets leave this for completeness even if we aren't using it.
i was thinking about it. if i define the following
#define ACTLR_CA15_SMP                ACTLR_V7_SMP
i need include asm/arm/processor.h which including CP micros.
> 
> >  #define ACTLR_CA15_PLD                (1<<5)
> >  #define ACTLR_CA15_IP                 (1<<4)
> >  #define ACTLR_CA15_MICRO_BTB          (1<<3)
2), Ian C
On Wed, 2013-07-03 at 06:43 -0600, Bamvor Jian Zhang wrote:
> > Since we already have physoffset in r10 would it be clearer to make use
> > of that?
> sorry if i am wrong. do u mean change "adr lr, 1f" to something like 
> "add lr, pc, r10"?

I think I was thinking
        add r1, r10, [r1, #PROCINFO_cpu_init]
        bl r1

(I'm sure I've got the operands to the add subtly wrong somehow, but
hopefully you get the gist of it).

> > 
> > [...]
> > > +#ifndef __ASM_ARM_ARM32_PROCINFO_H
> > > +#define __ASM_ARM_ARM32_PROCINFO_H
> > > +
> > > +struct proc_info_list {
> > > + unsigned int            cpu_val;
> > 
> > I think we should include "unsigned int cpu_mask" here too and remove
> > MIDR_MASK. Will need equivalent changes in head.S as well.
> yes, i need to do this for Aarch64 extesion in future.


Does MIDR differ between 32- and 64-bit? I must confess I've not checked
but assumed it was the same format.

> > 
> > > + unsigned long           cpu_init;        /* used by head.S */
> > > +};
> > > +
> > > +#endif
> > > diff --git a/xen/include/asm-arm/processor-ca15.h 
> > > b/xen/include/asm-arm/processor-ca15.h
> > > index 06cdbdd..96438f0 100644
> > > --- a/xen/include/asm-arm/processor-ca15.h
> > > +++ b/xen/include/asm-arm/processor-ca15.h
> > > @@ -1,9 +1,6 @@
> > >  #ifndef __ASM_ARM_PROCESSOR_CA15_H
> > >  #define __ASM_ARM_PROCESSOR_CA15_H
> > >  
> > > -
> > > -#define CORTEX_A15_ID     (0x410FC0F0)
> > > -
> > >  /* ACTLR Auxiliary Control Register, Cortex A15 */
> > >  #define ACTLR_CA15_SNOOP_DELAYED      (1<<31)
> > >  #define ACTLR_CA15_MAIN_CLOCK         (1<<30)
> > > @@ -26,7 +23,6 @@
> > >  #define ACTLR_CA15_OPT                (1<<9)
> > >  #define ACTLR_CA15_WFI                (1<<8)
> > >  #define ACTLR_CA15_WFE                (1<<7)
> > > -#define ACTLR_CA15_SMP                (1<<6)
> > 
> > Lets leave this for completeness even if we aren't using it.
> i was thinking about it. if i define the following
> #define ACTLR_CA15_SMP                ACTLR_V7_SMP

I meant just leave it as 1<<6.

> i need include asm/arm/processor.h which including CP micros.
> 
> Bamvor
> > 
> > >  #define ACTLR_CA15_PLD                (1<<5)
> > >  #define ACTLR_CA15_IP                 (1<<4)
> > >  #define ACTLR_CA15_MICRO_BTB          (1<<3)
> 
3), Tim Deegan <tim@xen.org>
At 06:43 -0600 on 03 Jul (1372833795), Bamvor Jian Zhang wrote:
> Hi, Ian
> 
>  >>>Wrote "Ian Campbell <Ian.Campbell@xxxxxxxxxx>"> On Tue,
>  Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > >  
> > > +        /* Set return address(PIC) */
> > > +        /* XXX: it only work while thumb2 is not enable in xen */
> > 
> > That's true of lots/all of our asm. Lets ignore that for now (no need to
> > comment).
> ok
> > Since we already have physoffset in r10 would it be clearer to make use
> > of that?
> sorry if i am wrong. do u mean change "adr lr, 1f" to something like 
> "add lr, pc, r10"?

No, I think this code is correct as it stands. 

But it is a bit strange that the CPUinfo struct contains _code_ to jump
to a routine, rather than just containing the address of the routine
itself.  If it just contained the address, the structures could be
defined in C (so we'd be certain that they matched the offset and size
constants we use here).  And then this asm would indeed use physoffset,
something like:

        ldr   r1, [r1, #PROCINFO_cpu_init]   /* r1 := vaddr(init func) */
        adr   lr, 1f                         /* Save return address */
        add   pc, r1, r10                    /* Call paddr(init func) */
1:

The way you've done it is certainly very clever, but we don't need to
optimize single instructions out of the boot time and I think this is
clearer.

Cheers,

Tim.

2, patch 2
1), Ian C
> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > diff --git a/xen/arch/arm/arm32/debug-8250.inc b/xen/arch/arm/arm32/debug-8250.inc
> > new file mode 100644
> > index 0000000..c11357d
> > --- /dev/null
> > +++ b/xen/arch/arm/arm32/debug-8250.inc
> > @@ -0,0 +1,48 @@
> > +/*
> > + * xen/arch/arm/arm32/debug-8250.inc
> > + *
> > + * 8250 specific debug code
> > + *
> > + * Bamvor Jian Zhang <bjzhang@suse.com>
> > + * Copyright (c) 2013 SUSE
> > + *
> > + * This program is free software; you can redistribute it and/or modify
> > + * it under the terms of the GNU General Public License as published by
> > + * the Free Software Foundation; either version 2 of the License, or
> > + * (at your option) any later version.
> > + *
> > + * This program is distributed in the hope that it will be useful,
> > + * but WITHOUT ANY WARRANTY; without even the implied warranty of
> > + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
> > + * GNU General Public License for more details.
> > + */
> > +
> > +
> > +#define UART_TX           (0x00<<2)    /* Out: Transmit buffer */
> > +#define UART_LSR          (0x05<<2)    /* In:  Line Status Register */
> 
> Is the shift 2 on Baozi's platform too? Perhaps this could be a #define
> provided in the same style as EARLY_UART_BASE_ADDRESS or via some other
> means?
> 
> The definitions themselves duplicate those in
> xen/drivers/char/ns16550.c, perhaps we could refactor those into a
> suitable header?
yes. it should be. meanwhile considering the shift bit and other things. 
i am not sure how to merge the headers until i got the ns16550 actual used by
arm SOC. 
> 
> > +
> > +#define UART_LSR_THRE     0x20         /* Xmit holding register empty */
> > +
> > +/* 8250 UART wait UART to be ready to transmit
> > + * rb: register which contains the UART base address
> > + * rc: scratch register */
> > +.macro early_uart_ready rb, rc
> > +1:
> > +        ldr   \rc, [\rb, #UART_LSR]    /* <- UART_LSR (Line Status Register) */
> > +        tst   \rc, #UART_LSR_THRE      /* Check BUSY bit */
> > +        beq   1b                       /* Wait for the UART to be ready */
> > +.endm
> > +
> > +/* 8250 UART transmit character
> > + * rb: register which contains the UART base address
> > + * rt: register which contains the character to transmit */
> > +.macro early_uart_transmit rb, rt
> > +        str   \rt, [\rb, #UART_TX]     /* -> UART_TX */
> > +.endm
> > +
> > +/*
> > + * Local variables:
> > + * mode: ASM
> > + * indent-tabs-mode: nil
> > + * End:
> > + */

2), Chan Baozi

On Jul 3, 2013, at 7:09 PM, Ian Campbell <Ian.Campbell@citrix.com> wrote:

> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
>> diff --git a/xen/arch/arm/arm32/debug-8250.inc b/xen/arch/arm/arm32/debug-8250.inc
>> new file mode 100644
>> index 0000000..c11357d
>> --- /dev/null
>> +++ b/xen/arch/arm/arm32/debug-8250.inc
>> @@ -0,0 +1,48 @@
>> +/*
>> + * xen/arch/arm/arm32/debug-8250.inc
>> + *
>> + * 8250 specific debug code
>> + *
>> + * Bamvor Jian Zhang <bjzhang@suse.com>
>> + * Copyright (c) 2013 SUSE
>> + *
>> + * This program is free software; you can redistribute it and/or modify
>> + * it under the terms of the GNU General Public License as published by
>> + * the Free Software Foundation; either version 2 of the License, or
>> + * (at your option) any later version.
>> + *
>> + * This program is distributed in the hope that it will be useful,
>> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
>> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>> + * GNU General Public License for more details.
>> + */
>> +
>> +
>> +#define UART_TX           (0x00<<2)    /* Out: Transmit buffer */
>> +#define UART_LSR          (0x05<<2)    /* In:  Line Status Register */
> 
> Is the shift 2 on Baozi's platform too? Perhaps this could be a #define
> provided in the same style as EARLY_UART_BASE_ADDRESS or via some other
> means?
Yes, mine has the shift 2 too. It is because every register's size is 4-Bytes on both of our platforms.

However, it seems this patch doesn't work on OMAP543 (I've modified EARLY_UART_BASE_ADDRESS to 0x48020000 which is the correct address). I'm looking for the reasons…

> 
> The definitions themselves duplicate those in
> xen/drivers/char/ns16550.c, perhaps we could refactor those into a
> suitable header?
+1

> 
>> +
>> +#define UART_LSR_THRE     0x20         /* Xmit holding register empty */
>> +
>> +/* 8250 UART wait UART to be ready to transmit
>> + * rb: register which contains the UART base address
>> + * rc: scratch register */
>> +.macro early_uart_ready rb, rc
>> +1:
>> +        ldr   \rc, [\rb, #UART_LSR]    /* <- UART_LSR (Line Status Register) */
>> +        tst   \rc, #UART_LSR_THRE      /* Check BUSY bit */
>> +        beq   1b                       /* Wait for the UART to be ready */
>> +.endm
>> +
>> +/* 8250 UART transmit character
>> + * rb: register which contains the UART base address
>> + * rt: register which contains the character to transmit */
>> +.macro early_uart_transmit rb, rt
>> +        str   \rt, [\rb, #UART_TX]     /* -> UART_TX */
>> +.endm
>> +
>> +/*
>> + * Local variables:
>> + * mode: ASM
>> + * indent-tabs-mode: nil
>> + * End:
>> + */
> 
> 
3), Chen Baozi
> However, it seems this patch doesn't work on OMAP543 (I've modified EARLY_UART_BASE_ADDRESS to 0x48020000 which is the correct address). I'm looking for the reasons…
After fixing a typo when modifying EARLY_UART_BASE_ADDRESS and making clean the working tree, it works for me. Sorry for my carelessness.

4), Chen Baozi

> diff --git a/docs/misc/arm/early-printk.txt b/docs/misc/arm/early-printk.txt
> index fbc3208..eaa66a1 100644
> --- a/docs/misc/arm/early-printk.txt
> +++ b/docs/misc/arm/early-printk.txt
> @@ -13,6 +13,7 @@ where mach is the name of the machine:
>    - exynos5250: printk with the second UART
>    - midway: printk with the pl011 on Calxeda Midway processors
>    - fastmodel: printk on ARM Fastmodel software emulators
> +  - sun6i: printk with 8250 on Allwinner A31 processors
Could this be better to add:

    - omap5432: printk with 8250 compatible UART on OMAP5432 processors

>  
>  The base address and baud rate is hardcoded in xen/arch/arm/Rules.mk,
>  see there when adding support for new machines.
> diff --git a/xen/arch/arm/Rules.mk b/xen/arch/arm/Rules.mk
> index 422ed04..51e823d 100644
> --- a/xen/arch/arm/Rules.mk
> +++ b/xen/arch/arm/Rules.mk
> @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
>  EARLY_PRINTK_BAUD := 115200
>  EARLY_UART_BASE_ADDRESS := 0xfff36000
>  endif
> +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
> +# uart configured at 115200 by bootloader
> +EARLY_PRINTK_INC := 8250
> +EARLY_UART_BASE_ADDRESS := 0x01c28000
> +endif

EARLY_UART_BASE_ADDRESS on OMAP5432 is 0x48020000, so I think we'd better to add another case to support it? For example:

+ifeq ($(CONFIG_EARLY_PRINTK), omap5432)
+# uart configured at 115200 by bootloader
+EARLY_PRINTK_INC := 8250
+EARLY_UART_BASE_ADDRESS := 0x48020000
+endif

5), Ian C
> On Wed, 2013-07-03 at 19:50 +0800, Chen Baozi wrote:
> > On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > 
> > > implement early printk for 8250 uart which is used by lots of arm SOC, such as
> > > Allwinner A31(sun6i) and OMAP5432.
> > > 
> > > Signed-off-by: Bamvor Jian Zhang <bjzhang@xxxxxxxx>
> > > ---
> > >  docs/misc/arm/early-printk.txt    |  1 +
> > >  xen/arch/arm/Rules.mk             |  5 ++++
> > >  xen/arch/arm/arm32/debug-8250.inc | 48 +++++++++++++++++++++++++++++++++++++++
> > >  3 files changed, 54 insertions(+)
> > >  create mode 100644 xen/arch/arm/arm32/debug-8250.inc
> > > 
> > > diff --git a/docs/misc/arm/early-printk.txt b/docs/misc/arm/early-printk.txt
> > > index fbc3208..eaa66a1 100644
> > > --- a/docs/misc/arm/early-printk.txt
> > > +++ b/docs/misc/arm/early-printk.txt
> > > @@ -13,6 +13,7 @@ where mach is the name of the machine:
> > >    - exynos5250: printk with the second UART
> > >    - midway: printk with the pl011 on Calxeda Midway processors
> > >    - fastmodel: printk on ARM Fastmodel software emulators
> > > +  - sun6i: printk with 8250 on Allwinner A31 processors
> > Could this be better to add:
> > 
> >     - omap5432: printk with 8250 compatible UART on OMAP5432 processors
> > 
> > >  
> > >  The base address and baud rate is hardcoded in xen/arch/arm/Rules.mk,
> > >  see there when adding support for new machines.
> > > diff --git a/xen/arch/arm/Rules.mk b/xen/arch/arm/Rules.mk
> > > index 422ed04..51e823d 100644
> > > --- a/xen/arch/arm/Rules.mk
> > > +++ b/xen/arch/arm/Rules.mk
> > > @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
> > >  EARLY_PRINTK_BAUD := 115200
> > >  EARLY_UART_BASE_ADDRESS := 0xfff36000
> > >  endif
> > > +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
> > > +# uart configured at 115200 by bootloader
> > > +EARLY_PRINTK_INC := 8250
> > > +EARLY_UART_BASE_ADDRESS := 0x01c28000
> > > +endif
> > 
> > EARLY_UART_BASE_ADDRESS on OMAP5432 is 0x48020000, so I think we'd
> > better to add another case to support it?
> 
> Yes, this is exactly what should happen. You could either send a patch
> on top of Bamvor's or perhaps he would be willing to integrate these
> bits into his existing patch.
yes, i'd like to do it. meanwhile adding omap5432 uart support is a little
bit confuse with my cover letter. 
how about i send one patch for Cortex-A7 support. and another series patch 
for 8250 compatibility uart. which including
1/3: debug-8250.inc
2/3: sun6i changes in early-printk.txt and Rules.mk.
3/3: omap5432 changes in early-printk.txt and Rules.mk.

> 
> >  For example:
> > 
> > +ifeq ($(CONFIG_EARLY_PRINTK), omap5432)
> > +# uart configured at 115200 by bootloader
> > +EARLY_PRINTK_INC := 8250
> > +EARLY_UART_BASE_ADDRESS := 0x48020000
> > +endif
> 
> Ian.

3, (20:19 2013-07-04)
\TODO
1), send patch v3 with Ian C and Tim Deegan update. do not forget to add changes since v2.
2), wait chenbaozi send ns16550 console patch.
then update debug 8250 code.

21:21 2013-07-03
ARM Cortex-A7 support in Linux
http://comments.gmane.org/gmane.linux.ports.arm.kernel/237252

13:15 2013-07-04
virtualization, kvm, arm, irc, kvm-arm
log location:
novell/im/irc_kvm_arm_20130703.txt
novell/im/irc_opensuse_arm_20130703.txt
1, how to port Cortex-A7 to KVM:
<maz_> bamvor: the biggest task is to look in the A7 TRM and find out what are the cp15 operations we need to trap if any.
<bamvor> maz_: do u mean the trap in hyp mode? i guess than most of it is identical with ca15. but i need check it one by one. 
<maz_> bamvor: I don't expect that to be a very long task anyway, but that's a good ramp-up for playing with KVM.
<Bamvor1> maz_: where could i get the lastest kvm-arm code, the github code seems out of date.
<maz_> Bamvor1: use mainline. everything is there.
2, maz_ has a A20 device
<maz_> XavierGr: dual A7, apparently. But I gave up trying to find a recent kernel/bootloader for this. If Maxime manages to get mainline running on it, I'll have a look again.
3, <mgalgs> bamvor: we're also looking into kvm support for A7 here at QuIC (msm8226) so I guess we're in good company :)

14:01 2013-07-04
GTD
0, 10:30-21:20

1, today
1), 30' 1h discuss with Guangliang about cept support in xen. see"14:12 2013-07-04" 
2), 30' 18:17-19:00 19:31-19:59 debug the console patch. see"15:51 2013-07-03"
3), 20:00-20:16 send patch to virtualization-dev. see"15:28 2013-07-04"
4), 20:17-21:15 debug sun6i xen. see"21:11 2013-07-04"

14:12 2013-07-04
virtualization, kvm, xen, ceph
1, link about ceph on libvirt and qemu
1), the example for qemu command
Guangliang Zhao: http://ceph.com/docs/master/rbd/qemu-rbd/
qemu -m 1024 -drive format=rbd,file=rbd:data/squeeze,cache=writeback
2), for libvirt xml:
Guangliang Zhao: http://ceph.com/docs/master/rbd/libvirt/
<disk type='network' device='disk'>
        <source protocol='rbd' name='libvirt-pool/new-libvirt-image'>
                <host name='{monitor-host}' port='6789'/>
        </source>
        <target dev='hdb' bus='ide'/>
</disk>
2, guangliang has a ceph environment(server). we could use this for test.
3, it seems that only i need to do is add device and drive support in libxl.
e.g. add drive in libxl_dm.c
\TODO check the chance add drive and someting in libxl_dm.c
but it might be libxl is supported these type of device.
i only need to do is add code in libxl driver.

15:28 2013-07-04
virtualization, libvirt, kvm, bnc#815201, save hang, cont7, send patch to virtualization-dev
1, [PATCH RFC] fix overflow in qemu save
there is a bug reported by Martin Jakl <martin.jakl@qbicon.cz>, about virsh save hang.
after some test, i found that this bug could be reproduce 100% when the vm actually used more that 2Gbytes. after some debug, i know that this is because a variable overflow during save cleanup routine in qemu. see the details in my patch.

i have update to qemu to 1.3.1 and apply my patch, Martin said that basiclly it works.  i am not familiar with how to submit a patch to qemu package. and i want to know that if Martin think it works, what should i do for applying this patch in opensuse12,3. both kvm and qemu package need this patch.

BTW: this bug is not found in sle11 sp2 and sp3.

Index: qemu-1.3.1/buffered_file.c
===================================================================
--- qemu-1.3.1.orig/buffered_file.c
+++ qemu-1.3.1/buffered_file.c
@@ -142,7 +142,7 @@ static int buffered_close(void *opaque)
 
     DPRINTF("closing\n");
 
-    s->xfer_limit = INT_MAX;
+    s->xfer_limit = UINT_MAX;
     while (!qemu_file_get_error(s->file) && s->buffer_size) {
         ret = buffered_flush(s);
         if (ret < 0) {

2, "Andreas Färber<afaerber@suse.com>"_20130704_2041
> Hi,
> 
> Am 04.07.2013 14:15, schrieb Bamvor Jian Zhang:
> > there is a bug reported by Martin Jakl <martin.jakl@qbicon.cz>, about virsh save hang.
> > after some test, i found that this bug could be reproduce 100% when the vm actually used more that 2Gbytes. after some debug, i know that this is because a variable overflow during save cleanup routine in qemu. see the details in my patch.
> > 
> > i have update to qemu to 1.3.1 and apply my patch, Martin said that basiclly it works.  i am not familiar with how to submit a patch to qemu package. and i want to know that if Martin think it works, what should i do for applying this patch in opensuse12,3. both kvm and qemu package need this patch.
> 
> Actually I notice that I still have the qemu v1.3.1 update including
> updates to our patch handling scripts sitting in
> https://build.opensuse.org/project/show?project=home%3Aa_faerber%3Abranches%3AOBS_Maintained%3Aqemu
> Let me clean that up and SR it, then you can more easily add your patch
> to the new openSUSE Git repository and regenerate the qemu package.
ok. my patch is suitable for both 1.3.0 and 1.3.1
So, where is the git location? i don't know. do i need to send it to git and sr to obs both?
> 
> For kvm we still had a quilt-based workflow in 12.3, so that is separate.
> 
> > 
> > BTW: this bug is not found in sle11 sp2 and sp3.
> > 
> > Index: qemu-1.3.1/buffered_file.c
> > ===================================================================
> > --- qemu-1.3.1.orig/buffered_file.c
> > +++ qemu-1.3.1/buffered_file.c
> > @@ -142,7 +142,7 @@ static int buffered_close(void *opaque)
> >  
> >      DPRINTF("closing\n");
> >  
> > -    s->xfer_limit = INT_MAX;
> > +    s->xfer_limit = UINT_MAX;
> 
> Have you compared upstream QEMU code? The file and function no longer
> exists in qemu.git, not sure where it went...
buffered_file_ops on 1.3.1 is replaced by unix_write_ops in upstream.
the migration code change a lot. i am not found the similar limit in
upstream code.
> 
> In v1.3.1, the xfer_limit field was declared as size_t, which is
> unsigned, so your fix seems more correct. However...
> 
> http://git.qemu.org/?p=qemu.git;a=blob;f=buffered_file.c;h=9a8bd0446fcdda7cef7da52da96827e6d753a0b8;hb=04024dea2674861fcf13582a77b58130c67fccd8
> 
> It would probably be best though to use SIZE_MAX:
> 
> http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/stdint.h.html
yes, got it. i will change it in next version.
> 
> Regards,
> Andreas
> 
> >      while (!qemu_file_get_error(s->file) && s->buffer_size) {
> >          ret = buffered_flush(s);
> >          if (ret < 0) {
> > 
> > 
> > thanks
> > 
> > Bamvor
> > 
> > _______________________________________________
> > virtualization-dev mailing list
> > virtualization-dev@lists.novell.com
> > https://lists.innerweb.novell.com/mailman/listinfo/virtualization-dev
> > Search Archives: https://lists.innerweb.novell.com/search

3, the migration in the lastest qemu:
qmp_migrate -> fd_start_outgoing_migration -> migrate_fd_connect -> qemu_fdopen -> pick up unix_write_ops
static const QEMUFileOps unix_write_ops = {
    .get_fd =     socket_get_fd,
    .writev_buffer = unix_writev_buffer,
    .close =      unix_close
};
migrate_fd_connect -> migration_thread

migrate_fd_cleanup->qemu_fclose

21:11 2013-07-04
virtualization, xen, arm, allwinner A31, sun6i, debug hang in setup_pagetables
1, 
setup_pagetables<441>: 002d7600, 002d7600
setup_pagetables<447>: 002d7600, 002ce000
setup_pagetables<448>: 480943578
setup_pagetables<450>
setup_pagetables<453>
Xen heap: 131072 pages  Dom heap: 131072 pages

per_cpu(xen_dommap, 0) is right.
this_cpu(xen_dommap) is wrong.
because  READ_SYSREG(TPIDR_EL2) is ramdom(this time 480943578).
#define HTPIDR          p15,4,c13,c0,2  /* HYp Software Thread Id Register */
why?

2, \TODO
try using the all 2G memory, and test again.

11:11 2013-07-05
irc, virtualization, xen, discuss about free_xenheap_pages and get_order_from_bytes
20130704
<doa> how to use void free_xenheap_pages(void *v, unsigned int order) ? what does the order mean?
<hypermatt> doa: order = size of region to free, in power-of-2-pages
<hypermatt> so order 0 = 1 page, order 1 = 2 pages, order 2 = 4 pages, and so on
<hypermatt> there's a helper function to just free 1 page:
<hypermatt> xen/include/xen/mm.h
<hypermatt> 48:void free_xenheap_pages(void *v, unsigned int order);
<hypermatt> 50:#define free_xenheap_page(v) (free_xenheap_pages(v,0))
<hypermatt> ie. free_xenheap_page
<hypermatt> note the lack of "s"
<CRCinAU> hypermatt: I'd post that to xen-devel
<hypermatt> how come?
<hypermatt> oh, they emailed there too, huh
<CRCinAU> just more that patches / changes / bugs posted to IRC usually get overlooked
<hypermatt> where's the bug? ;)
<CRCinAU> I dunno - I'll go make a coffee....
<CRCinAU> ;)
<hypermatt> sounds good
<doa> hypermatt: thank you,    I got an example
<doa> +    int order = get_order_from_bytes(1024 * 1024 * 256);
<doa> +
<doa> +    if(d->arch.hvm_domain.
<doa> +        ether_controls.unpack_map != NULL)
<doa> +    {
<doa> +        free_domheap_pages(virt_to_page(d->arch.hvm_domain.
<doa> +                    ether_controls.unpack_map), order);
<doa> +    }
<doa> what  the get_order_from_bytes()  for ?
<hypermatt> well, it converts the amount of bytes given into an order
<hypermatt> it's in include/xen/mm.h
<doa> ok, I see. but why should the order  be in power-of-2-pages ?
<hypermatt> because it's easier for the memory allocator to work with sizes that way
<hypermatt> it can treat the free heap as a big empty chunk of order N
<hypermatt> and if it needs to allocate a smaller chunk, it can split that chunk in 2, recursively
<hypermatt> until it gets the smaller order size needed
<doa> got it. thank you again
<hypermatt> np

11:17 2013-07-05
GTD
0, 11:10-17:50

1, today
1), 11:20-12:00 15:05-15:18 bnc#815201: virsh save hang. patch for opensuse. "15:28 2013-07-04"2
2), 50' lunch and learn. QA hamsta. see"12:08 2013-7-5"
2), 2h training, Dongmao Zhang, see"12:58 2013-7-5".

12:08 2013-7-5
training, qa, automation, hamsta, Junwei hao
1, 
hardware maintenance, setup & test automation.
ltp: linux test plan.
install system by autoyast.

2, member
Lukas: leader
cyril: 
vilem: qadb
pavel

Beijing:
Junwei hao
jerry: backend.
jia yao
zhibin han
xiaoli ai.

3, qa-auto@suse.com

12:58 2013-7-5
training, Dongmao Zhang
1, fabric
run command through ssh connection.
2, dns
nslook, dig: search ip from dns server.
3, grep like tool
ack, cg/vg
4, last
ssh connection

17:45 2013-07-05
mailing list, virtualization, xen, arm
1, [Xen-devel] [PATCH] xen/arm: Trap the ACTLR register 
Julien Grall julien.grall@linaro.org
On Cortex-A15 ACTLR is used to set the SMP bit. If the guest has the control on
this register, it can disable SMP support and so TLB broadcast.
Implement the access to ACTRL as read-only register with SMP bit set to one
if the guest has multiple VCPUs.

10:39 2013-07-06
1, update the common in look up processor info
> At the end of all this r1 == physical address of the platform
> information?
yes
> Can the initial comment say "Get processor specific proc info into rX" please.
sure
> If you could also follow the lead of other code in this file and
> obsessively comment what it is doing that would be great. e.g. comments
> like "r1 := physical address of start of table", "r2 := physical address
> of end of table" etc.
ok. i will
2, merge proc-ca15.S and proc-ca7.S into proc-v7.S
> Lets put the __v7_ca7mp_proc_info and __v7_ca15mp_proc_info here,
> calling v7_init directly and do away with proc-ca15.S and proc-ca7.S.
Ok. 
So, i will remove proc-ca15.S and proc-ca7.S?

1), do i need add ".long" before "v7_init"?
yes

11:33 2013-07-08
company, colleague, Andreas Färber, telephone number
"Andreas Färber<afaerber@suse.de>"_email_"Andreas telephone change"_20130705_2316
Hello everyone,

There were some hiccups with people moving in the NUE offices that led
to my telephone being accidentally moved on Wednesday, too. Since today
I have a telephone again, but the extension is now -184 rather than
-183. They say they can change it back in ~4 weeks earliest.

Regards,
Andreas

-- 
SUSE LINUX Products GmbH, Maxfeldstr. 5, 90409 Nürnberg, Germany
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer; HRB 16746 AG Nürnberg

14:30 2013-07-08
1, It certainly sounds like it could be a kernel tuning issue or buffering issue
2, ref:https://forums.citrix.com/thread.jspa?threadID=266744&start=0&tstart=0 
3, 回复:
因为不知道具体版本，没有看到相关log，难以回答。
可以先看看是什么原因导致domain0慢。如果是dom0 memory不足，可以用"xm mem-set Domain-0 xxx"扩大dom0可用内存。
另外建议看看是哪个进程导致dom0 cpu, mem, IO占用高，然后对症分析。

17:14 2013-07-08
1, log
- UART enabled -
- CPU 00000000 booting -
- Machine ID 00000f34 -
- Started in Secure state -
- Entering Hyp mode -
- Zero BSS -
- Setting up control registers -
- Turning on paging -
- Ready -
RAM: 0000000040000000 - 00000000bfffffff

MODULE[1]: 0000000060000000 - 0000000060400000 
Placing Xen at 0x00000000bfe00000-0x00000000c0000000
start_xen<444>
Xen heap: 262144 pages  Dom heap: 262144 pages
setup_mm<336>
setup_mm<346>
setup_mm<351>
setup_mm<359>
setup_mm<361>
setup_mm<365>
setup_mm<391>
setup_mm<393>
setup_mm<396>: xenheap_pfn_start: 516096, boot_pfn_start: 778238
setup_mm<397>: xenheap_start: 2113929216, boot_start: 3187662848
init_xenheap_pages<1333>: ps<2113933312>, pe<3187662848>
init_xenheap_pages<1336>: 027c0020, 262141
init_heap_pages<1163>
init_heap_pages<1174>
init_heap_pages<1177>
init_heap_pages<1179>
init_heap_pages<1190>: pg<027c0020>, i<0>
1), xenhead_start and boot_start is definitly wrong:
setup_mm<397>: xenheap_start: 2113929216, boot_start: 3187662848

09:55 2013-07-09
GTD
0, 9:40-18:10

1, today
1), 20' mailing list.
2), check my console patch status. still no reply.
3), 10:42-11:30 15:00-15:38 check code about lock work. ref qemu lock. see"10:56 2013-07-09"
4), 15:38-18:07 send cortex-a7 patch for xen. see"15:38 2013-07-09"

2, next
1), lock?
2), enable rbd on qemu.
3), continue to debug xen for sun6i. ref"15:38 2013-07-09". compare mm code.
4), try sun6i upstream kernel.
5), set up cubieboard DNS server. and post to http://cubiebook.org/index.php?title=Main_Page
6), read the xen 4.4 discuss
http://lists.xen.org/archives/html/xen-devel/2013-06/msg01391.html

3, next week
1), 下周无论如何需要开始搞libxl event. 没有其它合适的东西啊。
2), Cortex-A12 introduction: 20130711 15UTC
http://spectrum.ieee.org/webinar/delivering-fullfeatured-mobile-experiences-on-midrange-devices?utm_source=ARM&utm_medium=email&utm_campaign=promo

10:07 2013-07-09
suse, sle11 sp3
1, Latest CPU Support
SUSE Linux Enterprise 11 Service Pack 3 introduces support for latest CPUs, including:
Intel® Xeon® processor E5-4600/2600/1600
Intel® Xeon® processor E5-2600 v2 "Ivy Bridge-EP"
Intel® Xeon® processor E5-2400 v2 "Ivy Bridge-EN"
The 4th generation Intel® Core (TM) processor
AMD Opteron 4000/6000 family
2, CPU and RAM limits
SUSE Linux Enterprise 11 can support up to 4096 logical CPUs on Intel 64. This has been confirmed on the SGI UV2 server platform. The theoretical limit of RAM support of SUSE Linux Enterprise 11 is 64TiB. The practical limit, which is more important to customers, is 16TiB RAM on certified hardware.

10:26 2013-07-09
opensuse, 12.3, guide
http://opensuse-guide.org/index.php

10:56 2013-07-09
libvirt, xen, qemu
1, qemu and lock
qemuProcessStart 
    -> virCommandSetPreExecHook(cmd, qemuProcessHook, &hookData);
    -> virCommandRun

qemuProcessHook -> virDomainLockProcessStart

the hook is executed by virExec
virCommandRun -> virCommandRunAsync -> virExec -> cmd->hook()

2, lock
virDomainLockProcessStart -> virDomainLockManagerNew -> virLockManagerNew 
                                                     -> add leases and disks
1), leases
Device leases
http://libvirt.org/formatdomain.html#elementsLease
When using a lock manager, it may be desirable to record device leases against a VM. The lock manager will ensure the VM won't start unless the leases can be acquired.

2), virLockManagerNew
virLockManagerNew -> driver->drvNew
driver->lockManager: init byvirLockManagerPluginNew. 

there are three lock driver in libvirt: locked, nop, sanlock.

3), lock is used by device, migration live changes: such as device attach.
qemuDomainAttachDeviceFlags -> qemuDomainAttachDeviceLive -> qemuDomainAttachDeviceDiskLive -> qemuDomainChangeEjectableMedia -> virDomainLockDiskAttach

2, send to Jim(not today)
about my libxl driver work

i have post my console patch last friday.

about lock: 
lock and job is different.

15:38 2013-07-09
1, changes since v2
1), define cpu_init function instead of assemble jump code in struct proc_info_list
2), add commit in look up proc info in assemble code.
3), merge __v7_ca7mp and __v7_ca15mp and relative definition into prov-v7.S
4), move MIDR mask definition from headers to prov-v7.S
5), move procinfo.h from xen/include/asm-arm/arm32 to xen/include/asm-arm
2, send patch
git send-email --no-chain-reply-to --annotate --to xen-devel@lists.xen.org --cc ian.campbell@citrix.com --cc tim@xen.org --cc bjzhang@suse.com  0001-xen-arm-introduce-Cortex-A7-support.patch
3, test xen on arndale.
make dist-xen XEN_TARGET_ARCH=arm32 CROSS_COMPILE=arm-linux-gnueabihf- CONFIG_EARLY_PRINTK=exynos4210 CONFIG_DTB_FILE=/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/exynos5250-arndale.dtb
mkimage -A arm -T kernel -a 0x80200000 -e 0x80200000 -C none -d "xen/xen.bin" xen-uImage

15:53 2013-07-09
software skill, editor, vi, text process
最初由Dongmao zhang介绍.
http://linuxtoy.org/archives/killer-vim-tip.html
Vim 杀手级 Tip: 快速处理配对标点符号中的文本
2010-06-23 Toy Posted in TipsRSS
这称得上是一个 Vim 的杀手级 Tip，利用该 Tip，你可以快速处理 '、"、()、[]、{}、<> 等配对标点符号中的文本内容，包括更改、删除、复制等。

ci'、ci"、ci(、ci[、ci{、ci< - 分别更改这些配对标点符号中的文本内容
di'、di"、di(、di[、di{、di< - 分别删除这些配对标点符号中的文本内容
yi'、yi"、yi(、yi[、yi{、yi< - 分别复制这些配对标点符号中的文本内容
对于经常用 Vim 写代码的朋友来说，善用此 Tip 将极大的提高编码效率。

