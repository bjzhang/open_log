
10:52 2013-07-01
GTD
0, 10:40-17:21

1, today
1), 10:50-11:20 work report. see"10:54 2013-07-01"
2), 13:57-17:20 xen arm patch. see"14:38 2013-07-01"
1h personal stuff

10:54 2013-07-01
work report - week 25, 26
1, bnc#815201
1), it could be fixed if update qemu to the lastest one. but update the major version is not allowed and the migration code is changed from qemu-1.3 to qemu-1.5.
2), after some debug, i found that there is a overflow in the clean up in migration. if i fix this, test 30times succesfull. provide the package to reporter for test.
2, US/China virtualization sync.

14:38 2013-07-01
virtualization, xen, arm, allwinner A31, sun6i, c env patch v2, cont1
1, build
make dist-xen XEN_TARGET_ARCH=arm32 CROSS_COMPILE=arm-linux-gnueabihf- CONFIG_EARLY_PRINTK=sun6i CONFIG_DTB_FILE=/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/sun6i.dtb CONFIG_LOAD_ADDRESS=0x40000000
mkimage -A arm -T kernel -a 0x40200000 -e 0x40200000 -C none -d "xen/xen.bin" xen-uImage
boot:
fatload mmc 0:2 40008000 linux/xen-uImage
bootm 40008000
2, do i need include omap5432 patch in my patch. i guess not.
3, hang in cpu init
Starting kernel ...

- UART enabled -
- CPU 00000000 booting -
- Machine ID 00000f34 -
- Started in Secure state -
- Entering Hyp mode -
- Zero BSS -
- Setting up control registers -
4, (10:13 2013-07-02)
after debug i know that, bl is wrong. because bl will take the pc+4 as lr, which is obvious wrong. i should set lr through the adr instruction like kernel:
	adr	lr, BSYM(1f)			@ return (PIC) address
1f: 
    xxx

2), BTW, the compile command
arm-linux-gnueabihf-gcc -D__ASSEMBLY__ -include /home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include/xen/config.h -O1 -fno-omit-frame-pointer -marm -g -fno-strict-aliasing -Wall -Wstrict-prototypes -Wdeclaration-after-statement -Wno-unused-but-set-variable -Wno-unused-local-typedefs -fno-builtin -fno-common -Wredundant-decls -iwithprefix include -Werror -Wno-pointer-arith -pipe -I/home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include -fno-stack-protector -fno-exceptions -Wnested-externs -msoft-float -mcpu=cortex-a15 -mfpu=vfpv3 -mfloat-abi=softfp -DGCC_HAS_VISIBILITY_ATTRIBUTE -fno-optimize-sibling-calls -DEARLY_PRINTK -DEARLY_PRINTK_INC=\"debug-8250.inc\" -DEARLY_PRINTK_BAUD= -DEARLY_UART_BASE_ADDRESS=0x01c28000 -g -D__XEN__ -include /home/bamvor/sda3/home/novell/work/source/virtualization/xen/upstream/xen_arm/xen-unstable/xen/include/xen/config.h -DVERBOSE -fno-omit-frame-pointer -DCONFIG_FRAME_POINTER -MMD -MF .head.o.d -DCONFIG_DTB_FILE=\"/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/sun6i.dtb\" -c arm32/head.S -o arm32/head.o

5, what does AT ( XEN_PHYS_START ) mean?
this specfied the load address.

6, write v2 patch.
1), \TODO modify head.S
is it worth that create a seperated lookup_processor_type function in proc-v7.S?
2), patch 1 commit message
xen: arm: introduce Cortex-A7 support

Introduce Cortex-A7 with a scalable proc_info_list which including cpu id
and cpu initialize function.
In head.S, search cpu specific MIDR in procinfo and call such initialize
function. Currently, support Cortex-A7 and Cortex-A15.

3), patch 2 commit message:
xen: arm: implement early prink for 8250 uart

implement early printk for 8250 uart which is used by lots of arm SOC, such as
Allwinner A31(sun6i) and OMAP5432.

4), finish v2 version, review it again and send it out.

---
it seems that it would better create a common head for both debug-8250.inc and
ns16550.c when ns16550.c is worked on arm soc.

5), send patch
git format-patch --cover-letter --signoff -n2
git send-email --no-chain-reply-to --annotate --to xen-devel@lists.xen.org --cc ian.campbell@citrix.com --cc julien.grall@linaro.org --cc Stefano.Stabellini@eu.citrix.com --cc andre.przywara@calxeda.com --cc bjzhang@suse.com --cc baozich@gmail.com 000*.patch

7, add mode switch patch and test again.
fail

8, todo 
1), try the same thing as Chao baozi, check where it failed.
if it fail after mmu flush, is that mean there is some memory map fail in sun6i?
2), if fail. find out why load/store exclusive fail, is it because other core not started? try it on kernel.
3), do i need to modify mcpu in gcc command?
i guess not. because BIG.little technology.
4), and addr in Makefile.
0x80000000 -> 0x40000000, is it necessary?

16:35 2013-07-01
mailing list, virtualization, xen, hypercall
"Xu, Dongxiao dongxiao.xu@intel.com"_email_"[Xen-devel] About hypercalls"_20130701_1506
to: cooldharma06、 xen-devel 
For hypercall definition in Xen, please refer to:
hypercall_table in XEN/arch/x86/x86_64/entry.S.
 
About the hypercall caller in Linux kernel size, please refer to:
KERNEL/arch/x86/include/asm/xen/hypercall.h.
 
Thanks,
Dongxiao
 
9:26 2013-7-2
mailing list, virtualization, kvm, arm, Cortex-A57
1, Huawei has had worked on kvm support Cortex-A57, is it means that huawei'A57 will out on 2014?
[PATCH 0/6][RFC] AArch64 support for Versatile Express using KVM
1), m.hamayun@virtualopensystems.com
The work has been sponsored by Huawei, and developed in collaboration with Huawei Technologies Duesseldorf GmbH, European Research Center Munich (ERC). A working tree of this implementation is available on the "kvm-aarch64" branch of the following github repository.

https://github.com/virtualopensystems/qemu.git
2), Peter Maydell peter.maydell@linaro.org 
This rather overlaps with a bunch of work John Rigby has already done
(though not yet published to the mailing lists):

https://git.linaro.org/gitweb?p=people/pmaydell/qemu-aarch64.git;a=shortlog;h=refs/heads/kvm-aarch64-wip

so now we need to reconcile the two trees. If you'd let us know
you were doing this a bit earlier we could probably have
coordinated something...

3), Andreas Färber afaerber@suse.de
Andreas join the discussion, because he is a qemu developer.

2, same series patch: about how to pick up kernel headers
Peter Maydell peter.maydell@linaro.org 
Sorry, this bit is wrong; ignore it. We pick the kernel headers based
on $cpu, not $target, so get the aarch64 ones whether we're building
arm-softmmu or aarch64-softmmu.

10:08 2013-07-02
GTD
0, 9:40-21:14

1, today
1), 20' mailing list: kvm. see"9:26 2013-7-2"
2), 10:12-11:30 14:00-19:00 20:43-21:20 xen arm patch. see"14:38 2013-07-01"4
3), after finish the patch check the Chen baozi discuss status.

10:11 2013-07-03
GTD
0, 10:10-21:43

1, today
1), 20'(in subway): check the mail.
2), 10:40-11:40 15:30-15:51 reply to virsh save hang bug. see"10:40 2013-07-03"
3), debug the console patch. see"15:51 2013-07-03"
4), 40' arm call.
5), discuss with mac_ and other guys about how to enable kvm-arm on a Cortex-A7 SOC. see"13:15 2013-07-04"

10:34 2013-07-03
company, suse, hackweek, award
1, "Melanie Reichel"_email_"Your Hackweek IX Awards for Best openSUSE Project"_20130702_1753
Hi Alex, Bamvor Jian, Bernhard, David, Dirk, Marcus, Max, Michael, Reinhard and Robert,

I wanted to congratulate you on your win for Best openSUSE Project during Hackweek IX.

Your award is one week, so 5 work days, of ITO time.
Please show this email to your manager as a proof that you have received this additional ITO time to work on this project. You can take that time during the next 12 months in agreement with your manager.

Congratulations again on your great project!

Would you be able to send me the email addresses of your external team mates so that I know how to get in contact with them?
Andrew Wafaa
Guillaume Gardet

Best,
Melanie

2, "Alexander Graf <agraf@suse.de>" reply
On 07/02/2013 11:53 AM, Melanie Reichel wrote:
> Hi Alex, Bamvor Jian, Bernhard, David, Dirk, Marcus, Max, Michael, Reinhard and Robert,
>
> I wanted to congratulate you on your win for Best openSUSE Project during Hackweek IX.
>
> Your award is one week, so 5 work days, of ITO time.
> Please show this email to your manager as a proof that you have received this additional ITO time to work on this project. You can take that time during the next 12 months in agreement with your manager.
>
> Congratulations again on your great project!
Thanks a lot! Kudos to everyone who got ARM up and rolling on openSUSE 
so far :).

>
> Would you be able to send me the email addresses of your external team mates so that I know how to get in contact with them?
Happily :)

> Andrew Wafaa
awafaa@opensuse.org
> Guillaume Gardet
guillaume.gardet@opensuse.org

Alex

10:40 2013-07-03
virtualization, libvirt, kvm, bnc#815201, save hang, cont6
1, try the same version with report.
1), only update to qemu or update kvm, qemu and qemu-tools.
after check the kvm package, i know that why Martin got the different result.
because qemu-kvm is compile from seperated qemu source. i need to fix this into both kvm and qemu package.

2, reply
Hi, Martin

sorry for the wrong package, i have patch the qemu-kvm in kvm package.
kvm 1.3 is different from kvm 1.5, the latter one is a script calling qemu-system-x86_64. i do not notice this before.
i test 100times pass with this package, including 76times save while vm memory used more than 2Gbytes.

could u please test it again?

BTW: my package version: kernel-desktop-3.7.10-1.1.1.x86_64, libvirt-1.0.2-1.3.1, libvirt-client-1.0.2-1.3.1, qemu-1.3.1-3.4.1, qemu-tools-1.3.1-3.4.1, kvm-1.3.1-3.5.1

do u update other package in opensuse12.3 update?

11:19 2013-07-03
community, opensuse, public openSUSE ARM team call
"Andrew Wafaa <awafaa@opensuse.org>"_email_"[opensuse-arm] Public ARM call details"_20130701_1730
All,

Please find below the dial-in details for the first public openSUSE
ARM team call. This call will take place on 03July at 1000UTC. For
those that are unable to dial in, we will also be on IRC if that is
any easier for you to participate in:

Participant code: 0180154#

• UK (Toll Free): 0800 141 2084
• UK Cambridge: +44 1223 406065
• UK Sheffield: +44 114 282 8002
• USA (Toll Free): +1 866 880 1148
• USA San Jose: +1 408 576 1502
• India (Toll Free) 18004254138
• India Bangalore +91 80 25185500
• Japan: +81 45 345 5355
• Germany: +49 89 45604050
• Norway: +47 7318 7518
• Sweden: +46 46313131
• France: +33 4 97 23 51 01
• Taiwan (Hsinchu): +886 3 5657119
• Shanghai (Toll Free): 4006-782-367

Kind regards,

Andy

--
Andrew Wafaa
IRC: FunkyPenguin
GPG: 0x3A36312F
--
To unsubscribe, e-mail: opensuse-arm+unsubscribe@opensuse.org
To contact the owner, e-mail: opensuse-arm+owner@opensuse.org

15:51 2013-07-03
(14:19 2013-07-04)
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont4, rebase
1, compile

16:19 2013-07-03
company, colleague, openSUSE team, Tomás Chvátal, report to Agustin Benito Bethencourt
"Agustin Benito Bethencourt <abebe@suse.com>"_email_"[devel] new openSUSE Team member"_20130702_1519
Hi,

I am happy to announce that Tomás Chvátal joined the openSUSE Team at SUSE 
today, coming from L3/QA Maintenace. He is located now in room 5.16 (5th 
floor), together with Michal Hrusecky, the other Team member at Prague office. 

Tomas has a wide experience in openSUSE since he contributes to factory 
regularly. He is also a Gentoo project Board member, which provides him an 
interesting background in Linux based distributions.

Welcome Tomas.

Saludos
-- 
Agustin Benito Bethencourt
openSUSE Team Lead at SUSE
abebe@suse.com

17:20 2013-07-03
xen, arm, sun6i
1, hang at
    memset(this_cpu(xen_dommap), 0, DOMHEAP_SECOND_PAGES*PAGE_SIZE);
\TODO: do i actually enter into hyp mode???

19:55 2013-07-03
virtualization, xen, arm, allwinner A31, sun6i, c env patch v2, cont2, upstream reply
1, Patch 1
1), Ian C
> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > Introduce Cortex-A7 with a scalable proc_info_list which including cpu id
> > and cpu initialize function.
> > In head.S, search cpu specific MIDR in procinfo and call such initialize
> > function. Currently, support Cortex-A7 and Cortex-A15.
> 
> I like the general shape of it, thanks!
> 
> A few comments below.
> 
> > Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
> 
> > diff --git a/xen/arch/arm/arm32/head.S b/xen/arch/arm/arm32/head.S
> > index 0588d54..d62401d 100644
> > --- a/xen/arch/arm/arm32/head.S
> > +++ b/xen/arch/arm/arm32/head.S
> > @@ -20,6 +20,7 @@
> >  #include <asm/config.h>
> >  #include <asm/page.h>
> >  #include <asm/processor-ca15.h>
> > +#include <asm/processor-ca7.h>
> >  #include <asm/asm_defns.h>
> >  
> >  #define ZIMAGE_MAGIC_NUMBER 0x016f2818
> > @@ -188,15 +189,33 @@ skip_bss:
> >  
> >          PRINT("- Setting up control registers -\r\n")
> >  
> > -        /* Read CPU ID */
> > +        /* Get processor specific proc info */
> >          mrc   CP32(r0, MIDR)
> >          ldr   r1, =(MIDR_MASK)
> >          and   r0, r0, r1
> > -        /* Is this a Cortex A15? */
> > -        ldr   r1, =(CORTEX_A15_ID)
> > -        teq   r0, r1
> > -        bleq  cortex_a15_init
> > +        ldr   r1, = __proc_info_start
> > +        add   r1, r1, r10
> > +        ldr   r2, = __proc_info_end
> > +        add   r2, r2, r10
> > +1:      ldr   r3, [r1]
> > +        teq   r0, r3
> > +        beq   2f
> > +        add   r1, r1, #PROCINFO_sizeof
> > +        cmp   r1, r2
> > +        blo   1b
> > +        mov   r4, r0
> > +        PRINT("- Missing processor info: ")
> > +        mov   r0, r4
> > +        bl    putn
> > +        PRINT(" -\r\n")
> > +        b     fail
> > +2:
> 
> At the end of all this r1 == physical address of the platform
> information?
yes
> Can the initial comment say "Get processor specific proc info into rX" please.
sure
> If you could also follow the lead of other code in this file and
> obsessively comment what it is doing that would be great. e.g. comments
> like "r1 := physical address of start of table", "r2 := physical address
> of end of table" etc.
ok. i will
> 
> >  
> > +        /* Set return address(PIC) */
> > +        /* XXX: it only work while thumb2 is not enable in xen */
> 
> That's true of lots/all of our asm. Lets ignore that for now (no need to
> comment).
ok
> Since we already have physoffset in r10 would it be clearer to make use
> of that?
sorry if i am wrong. do u mean change "adr lr, 1f" to something like 
"add lr, pc, r10"?
> 
> > +        adr   lr, 1f
> > +        add   pc, r1, #PROCINFO_cpu_init 
> > +1:
> >          /* Set up memory attribute type tables */
> >          ldr   r0, =MAIR0VAL
> >          ldr   r1, =MAIR1VAL
> 
> > diff --git a/xen/arch/arm/arm32/proc-v7.S b/xen/arch/arm/arm32/proc-v7.S
> > new file mode 100644
> > index 0000000..2d46dca
> > --- /dev/null
> > +++ b/xen/arch/arm/arm32/proc-v7.S
> > @@ -0,0 +1,36 @@
> [...]
> > +#include <asm/asm_defns.h>
> > +#include <asm/arm32/processor.h>
> > +
> > +.globl v7_init
> > +v7_init:
> > +        /* Set up the SMP bit in ACTLR */
> > +        mrc   CP32(r0, ACTLR)
> > +        orr   r0, r0, #(ACTLR_V7_SMP) /* enable SMP bit */
> > +        mcr   CP32(r0, ACTLR)
> > +        mov   pc, lr
> 
> Lets put the __v7_ca7mp_proc_info and __v7_ca15mp_proc_info here,
> calling v7_init directly and do away with proc-ca15.S and proc-ca7.S.
Ok. 
So, i will remove proc-ca15.S and proc-ca7.S?
> 
> > +
> > +/*
> > + * Local variables:
> > + * mode: ASM
> > + * indent-tabs-mode: nil
> > + * End:
> > + */
> 
> > diff --git a/xen/include/asm-arm/arm32/procinfo.h b/xen/include/asm-arm/arm32/procinfo.h
> > new file mode 100644
> > index 0000000..7e7a775
> > --- /dev/null
> > +++ b/xen/include/asm-arm/arm32/procinfo.h
> > @@ -0,0 +1,30 @@
> > +/*
> > + * include/asm-arm/arm32/procinfo.h
> 
> I suggest to put this in just include/asm-arm/procinfo.h. The same
> struct should eventually apply to 64-bit too.
ok.
> 
> [...]
> > +#ifndef __ASM_ARM_ARM32_PROCINFO_H
> > +#define __ASM_ARM_ARM32_PROCINFO_H
> > +
> > +struct proc_info_list {
> > +	unsigned int		cpu_val;
> 
> I think we should include "unsigned int cpu_mask" here too and remove
> MIDR_MASK. Will need equivalent changes in head.S as well.
yes, i need to do this for Aarch64 extesion in future.
> 
> > +	unsigned long		cpu_init;        /* used by head.S */
> > +};
> > +
> > +#endif
> > diff --git a/xen/include/asm-arm/processor-ca15.h b/xen/include/asm-arm/processor-ca15.h
> > index 06cdbdd..96438f0 100644
> > --- a/xen/include/asm-arm/processor-ca15.h
> > +++ b/xen/include/asm-arm/processor-ca15.h
> > @@ -1,9 +1,6 @@
> >  #ifndef __ASM_ARM_PROCESSOR_CA15_H
> >  #define __ASM_ARM_PROCESSOR_CA15_H
> >  
> > -
> > -#define CORTEX_A15_ID     (0x410FC0F0)
> > -
> >  /* ACTLR Auxiliary Control Register, Cortex A15 */
> >  #define ACTLR_CA15_SNOOP_DELAYED      (1<<31)
> >  #define ACTLR_CA15_MAIN_CLOCK         (1<<30)
> > @@ -26,7 +23,6 @@
> >  #define ACTLR_CA15_OPT                (1<<9)
> >  #define ACTLR_CA15_WFI                (1<<8)
> >  #define ACTLR_CA15_WFE                (1<<7)
> > -#define ACTLR_CA15_SMP                (1<<6)
> 
> Lets leave this for completeness even if we aren't using it.
i was thinking about it. if i define the following
#define ACTLR_CA15_SMP                ACTLR_V7_SMP
i need include asm/arm/processor.h which including CP micros.
> 
> >  #define ACTLR_CA15_PLD                (1<<5)
> >  #define ACTLR_CA15_IP                 (1<<4)
> >  #define ACTLR_CA15_MICRO_BTB          (1<<3)
2), Ian C
On Wed, 2013-07-03 at 06:43 -0600, Bamvor Jian Zhang wrote:
> > Since we already have physoffset in r10 would it be clearer to make use
> > of that?
> sorry if i am wrong. do u mean change "adr lr, 1f" to something like 
> "add lr, pc, r10"?

I think I was thinking
        add r1, r10, [r1, #PROCINFO_cpu_init]
        bl r1

(I'm sure I've got the operands to the add subtly wrong somehow, but
hopefully you get the gist of it).

> > 
> > [...]
> > > +#ifndef __ASM_ARM_ARM32_PROCINFO_H
> > > +#define __ASM_ARM_ARM32_PROCINFO_H
> > > +
> > > +struct proc_info_list {
> > > + unsigned int            cpu_val;
> > 
> > I think we should include "unsigned int cpu_mask" here too and remove
> > MIDR_MASK. Will need equivalent changes in head.S as well.
> yes, i need to do this for Aarch64 extesion in future.


Does MIDR differ between 32- and 64-bit? I must confess I've not checked
but assumed it was the same format.

> > 
> > > + unsigned long           cpu_init;        /* used by head.S */
> > > +};
> > > +
> > > +#endif
> > > diff --git a/xen/include/asm-arm/processor-ca15.h 
> > > b/xen/include/asm-arm/processor-ca15.h
> > > index 06cdbdd..96438f0 100644
> > > --- a/xen/include/asm-arm/processor-ca15.h
> > > +++ b/xen/include/asm-arm/processor-ca15.h
> > > @@ -1,9 +1,6 @@
> > >  #ifndef __ASM_ARM_PROCESSOR_CA15_H
> > >  #define __ASM_ARM_PROCESSOR_CA15_H
> > >  
> > > -
> > > -#define CORTEX_A15_ID     (0x410FC0F0)
> > > -
> > >  /* ACTLR Auxiliary Control Register, Cortex A15 */
> > >  #define ACTLR_CA15_SNOOP_DELAYED      (1<<31)
> > >  #define ACTLR_CA15_MAIN_CLOCK         (1<<30)
> > > @@ -26,7 +23,6 @@
> > >  #define ACTLR_CA15_OPT                (1<<9)
> > >  #define ACTLR_CA15_WFI                (1<<8)
> > >  #define ACTLR_CA15_WFE                (1<<7)
> > > -#define ACTLR_CA15_SMP                (1<<6)
> > 
> > Lets leave this for completeness even if we aren't using it.
> i was thinking about it. if i define the following
> #define ACTLR_CA15_SMP                ACTLR_V7_SMP

I meant just leave it as 1<<6.

> i need include asm/arm/processor.h which including CP micros.
> 
> Bamvor
> > 
> > >  #define ACTLR_CA15_PLD                (1<<5)
> > >  #define ACTLR_CA15_IP                 (1<<4)
> > >  #define ACTLR_CA15_MICRO_BTB          (1<<3)
> 
3), Tim Deegan <tim@xen.org>
At 06:43 -0600 on 03 Jul (1372833795), Bamvor Jian Zhang wrote:
> Hi, Ian
> 
>  >>>Wrote "Ian Campbell <Ian.Campbell@xxxxxxxxxx>"> On Tue,
>  Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > >  
> > > +        /* Set return address(PIC) */
> > > +        /* XXX: it only work while thumb2 is not enable in xen */
> > 
> > That's true of lots/all of our asm. Lets ignore that for now (no need to
> > comment).
> ok
> > Since we already have physoffset in r10 would it be clearer to make use
> > of that?
> sorry if i am wrong. do u mean change "adr lr, 1f" to something like 
> "add lr, pc, r10"?

No, I think this code is correct as it stands. 

But it is a bit strange that the CPUinfo struct contains _code_ to jump
to a routine, rather than just containing the address of the routine
itself.  If it just contained the address, the structures could be
defined in C (so we'd be certain that they matched the offset and size
constants we use here).  And then this asm would indeed use physoffset,
something like:

        ldr   r1, [r1, #PROCINFO_cpu_init]   /* r1 := vaddr(init func) */
        adr   lr, 1f                         /* Save return address */
        add   pc, r1, r10                    /* Call paddr(init func) */
1:

The way you've done it is certainly very clever, but we don't need to
optimize single instructions out of the boot time and I think this is
clearer.

Cheers,

Tim.

2, patch 2
1), Ian C
> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > diff --git a/xen/arch/arm/arm32/debug-8250.inc b/xen/arch/arm/arm32/debug-8250.inc
> > new file mode 100644
> > index 0000000..c11357d
> > --- /dev/null
> > +++ b/xen/arch/arm/arm32/debug-8250.inc
> > @@ -0,0 +1,48 @@
> > +/*
> > + * xen/arch/arm/arm32/debug-8250.inc
> > + *
> > + * 8250 specific debug code
> > + *
> > + * Bamvor Jian Zhang <bjzhang@suse.com>
> > + * Copyright (c) 2013 SUSE
> > + *
> > + * This program is free software; you can redistribute it and/or modify
> > + * it under the terms of the GNU General Public License as published by
> > + * the Free Software Foundation; either version 2 of the License, or
> > + * (at your option) any later version.
> > + *
> > + * This program is distributed in the hope that it will be useful,
> > + * but WITHOUT ANY WARRANTY; without even the implied warranty of
> > + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
> > + * GNU General Public License for more details.
> > + */
> > +
> > +
> > +#define UART_TX           (0x00<<2)    /* Out: Transmit buffer */
> > +#define UART_LSR          (0x05<<2)    /* In:  Line Status Register */
> 
> Is the shift 2 on Baozi's platform too? Perhaps this could be a #define
> provided in the same style as EARLY_UART_BASE_ADDRESS or via some other
> means?
> 
> The definitions themselves duplicate those in
> xen/drivers/char/ns16550.c, perhaps we could refactor those into a
> suitable header?
yes. it should be. meanwhile considering the shift bit and other things. 
i am not sure how to merge the headers until i got the ns16550 actual used by
arm SOC. 
> 
> > +
> > +#define UART_LSR_THRE     0x20         /* Xmit holding register empty */
> > +
> > +/* 8250 UART wait UART to be ready to transmit
> > + * rb: register which contains the UART base address
> > + * rc: scratch register */
> > +.macro early_uart_ready rb, rc
> > +1:
> > +        ldr   \rc, [\rb, #UART_LSR]    /* <- UART_LSR (Line Status Register) */
> > +        tst   \rc, #UART_LSR_THRE      /* Check BUSY bit */
> > +        beq   1b                       /* Wait for the UART to be ready */
> > +.endm
> > +
> > +/* 8250 UART transmit character
> > + * rb: register which contains the UART base address
> > + * rt: register which contains the character to transmit */
> > +.macro early_uart_transmit rb, rt
> > +        str   \rt, [\rb, #UART_TX]     /* -> UART_TX */
> > +.endm
> > +
> > +/*
> > + * Local variables:
> > + * mode: ASM
> > + * indent-tabs-mode: nil
> > + * End:
> > + */

2), Chan Baozi

On Jul 3, 2013, at 7:09 PM, Ian Campbell <Ian.Campbell@citrix.com> wrote:

> On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
>> diff --git a/xen/arch/arm/arm32/debug-8250.inc b/xen/arch/arm/arm32/debug-8250.inc
>> new file mode 100644
>> index 0000000..c11357d
>> --- /dev/null
>> +++ b/xen/arch/arm/arm32/debug-8250.inc
>> @@ -0,0 +1,48 @@
>> +/*
>> + * xen/arch/arm/arm32/debug-8250.inc
>> + *
>> + * 8250 specific debug code
>> + *
>> + * Bamvor Jian Zhang <bjzhang@suse.com>
>> + * Copyright (c) 2013 SUSE
>> + *
>> + * This program is free software; you can redistribute it and/or modify
>> + * it under the terms of the GNU General Public License as published by
>> + * the Free Software Foundation; either version 2 of the License, or
>> + * (at your option) any later version.
>> + *
>> + * This program is distributed in the hope that it will be useful,
>> + * but WITHOUT ANY WARRANTY; without even the implied warranty of
>> + * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>> + * GNU General Public License for more details.
>> + */
>> +
>> +
>> +#define UART_TX           (0x00<<2)    /* Out: Transmit buffer */
>> +#define UART_LSR          (0x05<<2)    /* In:  Line Status Register */
> 
> Is the shift 2 on Baozi's platform too? Perhaps this could be a #define
> provided in the same style as EARLY_UART_BASE_ADDRESS or via some other
> means?
Yes, mine has the shift 2 too. It is because every register's size is 4-Bytes on both of our platforms.

However, it seems this patch doesn't work on OMAP543 (I've modified EARLY_UART_BASE_ADDRESS to 0x48020000 which is the correct address). I'm looking for the reasons…

> 
> The definitions themselves duplicate those in
> xen/drivers/char/ns16550.c, perhaps we could refactor those into a
> suitable header?
+1

> 
>> +
>> +#define UART_LSR_THRE     0x20         /* Xmit holding register empty */
>> +
>> +/* 8250 UART wait UART to be ready to transmit
>> + * rb: register which contains the UART base address
>> + * rc: scratch register */
>> +.macro early_uart_ready rb, rc
>> +1:
>> +        ldr   \rc, [\rb, #UART_LSR]    /* <- UART_LSR (Line Status Register) */
>> +        tst   \rc, #UART_LSR_THRE      /* Check BUSY bit */
>> +        beq   1b                       /* Wait for the UART to be ready */
>> +.endm
>> +
>> +/* 8250 UART transmit character
>> + * rb: register which contains the UART base address
>> + * rt: register which contains the character to transmit */
>> +.macro early_uart_transmit rb, rt
>> +        str   \rt, [\rb, #UART_TX]     /* -> UART_TX */
>> +.endm
>> +
>> +/*
>> + * Local variables:
>> + * mode: ASM
>> + * indent-tabs-mode: nil
>> + * End:
>> + */
> 
> 
3), Chen Baozi
> However, it seems this patch doesn't work on OMAP543 (I've modified EARLY_UART_BASE_ADDRESS to 0x48020000 which is the correct address). I'm looking for the reasons…
After fixing a typo when modifying EARLY_UART_BASE_ADDRESS and making clean the working tree, it works for me. Sorry for my carelessness.

4), Chen Baozi

> diff --git a/docs/misc/arm/early-printk.txt b/docs/misc/arm/early-printk.txt
> index fbc3208..eaa66a1 100644
> --- a/docs/misc/arm/early-printk.txt
> +++ b/docs/misc/arm/early-printk.txt
> @@ -13,6 +13,7 @@ where mach is the name of the machine:
>    - exynos5250: printk with the second UART
>    - midway: printk with the pl011 on Calxeda Midway processors
>    - fastmodel: printk on ARM Fastmodel software emulators
> +  - sun6i: printk with 8250 on Allwinner A31 processors
Could this be better to add:

    - omap5432: printk with 8250 compatible UART on OMAP5432 processors

>  
>  The base address and baud rate is hardcoded in xen/arch/arm/Rules.mk,
>  see there when adding support for new machines.
> diff --git a/xen/arch/arm/Rules.mk b/xen/arch/arm/Rules.mk
> index 422ed04..51e823d 100644
> --- a/xen/arch/arm/Rules.mk
> +++ b/xen/arch/arm/Rules.mk
> @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
>  EARLY_PRINTK_BAUD := 115200
>  EARLY_UART_BASE_ADDRESS := 0xfff36000
>  endif
> +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
> +# uart configured at 115200 by bootloader
> +EARLY_PRINTK_INC := 8250
> +EARLY_UART_BASE_ADDRESS := 0x01c28000
> +endif

EARLY_UART_BASE_ADDRESS on OMAP5432 is 0x48020000, so I think we'd better to add another case to support it? For example:

+ifeq ($(CONFIG_EARLY_PRINTK), omap5432)
+# uart configured at 115200 by bootloader
+EARLY_PRINTK_INC := 8250
+EARLY_UART_BASE_ADDRESS := 0x48020000
+endif

5), Ian C
> On Wed, 2013-07-03 at 19:50 +0800, Chen Baozi wrote:
> > On Tue, 2013-07-02 at 21:11 +0800, Bamvor Jian Zhang wrote:
> > 
> > > implement early printk for 8250 uart which is used by lots of arm SOC, such as
> > > Allwinner A31(sun6i) and OMAP5432.
> > > 
> > > Signed-off-by: Bamvor Jian Zhang <bjzhang@xxxxxxxx>
> > > ---
> > >  docs/misc/arm/early-printk.txt    |  1 +
> > >  xen/arch/arm/Rules.mk             |  5 ++++
> > >  xen/arch/arm/arm32/debug-8250.inc | 48 +++++++++++++++++++++++++++++++++++++++
> > >  3 files changed, 54 insertions(+)
> > >  create mode 100644 xen/arch/arm/arm32/debug-8250.inc
> > > 
> > > diff --git a/docs/misc/arm/early-printk.txt b/docs/misc/arm/early-printk.txt
> > > index fbc3208..eaa66a1 100644
> > > --- a/docs/misc/arm/early-printk.txt
> > > +++ b/docs/misc/arm/early-printk.txt
> > > @@ -13,6 +13,7 @@ where mach is the name of the machine:
> > >    - exynos5250: printk with the second UART
> > >    - midway: printk with the pl011 on Calxeda Midway processors
> > >    - fastmodel: printk on ARM Fastmodel software emulators
> > > +  - sun6i: printk with 8250 on Allwinner A31 processors
> > Could this be better to add:
> > 
> >     - omap5432: printk with 8250 compatible UART on OMAP5432 processors
> > 
> > >  
> > >  The base address and baud rate is hardcoded in xen/arch/arm/Rules.mk,
> > >  see there when adding support for new machines.
> > > diff --git a/xen/arch/arm/Rules.mk b/xen/arch/arm/Rules.mk
> > > index 422ed04..51e823d 100644
> > > --- a/xen/arch/arm/Rules.mk
> > > +++ b/xen/arch/arm/Rules.mk
> > > @@ -64,6 +64,11 @@ EARLY_PRINTK_INC := pl011
> > >  EARLY_PRINTK_BAUD := 115200
> > >  EARLY_UART_BASE_ADDRESS := 0xfff36000
> > >  endif
> > > +ifeq ($(CONFIG_EARLY_PRINTK), sun6i)
> > > +# uart configured at 115200 by bootloader
> > > +EARLY_PRINTK_INC := 8250
> > > +EARLY_UART_BASE_ADDRESS := 0x01c28000
> > > +endif
> > 
> > EARLY_UART_BASE_ADDRESS on OMAP5432 is 0x48020000, so I think we'd
> > better to add another case to support it?
> 
> Yes, this is exactly what should happen. You could either send a patch
> on top of Bamvor's or perhaps he would be willing to integrate these
> bits into his existing patch.
yes, i'd like to do it. meanwhile adding omap5432 uart support is a little
bit confuse with my cover letter. 
how about i send one patch for Cortex-A7 support. and another series patch 
for 8250 compatibility uart. which including
1/3: debug-8250.inc
2/3: sun6i changes in early-printk.txt and Rules.mk.
3/3: omap5432 changes in early-printk.txt and Rules.mk.

> 
> >  For example:
> > 
> > +ifeq ($(CONFIG_EARLY_PRINTK), omap5432)
> > +# uart configured at 115200 by bootloader
> > +EARLY_PRINTK_INC := 8250
> > +EARLY_UART_BASE_ADDRESS := 0x48020000
> > +endif
> 
> Ian.

3, (20:19 2013-07-04)
\TODO
1), send patch v3 with Ian C and Tim Deegan update. do not forget to add changes since v2.
2), wait chenbaozi send ns16550 console patch.
then update debug 8250 code.

21:21 2013-07-03
ARM Cortex-A7 support in Linux
http://comments.gmane.org/gmane.linux.ports.arm.kernel/237252

13:15 2013-07-04
virtualization, kvm, arm, irc, kvm-arm
log location:
novell/im/irc_kvm_arm_20130703.txt
novell/im/irc_opensuse_arm_20130703.txt
1, how to port Cortex-A7 to KVM:
<maz_> bamvor: the biggest task is to look in the A7 TRM and find out what are the cp15 operations we need to trap if any.
<bamvor> maz_: do u mean the trap in hyp mode? i guess than most of it is identical with ca15. but i need check it one by one. 
<maz_> bamvor: I don't expect that to be a very long task anyway, but that's a good ramp-up for playing with KVM.
<Bamvor1> maz_: where could i get the lastest kvm-arm code, the github code seems out of date.
<maz_> Bamvor1: use mainline. everything is there.
2, maz_ has a A20 device
<maz_> XavierGr: dual A7, apparently. But I gave up trying to find a recent kernel/bootloader for this. If Maxime manages to get mainline running on it, I'll have a look again.
3, <mgalgs> bamvor: we're also looking into kvm support for A7 here at QuIC (msm8226) so I guess we're in good company :)

14:01 2013-07-04
GTD
0, 10:30-21:20

1, today
1), 30' 1h discuss with Guangliang about cept support in xen. see"14:12 2013-07-04" 
2), 30' 18:17-19:00 19:31-19:59 debug the console patch. see"15:51 2013-07-03"
3), 20:00-20:16 send patch to virtualization-dev. see"15:28 2013-07-04"
4), 20:17-21:15 debug sun6i xen. see"21:11 2013-07-04"

14:12 2013-07-04
virtualization, kvm, xen, ceph
1, link about ceph on libvirt and qemu
1), the example for qemu command
Guangliang Zhao: http://ceph.com/docs/master/rbd/qemu-rbd/
qemu -m 1024 -drive format=rbd,file=rbd:data/squeeze,cache=writeback
2), for libvirt xml:
Guangliang Zhao: http://ceph.com/docs/master/rbd/libvirt/
<disk type='network' device='disk'>
        <source protocol='rbd' name='libvirt-pool/new-libvirt-image'>
                <host name='{monitor-host}' port='6789'/>
        </source>
        <target dev='hdb' bus='ide'/>
</disk>
2, guangliang has a ceph environment(server). we could use this for test.
3, it seems that only i need to do is add device and drive support in libxl.
e.g. add drive in libxl_dm.c
\TODO check the chance add drive and someting in libxl_dm.c
but it might be libxl is supported these type of device.
i only need to do is add code in libxl driver.

15:28 2013-07-04
virtualization, libvirt, kvm, bnc#815201, save hang, cont7, send patch to virtualization-dev
1, [PATCH RFC] fix overflow in qemu save
there is a bug reported by Martin Jakl <martin.jakl@qbicon.cz>, about virsh save hang.
after some test, i found that this bug could be reproduce 100% when the vm actually used more that 2Gbytes. after some debug, i know that this is because a variable overflow during save cleanup routine in qemu. see the details in my patch.

i have update to qemu to 1.3.1 and apply my patch, Martin said that basiclly it works.  i am not familiar with how to submit a patch to qemu package. and i want to know that if Martin think it works, what should i do for applying this patch in opensuse12,3. both kvm and qemu package need this patch.

BTW: this bug is not found in sle11 sp2 and sp3.

Index: qemu-1.3.1/buffered_file.c
===================================================================
--- qemu-1.3.1.orig/buffered_file.c
+++ qemu-1.3.1/buffered_file.c
@@ -142,7 +142,7 @@ static int buffered_close(void *opaque)
 
     DPRINTF("closing\n");
 
-    s->xfer_limit = INT_MAX;
+    s->xfer_limit = UINT_MAX;
     while (!qemu_file_get_error(s->file) && s->buffer_size) {
         ret = buffered_flush(s);
         if (ret < 0) {

2, "Andreas Färber<afaerber@suse.com>"_20130704_2041
> Hi,
> 
> Am 04.07.2013 14:15, schrieb Bamvor Jian Zhang:
> > there is a bug reported by Martin Jakl <martin.jakl@qbicon.cz>, about virsh save hang.
> > after some test, i found that this bug could be reproduce 100% when the vm actually used more that 2Gbytes. after some debug, i know that this is because a variable overflow during save cleanup routine in qemu. see the details in my patch.
> > 
> > i have update to qemu to 1.3.1 and apply my patch, Martin said that basiclly it works.  i am not familiar with how to submit a patch to qemu package. and i want to know that if Martin think it works, what should i do for applying this patch in opensuse12,3. both kvm and qemu package need this patch.
> 
> Actually I notice that I still have the qemu v1.3.1 update including
> updates to our patch handling scripts sitting in
> https://build.opensuse.org/project/show?project=home%3Aa_faerber%3Abranches%3AOBS_Maintained%3Aqemu
> Let me clean that up and SR it, then you can more easily add your patch
> to the new openSUSE Git repository and regenerate the qemu package.
ok. my patch is suitable for both 1.3.0 and 1.3.1
So, where is the git location? i don't know. do i need to send it to git and sr to obs both?
> 
> For kvm we still had a quilt-based workflow in 12.3, so that is separate.
> 
> > 
> > BTW: this bug is not found in sle11 sp2 and sp3.
> > 
> > Index: qemu-1.3.1/buffered_file.c
> > ===================================================================
> > --- qemu-1.3.1.orig/buffered_file.c
> > +++ qemu-1.3.1/buffered_file.c
> > @@ -142,7 +142,7 @@ static int buffered_close(void *opaque)
> >  
> >      DPRINTF("closing\n");
> >  
> > -    s->xfer_limit = INT_MAX;
> > +    s->xfer_limit = UINT_MAX;
> 
> Have you compared upstream QEMU code? The file and function no longer
> exists in qemu.git, not sure where it went...
buffered_file_ops on 1.3.1 is replaced by unix_write_ops in upstream.
the migration code change a lot. i am not found the similar limit in
upstream code.
> 
> In v1.3.1, the xfer_limit field was declared as size_t, which is
> unsigned, so your fix seems more correct. However...
> 
> http://git.qemu.org/?p=qemu.git;a=blob;f=buffered_file.c;h=9a8bd0446fcdda7cef7da52da96827e6d753a0b8;hb=04024dea2674861fcf13582a77b58130c67fccd8
> 
> It would probably be best though to use SIZE_MAX:
> 
> http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/stdint.h.html
yes, got it. i will change it in next version.
> 
> Regards,
> Andreas
> 
> >      while (!qemu_file_get_error(s->file) && s->buffer_size) {
> >          ret = buffered_flush(s);
> >          if (ret < 0) {
> > 
> > 
> > thanks
> > 
> > Bamvor
> > 
> > _______________________________________________
> > virtualization-dev mailing list
> > virtualization-dev@lists.novell.com
> > https://lists.innerweb.novell.com/mailman/listinfo/virtualization-dev
> > Search Archives: https://lists.innerweb.novell.com/search

3, the migration in the lastest qemu:
qmp_migrate -> fd_start_outgoing_migration -> migrate_fd_connect -> qemu_fdopen -> pick up unix_write_ops
static const QEMUFileOps unix_write_ops = {
    .get_fd =     socket_get_fd,
    .writev_buffer = unix_writev_buffer,
    .close =      unix_close
};
migrate_fd_connect -> migration_thread

migrate_fd_cleanup->qemu_fclose

21:11 2013-07-04
virtualization, xen, arm, allwinner A31, sun6i, debug hang in setup_pagetables
1, 
setup_pagetables<441>: 002d7600, 002d7600
setup_pagetables<447>: 002d7600, 002ce000
setup_pagetables<448>: 480943578
setup_pagetables<450>
setup_pagetables<453>
Xen heap: 131072 pages  Dom heap: 131072 pages

per_cpu(xen_dommap, 0) is right.
this_cpu(xen_dommap) is wrong.
because  READ_SYSREG(TPIDR_EL2) is ramdom(this time 480943578).
#define HTPIDR          p15,4,c13,c0,2  /* HYp Software Thread Id Register */
why?

2, \TODO
try using the all 2G memory, and test again.

11:11 2013-07-05
irc, virtualization, xen, discuss about free_xenheap_pages and get_order_from_bytes
20130704
<doa> how to use void free_xenheap_pages(void *v, unsigned int order) ? what does the order mean?
<hypermatt> doa: order = size of region to free, in power-of-2-pages
<hypermatt> so order 0 = 1 page, order 1 = 2 pages, order 2 = 4 pages, and so on
<hypermatt> there's a helper function to just free 1 page:
<hypermatt> xen/include/xen/mm.h
<hypermatt> 48:void free_xenheap_pages(void *v, unsigned int order);
<hypermatt> 50:#define free_xenheap_page(v) (free_xenheap_pages(v,0))
<hypermatt> ie. free_xenheap_page
<hypermatt> note the lack of "s"
<CRCinAU> hypermatt: I'd post that to xen-devel
<hypermatt> how come?
<hypermatt> oh, they emailed there too, huh
<CRCinAU> just more that patches / changes / bugs posted to IRC usually get overlooked
<hypermatt> where's the bug? ;)
<CRCinAU> I dunno - I'll go make a coffee....
<CRCinAU> ;)
<hypermatt> sounds good
<doa> hypermatt: thank you,    I got an example
<doa> +    int order = get_order_from_bytes(1024 * 1024 * 256);
<doa> +
<doa> +    if(d->arch.hvm_domain.
<doa> +        ether_controls.unpack_map != NULL)
<doa> +    {
<doa> +        free_domheap_pages(virt_to_page(d->arch.hvm_domain.
<doa> +                    ether_controls.unpack_map), order);
<doa> +    }
<doa> what  the get_order_from_bytes()  for ?
<hypermatt> well, it converts the amount of bytes given into an order
<hypermatt> it's in include/xen/mm.h
<doa> ok, I see. but why should the order  be in power-of-2-pages ?
<hypermatt> because it's easier for the memory allocator to work with sizes that way
<hypermatt> it can treat the free heap as a big empty chunk of order N
<hypermatt> and if it needs to allocate a smaller chunk, it can split that chunk in 2, recursively
<hypermatt> until it gets the smaller order size needed
<doa> got it. thank you again
<hypermatt> np

11:17 2013-07-05
GTD
0, 11:10-17:50

1, today
1), 11:20-12:00 15:05-15:18 bnc#815201: virsh save hang. patch for opensuse. "15:28 2013-07-04"2
2), 50' lunch and learn. QA hamsta. see"12:08 2013-7-5"
2), 2h training, Dongmao Zhang, see"12:58 2013-7-5".

12:08 2013-7-5
training, qa, automation, hamsta, Junwei hao
1, 
hardware maintenance, setup & test automation.
ltp: linux test plan.
install system by autoyast.

2, member
Lukas: leader
cyril: 
vilem: qadb
pavel

Beijing:
Junwei hao
jerry: backend.
jia yao
zhibin han
xiaoli ai.

3, qa-auto@suse.com

12:58 2013-7-5
training, Dongmao Zhang
1, fabric
run command through ssh connection.
2, dns
nslook, dig: search ip from dns server.
3, grep like tool
ack, cg/vg
4, last
ssh connection

17:45 2013-07-05
mailing list, virtualization, xen, arm
1, [Xen-devel] [PATCH] xen/arm: Trap the ACTLR register 
Julien Grall julien.grall@linaro.org
On Cortex-A15 ACTLR is used to set the SMP bit. If the guest has the control on
this register, it can disable SMP support and so TLB broadcast.
Implement the access to ACTRL as read-only register with SMP bit set to one
if the guest has multiple VCPUs.

10:39 2013-07-06
virtualization, xen, arm, allwinner A31, sun6i
1, update the common in look up processor info
> At the end of all this r1 == physical address of the platform
> information?
yes
> Can the initial comment say "Get processor specific proc info into rX" please.
sure
> If you could also follow the lead of other code in this file and
> obsessively comment what it is doing that would be great. e.g. comments
> like "r1 := physical address of start of table", "r2 := physical address
> of end of table" etc.
ok. i will
2, merge proc-ca15.S and proc-ca7.S into proc-v7.S
> Lets put the __v7_ca7mp_proc_info and __v7_ca15mp_proc_info here,
> calling v7_init directly and do away with proc-ca15.S and proc-ca7.S.
Ok. 
So, i will remove proc-ca15.S and proc-ca7.S?

1), do i need add ".long" before "v7_init"?
yes

11:33 2013-07-08
company, colleague, Andreas Färber, telephone number
"Andreas Färber<afaerber@suse.de>"_email_"Andreas telephone change"_20130705_2316
Hello everyone,

There were some hiccups with people moving in the NUE offices that led
to my telephone being accidentally moved on Wednesday, too. Since today
I have a telephone again, but the extension is now -184 rather than
-183. They say they can change it back in ~4 weeks earliest.

Regards,
Andreas

-- 
SUSE LINUX Products GmbH, Maxfeldstr. 5, 90409 Nürnberg, Germany
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer; HRB 16746 AG Nürnberg

14:30 2013-07-08
1, It certainly sounds like it could be a kernel tuning issue or buffering issue
2, ref:https://forums.citrix.com/thread.jspa?threadID=266744&start=0&tstart=0 
3, 回复:
因为不知道具体版本，没有看到相关log，难以回答。
可以先看看是什么原因导致domain0慢。如果是dom0 memory不足，可以用"xm mem-set Domain-0 xxx"扩大dom0可用内存。
另外建议看看是哪个进程导致dom0 cpu, mem, IO占用高，然后对症分析。

17:14 2013-07-08
virtualization, xen, arm, allwinner A31, sun6i
1, log
- UART enabled -
- CPU 00000000 booting -
- Machine ID 00000f34 -
- Started in Secure state -
- Entering Hyp mode -
- Zero BSS -
- Setting up control registers -
- Turning on paging -
- Ready -
RAM: 0000000040000000 - 00000000bfffffff

MODULE[1]: 0000000060000000 - 0000000060400000 
Placing Xen at 0x00000000bfe00000-0x00000000c0000000
start_xen<444>
Xen heap: 262144 pages  Dom heap: 262144 pages
setup_mm<336>
setup_mm<346>
setup_mm<351>
setup_mm<359>
setup_mm<361>
setup_mm<365>
setup_mm<391>
setup_mm<393>
setup_mm<396>: xenheap_pfn_start: 516096, boot_pfn_start: 778238
setup_mm<397>: xenheap_start: 2113929216, boot_start: 3187662848
init_xenheap_pages<1333>: ps<2113933312>, pe<3187662848>
init_xenheap_pages<1336>: 027c0020, 262141
init_heap_pages<1163>
init_heap_pages<1174>
init_heap_pages<1177>
init_heap_pages<1179>
init_heap_pages<1190>: pg<027c0020>, i<0>
1), xenhead_start and boot_start is definitly wrong:
setup_mm<397>: xenheap_start: 2113929216, boot_start: 3187662848

09:55 2013-07-09
GTD
0, 9:40-18:10

1, today
1), 20' mailing list.
2), check my console patch status. still no reply.
3), 10:42-11:30 15:00-15:38 check code about lock work. ref qemu lock. see"10:56 2013-07-09"
4), 15:38-18:07 send cortex-a7 patch for xen. see"15:38 2013-07-09"

10:07 2013-07-09
suse, sle11 sp3
1, Latest CPU Support
SUSE Linux Enterprise 11 Service Pack 3 introduces support for latest CPUs, including:
Intel® Xeon® processor E5-4600/2600/1600
Intel® Xeon® processor E5-2600 v2 "Ivy Bridge-EP"
Intel® Xeon® processor E5-2400 v2 "Ivy Bridge-EN"
The 4th generation Intel® Core (TM) processor
AMD Opteron 4000/6000 family
2, CPU and RAM limits
SUSE Linux Enterprise 11 can support up to 4096 logical CPUs on Intel 64. This has been confirmed on the SGI UV2 server platform. The theoretical limit of RAM support of SUSE Linux Enterprise 11 is 64TiB. The practical limit, which is more important to customers, is 16TiB RAM on certified hardware.

10:26 2013-07-09
opensuse, 12.3, guide
http://opensuse-guide.org/index.php

10:56 2013-07-09
libvirt, xen, qemu
1, qemu and lock
qemuProcessStart 
    -> virCommandSetPreExecHook(cmd, qemuProcessHook, &hookData);
    -> virCommandRun

qemuProcessHook -> virDomainLockProcessStart

the hook is executed by virExec
virCommandRun -> virCommandRunAsync -> virExec -> cmd->hook()

2, lock
virDomainLockProcessStart -> virDomainLockManagerNew -> virLockManagerNew 
                                                     -> add leases and disks
1), leases
Device leases
http://libvirt.org/formatdomain.html#elementsLease
When using a lock manager, it may be desirable to record device leases against a VM. The lock manager will ensure the VM won't start unless the leases can be acquired.

2), virLockManagerNew
virLockManagerNew -> driver->drvNew
driver->lockManager: init byvirLockManagerPluginNew. 

there are three lock driver in libvirt: locked, nop, sanlock.

3), lock is used by device, migration live changes: such as device attach.
qemuDomainAttachDeviceFlags -> qemuDomainAttachDeviceLive -> qemuDomainAttachDeviceDiskLive -> qemuDomainChangeEjectableMedia -> virDomainLockDiskAttach

2, send to Jim(not today)
about my libxl driver work

i have post my console patch last friday.

about lock: 
lock and job is different.

15:38 2013-07-09
virtualization, xen, arm, allwinner A31, sun6i, c env patch v2
1, changes since v2
1), define cpu_init function instead of assemble jump code in struct proc_info_list
2), add commit in look up proc info in assemble code.
3), merge __v7_ca7mp and __v7_ca15mp and relative definition into prov-v7.S
4), move MIDR mask definition from headers to prov-v7.S
5), move procinfo.h from xen/include/asm-arm/arm32 to xen/include/asm-arm
2, send patch
git send-email --no-chain-reply-to --annotate --to xen-devel@lists.xen.org --cc ian.campbell@citrix.com --cc tim@xen.org --cc bjzhang@suse.com  0001-xen-arm-introduce-Cortex-A7-support.patch
3, test xen on arndale.
make dist-xen XEN_TARGET_ARCH=arm32 CROSS_COMPILE=arm-linux-gnueabihf- CONFIG_EARLY_PRINTK=exynos4210 CONFIG_DTB_FILE=/home/bamvor/work_bak/arm/samsung_exynos/linux/arch/arm/boot/dts/exynos5250-arndale.dtb
mkimage -A arm -T kernel -a 0x80200000 -e 0x80200000 -C none -d "xen/xen.bin" xen-uImage

15:53 2013-07-09
software skill, editor, vi, text process
最初由Dongmao zhang介绍.
http://linuxtoy.org/archives/killer-vim-tip.html
Vim 杀手级 Tip: 快速处理配对标点符号中的文本
2010-06-23 Toy Posted in TipsRSS
这称得上是一个 Vim 的杀手级 Tip，利用该 Tip，你可以快速处理 '、"、()、[]、{}、<> 等配对标点符号中的文本内容，包括更改、删除、复制等。

ci'、ci"、ci(、ci[、ci{、ci< - 分别更改这些配对标点符号中的文本内容
di'、di"、di(、di[、di{、di< - 分别删除这些配对标点符号中的文本内容
yi'、yi"、yi(、yi[、yi{、yi< - 分别复制这些配对标点符号中的文本内容
对于经常用 Vim 写代码的朋友来说，善用此 Tip 将极大的提高编码效率。

13:18 2013-07-10
GTD
0, 13:00-20:17

1, today
1), enable rbd on qemu. see"13:22 2013-07-10"
2), 18:54-20:17 compare sun6i and arndale. see"18:54 2013-07-10"
30' supper
3), set up cubieboard DNS server. CANCELLED. lance suggest me use avahi service. see"15:41 2013-07-10"

13:22 2013-07-10
storage, ceph, rbd; virtualization, kvm, qemu
1, try enable rbd in qemu
1), sudo zypper si -d qemu
2), 
log.sh ./configure --prefix=/usr --sysconfdir=/etc --libexecdir=/usr/lib '--extra-cflags=-fmessage-length=0 -O2 -Wall -D_FORTIFY_SOURCE=2 -fstack-protector -funwind-tables -fasynchronous-unwind-tables -g' --disable-strip --enable-system --disable-linux-user --enable-tools --enable-guest-agent --enable-docs '--audio-drv-list=pa alsa sdl oss' --enable-mixemu --enable-brlapi --enable-cap-ng --enable-curl --enable-curses --enable-gtk --enable-linux-aio --enable-sdl --enable-spice --enable-vde --enable-virtfs --enable-vnc-jpeg --enable-vnc-png --enable-vnc-sasl --enable-vnc-tls --enable-vnc-ws --enable-rbd
3), missing ceph lib
sudo zypper ar -c -f -k http://download.opensuse.org/repositories/home:/dalgaaf:/ceph/openSUSE_12.3/ dalgaaf_ceph_openSUSE_12.3
sudo zypper in librbd1 librados2

15:41 2013-07-10
software skill, network, zeroconf, connect through host name other than ip
1, if avahi-daemon started, we could ping or ssh through your_host_name.local
bamvor@linux-rd:~> ps aux|grep avahi
avahi     1075  0.0  0.0  31204  2920 ?        Ss   Jul08   0:15 avahi-daemon: running [linux-rd.local]
bamvor   21235  0.0  0.0   8308   868 pts/23   S+   16:21   0:00 grep --color avahi
bamvor@linux-rd:~> ping linux-work.local
PING linux-work.local (147.2.207.77) 56(84) bytes of data.
64 bytes from work (147.2.207.77): icmp_seq=1 ttl=64 time=0.522 ms
64 bytes from work (147.2.207.77): icmp_seq=2 ttl=64 time=0.551 ms
^C
--- linux-work.local ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1000ms
rtt min/avg/max/mdev = 0.522/0.536/0.551/0.027 ms

2, ref: 
http://blog.csdn.net/ccskyer/article/details/7616673
zeroconf协议的实现
zeroconf是协议，因此对应的是各种产品的实现，现在最主要的实现是apple的Bonjour和开源的Avahi。
这两套实现在程序接口上是可以兼容的，因此可以对zeroconf技术依赖的产品，可以使用兼容的开发接口，而不需要考虑到底是使用了Bonjour还是avahi。

Apple的zeroconf协议技术实现 – Bonjour
Bonjour是由apple实现的zeroconf协议的技术产品，Bonjour来源于法语，意思为你好。
使用了zeroconf技术的产品和服务，在网络中自动传播它们自己的服务信息并聆听其它设备的服务信息，设备之间就象在打招呼，这也是命名为Bonjour(法语：你好)的原因。
Bonjour是一套跨平台的产品，可以使用在Mac，Linux和Winows，以及是兼容POSIX的操作系统上，并且apple已经將其开源，所以也可以方便应用于各个产品。
Bonjour是由纯C编写的，同时也提供了Java的接口，目前如python或者ruby语言也可以很方便地调用使用它。

zeroconf的未来分析
虽然zeroconf协议名声不大，即使是计算机专业开发人员也知之甚少，但是其实由于这几年apple发展的强势，其应用已经越来越广。
比如在iOS4.2推出时候的airplay，以及airprint都是在这基础上实现的，甚至iOS5.0后的air mirroing技术，也是在zeroconf技术上实现的。
可以预想在未来，zeroconf和DLNA將会有激烈的竞争关系。

16:04 2013-07-10
virtualization, xen, memory overcommit
1, 微博问题
倍哥也是哥：使用的是sles11_x64中自带的xen，vm中跟有windows 2003/2008 及sles10sp4_x64。在man xmdomain.cfg里面有关这说到memory的情况,Xen does not support overcommit of memory，但Linux本身都是支持overcommit of memory的啊，其它的虚假化的包括KVM、VMware及hyperV也都支持的吧! (7月9日 08:53)
2, Chunyan liu
memory overcommit 在sles11上还没有实现，但在sles11_sp2上加入了这个feature (用xenpaging实现的）。
使用这个feature, 需要做一些相关的配置。见附件(xenpaging.txt)。

另外请注意：使用xenpaging，虚拟机会变慢，实现原理使然。

xenpaging writes memory pages of a given guest to a file and moves the
pages back to the pool of available memory.  Once the guests wants to
access the paged-out memory, the page is read from disk and placed into
memory.  This allows the sum of all running guests to use more memory
than physically available on the host.

个人认为，没有特殊需要，并不推荐使用。

16:58 2013-07-10
arm, arndale
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether ba:e3:7e:3f:f9:20 brd ff:ff:ff:ff:ff:ff
    inet 147.2.206.167/24 brd 147.2.206.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::b8e3:7eff:fe3f:f920/64 scope link 
       valid_lft forever preferred_lft forever

17:28 2013-07-10
software, suse, registration, repo
1, bamvor@linux-work:~> sudo cat /etc/zypp/credentials.d/NCCcredentials
username=0ec2d9aa8b5b49aebc7d68dfc2764023
password=ffd8b103de304fca984342f72105590c
2, sle11 sp2 repo
http://147.2.207.207/repo/$RCE/SLE11-WebYaST-SP2-Pool/sle-11-x86_64
http://147.2.207.207/repo/$RCE/SLE11-WebYaST-SP2-Updates/sle-11-x86_64
http://147.2.207.207/repo/$RCE/SLES11-Extras/sle-11-x86_64
http://147.2.207.207/repo/$RCE/SLES11-SP1-Pool/sle-11-x86_64
http://147.2.207.207/repo/$RCE/SLES11-SP1-Updates/sle-11-x86_64
http://147.2.207.207/repo/$RCE/SLES11-SP2-Core/sle-11-x86_64
http://147.2.207.207/repo/$RCE/SLES11-SP2-Extension-Store/sle-11-x86_64
http://147.2.207.207/repo/$RCE/SLES11-SP2-Updates/sle-11-x86_64

18:54 2013-07-10
virtualization, xen, arm, allwinner A31, sun6i, c env patch v2
1, 
setenv kernel_addr_r 0x60000000
setenv xen_addr_r 0x50000000
setenv bootcmd_load_linux_mmc 'ext2load mmc 0:1 $kernel_addr_r /zImage'
setenv boot_xen_mmc 'run bootcmd_load_linux_mmc; ext2load mmc 0:1 $xen_addr_r /xen-uImage; bootm $xen_addr_r -'
setenv bootcmd 'run boot_xen_mmc'

2, log
Loading file "/zImage" from mmc device 0:1
3847752 bytes read
Loading file "/xen-uImage" from mmc device 0:1
900168 bytes read
## Booting kernel from Legacy Image at 50000000 ...
   Image Name:   
   Image Type:   ARM Linux Kernel Image (uncompressed)
   Data Size:    900104 Bytes = 879 KiB
   Load Address: 80200000
   Entry Point:  80200000
   Verifying Checksum ... OK
   Loading Kernel Image ... OK
OK

Starting kernel ...

 __  __            _  _    _____                    _        _     _      
 \ \/ /___ _ __   | || |  |___ /    _   _ _ __  ___| |_ __ _| |__ | | ___ 
  \  // _ \ '_ \  | || |_   |_ \ __| | | | '_ \/ __| __/ _` | '_ \| |/ _ \
  /  \  __/ | | | |__   _| ___) |__| |_| | | | \__ \ || (_| | |_) | |  __/
 /_/\_\___|_| |_|    |_|(_)____/    \__,_|_| |_|___/\__\__,_|_.__/|_|\___|
                                                                          
(XEN) Xen version 4.3-unstable (bamvor@(none)) (arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.8-2013.04-20130417 - Linaro GCC 2013.04) 4.8.1 20130401 (prerelease)) debug=y Tue Jul  9 18:02:48 CST 2013
(XEN) Latest ChangeSet: Thu Jun 27 18:13:30 2013 +0100 git:bcb4930-dirty
(XEN) Console output is synchronous.
(XEN) Processor: "ARM Limited", variant: 0x0, part 0xc0f, rev 0x4
(XEN) 32-bit Execution:
(XEN)   Processor Features: 00001031:00011011
(XEN)     Instruction Sets: AArch32 Thumb Thumb-2 ThumbEE Jazelle
(XEN)     Extensions: GenericTimer Security
(XEN)   Debug Features: 02010555
(XEN)   Auxiliary Features: 00000000
(XEN)   Memory Model Features: 10201105 20000000 01240000 02102211
(XEN)  ISA Features: 02101110 13112111 21232041 11112131 10011142 00000000
(XEN) Platform: SAMSUNG EXYNOS5
(XEN) Generic Timer IRQ: phys=30 hyp=26 virt=27
(XEN) Using generic timer at 24000 KHz
(XEN) GIC initialization:
(XEN)         gic_dist_addr=0000000010481000
(XEN)         gic_cpu_addr=0000000010482000
(XEN)         gic_hyp_addr=0000000010484000
(XEN)         gic_vcpu_addr=0000000010486000
(XEN)         gic_maintenance_irq=25
(XEN) GIC: 160 lines, 2 cpus, secure (IID 0200043b).
(XEN) Waiting for 1 other CPUs to be ready
(XEN) Using scheduler: SMP Credit Scheduler (credit)
(XEN) Allocated console ring of 16 KiB.
(XEN) CPU 1 booted.
(XEN) Brought up 2 CPUs
(XEN) *** LOADING DOMAIN 0 ***
(XEN) Device-tree contains "xen,xen" node. Ignoring.
(XEN) Populate P2M 0x50000000->0x60000000 (1:1 mapping for dom0)
(XEN) Loading kernel from boot module 1
(XEN) Loading zImage from 0000000060000000 to 0000000050008000-00000000503b3648
(XEN) Loading dom0 DTB to 0x000000005fe00000-0x000000005fe0445a
(XEN) Std. Loglevel: All
(XEN) Guest Loglevel: All
(XEN) **********************************************
(XEN) ******* WARNING: CONSOLE OUTPUT IS SYNCHRONOUS
(XEN) ******* This option is intended to aid debugging of Xen by ensuring
(XEN) ******* that all output is synchronously delivered on the serial line.
(XEN) ******* However it can introduce SIGNIFICANT latencies and affect
(XEN) ******* timekeeping. It is NOT recommended for production use!
(XEN) **********************************************
(XEN) 3... 2... 1... 
(XEN) *** Serial input -> DOM0 (type 'CTRL-a' three times to switch input to Xen)
(XEN) Freed 216kB init memory.
PERCPU: Embedded 9 pages/cpu @c0a15000 s14272 r8192 d14400 u36864
pcpu-alloc: s14272 r8192 d14400 u36864 alloc=9*4096
pcpu-alloc: [0] 0 [0] 1 
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 65024
Kernel command line: console=hvc0,115200n8 debug root=/dev/mmcblk1p2 ignore_loglevel rw rootwait earlyprintk=xen
PID hash table entries: 1024 (order: 0, 4096 bytes)
Dentry cache hash table entries: 32768 (order: 5, 131072 bytes)
Inode-cache hash table entries: 16384 (order: 4, 65536 bytes)
__ex_table already sorted, skipping sort
allocated 524288 bytes of page_cgroup
please try 'cgroup_disable=memory' option if you don't want memory cgroups
Memory: 256MB = 256MB total
Memory: 250984k/250984k available, 11160k reserved, 0K highmem
Virtual kernel memory layout:
    vector  : 0xffff0000 - 0xffff1000   (   4 kB)
    fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)
    vmalloc : 0xd0800000 - 0xff000000   ( 744 MB)
    lowmem  : 0xc0000000 - 0xd0000000   ( 256 MB)
    pkmap   : 0xbfe00000 - 0xc0000000   (   2 MB)
    modules : 0xbf000000 - 0xbfe00000   (  14 MB)
      .text : 0xc0008000 - 0xc06f12f8   (7077 kB)
      .init : 0xc06f2000 - 0xc072d7c0   ( 238 kB)
      .data : 0xc072e000 - 0xc078da30   ( 383 kB)
       .bss : 0xc078da30 - 0xc080af4c   ( 502 kB)
Hierarchical RCU implementation.
	RCU restricting CPUs from NR_CPUS=4 to nr_cpu_ids=2.
NR_IRQS:549
Architected local timer running at 24.00MHz (virt).
Switching to timer-based delay loop
sched_clock: 32 bits at 100 Hz, resolution 10000000ns, wraps every 4294967286ms
Console: colour dummy device 80x30
Calibrating delay loop (skipped), value calculated using timer frequency.. 48.00 BogoMIPS (lpj=240000)
pid_max: default: 32768 minimum: 301
Mount-cache hash table entries: 512
Initializing cgroup subsys cpuacct
Initializing cgroup subsys memory
Initializing cgroup subsys devices
Initializing cgroup subsys freezer
Initializing cgroup subsys blkio
Initializing cgroup subsys perf_event
CPU: Testing write buffer coherency: ok
/cpus/cpu@0 missing clock-frequency property
/cpus/cpu@1 missing clock-frequency property
CPU0: thread -1, cpu 0, socket 0, mpidr 80000000
Setting up static identity map for 0xc04fd9f0 - 0xc04fda48
Setting up static HYP identity map for 0xc04fda48 - 0xc04fdb20
CPU1: Booted secondary processor
CPU1: thread -1, cpu 0, socket 0, mpidr 80000000
Brought up 2 CPUs
SMP: Total of 2 processors activated (96.00 BogoMIPS).
CPU: All CPU(s) started in SVC mode.
devtmpfs: initialized
Xen 4.3 support found, events_irq=31 gnttab_frame_pfn=b0000
Grant tables using version 1 layout.
Grant table initialized
pinctrl core: initialized pinctrl subsystem
regulator-dummy: no parameters
NET: Registered protocol family 16
Xen: initializing cpu0
Xen: initializing cpu1
DMA: preallocated 256 KiB pool for atomic coherent allocations
No ATAGs?
hw-breakpoint: found 5 (+1 reserved) breakpoint and 4 watchpoint registers.
hw-breakpoint: maximum watchpoint size is 8 bytes.
S3C Power Management, Copyright 2004 Simtec Electronics
EXYNOS5250 PMU Initialize
EXYNOS: Initializing architecture
bio: create slab <bio-0> at 0
xen/balloon: Initialising balloon driver.
SCSI subsystem initialized
libata version 3.00 loaded.
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
s3c-i2c s3c2440-hdmiphy-i2c: slave address 0x00
s3c-i2c s3c2440-hdmiphy-i2c: bus frequency set to 65 KHz
s3c-i2c s3c2440-hdmiphy-i2c: i2c-0: S3C I2C adapter
Switching to clocksource arch_sys_counter
NET: Registered protocol family 2
TCP established hash table entries: 2048 (order: 2, 16384 bytes)
TCP bind hash table entries: 2048 (order: 2, 16384 bytes)
TCP: Hash tables configured (established 2048 bind 2048)
TCP: reno registered
UDP hash table entries: 256 (order: 1, 8192 bytes)
UDP-Lite hash table entries: 256 (order: 1, 8192 bytes)
NET: Registered protocol family 1
RPC: Registered named UNIX socket transport module.
RPC: Registered udp transport module.
RPC: Registered tcp transport module.
RPC: Registered tcp NFSv4.1 backchannel transport module.
kvm [1]: HYP mode not available
hw perfevents: enabled with ARMv7 Cortex-A15 PMU driver, 7 counters available
CPU PMU: attempt to register multiple PMU devices!
arm-pmu: probe of arm-pmu failed with error -28
audit: initializing netlink socket (disabled)
type=2000 audit(0.250:1): initialized
ROMFS MTD (C) 2007 Red Hat, Inc.
msgmni has been set to 490
Block layer SCSI generic (bsg) driver version 0.4 loaded (major 253)
io scheduler noop registered
io scheduler deadline registered
io scheduler cfq registered (default)
dma-pl330 dma-pl330.0: Loaded driver for PL330 DMAC-2364208
dma-pl330 dma-pl330.0: 	DBUFF-32x4bytes Num_Chans-8 Num_Peri-32 Num_Events-32
dma-pl330 dma-pl330.1: Loaded driver for PL330 DMAC-2364208
dma-pl330 dma-pl330.1: 	DBUFF-32x4bytes Num_Chans-8 Num_Peri-32 Num_Events-32
dma-pl330 dma-pl330.2: Loaded driver for PL330 DMAC-2364208
dma-pl330 dma-pl330.2: 	DBUFF-64x8bytes Num_Chans-8 Num_Peri-1 Num_Events-32
Event-channel device installed.
console [hvc0] enabled, bootconsole disabled
console [hvc0] enabled, bootconsole disabled
Serial: 8250/16550 driver, 4 ports, IRQ sharing disabled
exynos4210-uart.0: ttySAC0 at MMIO 0x12c00000 (irq = 83) is a S3C6400/10
exynos4210-uart.1: ttySAC1 at MMIO 0x12c10000 (irq = 84) is a S3C6400/10
exynos4210-uart.3: ttySAC2 at MMIO 0x12c30000 (irq = 86) is a S3C6400/10
[drm] Initialized drm 1.1.0 20060810
[drm:drm_hdmi_dt_parse_pdata] *ERROR* no hpd gpio property found
[drm:hdmi_probe] *ERROR* no platform data specified
exynos-hdmi: probe of exynos5-hdmi failed with error -22
exynos-mixer exynos5-mixer: probe start
[drm] Supports vblank timestamp caching Rev 1 (10.10.2010).
[drm] No driver support for vblank timestamp query.
[drm:hdmi_subdrv_probe] *ERROR* hdmi context not initialized.
exynos-drm: probe of exynos-drm failed with error -22
brd: module loaded
loop: module loaded
Initialising Xen virtual ethernet driver.
usbcore: registered new interface driver asix
usbcore: registered new interface driver ax88179_178a
usbcore: registered new interface driver cdc_ether
usbcore: registered new interface driver net1080
usbcore: registered new interface driver cdc_subset
usbcore: registered new interface driver zaurus
usbcore: registered new interface driver cdc_ncm
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
unable to find transceiver of type USB2 PHY
s5p-ehci 12110000.usb: no platform data or transceiver defined
platform 12110000.usb: Driver s5p-ehci requests probe deferral
ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
unable to find transceiver of type USB2 PHY
exynos-ohci 12120000.usb: no platform data or transceiver defined
platform 12120000.usb: Driver exynos-ohci requests probe deferral
Initializing USB Mass Storage driver...
usbcore: registered new interface driver usb-storage
USB Mass Storage support registered.
mousedev: PS/2 mouse device common for all mice
Exynos: Kernel Thermal management registered
cpuidle: using governor ladder
cpuidle: using governor menu
Synopsys Designware Multimedia Card Interface Driver
dwmmc_exynos dw_mmc.0: Using PIO mode.
dwmmc_exynos dw_mmc.0: DW MMC controller at irq 107, 32 bit host data width, 128 deep fifo
mmc0: no vmmc regulator found
mmc_host mmc0: Bus speed (slot 0) = 100000000Hz (slot req 400000Hz, actual 400000HZ div = 125)
dwmmc_exynos dw_mmc.0: 1 slots initialized
dwmmc_exynos dw_mmc.0: Version ID is 241a
dwmmc_exynos dw_mmc.2: Using PIO mode.
dwmmc_exynos dw_mmc.2: DW MMC controller at irq 109, 32 bit host data width, 128 deep fifo
mmc1: no vmmc regulator found
mmc_host mmc0: Bus speed (slot 0) = 100000000Hz (slot req 300000Hz, actual 299401HZ div = 167)
mmc_host mmc1: Bus speed (slot 0) = 100000000Hz (slot req 400000Hz, actual 400000HZ div = 125)
dwmmc_exynos dw_mmc.2: 1 slots initialized
dwmmc_exynos dw_mmc.2: Version ID is 241a
usbcore: registered new interface driver usbhid
usbhid: USB HID core driver
zram: Created 1 device(s) ...
TCP: cubic registered
NET: Registered protocol family 10
Bridge firewalling registered
Key type dns_resolver registered
VFP support v0.3: implementor 41 architecture 4 part 30 variant f rev 0
Registering SWP/SWPB emulation handler
mmc0: BKOPS_EN bit is not set
mmc_host mmc0: Bus speed (slot 0) = 100000000Hz (slot req 52000000Hz, actual 50000000HZ div = 1)
mmc0: new high speed DDR MMC card at address 0001
mmcblk0: mmc0:0001 M4G1FA 3.72 GiB 
mmcblk0boot0: mmc0:0001 M4G1FA partition 1 1.00 MiB
mmcblk0boot1: mmc0:0001 M4G1FA partition 2 1.00 MiB
mmcblk0rpmb: mmc0:0001 M4G1FA partition 3 128 KiB
 mmcblk0: p1 p2 p3 p4
 mmcblk0boot1: unknown partition table
 mmcblk0boot0: unknown partition table
registered taskstats version 1
s5p-ehci 12110000.usb: S5P EHCI Host Controller
s5p-ehci 12110000.usb: new USB bus registered, assigned bus number 1
s5p-ehci 12110000.usb: irq 103, io mem 0x12110000
mmc_host mmc1: Bus speed (slot 0) = 100000000Hz (slot req 50000000Hz, actual 50000000HZ div = 1)
s5p-ehci 12110000.usb: USB 2.0 started, EHCI 1.00
usb usb1: New USB device found, idVendor=1d6b, idProduct=0002
usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb1: Product: S5P EHCI Host Controller
mmc1: new high speed SDHC card at address b368
usb usb1: Manufacturer: Linux 3.9.0-rc4-exynos+ ehci_hcd
usb usb1: SerialNumber: 12110000.usb
mmcblk1: mmc1:b368 SD04G 3.65 GiB 
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 3 ports detected
samsung-usbphy 12130000.usbphy: Already power on PHY
exynos-ohci 12120000.usb: EXYNOS OHCI Host Controller
exynos-ohci 12120000.usb: new USB bus registered, assigned bus number 2
exynos-ohci 12120000.usb: irq 103, io mem 0x12120000
 mmcblk1: p1 p2 p3
usb usb2: New USB device found, idVendor=1d6b, idProduct=0001
usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=1
usb usb2: Product: EXYNOS OHCI Host Controller
usb usb2: Manufacturer: Linux 3.9.0-rc4-exynos+ ohci_hcd
usb usb2: SerialNumber: 12120000.usb
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 3 ports detected
drivers/rtc/hctosys.c: unable to open rtc device (rtc0)
exynos_cpufreq_init: failed to get resource vdd_arm
EXT3-fs (mmcblk1p2): error: couldn't mount because of unsupported optional features (240)
EXT2-fs (mmcblk1p2): error: couldn't mount because of unsupported optional features (240)
EXT4-fs (mmcblk1p2): mounted filesystem with ordered data mode. Opts: (null)
VFS: Mounted root (ext4 filesystem) on device 179:34.
devtmpfs: mounted
Freeing init memory: 236K
usb 1-3: new high-speed USB device number 2 using s5p-ehci
usb 1-3: New USB device found, idVendor=0424, idProduct=3503
usb 1-3: New USB device strings: Mfr=0, Product=0, SerialNumber=0
hub 1-3:1.0: USB hub found
hub 1-3:1.0: 3 ports detected
modprobe: FATAL: Could not load /lib/modules/3.9.0-rc4-exynos+/modules.dep: No such file or directory

systemd[1]: systemd 195 running in system mode. (+PAM +LIBWRAP +AUDIT +SELINUX +IMA +SYSVINIT +LIBCRYPTSETUP +GCRYPT +ACL +XZ; suse)

Welcome to [0;32mopenSUSE 12.3 (Dartmouth) (armv7hl)[0m!

3, sun6i
1), remove CONFIG_LOAD_ADDRESS=0x40000000 in make
2), set 0x80200000 in mkimage: mkimage -A arm -T kernel -a 0x80200000 -e 0x80200000 -C none -d "xen/xen.bin" xen-uImage
3), load xen from 0x50000000
sunxi#fatload mmc 0:2 50000000 linux/xen-uImage
reading linux/xen-uImage

884122 bytes read
sunxi#bootm 50000000

- UART enabled -
- CPU 00000000 booting -
- Machine ID 00000f34 -
- Started in Secure state -
- Entering Hyp mode -
- Zero BSS -
- Setting up control registers -
- Turning on paging -
- Ready -
RAM: 0000000040000000 - 00000000bfffffff

MODULE[1]: 0000000060000000 - 0000000060400000 
Placing Xen at 0x00000000bfe00000-0x00000000c0000000
start_xen<446>
setup_mm<303>: ram_start<1073741824>, ram_size<2147483648>, ram_end<3221225472>, total_pages<524288>
setup_mm<318>: heap_pages<524288>, xenheap_pages<262144>
Xen heap: 262144 pages  Dom heap: 262144 pages
setup_mm<338>
setup_mm<348>
setup_mm<353>
setup_mm<361>
setup_mm<363>
setup_mm<367>
setup_mm<393>
setup_mm<395>
setup_mm<398>: xenheap_pfn_start: 516096, boot_pfn_start: 778238
setup_mm<399>: xenheap_start: 2113929216, boot_start: 3187662848
init_xenheap_pages<1333>: ps<2113933312>, pe<3187662848>
init_xenheap_pages<1336>: 027c0020, 262141
init_heap_pages<1163>
init_heap_pages<1174>
init_heap_pages<1177>
init_heap_pages<1179>
init_heap_pages<1190>: pg<027c0020>, i<0>

4, compare
boot_pfn_start is different: sun6i 778238, arndale: 778234.

5, next: check why boot_pfn_start is different and why sun6i hang in free_heap_pages.
1), it is still the load/store exclusive issue. i need to fix this right now.
diff --git a/xen/include/asm-arm/arm32/spinlock.h b/xen/include/asm-arm/arm32/spinlock.h
index 4a11a97..dc0173b 100644
--- a/xen/include/asm-arm/arm32/spinlock.h
+++ b/xen/include/asm-arm/arm32/spinlock.h
@@ -37,9 +37,11 @@ static always_inline int _raw_spin_trylock(raw_spinlock_t *lock)
     unsigned long tmp;
 
     __asm__ __volatile__(
-"   ldrex   %0, [%1]\n"
-"   teq     %0, #0\n"
-"   strexeq %0, %2, [%1]"
+"   ldr   %0, [%1]\n"
+"   teq   %0, #0\n"
+"   streq %2, [%1]\n"
+"   moveq %0, #0\n"
+"   movne %0, #1"
     : "=&r" (tmp)
     : "r" (&lock->lock), "r" (1)
     : "cc");

2), the log after the patch apply.
setup_mm<399>: xenheap_start: 2113929216, boot_start: 3187662848
init_xenheap_pages<1327>: ps<2113933312>, pe<3187662848>
init_xenheap_pages<1330>: 027c0020, 262141
init_xenheap_pages<1332>
setup_mm<405>
setup_mm<407>
start_xen<448>
start_xen<450>
start_xen<452>
start_xen<454>
start_xen<456>
start_xen<458>
Looking for UART console serial0
Unable to initialize serial: -9
start_xen<460>
start_xen<462>
start_xen<466>
start_xen<469>
start_xen<472>
start_xen<475>
start_xen<477>
start_xen<480>
start_xen<486>

6, i guess that dig in how to get the sun6i kernel running. is useful to debug this issue.

11:08 2013-07-11
mailing list, virtualization, sles
1, "David Byte" <dbyte@suse.com>""_email_"[Virtualization-dev] Fwd: SLES as virtual guest"_20130710_0127
Question from a partner that I have not thought about or investigated.  Anyone?
-------------------------------------------------
 
Does the Linux kernel (not including any virtual drivers, etc.) alter its processor utilization, scheduling or resource management (i.e. memory, IO, etc) in any way when it’s running on a hypervisor vs. bare-metal?
 
David Byte
Sr. Technology Strategist, OEM
SUSE
dbyte@novell.com
(P)918.230.2771www.suse.com 
https://www.suse.com/partners/integrated-systems/

2, ""Jan Beulich" <JBeulich@suse.com>"_email_20130710_0326
>>> On 09.07.13 at 19:27, "David Byte" <dbyte@suse.com> wrote:
> Does the Linux kernel (not including any virtual drivers, etc.) alter its 
> processor utilization, scheduling or resource management (i.e. memory, IO, 
> etc) in any way when it’s running on a hypervisor vs. bare-metal?

If "the Linux kernel" is any of the kernel flavors we ship, then I'm
relatively certain the answer is "no".

If however "the Linux kernel" is more widely scoped, then there are
kernel configurations where this is possible (because the transition
to using virtual drivers is not as sharp as you/they may imagine).

And even the "no" above is depending on the perspective you/they
take: The kernel using things like the "pause" instruction can have
a more measurable effect when running virtualized than when
running on bare metal.

Jan

11:15 2013-07-11
"Alexander Osthof <aosthof@suse.de>"_email_"[devel] SUSE Studio 1.3 Extension for System z Beta3 is available for testing"_20130710_2117
Hi,

the SUSE Studio team is happy to announce that SUSE Studio 1.3 Extension 
for Sytem z Beta3 is ready and available for testing.

The files can be downloaded from

http://download.suse.de/install/SLE-11-SP2-Studio-1.3-System-Z-Runner-Beta3/

Note:
In order to enable the s390 templates on the Studio Onsite 1.3 host, one 
needs to install the updated packages from the 'ui-server' subdirectoy.

Happy testing,

   Your Studio team.

-- 
Alexander Osthof             Project Manager SUSE Studio & Public Clouds
SUSE LINUX Products GmbH   Maxfeldstr. 5, D-90409 Nürnberg, www.suse.com
GF:Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)
GPG 1024D/06EF2575     3362 3E18 9A21 5080 50F2 000C 7F04 A5B0 06EF 2575

11:18 2013-07-11
virtualization, xen, arm, allwinner A31, sun6i, Cortex-A7 patch, update patch
1, "Tim Deegan <tim@xen.org>"_email_20130711_0114
Hi,

At 17:47 +0800 on 09 Jul (1373392034), Bamvor Jian Zhang wrote:
>          PRINT("- Setting up control registers -\r\n")
>  
> -        /* Read CPU ID */
> -        mrc   CP32(r0, MIDR)
> -        ldr   r1, =(MIDR_MASK)
> -        and   r0, r0, r1
> -        /* Is this a Cortex A15? */
> -        ldr   r1, =(CORTEX_A15_ID)
> -        teq   r0, r1
> -        bleq  cortex_a15_init
> +        /* Get processor specific proc info into r1 */
> +        mrc   CP32(r0, MIDR)                /* r0 := our cpu id */
> +        ldr   r1, = __proc_info_start
> +        add   r1, r1, r10                   /* r1 := paddr of table (start) */
> +        ldr   r2, = __proc_info_end
> +        add   r2, r2, r10                   /* r2 := paddr of table (end) */
> +1:      ldr   r3, [r1, #PROCINFO_cpu_mask]
> +        and   r0, r0, r3

This mask clobbers the only copy of the CPU ID, so the second and
subsequent checks will be wrong.  You need to keep a copy of the
original around or read MIDR inside the loop.

> +        ldr   r3, [r1, #PROCINFO_cpu_val]   /* r3 := cpu val in current proc info */
> +        teq   r0, r3
> +        beq   2f                            /* Match => exit, or try next proc info */
> +        add   r1, r1, #PROCINFO_sizeof
> +        cmp   r1, r2
> +        blo   1b
> +        mov   r4, r0
> +        PRINT("- Missing processor info: ")
> +        mov   r0, r4

It would be good to print the un-masked ID here too. 

> +        bl    putn
> +        PRINT(" -\r\n")
> +        b     fail
> +
> +2:
> +        /* Jump to cpu_init */
> +        ldr   r1, [r1, #PROCINFO_cpu_init]  /* r1 := vaddr(init func) */
> +        adr   lr, cpu_init_done             /* Save return address */
> +        add   pc, r1, r10                   /* Call paddr(init func) */
>  
> +cpu_init_done:
[...]
> +.globl v7_init
> +v7_init:
> +        /* Set up the SMP bit in ACTLR */
> +        mrc   CP32(r0, ACTLR)
> +        orr   r0, r0, #(ACTLR_V7_SMP) /* enable SMP bit */
> +        mcr   CP32(r0, ACTLR)
> +        mov   pc, lr
> +
> +        .section ".init.proc.info", #alloc, #execinstr
> +        .type __v7_ca15mp_proc_info, #object
> +__v7_ca15mp_proc_info:
> +        .long 0x410FC0F0             /* Cortex-A15 */
> +        .long 0xFF0FFFF0             /* Mask */
> +        .long v7_init
> +        .size __v7_ca15mp_proc_info, . - __v7_ca15mp_proc_info
> +
> +        .section ".init.proc.info", #alloc, #execinstr
> +        .type __v7_ca7mp_proc_info, #object
> +__v7_ca7mp_proc_info:
> +        .long 0x410FC070             /* Cortex-A7 */
> +        .long 0xFF0FFFF0             /* Mask */
> +        .long v7_init
> +        .size __v7_ca7mp_proc_info, . - __v7_ca7mp_proc_info
> +

I'd asked for these to be defined in C -- that way all the OFFSET_
macros in head.S are guaranteed to be right.  But OTOH it's nice to have
them here in the same file as the code they reference, so I guess it's
OK this way too.

The rest of this looks good to me.

Cheers,

Tim.

2, (14:35 2013-07-15)
changes since v3:
1), fix bug in get processor proc info.
2), print unmask cpu value if find proc info fail.

changes since v2:
1), define cpu_init function instead of assemble jump code in struct proc_info_list
2), add commit in look up proc info in assemble code.
3), merge __v7_ca7mp and __v7_ca15mp and relative definition into prov-v7.S
4), move MIDR mask definition from headers to prov-v7.S
5), move procinfo.h from xen/include/asm-arm/arm32 to xen/include/asm-arm

3, (10:29 2013-07-18)
the 4th version of this patch finally acked by:
    Acked-by: Tim Deegan <tim@xen.org>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
and commited by Ian C.

14:27 2013-07-11
virtualization, kvm, xen, ceph
1, http://download.suse.de/ibs/Devel:/Storage:/Ceph/SLE11SP2/
2, libxl
1), format: RAW
2), backend? RBD?

15:31 2013-07-11
qemu-kvm script
cat > %{buildroot}%{_bindir}/qemu-kvm << 'EOF'
#!/bin/sh
%ifarch %s390x
exec /usr/bin/qemu-system-s390x -machine accel=kvm "$@"
%else
exec /usr/bin/qemu-system-x86_64 -machine accel=kvm "$@"
%endif
EOF

17:13 2013-07-12
mailing list, virtualization, xen-devel
"Jan Beulich JBeulich@suse.com"_email_"[Xen-devel] preparing for 4.2.3 and 4.1.6"
Aiming at a release some time in August, I'd like to cut RC1-s by
Thursday next week (as I'll be on a two week vacation starting
Friday).

Please indicate any bug fixes that so far may have been missed
in the backports already done. A few fixes are currently stuck in
master's staging branch (or pending to make it there) - these
don't need to be named explicitly, I'm already planning to pull over
the hypervisor ones as soon as they get out of staging. To my
knowledge there hasn't been a run through tools side backports
yet - whether that's a sign of there not being much to backport
(apart from security fixes which are already there) I can't tell.

Please note that according to the current plans and with 4.3
having got released, 4.1.6 is expected to be the last
Xenproject.org release of the 4.1 series.

Jan

17:18 2013-07-12
GTD
0, 11:50

1, today
1), Sync. i said that i am checking whether it is possible add rbd support in libxl.

18:34 2013-07-12
arm, allwinner, a10, x11, mali400
1, https://github.com/ssvb/xf86-video-sunxifb?source=cc
This driver is intended to be a drop-in replacement for x86-video-mali
2, 3D driver and setting up 2D/3D acceleration in X 
http://linux-sunxi.org/Binary_drivers 
3, discuss
[linux-sunxi] MALI 2d acceleration under Linaro

19:01 2013-07-12
arm, allwinner A31, PMIC, AXP 221
1, DCDC1 3.3 IO 1.4A
2, DCDC2 1.1 CPU 2.5A
3, DCDC3 1.1 GPU 2.5A
4, DCDC4 1.1 Core 0.6A
5, DCDC5 1.5 DDR3 2A

19:09 2013-07-12
arm, allwinner, SOC price
https://www.olimex.com/Products/Components/IC/
1, A10/A20 12EUR.
2, A31 18EUR.

09:58 2013-07-15
"Vincent Untz <vuntz@suse.com>"_email_"[devel] [ANNOUNCE] SUSE Cloud 2.0 Beta2 released"_20130711_2340
We expect Beta3 to be released on July 25th.
notes: 
1, what is Cinder?
 - The Cinder barclamp now allows the use of any arbitrary driver. This is
   provided for convenience purposes only, but is not supported.
2, support two hypervisor
 - The Nova barclamp now allows the use of more than one hypervisor for
   compute nodes. It is possible to have both KVM and Xen in the same
   cloud.

10:12 2013-07-15
GTD
0, 9:40-11:40 13:00-18:10

1, today
1), 11:10-11:35 13:07-13:20 work report. see"11:25 2013-07-15"
2), 14:31-16:45 send xen arm Cortex-A7 patch v4. see"11:18 2013-07-11"2
3), 16:59-18:02 jim console reply. see"16:45 2013-07-15"

11:25 2013-07-15
work report - week 27
1, bnc#815201:
reporter confirm that the patch is worked.
try to submit this patch.
2, libvirt: 
send libxl console patch to upstream.
3, US/China virtualization sync.

13:20 2013-07-15
company, opensuse, package repo/github
https://github.com/openSUSE

16:45 2013-07-15
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont1, deal with upstream reply
1), Jim
On 07/04/2013 05:58 AM, Bamvor Jian Zhang wrote:
> this patch introduce the console api in libxl driver for both pv and
> hvm guest.  and import and update the libxlMakeChrdevStr function
> which was deleted in commit dfa1e1dd.
>
> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
> ---
>   src/libxl/libxl_conf.c   |  97 ++++++++++++++++++++++++++++++++++++++
>   src/libxl/libxl_conf.h   |   3 ++
>   src/libxl/libxl_driver.c | 119 +++++++++++++++++++++++++++++++++++++++++++++++
>   3 files changed, 219 insertions(+)
>
> diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
> index e170357..08095bc 100644
> --- a/src/libxl/libxl_conf.c
> +++ b/src/libxl/libxl_conf.c
> @@ -332,6 +332,99 @@ error:
>   }
>   
>   static int
> +libxlMakeChrdevStr(virDomainChrDefPtr def, char **buf)
> +{
> +    const char *type = virDomainChrTypeToString(def->source.type);
> +    int ret;
> +
> +    if (!type) {
> +        virReportError(VIR_ERR_INTERNAL_ERROR,
> +                       "%s", _("unexpected chr device type"));
> +        return -1;
> +    }
> +
> +    switch (def->source.type) {
> +        case VIR_DOMAIN_CHR_TYPE_NULL:
> +        case VIR_DOMAIN_CHR_TYPE_STDIO:
> +        case VIR_DOMAIN_CHR_TYPE_VC:
> +        case VIR_DOMAIN_CHR_TYPE_PTY:
> +            if (virAsprintf(buf, "%s", type) < 0) {
> +                virReportOOMError();

This will need rebased now that Michal's "Introduce OOM reporting to 
virAsprintf" patchset is committed.

https://www.redhat.com/archives/libvir-list/2013-July/msg00506.html

> +                return -1;
> +            }
> +            break;
> +
> +        case VIR_DOMAIN_CHR_TYPE_FILE:
> +        case VIR_DOMAIN_CHR_TYPE_PIPE:
> +            if (virAsprintf(buf, "%s:%s", type,
> +                            def->source.data.file.path) < 0) {
> +                virReportOOMError();
> +                return -1;
> +            }
> +            break;
> +
> +        case VIR_DOMAIN_CHR_TYPE_DEV:
> +            if (virAsprintf(buf, "%s", def->source.data.file.path) < 0) {
> +                virReportOOMError();
> +                return -1;
> +            }
> +            break;
> +        case VIR_DOMAIN_CHR_TYPE_UDP: {
> +            const char *connectHost = def->source.data.udp.connectHost;
> +            const char *bindHost = def->source.data.udp.bindHost;
> +            const char *bindService  = def->source.data.udp.bindService;
> +
> +            if (connectHost == NULL)
> +                connectHost = "";
> +            if (bindHost == NULL)
> +                bindHost = "";
> +            if (bindService == NULL)
> +                bindService = "0";
> +
> +            ret = virAsprintf(buf, "udp:%s:%s@%s:%s",
> +                              connectHost,
> +                              def->source.data.udp.connectService,
> +                              bindHost,
> +                              bindService);
> +            if ( ret < 0) {

Extra space between '(' and 'ret', caught by 'make syntax-check'.

> +                virReportOOMError();
> +                return -1;
> +            }
> +            break;
> +        }
> +        case VIR_DOMAIN_CHR_TYPE_TCP:
> +            if (def->source.data.tcp.protocol == VIR_DOMAIN_CHR_TCP_PROTOCOL_TELNET) {
> +                ret = virAsprintf(buf, "telnet:%s:%s%s",
> +                                  def->source.data.tcp.host,
> +                                  def->source.data.tcp.service,
> +                                  def->source.data.tcp.listen ? ",server,nowait" : "");
> +            } else {
> +                ret = virAsprintf(buf, "tcp:%s:%s%s",
> +                                  def->source.data.tcp.host,
> +                                  def->source.data.tcp.service,
> +                                  def->source.data.tcp.listen ? ",server,nowait" : "");
> +            }
> +            if ( ret < 0) {

Extra space here too.

> +                virReportOOMError();
> +                return -1;
> +            }
> +            break;
> +
> +        case VIR_DOMAIN_CHR_TYPE_UNIX:
> +            ret = virAsprintf(buf, "unix:%s%s",
> +                              def->source.data.nix.path,
> +                              def->source.data.nix.listen ? ",server,nowait" : "");
> +            if ( ret < 0) {

And here.

BTW, do all of these types work with Xen?  I've only tested with type 'pty', 
which works fine with both pv and hvm guests.

> +                virReportOOMError();
> +                return -1;
> +            }
> +            break;
> +    }
> +
> +    return 0;
> +}
> +
> +static int
>   libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>   {
>       libxl_domain_build_info *b_info = &d_config->b_info;
> @@ -404,6 +497,10 @@ libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>           if (VIR_STRDUP(b_info->u.hvm.boot, bootorder) < 0)
>               goto error;
>   
> +        if (def->nserials &&
> +            (libxlMakeChrdevStr(def->serials[0], &b_info->u.hvm.serial) < 0))
> +            goto error;
> +
>           /*
>            * The following comment and calculation were taken directly from
>            * libxenlight's internal function libxl_get_required_shadow_memory():
> diff --git a/src/libxl/libxl_conf.h b/src/libxl/libxl_conf.h
> index 2b4a281..861d689 100644
> --- a/src/libxl/libxl_conf.h
> +++ b/src/libxl/libxl_conf.h
> @@ -34,6 +34,7 @@
>   # include "configmake.h"
>   # include "virportallocator.h"
>   # include "virobject.h"
> +# include "virchrdev.h"
>   
>   
>   # define LIBXL_VNC_PORT_MIN  5900
> @@ -94,6 +95,8 @@ struct _libxlDomainObjPrivate {
>   
>       /* per domain libxl ctx */
>       libxl_ctx *ctx;
> +    /* console */
> +    virChrdevsPtr devs;
>       libxl_evgen_domain_death *deathW;
>   
>       /* list of libxl timeout registrations */
> diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
> index 1bae3d6..b8c6832 100644
> --- a/src/libxl/libxl_driver.c
> +++ b/src/libxl/libxl_driver.c
> @@ -420,6 +420,9 @@ libxlDomainObjPrivateAlloc(void)
>   
>       libxl_osevent_register_hooks(priv->ctx, &libxl_event_callbacks, priv);
>   
> +    if (!(priv->devs = virChrdevAlloc()))
> +        return NULL;
> +
>       return priv;
>   }
>   
> @@ -432,6 +435,7 @@ libxlDomainObjPrivateDispose(void *obj)
>           libxl_evdisable_domain_death(priv->ctx, priv->deathW);
>   
>       libxl_ctx_free(priv->ctx);
> +    virChrdevFree(priv->devs);
>   }
>   
>   static void
> @@ -4518,6 +4522,120 @@ libxlDomainSetSchedulerParameters(virDomainPtr dom, virTypedParameterPtr params,
>       return libxlDomainSetSchedulerParametersFlags(dom, params, nparams, 0);
>   }
>   
> +
> +static int
> +libxlDomainOpenConsole(virDomainPtr dom,
> +                       const char *dev_name,
> +                       virStreamPtr st,
> +                       unsigned int flags)
> +{
> +    libxlDriverPrivatePtr driver = dom->conn->privateData;
> +    virDomainObjPtr vm = NULL;
> +    int ret = -1;
> +    int i;

Needs to be size_t following Daniel's patchset to "Santize iterator variable 
names & data types"

https://www.redhat.com/archives/libvir-list/2013-July/msg00397.html

> +    virDomainChrDefPtr chr = NULL;
> +    libxlDomainObjPrivatePtr priv;
> +    char *console = NULL;
> +    int num = 0;
> +    libxl_console_type type;
> +
> +    virCheckFlags(VIR_DOMAIN_CONSOLE_SAFE |
> +                  VIR_DOMAIN_CONSOLE_FORCE, -1);
> +
> +    libxlDriverLock(driver);
> +    vm = virDomainObjListFindByUUID(driver->domains, dom->uuid);
> +    libxlDriverUnlock(driver);
> +    if (!vm) {
> +        char uuidstr[VIR_UUID_STRING_BUFLEN];
> +        virUUIDFormat(dom->uuid, uuidstr);
> +        virReportError(VIR_ERR_NO_DOMAIN,
> +                       _("No domain with matching uuid '%s'"), uuidstr);
> +        goto cleanup;
> +    }
> +
> +    if (!virDomainObjIsActive(vm)) {
> +        virReportError(VIR_ERR_OPERATION_INVALID,
> +                       "%s", _("domain is not running"));
> +        goto cleanup;
> +    }
> +
> +    priv = vm->privateData;
> +
> +    if (dev_name) {
> +        for (i = 0 ; !chr && i < vm->def->nconsoles ; i++) {

Spaces before the semicolons causes 'make syntax-check' failure.

> +            if (vm->def->consoles[i]->info.alias &&
> +                STREQ(dev_name, vm->def->consoles[i]->info.alias)) {
> +                chr = vm->def->consoles[i];
> +                num = i;
> +            }
> +        }
> +        for (i = 0 ; !chr && i < vm->def->nserials ; i++) {

Same comment here about spaces before semicolon.

> +            if (STREQ(dev_name, vm->def->serials[i]->info.alias)) {
> +                chr = vm->def->serials[i];
> +                num = i;
> +            }
> +        }
> +        for (i = 0 ; !chr && i < vm->def->nparallels ; i++) {

And here.

> +            if (STREQ(dev_name, vm->def->parallels[i]->info.alias)) {
> +                chr = vm->def->parallels[i];
> +                num = i;
> +            }
> +        }
> +    } else {
> +        if (vm->def->nconsoles)
> +            chr = vm->def->consoles[0];
> +        else if (vm->def->nserials)
> +            chr = vm->def->serials[0];
> +    }
> +
> +    if (!chr) {
> +        virReportError(VIR_ERR_INTERNAL_ERROR,
> +                       _("cannot find character device %s"),
> +                       NULLSTR(dev_name));
> +        goto cleanup;
> +    }
> +
> +    if (chr->source.type != VIR_DOMAIN_CHR_TYPE_PTY) {
> +        virReportError(VIR_ERR_INTERNAL_ERROR,
> +                       _("character device %s is not using a PTY"),
> +                       NULLSTR(dev_name));
> +        goto cleanup;
> +    }
> +
> +    if (dev_name) {
> +        if (STREQ(vm->def->os.type, "hvm"))
> +            type = LIBXL_CONSOLE_TYPE_SERIAL;
> +        else
> +            type = LIBXL_CONSOLE_TYPE_PV;
> +        ret = libxl_console_get_tty(priv->ctx, vm->def->id, num, type, &console);
> +    } else {
> +        ret = libxl_primary_console_get_tty(priv->ctx, vm->def->id, &console);
> +    }
> +    if ( ret )

Extra spaces here causing 'make syntax-check' failure as well.

Regards,
Jim

> +        goto cleanup;
> +
> +    if (VIR_STRDUP(chr->source.data.file.path, console) < 0)
> +        goto cleanup;
> +
> +    /* handle mutually exclusive access to console devices */
> +    ret = virChrdevOpen(priv->devs,
> +                         &chr->source,
> +                         st,
> +                         (flags & VIR_DOMAIN_CONSOLE_FORCE) != 0);
> +
> +    if (ret == 1) {
> +        virReportError(VIR_ERR_OPERATION_FAILED, "%s",
> +                       _("Active console session exists for this domain"));
> +        ret = -1;
> +    }
> +
> +cleanup:
> +    VIR_FREE(console);
> +    if (vm)
> +        virObjectUnlock(vm);
> +    return ret;
> +}
> +
>   static int
>   libxlDomainIsActive(virDomainPtr dom)
>   {
> @@ -4739,6 +4857,7 @@ static virDriver libxlDriver = {
>       .domainManagedSave = libxlDomainManagedSave, /* 0.9.2 */
>       .domainHasManagedSaveImage = libxlDomainHasManagedSaveImage, /* 0.9.2 */
>       .domainManagedSaveRemove = libxlDomainManagedSaveRemove, /* 0.9.2 */
> +    .domainOpenConsole = libxlDomainOpenConsole, /* 1.0.8 */
>       .domainIsActive = libxlDomainIsActive, /* 0.9.0 */
>       .domainIsPersistent = libxlDomainIsPersistent, /* 0.9.0 */
>       .domainIsUpdated = libxlDomainIsUpdated, /* 0.9.0 */

2, i forget to do the make syntax-check. how foolish am i.

3, changes
1), 
(1), Jim
This will need rebased now that Michal's "Introduce OOM reporting to 
virAsprintf" patchset is committed.

https://www.redhat.com/archives/libvir-list/2013-July/msg00506.html
(2), DONE

2), 
(1), Jim: Extra spaces here causing 'make syntax-check' failure as well.
(2), DONE

3), 
(1), Jim: 
BTW, do all of these types work with Xen?  I've only tested with type 'pty', 
which works fine with both pv and hvm guests.
(2), maybe i copy all this from qemu?
\TODO: i need try these. 

4),
(1), Jim:
Needs to be size_t following Daniel's patchset to "Santize iterator variable 
names & data types"
(2), DONE.

https://www.redhat.com/archives/libvir-list/2013-July/msg00397.html

4, (11:13 2013-07-17)
reply to Jim
> BTW, do all of these types work with Xen?  I've only tested with type 'pty', 
> which works fine with both pv and hvm guests.
i only test the pty type too. lots of type is introduced in 2b84e445(Add libxenlight driver), i add the missing type compare with qemu driver. maybe it will be used in future. for now, only pty is needed for my console patch.

18:50 2013-7-15
ARM architecture -> Reference Manuals -> ARMv7-AR LPA Virtualisation 

23:50 2013-7-15
In a system that contains Cortex-A15 and Cortex-A7 MPCore processor clusters, you must ensure the BROADCASTINNER and BROADCASTOUTER pins on both processor clusters are set to 1 so that both clusters are in the same Inner Shareable domain

16:58 2013-07-16
GTD
0, 10:30

1, today
1), xen arm patch. acked by Tim.

17:08 2013-07-16
company, success story
1, "Alan Gao"_email_"Case Study: Hong Kong Jockey Club Choose SUSE Manager"_20130710_22:22
Hi Team
 
First of all, Congratulations to Stanley Cheng win the Hong Kong Jockey Club. To share his rich experiences, below are case study for you reference. This is for internal only, please don't share out. Thanks. 

Lead 
Hong Kong Jockey Club is our installed base using around 100 SUSE Linux Enterprise Server (SLES )to run the Enterprise Messaging Bus. 

Challenge 
An SMT server with Internet access already existed for patch management, but there was a need to manage the SUSE servers on networks that are isolated and completely disconnected from the Internet. Therefore, the SUSE Manager servers itself would not be able to update the patches repository from Internet. In addition, there is a demand of security audit report for ensuring patches applied to related system. 

Bidding/Quotation: 
RedHat HK would like to replace us by their server product and management tool (Satellite). Here is some of key things we did :- 
1. Maintain a local support team to consistently cover customer inquiries 
2. Complete the POC in a short duration to impress customer 
3. Bring in management support for relationship bonding with customer 

Solution 
The SMT server has the functionality to sync the subscription information and channels to external media. With this media, it can then be connected to the isolated SUSE Manager servers so the subscription meta-data and repository data can be imported into the SUSE Manager server for patch update in isolated network segment.  

Result 
Before SUSE Manager, the customer would painstakingly make manual copies of the repositories and add them to the isolated servers via YaST. This was error prone as the repositories were often not complete copies of the original one and required a lot of time to maintain. Now, customer can monitor, control and report the patches status for all the SLES deployment in a single web console. 

Extension  
The story can be repeat for all customer environment with 20 SLESs/RHELs or above for patch management initiatives. 

Team Work 

Graham Marsh - Technical lead 
Lin Pei Feng - Technical support 
Herbie Lam - Relationship coverage 
 
Alan Gao
 
Senior Marketing Manager, Asia
agao@novell.com
(86-10) 6533-9051

2, Andy Jiang
Thanks Stanley and Alan to put this story together!
 
Arthur, Herbie, Chris, and Kelvin,
 
Is it possible to launch a program to call our SUSE installed base with over several dozen SLES? Let's see if we can replicate Stanley's success. If we can push in SUSE manger, this will pave ways for us to push SUSE Cloud in future. Your leadership and drive is appreciated!

17:29 2013-07-16
company, success story
1, Summary: 
using SAP and HA.
2, "Matthew Lee"_email_"SUSE Success: PCS, a UNIX to Linux Migration and Oracle DB Take Out"_20130716_0743
 PCS: UNIX to Linux Migration and Oracle DB Take Out
 
Success story written by the client directly

PCS have for the past 13 years been at the forefront of SAP focused technology innovation with the Health Sciences Division at Imperial. Imperial Health Sciences has undergone some name changes as well as technology changes during that time. 13 Years ago PHD (Pharmaceutical Healthcare Distributors) needed an IT solution that would help the business run third-party logistics management on behalf of their client base. The SAP ERP solution was put forward and chosen as the strategic software solution to cater for the company future growth and development. The ERP SAP system was installed on HP-Unix PA-RISC architecture with Informix database. Some years after, the database platform was migrated by PCS to Oracle. In Early 2010 PHD rebranded and was included into the RTT group which saw to another huge Migration of OS and DB onto the IBM Power architecture. As software and maintenance costs became a problem and the company cutting back on its IT expenditure, RTT saw the need to save costs while retaining the value and need for reliable 24-7  operations. 
PCS proposed to migrate their SAP ERP and BW systems from IBM AIX and Oracle Databases to Intel Architecture Linux operating systems with IBM DB2 LUW database. SLES was the obvious choice with its SAP runtime development distribution including the HA capabilities that ensured the business continuity and cost saving. This decision was made and RTT Medical was acquired by the Imperial group. With all eyes on the Health Sciences (former PHD/RTT HS) migration to SUSE Linux, PCS saw to a flawless migration for all the ERP, BW, Development, Quality Assurance and Production Servers.  
The move was a GREAT success and the group (104 companies in total)  is now considering consolidating all their ERP software needs to SUSE operating system on Intel hardware as PCS has pioneered at Imperial Health Sciences. 
Thank you SUSE for developing such a powerful and reliable software solution. PCS and the Imperial group are looking forward to a long and prosperous relationship to the future.

17:33 2013-07-16
company, colleague, HA team,  Kristoffer Grönlund
1, ""Milisav Radmanic" <radmanic@suse.com>"_email_"[devel] please welcome new employee Kristoffer Grönlund"
Hello SUSE,

please join me in welcoming a new employee: Kristoffer Grönlund 
has gained quite some experience in developing HA appliances at 
his previous company.
He brings a lot of great know-how and expertise and I'm really 
excited about Kristoffer joining the HA-team.
He will work from his home office in Sweden.

Thank you
mili  

-- 
Milisav Radmanic
Engineering Manager SUSE Linux Enterprise Applications
SUSE LINUX Products GmbH,
GF: Jeff Hawn, Jennifer Guild, Felix Imendörffer, HRB 16746 (AG Nürnberg)
Maxfeldstraße 5
90409 Nürnberg
Germany

2, (11:10 2013-07-17)
""Kristoffer Gronlund" <kgronlund@novell.com>"_email_20130716_2256
Hello everyone,

I'm very excited about working at SUSE, and I'm looking forward to
eventually meeting most of you in person! I had an interesting start
this week, my first work day was spent on a plane to Beijing for the
HA team meeting in the office here.

As Milisav said, my name is Kristoffer Grönlund (krig on IRC), and I
come most recently from company called Procera Networks where I was
primarily working as a software developer on the Procera subscriber
management product, but I was also responsible for HA for those
appliances when deployed at customer sites. For various reasons,
primarily because we had our own Linux "distribution", I ended up
writing my own HA solution software from scratch, which I really hope
I won't have to do again...

Before that, I worked for a computer game company doing mostly
physics and graphics, and I also play around with recording music and
used to play the drums in a bunch of bands that luckily never released
anything. I also record a programming podcast with a couple of friends
at http://kodsnack.se.

I'm usually located in a little village near Gothenburg called Horred,
so if any of you happen to pass by, feel free to visit :)

// Kristoffer
kgronlund@suse.com

10:58 2013-07-17
kernel, 3.10, timerless, \TODO read it later
1, http://kernelnewbies.org/LinuxChanges 
1), Timerless multitasking
In the prehistory of computing, computers could only have one task running at one time. But people wanted to start other tasks without waiting for first one to end, and even switch between tasks, and thus multitasking was born. First, multitasking was "collaborative", a process would run until its own code voluntarily decided to pause and allow other tasks to run. But it was possible to do multitasking better: the hardware could have a timer that fires up at regular intervals (called "ticks"); this timer could forcefully pause any program and run a OS routine that decides which task should continue running next. This is called preemptive multitasking, and it's what modern OSs do.

But preemptive multitasking had some side effects in modern hardware. CPUs of laptops and mobile devices require inactivity to enter in low power modes. Preemptive multitasking fires the the timer often, 1000 times per second in a typical Linux kernel, even when the system is not doing anything, so the CPUs could not save as much power as it was possible. Virtualization created more problems, since each Linux VM runs its own timer.In 2.6.21, released in April 2007, Linux partially solved this: the timer would fire off 1000 times per second as always when the system is running tasks, but it would stop completely the timer when the system is idle. But this is not enough. There are single task workloads like scientific number crunching or users of the real-time pachset whose performance or latency is hurt because they need to be temporally paused 1000 times per second for no reason.

This Linux release adds support for not firing the timer (tickless) even when tasks are running. With some caveats: in this release it's not actually fully tickless, it still needs the timer, but only fires up one time per second; the full tickless mode is disabled when a CPU runs more than one process; and a CPU must be kept running with full ticks to allow other CPUs to go into tickless mode.

For more details and future plans, it's strongly recommended to read this LWN article: '(Nearly) full tickless operation in 3.10' and the Documentation.
2), https://lwn.net/Articles/549580/
(Nearly) full tickless operation in 3.10

11:01 2013-07-17
GTD
0, 10:40-18:25

1, today
1), reading. see"10:58 2013-07-17"
2), 20' reply libxl console patch. see"16:45 2013-07-15"4
3), 11:37-13:00 work on libxl rbd. see"11:37 2013-07-17"
lunch 30'
4), 60' arm, Cortex-A12. see"13:44 2013-07-17"
5), nap 30'
6), 30' arm kernel things.
7), -18:20 xen: arm: 8250 debug patch. see"15:05 2013-07-17"

11:37 2013-07-17
storage, ceph, rbd; virtualization, qemu, libxl
1, try to understand the code, how qemu arguments made by libxl.
what does xenstore info for? only a reference for users? 

2, relative email
0), after read this thread of email, i know that ceph rbd support is work in libvirt+lixl.
libvirt, libxl and QDISKs
http://lists.xen.org/archives/html/xen-devel/2013-04/msg02461.html

1), 
>> George Dunlap
> Ian Campbell
Stefano Stabellini 

> > On the other hand, experience has shown that converging on what the
> > "right" interface should be take a heck of a lot longer than you
> > think; so maybe we should just plan on doing this for 4.4 at this
> > point.
> 
> I don't think this can/should be rushed at this point.

Right, but going back to the original question: if we have in our hands
something that is not vhd, raw or qcow and blktap2 is available,
should we really try to pass it to it?

We do know that blktap2 only handles qcow, qcow2, raw and vhd (and the
implementation of the first two formats is too buggy to be used).

Thus I think that the answer is pretty obvious here: we should try with
QEMU, whose supported format list is way wider.

2), Sylvain Munaut s.munaut@whatever-company.com 
> We do know that blktap2 only handles qcow, qcow2, raw and vhd (and the
> implementation of the first two formats is too buggy to be used).

Well, jfyi I have a working RBD driver for blktap2 ...

Cheers,

    Sylvain

3), Ian Campbell 
> We do know that blktap2 only handles qcow, qcow2, raw and vhd (and the
> implementation of the first two formats is too buggy to be used).
> 
> Thus I think that the answer is pretty obvious here: we should try with
> QEMU, whose supported format list is way wider.

Which I think we do, we only try and use blktap for raw and vhd.

Ian.

4), David Scott 
As well as the disk format dimension (vhd, qcow2 etc) there's also the network disk access protocol (iSCSI, ceph/RBD, sheepdog?). Although both blktap/tapdisk can handle raw, alas all the interesting (perhaps I'm showing my bias here ;-) disk access protocols are in qemu. So if we default to blktap/tapdisk we can only handle raw *files*, whereas if we default to qemu we can also do these new fancy things as well.

Cheers,
Dave

5), 
> Ian C
David Scott 

> Remind me why you can't specify backend=qdisk explicitly? Does libvirt
> not propagate anything like that?
I'll give this a go tomorrow when I'm not at the mercy of dodgy wifi :-) From my reading of the libvirt code it does allow the selection of a driverName from the set "tap" "tap2" "file" and "phy". It looks like we could define a "qdisk" driverName.

Actually this reminds me of a general concern I had: I worry that people who choose to use libvirt will likely use all the default options, and not customise their code too much for a specific hypervisor. After all, if they wanted to customise their code for xen they would just use libxl and use the richer interface. I think we ought to make sure as much stuff just works by default as possible. In my ideal world it would be possible to take a simple libvirt domain configuration (perhaps one which used to run on kvm) and run it on xen, transparently benefiting from xen features such as driver domains (and automatic blktap/qemu selection?). I think if the domain XML requires too much tweaking then people will just not use the features or may give up altogether.

Cheers,
Dave

6), qemu should faster then blktap
> Stefano Stabellini  
Roger Pau Monné roger.pau@citrix.com

> However the mapping of RAW to TAP (libxl does the same) has always been
> a bit dubious to me: now that upstream QEMU is used with HVM guests too
> by libxl, there is no reason to use blktap over QEMU for raw files any
> more.

Qemu should indeed be much faster than blktap when using recent Linux
kernels in the DomU due to persistent grants, I don't think blktap can
provide the same performance, although I have not tested it. With Qemu
we can get 900k IOPS.

http://xenbits.xen.org/people/royger/persistent_read_qemu.png

7), 
Marek Marczykowski marmarek@invisiblethingslab.com
> Stefano Stabellini 

> However the mapping of RAW to TAP (libxl does the same) has always been
> a bit dubious to me: now that upstream QEMU is used with HVM guests too
> by libxl, there is no reason to use blktap over QEMU for raw files any
> more.

What about old good loop+phy based backend for file disk images? I don't want
whole qemu in dom0 for PV domains, only for handling simple disk backend.
Additionally sparse images + loop + phy + mount -o discard in domU makes the
images "auto shrinking". Don't know if qemu is able to do this.

Attached patch, which I currently use for that. If it is close to something
that would be accepted, I will send it in new thread.

BTW I don't want qemu in dom0 for HVM also, but this is another story
(modified stubdom etc) and probably not acceptable in vanilla xen.

-- 
Best Regards / Pozdrawiam,
Marek Marczykowski
Invisible Things Lab

8), 
To: Marek Marczykowski
From: Stefano Stabellini

The original reason to drop loop+phy from libxl was that it is not safe
as it doesn't support O_DIRECT. It always goes through the Linux page
cache.
However after a lengthy discussion regarding QEMU and O_DIRECT with
Alex, it turns out that we don't actually need O_DIRECT for data
consistency so loop+phy should be safe too after all.

Time to bring back loop support?

9), sometimes, script is better than hardcode 
To: Marek Marczykowski
From: Ian Campbell

On Fri, 2013-04-26 at 12:31 +0100, Marek Marczykowski wrote:
> What about old good loop+phy based backend for file disk images? I don't want
> whole qemu in dom0 for PV domains, only for handling simple disk backend.
> Additionally sparse images + loop + phy + mount -o discard in domU makes the
> images "auto shrinking". Don't know if qemu is able to do this.

IIRC the problem with loop+phy is that loop doesn't do O_DIRECT and
therefore your data isn't actually on the disk when you might think it
is, which can lead to filesystem corruption even if the f/s is doing
correct barriers.

> Attached patch, which I currently use for that. If it is close to something
> that would be accepted, I will send it in new thread.

I think you can use a block script for this (i.e. it does the loop
mount) and avoid patching libxl at all. That's what xend did at least...

Ian.

10), compare qemu and loop
Stefano Stabellini

On Mon, 29 Apr 2013, Ian Campbell wrote:
> On Fri, 2013-04-26 at 18:10 +0100, Stefano Stabellini wrote:
> > On Fri, 26 Apr 2013, Ian Campbell wrote:
> > > On Fri, 2013-04-26 at 12:48 +0100, Stefano Stabellini wrote:
> > > > On Fri, 26 Apr 2013, Ian Campbell wrote:
> > > > > On Fri, 2013-04-26 at 12:31 +0100, Marek Marczykowski wrote:
> > > > > > What about old good loop+phy based backend for file disk images? I 
> > > > > > don't want
> > > > > > whole qemu in dom0 for PV domains, only for handling simple disk 
> > > > > > backend.
> > > > > > Additionally sparse images + loop + phy + mount -o discard in domU 
> > > > > > makes the
> > > > > > images "auto shrinking". Don't know if qemu is able to do this.
> > > > > 
> > > > > IIRC the problem with loop+phy is that loop doesn't do O_DIRECT and
> > > > > therefore your data isn't actually on the disk when you might think it
> > > > > is, which can lead to filesystem corruption even if the f/s is doing
> > > > > correct barriers.
> > > > 
> > > > If it is safe for QEMU, it should be safe for loop and blkback too.
> > > 
> > > qemu (and blkback) will issue correct barriers/syncs to the underlying
> > > storage. AFAIK loop does not.
> > 
> > Looking at drivers/block/loop.c, it seems to me that REQ_FUA and
> > REQ_FLUSH both handled correctly by issuing a vfs_fsync.
> 
> Oh, good, either it's been fixed (do we know when?) or I was confusing
> things with O_DIRECT.
> 
> > > > > > Attached patch, which I currently use for that. If it is close to 
> > > > > > something
> > > > > > that would be accepted, I will send it in new thread.
> > > > > 
> > > > > I think you can use a block script for this (i.e. it does the loop
> > > > > mount) and avoid patching libxl at all. That's what xend did at 
> > > > > least...
> > > > 
> > > > Yes, libxl would need to arrage the script to be called when "phy" is
> > > > used on a file, right?
> > > 
> > > I meant the user can pass "script=block-loop". In the full knowledge of
> > > what that means for their data integrity.
> >  
> > Yeah, but there is no such block-loop script at the moment, the script
> > is called block and its behaviour depends on the xenstore "type" node:
> > it must be "file" and libxl never writes "type" "file" to xenstore (see
> > device_disk_add and libxl__device_disk_string_of_backend).
> 
> A block-loop script would be a matter of a few minutes work based on the
> current block script, or the current block script could be modified to
> stat the path and DTRT when handling a phy type device.

I vote for having this in 4.3

11), leave raw alone in libvirt, and let libxl decide what to do.
On Fri, 26 Apr 2013, Ian Campbell wrote:
> On Fri, 2013-04-26 at 11:10 +0100, Stefano Stabellini wrote:
> > On Fri, 26 Apr 2013, Jim Fehlig wrote:
> > > [...]
> > 
> > It looks like the defaults are the same of libxl.
> > 
> > However the mapping of RAW to TAP (libxl does the same) has always been
> > a bit dubious to me: now that upstream QEMU is used with HVM guests too
> > by libxl, there is no reason to use blktap over QEMU for raw files any
> > more.
> 
> There are two TAP+RAW in the above, one is inside an if (driver="tap")
> which seems reasonable, are you talking about the one in the
> driver="file"?

Yes

> I think it would be better for libvirt in the file and phy cases to just
> say format=raw and leave libxl to pick a backend capable of providing
> this.

I agree

> Changing what libxl does is a separate question, but I think you are
> right that a case could be made for preferring qdisk in the default
> case.

Indeed

12), read it later.
http://lists.xen.org/archives/html/xen-devel/2013-04/msg02738.html

3, try rbd with guangliang.

13:44 2013-07-17
ieee, online, arm, Cortex-A12
1, Cortex-A53 for Entry level. A57 for Premium. 
Cortex-A12 for Mid.
2, I$
cache line 64Bytes
Cortex-A7 I$ 32Bytes, D$ 64Bytes. L2 64Bytes.
3, full out-of-order.
4, tightly coupled OoO data engine.
OoO: Out of Order.

14:00 2013-07-17
arm, Cortex-A7
The DCU contains a combined local and global exclusive monitor. This monitor can be set to the exclusive state only by a LDREX instruction executing on the local processor.

14:49 2013-07-17
arm, ldrex
1, a bug
http://china.xilinx.com/support/answers/47586.html
When a cacheable read receives an external abort, the aborted line is allocated as invalid in the Data Cache, and any allocation in the Data Cache clears the internal exclusive monitor. Therefore, if a program executes a LDREX/STREX loop, with the DSB instruction within, and it keeps on receiving an abort answer in the middle of the LDREX/STREX sequence, then the LDREX/STREX sequence never succeeds.

The issue happens in systems that might generate external aborts in answer to cacheable memory requests. There are two work-arounds: turn on the branch prediction or remove the DSB in the middle of the LDREX/STREX sequence.

2, Toward generic atomic operations 
https://lwn.net/Articles/509102/

14:56 2013-07-17
kernel, 淘宝的内核维护开发团队, 内核月报
http://kernel.taobao.org/index.php/%E9%A6%96%E9%A1%B5
http://kernel.taobao.org/index.php/Monthly_Kernel_Reports

15:05 2013-07-17
virtualization, xen, arm, allwinner A31, sun6i, 8250 debug patch
1, PLAN: work on debug uart patch base on Chen baozi patch: 3726b101
1), test dtuart with this patch.

2, about dt debug
1), setup_xen(), reference code: 
    dt_uart_init();
    console_init_preirq();

    system_state = SYS_STATE_boot;

    processor_id();

    platform_init();
2), enable DEBUG_DT in common/device_tree.c
3), dt_printk will using early_prink or printk depend on system_state. after SYS_STATE_boot set, it will use printk.

3, about dt uart.


dt_unflatten_host_device_tree -> __unflatten_device_tree 
                              -> dt_alias_scan -> dt_alias_add

dt_uart_init -> dt_find_node_by_alias 

4, log with Ian C patch
- UART enabled -
- CPU 00000000 booting -
- Machine ID 00000f34 -
- Started in Secure state -
- Entering Hyp mode -
- Zero BSS -
- Setting up control registers -
- Turning on paging -
- Ready -
RAM: 0000000040000000 - 00000000bfffffff

MODULE[1]: 0000000060000000 - 0000000060400000 
Placing Xen at 0x00000000bfe00000-0x00000000c0000000
start_xen<446>
setup_mm<303>: ram_start<1073741824>, ram_size<2147483648>, ram_end<3221225472>, total_pages<524288>
setup_mm<318>: heap_pages<524288>, xenheap_pages<262144>
Xen heap: 262144 pages  Dom heap: 262144 pages
setup_mm<338>
setup_mm<348>
setup_mm<353>
setup_mm<361>
setup_mm<363>
setup_mm<367>
setup_mm<393>
setup_mm<395>
setup_mm<398>: xenheap_pfn_start: 516096, boot_pfn_start: 778238
setup_mm<399>: xenheap_start: 2113929216, boot_start: 3187662848
init_xenheap_pages<1327>: ps<2113933312>, pe<3187662848>
init_xenheap_pages<1330>: 027c0020, 262141
init_xenheap_pages<1332>
setup_mm<405>
setup_mm<407>
start_xen<448>
start_xen<450>
start_xen<452>
<3> -> unflatten_device_tree()
<3>Unflattening device tree:
<3>magic: 0xd00dfeed
<3>size: 0x000656
<3>version: 0x000011
<3>  size is 0x6e4 allocating...
<3>  unflattening 40003008...
<3>fixed up name for  -> 
<3>fixed up name for chosen -> chosen
<3>fixed up name for modules -> modules
<3>fixed up name for module@0 -> module
<3>fixed up name for hypervisor -> hypervisor
<3>fixed up name for aliases -> aliases
<3>fixed up name for cpus -> cpus
<3>fixed up name for cpu@0 -> cpu
<3>fixed up name for memory -> memory
<3>fixed up name for timer -> timer
<3>fixed up name for interrupt-controller@01C81000 -> interrupt-controller
<3>fixed up name for serial@01C28000 -> serial
<3>fixed up name for fixed-rate-clocks -> fixed-rate-clocks
<3>fixed up name for xxti -> xxti
<3> <- unflatten_device_tree()
<3>adding DT alias:serial0: stem=serial id=0 node=/serial@01C28000
start_xen<454>
start_xen<456>
start_xen<458>
Looking for UART console serial0
<3>dt_compat_cmp: cp<snps,dw-apb-uart>, compat<snps,dw-apb-uart>
ns16550_uart_dt_init
<3>DT: ** translation for device /serial@01C28000 **
<3>DT: bus is default (na=1, ns=1) on /
<3>DT: translating address:<3> 01c28000<3>
<3>DT: reached root node
ns16550 at 1c28000-1c28100
<3>dt_device_get_raw_irq: dev=/serial@01C28000, index=0
<3> intspec=0 intlen=3
<3> intsize=3 intlen=3
<3>dt_irq_map_raw: par=/interrupt-controller@01C81000,intspec=[0x00000000 0x00000033...],ointsize=3
<3>dt_irq_map_raw: ipar=/interrupt-controller@01C81000, size=3
<3> -> addrsize=1
<3> -> got it !
console done?
start_xen<460>
UART mapped at 10007000
divisor 0
 __  __            _  _    _____                    _        _     _      
 \ \/ /___ _ __   | || |  |___ /    _   _ _ __  ___| |_ __ _| |__ | | ___ 
  \  // _ \ '_ \  | || |_   |_ \ __| | | | '_ \/ __| __/ _` | '_ \| |/ _ \
  /  \  __/ | | | |__   _| ___) |__| |_| | | | \__ \ || (_| | |_) | |  __/
 /_/\_\___|_| |_|    |_|(_)____/    \__,_|_| |_|___/\__\__,_|_.__/|_|\___|
                                                                          
(XEN) Xen version 4.3-unstable (bamvor@(none)) (arm-linux-gnueabihf-gcc (crosstool-NG linaro-1.13.1-4.8-2013.04-20130417 - Linaro GCC 2013.04) 4.8.1 20130401 (prerelease)) debug=y Wed Jul 17 18:09:18 CST 2013
(XEN) Latest ChangeSet: Mon Jul 15 14:48:08 2013 +0800 git:0b503f2-dirty
(XEN) Console output is synchronous.
start_xen<462>
start_xen<466>
(XEN) Processor: "ARM Limited", variant: 0x0, part 0xc07, rev 0x3
(XEN) 32-bit Execution:
(XEN)   Processor Features: 00001131:00011011
(XEN)     Instruction Sets: AArch32 Thumb Thumb-2 ThumbEE Jazelle
(XEN)     Extensions: GenericTimer Security
(XEN)   Debug Features: 02010555
(XEN)   Auxiliary Features: 00000000
(XEN)   Memory Model Features: 10101105 40000000 01240000 02102211
(XEN)  ISA Features: 02101110 13112111 21232041 11112131 10011142 00000000
start_xen<469>
(XEN) dt_compat_cmp: cp<mele,M9>, compat<arm,vexpress>
(XEN) dt_compat_cmp: cp<allwinner,sun6i>, compat<arm,vexpress>
(XEN) dt_compat_cmp: cp<mele,M9>, compat<samsung,exynos5250>
(XEN) dt_compat_cmp: cp<allwinner,sun6i>, compat<samsung,exynos5250>
(XEN) WARNING: Unrecognized/unsupported device tree compatible list
(XEN) Available platform support:
(XEN)     - VERSATILE EXPRESS
(XEN)     - SAMSUNG EXYNOS5
start_xen<472>
(XEN) dt_compat_cmp: cp<mele,M9>, compat<arm,armv7-timer>
(XEN) dt_compat_cmp: cp<allwinner,sun6i>, compat<arm,armv7-timer>
(XEN) dt_compat_cmp: cp<xen,linux-zimage>, compat<arm,armv7-timer>
(XEN) dt_compat_cmp: cp<xen,multiboot-module>, compat<arm,armv7-timer>
(XEN) dt_compat_cmp: cp<xen,xen-4.2>, compat<arm,armv7-timer>
(XEN) dt_compat_cmp: cp<xen,xen>, compat<arm,armv7-timer>
(XEN) dt_compat_cmp: cp<arm,cortex-a15>, compat<arm,armv7-timer>
(XEN) dt_compat_cmp: cp<arm,armv7-timer>, compat<arm,armv7-timer>
(XEN) dt_device_get_raw_irq: dev=/timer, index=0
(XEN)  intspec=1 intlen=12
(XEN)  intsize=3 intlen=12
(XEN) dt_irq_map_raw: par=/interrupt-controller@01C81000,intspec=[0x00000001 0x0000000d...],ointsize=3
(XEN) dt_irq_map_raw: ipar=/interrupt-controller@01C81000, size=3
(XEN)  -> addrsize=1
(XEN)  -> got it !
(XEN) dt_device_get_raw_irq: dev=/timer, index=1
(XEN)  intspec=1 intlen=12
(XEN)  intsize=3 intlen=12
(XEN) dt_irq_map_raw: par=/interrupt-controller@01C81000,intspec=[0x00000001 0x0000000e...],ointsize=3
(XEN) dt_irq_map_raw: ipar=/interrupt-controller@01C81000, size=3
(XEN)  -> addrsize=1
(XEN)  -> got it !
(XEN) dt_device_get_raw_irq: dev=/timer, index=2
(XEN)  intspec=1 intlen=12
(XEN)  intsize=3 intlen=12
(XEN) dt_irq_map_raw: par=/interrupt-controller@01C81000,intspec=[0x00000001 0x0000000b...],ointsize=3
(XEN) dt_irq_map_raw: ipar=/interrupt-controller@01C81000, size=3
(XEN)  -> addrsize=1
(XEN)  -> got it !
(XEN) dt_device_get_raw_irq: dev=/timer, index=3
(XEN)  intspec=1 intlen=12
(XEN)  intsize=3 intlen=12
(XEN) dt_irq_map_raw: par=/interrupt-controller@01C81000,intspec=[0x00000001 0x0000000a...],ointsize=3
(XEN) dt_irq_map_raw: ipar=/interrupt-controller@01C81000, size=3
(XEN)  -> addrsize=1
(XEN)  -> got it !
(XEN) Generic Timer IRQ: phys=30 hyp=26 virt=27
(XEN) Using generic timer at 100000 KHz
start_xen<475>
(XEN) dt_compat_cmp: cp<mele,M9>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<allwinner,sun6i>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<xen,linux-zimage>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<xen,multiboot-module>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<xen,xen-4.2>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<xen,xen>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<arm,cortex-a15>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<arm,armv7-timer>, compat<arm,cortex-a15-gic>
(XEN) dt_compat_cmp: cp<arm,cortex-a15-gic>, compat<arm,cortex-a15-gic>
(XEN) DT: ** translation for device /interrupt-controller@01C81000 **
(XEN) DT: bus is default (na=1, ns=1) on /
(XEN) DT: translating address:<3> 10481000<3>
(XEN) DT: reached root node
(XEN) DT: ** translation for device /interrupt-controller@01C81000 **
(XEN) DT: bus is default (na=1, ns=1) on /
(XEN) DT: translating address:<3> 10482000<3>
(XEN) DT: reached root node
(XEN) DT: ** translation for device /interrupt-controller@01C81000 **
(XEN) DT: bus is default (na=1, ns=1) on /
(XEN) DT: translating address:<3> 10484000<3>
(XEN) DT: reached root node
(XEN) DT: ** translation for device /interrupt-controller@01C81000 **
(XEN) DT: bus is default (na=1, ns=1) on /
(XEN) DT: translating address:<3> 10486000<3>
(XEN) DT: reached root node
(XEN) dt_device_get_raw_irq: dev=/interrupt-controller@01C81000, index=0
(XEN)  intspec=1 intlen=3
(XEN)  intsize=3 intlen=3
(XEN) dt_irq_map_raw: par=/interrupt-controller@01C81000,intspec=[0x00000001 0x00000009...],ointsize=3
(XEN) dt_irq_map_raw: ipar=/interrupt-controller@01C81000, size=3
(XEN)  -> addrsize=1
(XEN)  -> got it !
(XEN) GIC initialization:
(XEN)         gic_dist_addr=0000000010481000
(XEN)         gic_cpu_addr=0000000010482000
(XEN)         gic_hyp_addr=0000000010484000
(XEN)         gic_vcpu_addr=0000000010486000
(XEN)         gic_maintenance_irq=25
(XEN) GIC: 32 lines, 1 cpu (IID 00000000).
start_xen<477>
(XEN) Waiting for 0 other CPUs to be ready
start_xen<480>
start_xen<486>
(XEN) Assertion 'irq < gic.lines' failed, line 220, file gic.c

1), line fails:
  ASSERT(irq < gic.lines);      /* Can't route interrupts that don't exist */

5, PLAN
1), it seems that i should concentrate on ldrex hang and how to enable other processor.
2), how does xen know how much cpu in SOC?
compare the log between sun6i and arndale.

15:21 2013-07-17
friends, virtualization, Tim Deegan
http://www.tjd.phlegethon.org/

15:44 2013-07-17
ceph
1, conf
sudo scp -p root@147.2.207.95:/etc/ceph/ceph.conf /etc/ceph/ceph.conf

10:25 2013-07-18
GTD
0, 10:15

1, today
1), check the email.
2), discuss lock with jim. see"10:52 2013-07-18"
3), 13:00-15:00 all-hands meeting. see"13:09 2013-7-18"
4), 20' try rbd. see"16:07 2013-07-18"
5), 16:32- console. see"16:32 2013-07-18"

2, next
1), do i need to reply the uart discuss in xen-devel? 
2), read the xen 4.4 discuss
http://lists.xen.org/archives/html/xen-devel/2013-06/msg01391.html

10:52 2013-07-18
virtualization, xen, lock; ao_how
title: about my work in libxl driver
Hi, Jim

1, first of all, thanks for your review and test for my patch. And i am sorry about make check and syntax-check fail.
i have sent v2 patch to upstream with your suggestions.

BTW: i got a error in virnettlscontexttest in "make check", which fail in the following checks, it should not relative to my patch, right? but why it happens?

    /* Key usage:dig-sig:not-critical */
    static struct testTLSCertReq cacert5req = {
        NULL, NULL, "cacert5.pem", "UK",
        "libvirt CA 5", NULL, NULL, NULL, NULL,
        true, true, true,
        true, false, GNUTLS_KEY_DIGITAL_SIGNATURE,
        false, false, NULL, NULL,
        0, 0,
    };
    /* Technically a CA cert with basic constraints
     * key purpose == key signing + non-critical should
     * be rejected. GNUTLS < 3 does not reject it and
     * we don't anticipate them changing this behaviour
     */
    DO_CTX_TEST(true, cacert5req, servercertreq, GNUTLS_VERSION_MAJOR >= 3);

my tls package(opensuse 12.3):
> rpm -qa |grep tls
libgnutls28-32bit-3.0.28-1.1.1.x86_64
libgnutls-devel-3.0.28-1.1.1.x86_64
gnutls-3.0.28-1.1.1.x86_64
libgnutls28-3.0.28-1.1.1.x86_64

2, about lock
i notice that there is a fate changes:
315157 Add support for virtlockd in libvirt xen driver, https://fate.suse.com/315157
- SLES-12: Unconfirmed
@ -4310,156 +3110,6 @@ is it mean that it maybe a fate in sle12?
IIRC, u suggested that doing the lock thing and reference the qemu work. do u mean for both jobs and virtlockd?

i have read some code about how this lock used in qemu driver. it seems that this lock is no dependency with jobs, right?
if yes, which should i do first?

3, about job patch
i still hang in how to use the ao_how in libxl driver. maybe i will discuss it with Chunyan.
currently, i know i should register the handler to libvirt event loop, but i do not know the exact point, i try to register in libxlEventHandler, but it is not work.

best regards

bamvor

4, (10:56 2013-07-19)
Bamvor Jian Zhang wrote:
> Hi, Jim
>
> 1, first of all, thanks for your review and test for my patch. And i am sorry about make check and syntax-check fail.
> i have sent v2 patch to upstream with your suggestions.
>   

Thanks, saw the V2.  danpb and myself have commented on it and you'll
need a V3, sorry :).

> BTW: i got a error in virnettlscontexttest in "make check", which fail in the following checks, it should not relative to my patch, right? but why it happens?
>   

Yep, I'm seeing it as well but haven't had a chance to investigate.  It
is certainly not caused by your patch though and can be ignored as far
as considering 'make check' success.

>     /* Key usage:dig-sig:not-critical */
>     static struct testTLSCertReq cacert5req = {
>         NULL, NULL, "cacert5.pem", "UK",
>         "libvirt CA 5", NULL, NULL, NULL, NULL,
>         true, true, true,
>         true, false, GNUTLS_KEY_DIGITAL_SIGNATURE,
>         false, false, NULL, NULL,
>         0, 0,
>     };
>     /* Technically a CA cert with basic constraints
>      * key purpose == key signing + non-critical should
>      * be rejected. GNUTLS < 3 does not reject it and
>      * we don't anticipate them changing this behaviour
>      */
>     DO_CTX_TEST(true, cacert5req, servercertreq, GNUTLS_VERSION_MAJOR >= 3);
>
> my tls package(opensuse 12.3):
>   
>> rpm -qa |grep tls
>>     
> libgnutls28-32bit-3.0.28-1.1.1.x86_64
> libgnutls-devel-3.0.28-1.1.1.x86_64
> gnutls-3.0.28-1.1.1.x86_64
> libgnutls28-3.0.28-1.1.1.x86_64
>
> 2, about lock
> i notice that there is a fate changes:
> 315157 Add support for virtlockd in libvirt xen driver, https://fate.suse.com/315157
> - SLES-12: Unconfirmed
> + SLES-12: New
>
> is it mean that it maybe a fate in sle12?
>   

Yes.  State "New" means it is under evaluation by PM.  They will add
"Important", "Mandatory", etc. after evaluating the feature.

> IIRC, u suggested that doing the lock thing and reference the qemu work. do u mean for both jobs and virtlockd?
>   

The qemu driver can be referenced for job support and virtlockd
integration.  These are two orthogonal tasks though that don't have
anything in common afaik.

Also, wrt finer-grained locking in the libxl driver, Michal Privoznik
just posted a series to improve the locking in the LXC driver

https://www.redhat.com/archives/libvir-list/2013-July/msg01085.html

That should be a good reference (in addition to the qemu driver) for
doing the same in the libxl driver.

> i have read some code about how this lock used in qemu driver. it seems that this lock is no dependency with jobs, right?
> if yes, which should i do first?
>   

No, I don' think there is any dependency with jobs.  And we need both,
but without some investigation I'm not sure which would be a better
first candidate.  If a jobs patch would subsequently need a bunch of
changing to accommodate fine-grained locking, then the locking patch
should be done first IMO.  Off-hand, I'm not sure how much one affects
the other.

> 3, about job patch
> i still hang in how to use the ao_how in libxl driver. maybe i will discuss it with Chunyan.
> currently, i know i should register the handler to libvirt event loop, but i do not know the exact point, i try to register in libxlEventHandler, but it is not work.
>   

I don't think you register it in the event loop.  The choices are

1) define a callback to be invoked on completion and specify it in
libxl_asyncop_how.callback
2) don't specify a callback and let libxl generate a libxl_event, which
you must obtain with libxl_event_wait() and/or libxl_event_check(). 
Here's the docu on libxl_asyncop_how from libxl.h

/*
 * Some libxl operations can take a long time.  These functions take a
 * parameter to control their concurrency:
 *     libxl_asyncop_how *ao_how
 *
 * If ao_how==NULL, the function will be synchronous.
 *
 * If ao_how!=NULL, the function will set the operation going, and if
 * this is successful will return 0.  In this case the zero error
 * response does NOT mean that the operation was successful; it just
 * means that it has been successfully started.  It will finish later,
 * perhaps with an error.
 *
 * If ao_how->callback!=NULL, the callback will be called when the
 * operation completes.  The same rules as for libxl_event_hooks
 * apply, including the reentrancy rules and the possibility of
 * "disaster", except that libxl calls ao_how->callback instead of
 * libxl_event_hooks.event_occurs.  (See libxl_event.h.)
 *
 * If ao_how->callback==NULL, a libxl_event will be generated which
 * can be obtained from libxl_event_wait or libxl_event_check.  The
 * event will have type OPERATION_COMPLETE (which is not used
 * elsewhere).
 *
 * Note that it is possible for an asynchronous operation which is to
 * result in a callback to complete during its initiating function
 * call.  In this case the initiating function will return 0
 * indicating the at the operation is "in progress", even though by
 * the time it returns the operation is complete and the callback has
 * already happened.
 *
 * The application must set and use ao_how->for_event (which will be
 * copied into libxl_event.for_user) or ao_how->for_callback (passed
 * to the callback) to determine which operation finished, and it must
 * of course check the rc value for errors.
 *
 * *ao_how does not need to remain valid after the initiating function
 * returns. All other parameters must remain valid for the lifetime of
 * the asynchronous operation, unless otherwise specified.
 *
 * Callbacks may occur on any thread in which the application calls
 * libxl.
 */

Thanks for the update!
Jim

5, (15:17 2013-07-23)
compare to the reply on last Nov
> return error because of the there is no cancelation opeartion in libvirt libxl
> driver with xen 4.1. according to xen4.2 release document, maybe the
> cancelation of long-running jobs is supported.

I finally got some time to take a closer look at Xen 4.2 libxl and
notice that the "long running" operations (create, save, dump, restore,
etc.) now support a 'libxl_asyncop_how *ao_how' parameter to control
their concurrency.  If ao_how->callback is NULL, a libxl_event is
generated when the operation completes.  We'll just need to handle these
events in the existing libxlEventHandler.  Some of the async operations
support reporting intermediate progress (e.g. for
libxlDomainGetJobInfo), but at this time none of them support
cancellation AFAICT.

With the new asynchronous support in Xen 4.2 libxl, IMO we should delay
this patchset until converting the driver to support 4.2.  I didn't
think this patch would be affected by Xen 4.1 vs 4.2 libxl, but it is
and I don't see any reason to add code that further complicates the
conversion.

BTW, Ondrej was working on a patch to convert the driver to 4.2.  Now
that I have some free time, I'll pick up some of this work too.

> but it is still useful for save, dump and migration(in future), because libvirt
> should block the user abort operation othervise xenlight might crash
>   

If it is left unimplemented, libvirt would block the operation anyhow,
failing with "not supported"

Regards,
Jim

13:09 2013-7-18
all hands meeting, suse
1, bookings result q1 fy14
suse 73% of plan, 99% of prior.
asia pacific 72% of plan, 79% of prior.
only EMEA over 100% of prior(104%). 99% of plan is also the highest.

in suse, only north American is low than 100% of Prior(84%)

2, q2 forecast
pipeline, pipe factor. 啥时候？

3, important q1 win in NA(North American): cardinal health. $1.2m
western union: $598k.

4, first leg tour, linux day.

5, sp3 launch activities.

6, from customer reference program i know that TI is our customer too.

7, project waterfall

8, Alliance Update: Cisco.
new partnership.
cisco@suse.com

9, SAP Momentum $5.6M(Q1FY14)
142% growth YoY.

10, 20 years anniversary
kent wimmer: Global Field Market, Provo.

11, Recognition
best winning team: YaST -> ruby conversion team.

16:07 2013-07-18
storage, ceph, rbd; virtualization, qemu, libxl
1, using the same configure, 
      <disk type='network' device='disk'>
      <source protocol='rbd' name='rbd/test'>
        <host name='147.2.207.95' port='6789'/>
      </source>
      <target dev='hdb' bus='ide'/>
    </disk>
2, add driver name qemu:
<driver name='qemu'/>

libxl: debug: libxl_dm.c:1220:libxl__spawn_local_dm:   -drive
libxl: debug: libxl_dm.c:1220:libxl__spawn_local_dm:   file=rbd/test,if=ide,index=1,media=disk,format=raw,cache=writeback

16:32 2013-07-18
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont2, deal with upstream reply
1, Jim Fehlig
Bamvor Jian Zhang wrote:
> Hi, Jim
>
> thanks your reply. one comment below.
>
>  >>>已写入 "Jim Fehlig <jfehlig@suse.com>"> On 07/04/2013 05:58 AM, Bamvor Jian Zhang wrote:
>   
>> BTW, do all of these types work with Xen?  I've only tested with type 'pty',  
>>  
>> which works fine with both pv and hvm guests. 
>>     
> i only test the pty type too. lots of type is introduced in 2b84e445(Add libxenlight driver), i add the missing type compare with qemu driver. maybe it will be used in future. for now, only pty is needed for my console patch.
>   

I found some time today to test type={unix,tcp,file,udp} and they seem
to work fine with Xen 4.3, but HVM guests only.  I suppose that is
expected since qemu is not being used for serial ports for PV guests.

Can you fix all my previous comments, rebase the patch, and send a V2?

Oh, and one more thing...

> @@ -4739,6 +4857,7 @@ static virDriver libxlDriver = {
>      .domainManagedSave = libxlDomainManagedSave, /* 0.9.2 */
>      .domainHasManagedSaveImage = libxlDomainHasManagedSaveImage, /* 0.9.2 */
>      .domainManagedSaveRemove = libxlDomainManagedSaveRemove, /* 0.9.2 */
> +    .domainOpenConsole = libxlDomainOpenConsole, /* 1.0.8 */
>      .domainIsActive = libxlDomainIsActive, /* 0.9.0 */
>      .domainIsPersistent = libxlDomainIsPersistent, /* 0.9.0 */
>      .domainIsUpdated = libxlDomainIsUpdated, /* 0.9.0 */

AFAIK,  the next release will be 1.1.1.

Regards,
Jim

2, Eric Blake
On 07/17/2013 03:21 PM, Jim Fehlig wrote:
> Oh, and one more thing...
> 
>> @@ -4739,6 +4857,7 @@ static virDriver libxlDriver = {
>>      .domainManagedSave = libxlDomainManagedSave, /* 0.9.2 */
>>      .domainHasManagedSaveImage = libxlDomainHasManagedSaveImage, /* 0.9.2 */
>>      .domainManagedSaveRemove = libxlDomainManagedSaveRemove, /* 0.9.2 */
>> +    .domainOpenConsole = libxlDomainOpenConsole, /* 1.0.8 */
>>      .domainIsActive = libxlDomainIsActive, /* 0.9.0 */
>>      .domainIsPersistent = libxlDomainIsPersistent, /* 0.9.0 */
>>      .domainIsUpdated = libxlDomainIsUpdated, /* 0.9.0 */
> 
> AFAIK,  the next release will be 1.1.1.

Correct; after 1.0.6, we released 1.1.0, and are now working towards 1.1.1.

-- 
Eric Blake   eblake redhat com    +1-919-301-3266
Libvirt virtualization library http://libvirt.org

3, 
there is a fail in virnettlscontexttest, but it is a tls test. it should not fail because of my patch. igoring it.

4, 
changes since V1:
1), add virDomainOpenConsoleEnsureACL
3), remove virReportOOMErrorFull when virAsprintf fail.
4), change size_t for non-nagetive number in libxlDomainOpenConsole
    size_t i;
    size_t num = 0;
5), fix for make check
(1), replace virAsprintf with VIR_STRDUP in two places
(2), delete space.

5, send patch
git send-email --no-chain-reply-to --annotate --to libvir-list@redhat.com --cc jfehlig@suse.com

19:37 2013-07-18
(14:44 2013-11-28)
company, work, upstream, patch
1, libvirt patch
1),
commit 91d1911c2ff39e9e5f5116f88e66a9936fec725b
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Fri Apr 26 22:53:42 2013 +0800

    fix segfault during virsh save in pv guest

2),
commit 0aeae5df5ea198bede2677739e7800c9d45a9d3c
Author: Bamvor Jian Zhang <bamv2005@gmail.com>
Date:   Thu Apr 25 20:17:43 2013 +0800

    fix typo introduced by 90430791

3),
commit 501bfad194140fe385704a01aa6c6125c6aba9dc
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Tue Dec 4 18:00:02 2012 +0800

    implement managedsave in libvirt xen legacy driver

4),
commit a52fa5569a90bc0e732e923da34d8b2aec68d751
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Fri Nov 1 15:26:26 2013 +0800

    fix api changes in xen restore

5),
commit bcef0f01585a63626d29126a8dcbf1e222f70145
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Fri Jul 26 11:30:50 2013 +0800

    add console support in libxl

2, xen patch
1), commit by me
(1),
commit 75beb8e45133acb8795024fc6114ff557ce1c27f
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Mon Jul 15 16:45:33 2013 +0800

    xen: arm: introduce Cortex-A7 support

(2),
commit 9c23a1d0eb7a6b5e3273d527cfd7960838fbfee6
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Fri Jan 11 12:22:28 2013 +0000

    fix wrong path while calling pygrub and libxl-save-helper

(3),
commit ab6671ba2613a0a05fc0914f60590610202aa4df
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Wed Jun 6 12:46:18 2012 +0100

    libxl: Add API to retrieve domain console tty

(4),
commit fa674239ae719f35ee831d2d6fbfee1ccaab8303
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Tue Feb 21 18:01:04 2012 +0000

    libxl: Export libxl_event.h

(5),
commit d641f428533e0d1232c1d1646263a8f5f430ca50
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Mon Nov 4 16:01:26 2013 +0800

    xen: arm: add default kernel_start in xenctx

(6),
commit 785e2c1f5d45225a43ea0d46702fc09d508e04bd
Author: Bamvor Jian Zhang <bjzhang@suse.com>
Date:   Mon Nov 4 16:01:25 2013 +0800

    xen: arm: enable 32bit kernel stack trace

2), bug report by me:
commit 5f5ef65babc2ca15f43b775c4b47b0102fa2a632
Author: Ian Jackson <ian.jackson@eu.citrix.com>
Date:   Thu Jan 24 12:47:53 2013 +0000

    libxl: fix stale timeout event callback race

commit 27e1ccd1db641b4f57c8249a6e4d7492140dd285
Author: Ian Jackson <ian.jackson@eu.citrix.com>
Date:   Thu Jun 28 18:43:25 2012 +0100

    libxl: Do not pass NULL as gc_opt; introduce NOGC

commit bc7e8a2a813e0acfddd62fa5b6c4571ada8d1cd1
Author: Ian Jackson <ian.jackson@eu.citrix.com>
Date:   Thu Jan 24 12:47:52 2013 +0000

    libxl: fix stale fd event callback race

10:56 2013-07-19
GTD
0, 10:40-17:30

1, today
1), Jim reply. see"10:52 2013-07-18"4.
2), 14:22-17:27 console patch. see"11:08 2013-07-19"

11:08 2013-07-19
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont3, deal with upstream reply
1, upstream reply
1), "Daniel P. Berrange" <berrange@redhat.com>
On Thu, Jul 18, 2013 at 08:14:17PM +0800, Bamvor Jian Zhang wrote:
> this patch introduce the console api in libxl driver for both pv and
> hvm guest.  and import and update the libxlMakeChrdevStr function
> which was deleted in commit dfa1e1dd.
> 
> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
> ---
> changes since V1:
> 1), add virDomainOpenConsoleEnsureACL
> 3), remove virReportOOMErrorFull when virAsprintf fail.
> 4), change size_t for non-nagetive number in libxlDomainOpenConsole
>     size_t i;
>     size_t num = 0;
> 5), fix for make check
> (1), replace virAsprintf with VIR_STRDUP in two places
> (2), delete space.
> 
>  src/libxl/libxl_conf.c   |  88 ++++++++++++++++++++++++++++++++++
>  src/libxl/libxl_conf.h   |   3 ++
>  src/libxl/libxl_driver.c | 122 +++++++++++++++++++++++++++++++++++++++++++++++
>  3 files changed, 213 insertions(+)
> 

> +static int
>  libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>  {
>      libxl_domain_build_info *b_info = &d_config->b_info;
> @@ -403,6 +487,10 @@ libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>          if (VIR_STRDUP(b_info->u.hvm.boot, bootorder) < 0)
>              goto error;
>  
> +        if (def->nserials &&
> +            (libxlMakeChrdevStr(def->serials[0], &b_info->u.hvm.serial) < 0))
> +            goto error;

If you're going to hardcode  def->serials[0], then you should explicitly
report an error if  'def->nserials > 1'.

Also you should probably report an error if  def->nparallels != 0, since
you don't support that at all.

> +static int
> +libxlDomainOpenConsole(virDomainPtr dom,
> +                       const char *dev_name,
> +                       virStreamPtr st,
> +                       unsigned int flags)
> +{
> +    libxlDriverPrivatePtr driver = dom->conn->privateData;
> +    virDomainObjPtr vm = NULL;
> +    int ret = -1;
> +    size_t i;
> +    virDomainChrDefPtr chr = NULL;
> +    libxlDomainObjPrivatePtr priv;
> +    char *console = NULL;
> +    size_t num = 0;
> +    libxl_console_type type;
> +
> +    virCheckFlags(VIR_DOMAIN_CONSOLE_SAFE |
> +                  VIR_DOMAIN_CONSOLE_FORCE, -1);
> +
> +    libxlDriverLock(driver);
> +    vm = virDomainObjListFindByUUID(driver->domains, dom->uuid);
> +    libxlDriverUnlock(driver);
> +    if (!vm) {
> +        char uuidstr[VIR_UUID_STRING_BUFLEN];
> +        virUUIDFormat(dom->uuid, uuidstr);
> +        virReportError(VIR_ERR_NO_DOMAIN,
> +                       _("No domain with matching uuid '%s'"), uuidstr);
> +        goto cleanup;
> +    }
> +
> +    if (virDomainOpenConsoleEnsureACL(dom->conn, vm->def) < 0)
> +        goto cleanup;
> +
> +    if (!virDomainObjIsActive(vm)) {
> +        virReportError(VIR_ERR_OPERATION_INVALID,
> +                       "%s", _("domain is not running"));
> +        goto cleanup;
> +    }
> +
> +    priv = vm->privateData;
> +
> +    if (dev_name) {
> +        for (i = 0; !chr && i < vm->def->nconsoles; i++) {
> +            if (vm->def->consoles[i]->info.alias &&
> +                STREQ(dev_name, vm->def->consoles[i]->info.alias)) {
> +                chr = vm->def->consoles[i];
> +                num = i;
> +            }
> +        }
> +        for (i = 0; !chr && i < vm->def->nserials; i++) {
> +            if (STREQ(dev_name, vm->def->serials[i]->info.alias)) {
> +                chr = vm->def->serials[i];
> +                num = i;
> +            }
> +        }
> +        for (i = 0; !chr && i < vm->def->nparallels; i++) {
> +            if (STREQ(dev_name, vm->def->parallels[i]->info.alias)) {
> +                chr = vm->def->parallels[i];
> +                num = i;
> +            }
> +        }

Nothing in the libxl driver appears to ever set the info.alias string
names. So this code will crash on a NULL pointer. You should either
ensure the alias is set, or use STREQ_NULLABLE to handle NULL pointers.

> +    } else {
> +        if (vm->def->nconsoles)
> +            chr = vm->def->consoles[0];
> +        else if (vm->def->nserials)
> +            chr = vm->def->serials[0];
> +    }

Daniel
-- 
|: http://berrange.com      -o-    http://www.flickr.com/photos/dberrange/ :|
|: http://libvirt.org              -o-             http://virt-manager.org :|
|: http://autobuild.org       -o-         http://search.cpan.org/~danberr/ :|
|: http://entangle-photo.org       -o-       http://live.gnome.org/gtk-vnc :|

2), Jim Fehlig
Daniel P. Berrange wrote:
> On Thu, Jul 18, 2013 at 08:14:17PM +0800, Bamvor Jian Zhang wrote:
>   
>> this patch introduce the console api in libxl driver for both pv and
>> hvm guest.  and import and update the libxlMakeChrdevStr function
>> which was deleted in commit dfa1e1dd.
>>
>> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
>> ---
>> changes since V1:
>> 1), add virDomainOpenConsoleEnsureACL
>> 3), remove virReportOOMErrorFull when virAsprintf fail.
>> 4), change size_t for non-nagetive number in libxlDomainOpenConsole
>>     size_t i;
>>     size_t num = 0;
>> 5), fix for make check
>> (1), replace virAsprintf with VIR_STRDUP in two places
>> (2), delete space.
>>
>>  src/libxl/libxl_conf.c   |  88 ++++++++++++++++++++++++++++++++++
>>  src/libxl/libxl_conf.h   |   3 ++
>>  src/libxl/libxl_driver.c | 122 +++++++++++++++++++++++++++++++++++++++++++++++
>>  3 files changed, 213 insertions(+)
>>
>>     
>
>   
>> +static int
>>  libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>>  {
>>      libxl_domain_build_info *b_info = &d_config->b_info;
>> @@ -403,6 +487,10 @@ libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>>          if (VIR_STRDUP(b_info->u.hvm.boot, bootorder) < 0)
>>              goto error;
>>  
>> +        if (def->nserials &&
>> +            (libxlMakeChrdevStr(def->serials[0], &b_info->u.hvm.serial) < 0))
>> +            goto error;
>>     
>
> If you're going to hardcode  def->serials[0], then you should explicitly
> report an error if  'def->nserials > 1'.
>   

Yes, good point. Currently libxl only supports defining one serial port,
so we should enforce that here.

> Also you should probably report an error if  def->nparallels != 0, since
> you don't support that at all.
>   

Right. Maybe that should be a separate patch.

Poking around a bit, I'm not even sure how to map libvirt's parallel
device config to libxl's 'num_ioports' and 'ioports' fields in
libxl_domain_build_info struct. xl.cfg(5) contains this info about the
'ioports' setting

ioports=[ "IOPORT_RANGE", "IOPORT_RANGE", ... ]
Allow guest to access specific legacy I/O ports. Each IOPORT_RANGE is
given in hexadecimal
and may either a span e.g. "2f8-2ff" (inclusive) or a single I/O port "2f8".

It is recommended to use this option only for trusted VMs under
administrator control.

Regards,
Jim

2, thinking
1), remove parallels, so i should remove console as well? 
only serial is enough for libxl.
2), do i need to remove all the code about for loop: check each serial device?
if libxl only support one serial. it is useless.
but what does the difference between libxl_console_get_tty and libxl_primary_console_get_tty?
IIRC, the pv serial support more than one serial.
after check the code, i only find another libxl__device_console_add in spawn_stub_launch_dm. besides the stubdom, only one serial.
2), the hvm, if qemu support, could support more than one seiral as well.
but the xenstore only support one tty.

3, 
Changes since V2:
1), forbid parallel configure because libxl do not support it
2), only support one serial on libxl driver.
3), also remove console code in libxl driver, AFAICS serial is enough for connecting to libxl console.
changes since V1:
1), add virDomainOpenConsoleEnsureACL
3), remove virReportOOMErrorFull when virAsprintf fail.
4), change size_t for non-nagetive number in libxlDomainOpenConsole
    size_t i;
    size_t num = 0;
5), fix for make check
(1), replace virAsprintf with VIR_STRDUP in two places
(2), delete space.
 
09:55 2013-07-22
GTD
0, 9:45-18:20

1, today
1), 9:56-10:34 week review and plan. see"09:56 2013-07-22"
2), 10:35-11:03 work report. see"10:34 2013-07-22"
3), console patch. no response.... wait tomorrow.
4), try ao_how. ref jim reply. see"11:04 2013-07-22"
5), summary: 4hours work. more than 1hour sleep. 1hour waste. 2h for lunch and pay for credit card bill.

09:56 2013-07-22
GTD, week review, week plan
1, working item review
1), xen arm. first priority. 1/2 patch accepted. 2/2 patch send by others.
2), libxl driver console patch. during review need V4.
3), discuss about lock patch with Jim. i do not want to do it this week. DONE.
4), libxl rbd. is it possible to do that? i hope i could write a initial version for it this week.
CANCELLED. it has been discussed in april in xen list. it should be work in libxl driver right now.
\TODO: read the code about how libvirt and libxl handle rbd. 
5), xen arm: ldrex/strex. try upstream kernel? ref"15:38 2013-07-09". compare mm code.
DELAY.
6), after console patch commit: discuss with Jim about lock.
DONE.

2, summary:
1), get xen arm patch acceptted after 3 rounds review.
it enable a new cpu core(Cortex-A7) for xen hypervisor.
2), libvirt libxl driver: console patch during 2 rounds review.
3), discuss with Jim about my work status. it is important for me to finish jobs patch.

3, week plan
1), get ao_how work in libxl driver.
it will be the main report things in sync.
2), get console patch accepted by upstream.
3), try rbd on libvirt libxl.
4), try exclusive operation on sun6i. try sun6i upstream kernel.
5), opensuse arm bug test and report.
(1), ask help for run opensuse arm on cubie.
(2), arndale x11 not start.
6), confirm about arndale early printk init macro bug. and send a email.

10:34 2013-07-22
work report - week 29
1, libvirt: 
libxl console patch modify and send v2, v3 according to upstream review.
2, xen
get xen arm patch acceptted after 3 rounds review.
it enable a new cpu core(Cortex-A7) for xen hypervisor.

10:35 2013-07-22
a31 kernel, get from linux-sunxi irc
https://github.com/mripard/linux/tree/sunxi-next-a31

10:39 2013-07-22
"Jeff Hawn <jeff.hawn@attachmate.com>"_email_"Attachmate Group Q1 Financial Results"_20130720_0303
Our revenues were $222.2 million which was 96.3% of our plan revenue of $230.8. Disciplined expense management kept spending under our Q1 budget, so operating profit was $63.7million, compared to our operating profit plan target of $68.1 million.  While this is short of our Plan by 6% and would not have attained the VPP threshold for a 100% payment, $4.4million is not as large of a gap in operating profit as we typically see in the first quarter.  Said another way:  we can overcome a starting gap of $4.4 million.
Second, we will continue to be extremely disciplined on our spending.  In many cases, we will slow down our planned investments (investments are mostly new hires) until we see better progress in our sales results. 

11:04 2013-07-22
virtualization, xen, libxl, async, try ao_how
1, plan
1), build lastest xen: using the xen 4.3 release version should be enough for me.
osc bco Virtualization xen
2), update libvirt.
3), check Jim's reply.

2, read the code
domcreate_launch_dm seems important.
domcreate_rebuild_done -> domcreate_launch_dm -> libxl__spawn_local_dm

18:53 2013-7-22
昨天觉得会不会是因为设置了inner, outer. 所以没有第二个cluster打开时exclusive operation没法完成。但是如果这样的话，arm vexpress board也会出问题。

10:46 2013-07-23
work, opensuse to sle12, bug; osc, retrieve, package
1, "Stephan Kulow <coolo@suse.de>"_email_"[devel] Your first SLE12 Bugs are comin"_20130722_2013
Hi,

To make the road to SLE12 as smooth as possible, a small team
was setup to find all patches in SP3 that are not yet in openSUSE's
Factory to avoid regressions later on.

We tried to automate that as much as possible, but figured soon
that we need the experts to look at the results as some changes
are not defined by adding patches. So we will start the process
of filing bug reports about packages that we could not white list.
Unfortunately there are a lot of those, so we will roll out the
bugs in waves - to avoid information overflow.

The bugs look all alike, you can look at Werner's sample bug at
https://bugzilla.novell.com/830546 to see what you're missing if
you're not in the first wave ;)

What we need you to do:

- Make sure you're the best assignee - if not, you should correct
  the maintainer information on build.suse.de
- Look at the report, remember what it was about and make sure
  openSUSE:Factory is fine
- Close the bug as INVALID if Factory is not affected (this is
  part of the process, don't feel bad about it)

Greetings, Stephan

-- 
"Mind if I smoke?"
"Yes, I'd like to see that, does it come out of your ears or what?"

2, Bug 830594 - [openSUSE goes SLE12]: bridge-utils: Change and/or patches may have been lost
https://bugzilla.novell.com/show_bug.cgi?id=830594
These are the findings of the openSUSE-Hardening Team to help avoid regressions
when going from SLE 11 code base to SLE 12 based on current openSUSE code base.

These findings are based on automated scripts created to help detect such
regressions and are only meant as guidance for your work as a package owner.
While we tried to write these reports to be as helpful as possible, please
consider that they are purely automatic. So if we made a mistake (and you know
your package better than we do), just set this bug to INVALID - it's part of
the process we came up with.

The assignee of this bug report is taken from the bugowner data of
https://build.suse.de/search/owner. If this data is wrong, now is a good time
to fix it. But please note that external users do not have access to the SLE 11
patches, so the current openSUSE bugowner can't help.

An HTML version of this report can be found at
http://w3.suse.de/~max/openSUSE-Hardening/bridge-utils.html

We looked at the patches that were added in the life time of SLE 11 and do not
appear in openSUSE:Factory. Please double check if the following patches are
still needed:

    bridge-utils-1.4-show-selected-bridge.patch

When looking at the sources, we found references in SLE 11 that did not appear
in openSUSE's sources. It's worth double checking that ignoring them for
openSUSE is not causing regressions later:

    BNC#789275

To retrieve SLE code:

    osc -A https://api.suse.de co SUSE:SLE-11-SP3:GA bridge-utils

also it is worth to check the projects SUSE:SLE-11-SP3:Update and
SUSE:SLE-11-SP3:Update:Test for available updates of bridge-utils which may
have happened after this report.

To retrieve openSUSE code:

    DP=$(osc -A https://api.opensuse.org develproject openSUSE:Factory
bridge-utils)
    osc -A https://api.opensuse.org co $DP bridge-utils

10:47 2013-07-23
GTD
0, 10:40-11:40 12:40-18:10

1, today
1), 10' sle12 work, close bnc#830594 as invalid. see"10:46 2013-07-23"
2), 11:00-11:40 afternoon try ao_how. ref jim reply. see"11:00 2013-07-23"

11:00 2013-07-23
virtualization, xen, libxl, async, try ao_how, cont1
1, where define LIBXL_EVENT_TYPE_DOMAIN_SHUTDOWN, LIBXL_EVENT_TYPE_OPERATION_COMPLETE.
tools/libxl/libxl_types.idl
2, libvirtd boot fail.
1), try without my patch: it is OK.
2), rebase my patch to that lastest master and try again.
maybe alloc in libxlStateInitialize is not allow?
No. that because i remove the libxlDriverUnlock in libxlStateInitialize.
3, (17:25 2013-07-24)
virsh create successful. virsh save hang.
4, 
(gdb) info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x00007f57f63e3f10 in libxl_event_wait 
                                                   at libxl_event.c:1451
2       breakpoint     keep y   0x00007f57f63de880 in helper_stdout_readable 
                                                   at libxl_save_callout.c:257
3       breakpoint     keep y   0x00007f57f63e1a90 in libxl__ev_fd_register 
                                                   at libxl_event.c:174
4       breakpoint     keep y   0x00007f57f63d2f20 in libxl__domain_suspend_common_callback at libxl_dom.c:996
5       breakpoint     keep y   0x00007f57f63d1180 in libxl__toolstack_save 
                                                   at libxl_dom.c:1138
5, save-helper is exited while virsh save hang.
i need to know what is done after save-helper exit. is it relative to ao_how handle bug in libxl?

14:43 2013-07-24
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont4, deal with upstream reply; console alias name
1, Jim 20130724_1721
Bamvor Jian Zhang wrote:
> Hi, Denial
>
>
> thanks your reply. 
>
>
>   
>>>> "Daniel P. Berrange" 2013-7-19 下午 23:53 >>>
>>>>         
>> On Fri, Jul 19, 2013 at 11:48:56PM +0800, Bamvor Jian Zhang wrote:
>>     
>>> this patch introduce the console api in libxl driver for both pv and
>>> hvm guest. and import and update the libxlMakeChrdevStr function
>>> which was deleted in commit dfa1e1dd.
>>>
>>> Signed-off-by: Bamvor Jian Zhang 
>>> ---
>>> Changes since V2:
>>> 1), forbid parallel configure because libxl do not support it
>>> 2), only support one serial on libxl driver.
>>> 3), also remove console code in libxl driver, AFAICS serial is enough for connecting to libxl console.
>>> changes since V1:
>>> 1), add virDomainOpenConsoleEnsureACL
>>> 3), remove virReportOOMErrorFull when virAsprintf fail.
>>> 4), change size_t for non-nagetive number in libxlDomainOpenConsole
>>> size_t i;
>>> size_t num = 0;
>>> 5), fix for make check
>>> (1), replace virAsprintf with VIR_STRDUP in two places
>>> (2), delete space.
>>>
>>> src/libxl/libxl_conf.c | 100 +++++++++++++++++++++++++++++++++++++++++++++++
>>> src/libxl/libxl_conf.h | 3 ++
>>> src/libxl/libxl_driver.c | 87 +++++++++++++++++++++++++++++++++++++++++
>>> 3 files changed, 190 insertions(+)
>>>
>>> diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
>>> index 4a0fba9..539d537 100644
>>> --- a/src/libxl/libxl_conf.c
>>> +++ b/src/libxl/libxl_conf.c
>>> @@ -331,6 +331,90 @@ error:
>>> }
>>>
>>> static int
>>> +libxlMakeChrdevStr(virDomainChrDefPtr def, char **buf)
>>> +{
>>> + const char *type = virDomainChrTypeToString(def->source.type);
>>> + int ret;
>>> +
>>> + if (!type) {
>>> + virReportError(VIR_ERR_INTERNAL_ERROR,
>>> + "%s", _("unexpected chr device type"));
>>> + return -1;
>>> + }
>>> +
>>> + switch (def->source.type) {
>>> + case VIR_DOMAIN_CHR_TYPE_NULL:
>>> + case VIR_DOMAIN_CHR_TYPE_STDIO:
>>> + case VIR_DOMAIN_CHR_TYPE_VC:
>>> + case VIR_DOMAIN_CHR_TYPE_PTY:
>>> + if (VIR_STRDUP(*buf, type) < 0)
>>> + return -1;
>>> + break;
>>> +
>>> + case VIR_DOMAIN_CHR_TYPE_FILE:
>>> + case VIR_DOMAIN_CHR_TYPE_PIPE:
>>> + if (virAsprintf(buf, "%s:%s", type,
>>> + def->source.data.file.path) < 0)
>>> + return -1;
>>> + break;
>>> +
>>> + case VIR_DOMAIN_CHR_TYPE_DEV:
>>> + if (VIR_STRDUP(*buf, def->source.data.file.path) < 0)
>>> + return -1;
>>> + break;
>>> +
>>> + case VIR_DOMAIN_CHR_TYPE_UDP: {
>>> + const char *connectHost = def->source.data.udp.connectHost;
>>> + const char *bindHost = def->source.data.udp.bindHost;
>>> + const char *bindService = def->source.data.udp.bindService;
>>> +
>>> + if (connectHost == NULL)
>>> + connectHost = "";
>>> + if (bindHost == NULL)
>>> + bindHost = "";
>>> + if (bindService == NULL)
>>> + bindService = "0";
>>> +
>>> + ret = virAsprintf(buf, "udp:%s:%s@%s:%s",
>>> + connectHost,
>>> + def->source.data.udp.connectService,
>>> + bindHost,
>>> + bindService);
>>> + if (ret < 0)
>>> + return -1;
>>> + break;
>>> +
>>> + }
>>> + case VIR_DOMAIN_CHR_TYPE_TCP:
>>> + if (def->source.data.tcp.protocol == VIR_DOMAIN_CHR_TCP_PROTOCOL_TELNET)
>>> + ret = virAsprintf(buf, "telnet:%s:%s%s",
>>> + def->source.data.tcp.host,
>>> + def->source.data.tcp.service,
>>> + def->source.data.tcp.listen ? ",server,nowait" : "");
>>> + else
>>> + ret = virAsprintf(buf, "tcp:%s:%s%s",
>>> + def->source.data.tcp.host,
>>> + def->source.data.tcp.service,
>>> + def->source.data.tcp.listen ? ",server,nowait" : "");
>>> +
>>> + if (ret < 0)
>>> + return -1;
>>> + break;
>>> +
>>> + case VIR_DOMAIN_CHR_TYPE_UNIX:
>>> + ret = virAsprintf(buf, "unix:%s%s",
>>> + def->source.data.nix.path,
>>> + def->source.data.nix.listen ? ",server,nowait" : "");
>>> + if (ret < 0)
>>> + return -1;
>>> + break;
>>> +
>>> + }
>>> +
>>> + return 0;
>>> +}
>>> +
>>> +static int
>>> libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>>> {
>>> libxl_domain_build_info *b_info = &d_config->b_info;
>>> @@ -403,6 +487,22 @@ libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain> > + if (def->nserials > 1) {
>>> + virReportError(VIR_ERR_INTERNAL_ERROR,
>>> + "%s", _("Only one serial is supported by libxl"));
>>> + goto error;
>>> + }
>>> + if (libxlMakeChrdevStr(def->serials[0], &b_info->u.hvm.serial) < 0)
>>> + goto error;
>>> + }
>>> +
>>> + if (def->nparallels) {
>>> + virReportError(VIR_ERR_INTERNAL_ERROR,
>>> + "%s", _("Parallel is not supported"));
>>> + goto error;
>>> + }
>>> +
>>> /*
>>> * The following comment and calculation were taken directly from
>>> * libxenlight's internal function libxl_get_required_shadow_memory():
>>> diff --git a/src/libxl/libxl_conf.h b/src/libxl/libxl_conf.h
>>> index 2b4a281..861d689 100644
>>> --- a/src/libxl/libxl_conf.h
>>> +++ b/src/libxl/libxl_conf.h
>>> @@ -34,6 +34,7 @@
>>> # include "configmake.h"
>>> # include "virportallocator.h"
>>> # include "virobject.h"
>>> +# include "virchrdev.h"
>>>
>>>
>>> # define LIBXL_VNC_PORT_MIN 5900
>>> @@ -94,6 +95,8 @@ struct _libxlDomainObjPrivate {
>>>
>>> /* per domain libxl ctx */
>>> libxl_ctx *ctx;
>>> + /* console */
>>> + virChrdevsPtr devs;
>>> libxl_evgen_domain_death *deathW;
>>>
>>> /* list of libxl timeout registrations */
>>> diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
>>> index 358d387..b3a8d50 100644
>>> --- a/src/libxl/libxl_driver.c
>>> +++ b/src/libxl/libxl_driver.c
>>> @@ -417,6 +417,9 @@ libxlDomainObjPrivateAlloc(void)
>>>
>>> libxl_osevent_register_hooks(priv->ctx, &libxl_event_callbacks, priv);
>>>
>>> + if (!(priv->devs = virChrdevAlloc()))
>>> + return NULL;
>>> +
>>> return priv;
>>> }
>>>
>>> @@ -429,6 +432,7 @@ libxlDomainObjPrivateDispose(void *obj)
>>> libxl_evdisable_domain_death(priv->ctx, priv->deathW);
>>>
>>> libxl_ctx_free(priv->ctx);
>>> + virChrdevFree(priv->devs);
>>> }
>>>
>>> static void
>>> @@ -4493,6 +4497,88 @@ cleanup:
>>> return ret;
>>> }
>>>
>>> +
>>> +static int
>>> +libxlDomainOpenConsole(virDomainPtr dom,
>>> + const char *dev_name,
>>> + virStreamPtr st,
>>> + unsigned int flags)
>>> +{
>>> + libxlDriverPrivatePtr driver = dom->conn->privateData;
>>> + virDomainObjPtr vm = NULL;
>>> + int ret = -1;
>>> + virDomainChrDefPtr chr = NULL;
>>> + libxlDomainObjPrivatePtr priv;
>>> + char *console = NULL;
>>> +
>>> + virCheckFlags(VIR_DOMAIN_CONSOLE_SAFE |
>>> + VIR_DOMAIN_CONSOLE_FORCE, -1);
>>> +
>>> + libxlDriverLock(driver);
>>> + vm = virDomainObjListFindByUUID(driver->domains, dom->uuid);
>>> + libxlDriverUnlock(driver);
>>> + if (!vm) {
>>> + char uuidstr[VIR_UUID_STRING_BUFLEN];
>>> + virUUIDFormat(dom->uuid, uuidstr);
>>> + virReportError(VIR_ERR_NO_DOMAIN,
>>> + _("No domain with matching uuid '%s'"), uuidstr);
>>> + goto cleanup;
>>> + }
>>> +
>>> + if (virDomainOpenConsoleEnsureACL(dom->conn, vm->def) < 0)
>>> + goto cleanup;
>>> +
>>> + if (!virDomainObjIsActive(vm)) {
>>> + virReportError(VIR_ERR_OPERATION_INVALID,
>>> + "%s", _("domain is not running"));
>>> + goto cleanup;
>>> + }
>>> +
>>> + priv = vm->privateData;
>>> +
>>> + if (vm->def->nserials)
>>> + chr = vm->def->serials[0];
>>>       
>> Now you're ignoring 'dev_name' completely which is definitely not
>> right. You should be assigning aliases to the serial devices when
>> starting the guest, so you can match them here.
>>     
> sorry, maybe i am not get your point. the pty device is get from libxl
> lib through the libxl_primary_console_get_tty. then pass it to
> virChrdevOpen. i do not understand why save it in another place.
>   

You can look at the uml or qemu driver as an example of Daniel's point. 
When a domain is started, aliases are created and assigned to the serial
devices, and are available in the device XML.  E.g.,

    <serial type='pty'>
      <source path='/dev/pts/2'/>
      <target port='0'/>
      <alias name='serial0'/>
    </serial>

The alias can then be used as 'dev_name'.

But libxl only supports one serial device, so I think its behavior wrt
aliases should be the same as the legacy Xen driver

    if (dev_name) {
        /* XXX support device aliases in future */
        virReportError(VIR_ERR_CONFIG_UNSUPPORTED, "%s",
                       _("Named device aliases are not supported"));
        goto cleanup;
    }

Support for generating aliases on domain startup and matching them in
domainOpenConsole can be added if/when libxl supports multiple serial
devices.

Regards,
Jim

2, Changes since V3:
implicity forbit dev_name pass to libxl driver due to only one 
console supported by libxl.

3, 
git send-email --no-chain-reply-to --annotate --to libvir-list@redhat.com --cc jfehlig@suse.com --cc berrange@redhat.com

15:00 2013-07-24
GTD
0, 12:40-15:02 15:32-20:16

1, today
1), 3h debug libxl_event_wait. see"11:00 2013-07-23"3.
2), 50' console patch. see"14:43 2013-07-24"
3), 19:45-20:16 send a RFC patch for fix sun6i crash on xen boot. see"20:14 2013-07-24"

15:47 2013-07-24
software skill, im, empathy
DongMao推荐

16:33 2013-07-24
software skill, storage, lvm, extend
1, status
linux-work:/home/bamvor # lvs
  LV   VG     Attr   LSize  Origin Snap%  Move Log Copy%  Convert
  home system -wi-ao 17.82g                                      
  root system -wi-ao 11.88g                                      
linux-work:/home/bamvor # vgs
  VG     #PV #LV #SN Attr   VSize  VFree
  system   1   2   0 wz--n- 29.69g    0 
linux-work:/home/bamvor # pvs
  PV         VG     Fmt  Attr PSize  PFree
  /dev/sda12 system lvm2 a-   29.69g    0 
linux-work:/home/bamvor # ls -l /dev/mapper/
total 0
crw-rw---- 1 root root 10, 236 Jul 24 16:24 control
lrwxrwxrwx 1 root root       7 Jul 24 16:31 system-home -> ../dm-0
lrwxrwxrwx 1 root root       7 Jul 24 16:31 system-root -> ../dm-1
linux-work:/home/bamvor # ls -l /dev/system/
home  root  
linux-work:/home/bamvor # ls -l /dev/system/
total 0
lrwxrwxrwx 1 root root 7 Jul 24 16:24 home -> ../dm-0
lrwxrwxrwx 1 root root 7 Jul 24 16:31 root -> ../dm-1
linux-work:/home/bamvor # 

2, extend lvm
linux-work:/home/bamvor # pvcreate /dev/sda6 
  Physical volume "/dev/sda6" successfully created
linux-work:/home/bamvor # pvs
  PV         VG     Fmt  Attr PSize  PFree 
  /dev/sda12 system lvm2 a-   29.69g     0 
  /dev/sda6         lvm2 a-   40.00g 40.00g
linux-work:/home/bamvor # vgextend system /dev/sda6 
  Volume group "system" successfully extended
linux-work:/home/bamvor # vgs
  VG     #PV #LV #SN Attr   VSize  VFree 
  system   2   2   0 wz--n- 69.69g 40.00g
linux-work:/home/bamvor # pvs
  PV         VG     Fmt  Attr PSize  PFree 
  /dev/sda12 system lvm2 a-   29.69g     0 
  /dev/sda6  system lvm2 a-   40.00g 40.00g
linux-work:/home/bamvor # lvs
  LV   VG     Attr   LSize  Origin Snap%  Move Log Copy%  Convert
  home system -wi-ao 17.82g                                      
  root system -wi-ao 11.88g                                      
linux-work:/home/bamvor # lvextend -L20G  system/root
  Extending logical volume root to 20.00 GiB
  Logical volume root successfully resized
linux-work:/home/bamvor # lvs
  LV   VG     Attr   LSize  Origin Snap%  Move Log Copy%  Convert
  home system -wi-ao 17.82g                                      
  root system -wi-ao 20.00g                                      

3, resize file system
linux-work:/home/bamvor # df -h
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/system-root   12G   12G     0 100% /
devtmpfs                 1.9G  444K  1.9G   1% /dev
tmpfs                    1.9G  6.4M  1.9G   1% /dev/shm
/dev/sda11               152M  118M   26M  82% /boot
/dev/mapper/system-home   18G  9.7G  7.0G  59% /home
/dev/sda3                 95G   76G   15G  85% /home/bamvor/sda3
/dev/sda10                30G  8.7G   20G  31% /var/lib/xen/images_2
linux-work:/home/bamvor # resize2fs /dev/system/root 
resize2fs 1.41.9 (22-Aug-2009)
Filesystem at /dev/system/root is mounted on /; on-line resizing required
old desc_blocks = 1, new_desc_blocks = 2
Performing an on-line resize of /dev/system/root to 5242880 (4k) blocks.
The filesystem on /dev/system/root is now 5242880 blocks long.

linux-work:/home/bamvor # df -h
Filesystem               Size  Used Avail Use% Mounted on
/dev/mapper/system-root   20G   12G  7.5G  61% /
devtmpfs                 1.9G  444K  1.9G   1% /dev
tmpfs                    1.9G  6.4M  1.9G   1% /dev/shm
/dev/sda11               152M  118M   26M  82% /boot
/dev/mapper/system-home   18G  9.7G  7.0G  59% /home
/dev/sda3                 95G   76G   15G  85% /home/bamvor/sda3
/dev/sda10                30G  8.7G   20G  31% /var/lib/xen/images_2

16:45 2013-07-24
company, colleague, SUSE lab, Torsten Duwe, Jiri Kosina team
"Jiri Kosina <jkosina@suse.cz>"_email_"[devel] New SUSE Labs colleague -- Torsten Duwe"_20130724_1457
It's my pleasure to announce that 

	Torsten Duwe

has joined SUSE Labs department.

As all of you likely know, Torsten has a long history of being part of 
Arch team, where his responsibilities were mostly (but not limited to) PPC 
kernel maintainance and grub maintainership.

He is now going to followup on this experience while working in Labs 
kernel team.

Welcome to Labs, Torsten!

-- 
Jiri Kosina
SUSE Labs

20:14 2013-07-24
virtualization, xen, arm, patch
1, Subject: [PATCH RFC] fix sun6i crash on setup_pagetables

this patch move set_processor_id in front of setup_pagetables
in order to fix crash when calling this_cpu in that functions.
the HPTIDR is unknown value according to ARM ARM 7AR(DDI0406C),
B4-1598. we should use it before using it.

but i do not know why other board like arndale board. should
bootloader write this register?

2, (11:00 2013-07-25)
Julien reply to me.
On 07/24/2013 01:14 PM, Bamvor Jian Zhang wrote:
> this patch move set_processor_id in front of setup_pagetables
> in order to fix crash when calling this_cpu in that functions.
> the HPTIDR is unknown value according to ARM ARM 7AR(DDI0406C),
> B4-1598. we should use it before using it.
> 
> but i do not know why other board like arndale board. should
> bootloader write this register?

On the Arndale, by default the value of HPTIDR is equal to 0. So it
works without any issue.

During the afternoon, I have noticed this error and send a similar
patch few minutes ago. I also moved percpu_init_areas earlier.

For the next patches, could you add the appropriate people? It will
avoid to loose your patch with the other mail of the mailing list :).

> 
> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
> ---
>  xen/arch/arm/setup.c | 2 +-
>  1 file changed, 1 insertion(+), 1 deletion(-)
> 
> diff --git a/xen/arch/arm/setup.c b/xen/arch/arm/setup.c
> index 2f9fdc8..3bf1b40 100644
> --- a/xen/arch/arm/setup.c
> +++ b/xen/arch/arm/setup.c
> @@ -437,6 +437,7 @@ void __init start_xen(unsigned long boot_phys_offset,
>      cpus = smp_get_max_cpus();
>      cmdline_parse(device_tree_bootargs(device_tree_flattened));
>  
> +    set_processor_id(0); /* needed early, for this_cpu() */
>      setup_pagetables(boot_phys_offset, get_xen_paddr());
>      setup_mm(fdt_paddr, fdt_size);
>  
> @@ -459,7 +460,6 @@ void __init start_xen(unsigned long boot_phys_offset,
>      make_cpus_ready(cpus, boot_phys_offset);
>  
>      percpu_init_areas();

I think you can also move percpu_init_areas earlier.

> -    set_processor_id(0); /* needed early, for smp_processor_id() */
>      set_current((struct vcpu *)0xfffff000); /* debug sanity */
>      idle_vcpu[0] = current;
>  
> 

3, Julien send the similar patch several minutes earlier than me, and it is better because he move percpu_init_areas too.
"Julien Grall <julien.grall@linaro.org>"_email_"[PATCH] xen/arm: Initialize PERCPU variables at the	beginning of start_xen"_20130725_0201

PERCPU variables rely on HTPIDR (TPIDR_EL2) which is in an unknown state when
a processor boot.

For the boot CPU, the first use of PERCPU is in setup_pagetables. So
initialize PERCPU and set the processor ID before.

Signed-off-by: Julien Grall <julien.grall@xxxxxxxxxx>
---
 xen/arch/arm/setup.c |    5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/xen/arch/arm/setup.c b/xen/arch/arm/setup.c
index 2f9fdc8..1ec5e38 100644
--- a/xen/arch/arm/setup.c
+++ b/xen/arch/arm/setup.c
@@ -428,6 +428,9 @@ void __init start_xen(unsigned long boot_phys_offset,
 
     setup_cache();
 
+    percpu_init_areas();
+    set_processor_id(0); /* needed early, for smp_processor_id() */
+
     smp_clear_cpu_maps();
 
     device_tree_flattened = (void *)BOOT_MISC_VIRT_START
@@ -458,8 +461,6 @@ void __init start_xen(unsigned long boot_phys_offset,
     gic_init();
     make_cpus_ready(cpus, boot_phys_offset);
 
-    percpu_init_areas();
-    set_processor_id(0); /* needed early, for smp_processor_id() */
     set_current((struct vcpu *)0xfffff000); /* debug sanity */
     idle_vcpu[0] = current;
 
-- 
1.7.10.4

4, Ian C
On Wed, 2013-07-24 at 19:33 +0100, Julien Grall wrote:
> On 07/24/2013 01:14 PM, Bamvor Jian Zhang wrote:
> > this patch move set_processor_id in front of setup_pagetables
> > in order to fix crash when calling this_cpu in that functions.
> > the HPTIDR is unknown value according to ARM ARM 7AR(DDI0406C),
> > B4-1598. we should use it before using it.
> > 
> > but i do not know why other board like arndale board. should
> > bootloader write this register?
> 
> On the Arndale, by default the value of HPTIDR is equal to 0. So it
> works without any issue.

Right, but strictly the register is undefined reset on reset.

The bootloader cannot initialise it because the meaning is entirely OS
specific.

> During the afternoon, I have noticed this error and send a similar
> patch few minutes ago. I also moved percpu_init_areas earlier.

Right, I think this makes sense.

I suppose I should just take your (Julien's) version of this patch?

> For the next patches, could you add the appropriate people? It will
> avoid to loose your patch with the other mail of the mailing list :).

Yes please!

5, reply
> I suppose I should just take your (Julien's) version of this patch?
agree.
> 
> > For the next patches, could you add the appropriate people? It will
> > avoid to loose your patch with the other mail of the mailing list :).
> 
> Yes please!
i will, thanks.

6, (10:09 2013-07-30)
the final result: ack by Ian C and Tim, modify the commit by Ian C.
commit c433774a6ea84c46c25fdf8ef7e2657aaf2c7f2b
Author: Julien Grall <julien.grall@linaro.org>
Date:   Wed Jul 24 18:01:36 2013 +0100

    xen/arm: Initialize PERCPU variables at the beginning of start_xen

    PERCPU variables rely on HTPIDR (TPIDR_EL2) which is in an unknown state when
    a processor boot.

    For the boot CPU, the first use of PERCPU is in setup_pagetables. So
    initialize PERCPU and set the processor ID before.

    Bamvor Jian Zhang observed this failure on the sun6i processor which does not
    initialise HTPIDR and contributed a very similar patch.

    Signed-off-by: Julien Grall <julien.grall@linaro.org>
    Acked-by: Ian Campbell <ian.campbell@citrix.com>
    Acked-by: Tim Deegan <tim@xen.org>
    [ ijc -- added last para of commit message ]

10:43 2013-07-25
GTD
0, 10:30-14:26 15:22-17:45

1, today
1), reply email about xen arm patch. see"20:14 2013-07-24"2.
2), bash, array. see"11:21 2013-07-25"
3), 12:36-14:00 16:05-17:45 console patch. see"12:36 2013-07-25"
rest 40'
4), 14:00-14:26 15:46-16:04 mailing list: xen, arm. see"14:24 2013-07-25", "16:00 2013-07-25".

10:48 2013-07-25
company, lunch and learn, systemd
https://wiki.innerweb.novell.com/index.php/SUSE/Development/Lunch_and_Learn
"Frederic Crozat <fcrozat@suse.com>"_email"[devel] Lunch and Learn "systemd how-to" next week THURSDAY (August 1st) 12 a.m."_20130725_2303
Hi all,

visiting in Nuremberg office next week, I'll use this opportunity to do
a Lunch & Learn talk on systemd (what ? again ? ;) but focusing more on
how to use it, how to write systemd unit files, how to debug it, etc... 

Title:    systemd how-to

Speaker:  Frederic Crozat
Date:     Thursday, August 1st
Time:     12 a.m. to 2 p.m. (CEST)
Location: All Hands Area (NUE)
Lunch:    Please bring your own food or have late lunch.

The presentation will be recorded for those of you who can't attend in 
person.

See you all next week :)

-- 
Frederic Crozat <fcrozat@suse.com>
SUSE

11:21 2013-07-25
software skill, shell, bash, split; array
http://stackoverflow.com/questions/918886/how-do-i-split-a-string-on-a-delimiter-in-bash
1, method by questioner. 
Edit: After suggestions from the answers below, I ended up with the following which is what I was after:

#!/usr/bin/env bash

IN="bla@some.com;john@home.com"

arr=$(echo $IN | tr ";" "\n")

for x in $arr
do
    echo "> [$x]"
done
output:

> [bla@some.com]
> [john@home.com]
Edit2: There was a solution involving setting Internal_field_separator (IFS) to ';'. I am not sure what happened with that answer, how do you reset IFS back to default?

Edit3: RE: IFS solution, I tried this and it works, I keep the old IFS and then restore it:

IN="bla@some.com;john@home.com"

OIFS=$IFS
IFS=';'
arr2=$IN
for x in $arr2
do
    echo "> [$x]"
done

IFS=$OIFS
BTW, when I tried

arr2=($IN) 
I only got the first string when printing it in loop, without brackets around $IN it works.

2, get string from array, it is useful while need several parts and want to avoid loop statement.
How about this approach:

IN="bla@some.com;john@home.com" 
set -- "$IN" 
IFS=";"; declare -a Array=($*) 
echo "${Array[@]}" 
echo "${Array[0]}" 
echo "${Array[1]}" 

3, chunyan test
the brace mean define an array in bash: 
> abc=(str1 str2 aaa bbb)
> echo ${#abc[0]}
4
> echo ${abc[0]}
str1
> echo ${abc[1]}
str2
> echo ${abc[2]}
aaa
> echo ${abc[3]}
bbb

12:36 2013-07-25
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.3, cont5, deal with upstream reply
1, Jim reply
Bamvor Jian Zhang wrote:
> this patch introduce the console api in libxl driver for both pv and
> hvm guest.  and import and update the libxlMakeChrdevStr function
> which was deleted in commit dfa1e1dd.
>
> Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
> ---
> Changes since V3:
> implicity forbit dev_name pass to libxl driver due to only one
> console supported by libxl.
>
> Changes since V2:
> 1), forbid parallel configure because libxl do not support it
> 2), only support one serial on libxl driver.
> 3), also remove console code in libxl driver, AFAICS serial is enough for
> connecting to libxl console.
>
> Changes since V1:
> 1), add virDomainOpenConsoleEnsureACL
> 3), remove virReportOOMErrorFull when virAsprintf fail.
> 4), change size_t for non-nagetive number in libxlDomainOpenConsole
>     size_t i;
>     size_t num = 0;
> 5), fix for make check
> (1), replace virAsprintf with VIR_STRDUP in two places
> (2), delete space.
>
>  src/libxl/libxl_conf.c   | 100 +++++++++++++++++++++++++++++++++++++++++++++++
>  src/libxl/libxl_conf.h   |   3 ++
>  src/libxl/libxl_driver.c |  94 ++++++++++++++++++++++++++++++++++++++++++++
>  3 files changed, 197 insertions(+)
>
> diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
> index 4a0fba9..539d537 100644
> --- a/src/libxl/libxl_conf.c
> +++ b/src/libxl/libxl_conf.c
> @@ -331,6 +331,90 @@ error:
>  }
>  
>  static int
> +libxlMakeChrdevStr(virDomainChrDefPtr def, char **buf)
> +{
> +    const char *type = virDomainChrTypeToString(def->source.type);
> +    int ret;
> +
> +    if (!type) {
> +        virReportError(VIR_ERR_INTERNAL_ERROR,
>   

The error should be VIR_ERR_CONFIG_UNSUPPORTED.

> +                       "%s", _("unexpected chr device type"));
> +        return -1;
> +    }
> +
> +    switch (def->source.type) {
> +        case VIR_DOMAIN_CHR_TYPE_NULL:
> +        case VIR_DOMAIN_CHR_TYPE_STDIO:
> +        case VIR_DOMAIN_CHR_TYPE_VC:
> +        case VIR_DOMAIN_CHR_TYPE_PTY:
>   

Super nit: a majority of libvirt code has 'switch' and 'case' at same
indentation.  I realize there are inconsistencies even within this file,
but new code should follow the predominant style.

> +            if (VIR_STRDUP(*buf, type) < 0)
> +                return -1;
> +            break;
> +
> +        case VIR_DOMAIN_CHR_TYPE_FILE:
> +        case VIR_DOMAIN_CHR_TYPE_PIPE:
> +            if (virAsprintf(buf, "%s:%s", type,
> +                            def->source.data.file.path) < 0)
> +                return -1;
> +            break;
> +
> +        case VIR_DOMAIN_CHR_TYPE_DEV:
> +            if (VIR_STRDUP(*buf, def->source.data.file.path) < 0)
> +                return -1;
> +            break;
> +
> +        case VIR_DOMAIN_CHR_TYPE_UDP: {
> +            const char *connectHost = def->source.data.udp.connectHost;
> +            const char *bindHost = def->source.data.udp.bindHost;
> +            const char *bindService  = def->source.data.udp.bindService;
> +
> +            if (connectHost == NULL)
> +                connectHost = "";
> +            if (bindHost == NULL)
> +                bindHost = "";
> +            if (bindService == NULL)
> +                bindService = "0";
> +
> +            ret = virAsprintf(buf, "udp:%s:%s@%s:%s",
> +                              connectHost,
> +                              def->source.data.udp.connectService,
> +                              bindHost,
> +                              bindService);
> +            if (ret < 0)
> +                return -1;
> +            break;
> +
> +        }
> +        case VIR_DOMAIN_CHR_TYPE_TCP:
> +            if (def->source.data.tcp.protocol == VIR_DOMAIN_CHR_TCP_PROTOCOL_TELNET)
>   

These long lines could be shortened by having a function-local
virDomainChrSourceDef variable.

> +                ret = virAsprintf(buf, "telnet:%s:%s%s",
> +                                  def->source.data.tcp.host,
> +                                  def->source.data.tcp.service,
> +                                  def->source.data.tcp.listen ? ",server,nowait" : "");
> +            else
> +                ret = virAsprintf(buf, "tcp:%s:%s%s",
> +                                  def->source.data.tcp.host,
> +                                  def->source.data.tcp.service,
> +                                  def->source.data.tcp.listen ? ",server,nowait" : "");
> +
> +            if (ret < 0)
>   

No need for 'ret' here.  See my attached diff, which contains a bit of
logic simplification here.

> +                return -1;
> +            break;
> +
> +        case VIR_DOMAIN_CHR_TYPE_UNIX:
> +            ret = virAsprintf(buf, "unix:%s%s",
> +                              def->source.data.nix.path,
> +                              def->source.data.nix.listen ? ",server,nowait" : "");
> +            if (ret < 0)
> +                return -1;
> +            break;
>   

There should be a default case to report error for unsupported types.

> +
> +    }
> +
> +    return 0;
> +}
> +
> +static int
>  libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>  {
>      libxl_domain_build_info *b_info = &d_config->b_info;
> @@ -403,6 +487,22 @@ libxlMakeDomBuildInfo(virDomainDefPtr def, libxl_domain_config *d_config)
>          if (VIR_STRDUP(b_info->u.hvm.boot, bootorder) < 0)
>              goto error;
>  
> +        if (def->nserials) {
> +            if (def->nserials > 1) {
> +                virReportError(VIR_ERR_INTERNAL_ERROR,
>   

VIR_ERR_CONFIG_UNSUPPORTED

> +                               "%s", _("Only one serial is supported by libxl"));
> +                goto error;
> +            }
> +            if (libxlMakeChrdevStr(def->serials[0], &b_info->u.hvm.serial) < 0)
> +                goto error;
> +        }
> +
> +        if (def->nparallels) {
> +            virReportError(VIR_ERR_INTERNAL_ERROR,
>   

VIR_ERR_CONFIG_UNSUPPORTED

> +                           "%s", _("Parallel is not supported"));
> +            goto error;
> +        }
> +
>          /*
>           * The following comment and calculation were taken directly from
>           * libxenlight's internal function libxl_get_required_shadow_memory():
> diff --git a/src/libxl/libxl_conf.h b/src/libxl/libxl_conf.h
> index 2b4a281..861d689 100644
> --- a/src/libxl/libxl_conf.h
> +++ b/src/libxl/libxl_conf.h
> @@ -34,6 +34,7 @@
>  # include "configmake.h"
>  # include "virportallocator.h"
>  # include "virobject.h"
> +# include "virchrdev.h"
>  
>  
>  # define LIBXL_VNC_PORT_MIN  5900
> @@ -94,6 +95,8 @@ struct _libxlDomainObjPrivate {
>  
>      /* per domain libxl ctx */
>      libxl_ctx *ctx;
> +    /* console */
> +    virChrdevsPtr devs;
>      libxl_evgen_domain_death *deathW;
>  
>      /* list of libxl timeout registrations */
> diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
> index 358d387..9299484 100644
> --- a/src/libxl/libxl_driver.c
> +++ b/src/libxl/libxl_driver.c
> @@ -417,6 +417,9 @@ libxlDomainObjPrivateAlloc(void)
>  
>      libxl_osevent_register_hooks(priv->ctx, &libxl_event_callbacks, priv);
>  
> +    if (!(priv->devs = virChrdevAlloc()))
> +        return NULL;
> +
>      return priv;
>  }
>  
> @@ -429,6 +432,7 @@ libxlDomainObjPrivateDispose(void *obj)
>          libxl_evdisable_domain_death(priv->ctx, priv->deathW);
>  
>      libxl_ctx_free(priv->ctx);
> +    virChrdevFree(priv->devs);
>   

IMO, freeing the libxl_ctx should be the last thing done in this function.

>  }
>  
>  static void
> @@ -4493,6 +4497,95 @@ cleanup:
>      return ret;
>  }
>  
> +
> +static int
> +libxlDomainOpenConsole(virDomainPtr dom,
> +                       const char *dev_name,
> +                       virStreamPtr st,
> +                       unsigned int flags)
> +{
> +    libxlDriverPrivatePtr driver = dom->conn->privateData;
> +    virDomainObjPtr vm = NULL;
> +    int ret = -1;
> +    virDomainChrDefPtr chr = NULL;
> +    libxlDomainObjPrivatePtr priv;
> +    char *console = NULL;
> +
> +    virCheckFlags(VIR_DOMAIN_CONSOLE_SAFE |
> +                  VIR_DOMAIN_CONSOLE_FORCE, -1);
>   

I verified that 'force' works, but what is 'safe' for?  I'm not quite
sure how that works in the qemu driver either.

> +
> +    if (dev_name) {
> +        /* XXX support device aliases in future */
> +        virReportError(VIR_ERR_CONFIG_UNSUPPORTED, "%s",
> +                       _("Named device aliases are not supported"));
> +        goto cleanup;
> +    }
> +
> +    libxlDriverLock(driver);
> +    vm = virDomainObjListFindByUUID(driver->domains, dom->uuid);
> +    libxlDriverUnlock(driver);
> +    if (!vm) {
> +        char uuidstr[VIR_UUID_STRING_BUFLEN];
> +        virUUIDFormat(dom->uuid, uuidstr);
> +        virReportError(VIR_ERR_NO_DOMAIN,
> +                       _("No domain with matching uuid '%s'"), uuidstr);
> +        goto cleanup;
> +    }
> +
> +    if (virDomainOpenConsoleEnsureACL(dom->conn, vm->def) < 0)
> +        goto cleanup;
> +
> +    if (!virDomainObjIsActive(vm)) {
> +        virReportError(VIR_ERR_OPERATION_INVALID,
> +                       "%s", _("domain is not running"));
> +        goto cleanup;
> +    }
> +
> +    priv = vm->privateData;
> +
> +    if (vm->def->nserials)
> +        chr = vm->def->serials[0];
> +
> +    if (!chr) {
> +        virReportError(VIR_ERR_INTERNAL_ERROR,
> +                       _("cannot find character device %s"),
> +                       NULLSTR(dev_name));
> +        goto cleanup;
> +    }
> +
> +    if (chr->source.type != VIR_DOMAIN_CHR_TYPE_PTY) {
> +        virReportError(VIR_ERR_INTERNAL_ERROR,
> +                       _("character device %s is not using a PTY"),
> +                       NULLSTR(dev_name));
> +        goto cleanup;
> +    }
> +
> +    ret = libxl_primary_console_get_tty(priv->ctx, vm->def->id, &console);
> +    if (ret)
> +        goto cleanup;
> +
> +    if (VIR_STRDUP(chr->source.data.file.path, console) < 0)
> +        goto cleanup;
> +
> +    /* handle mutually exclusive access to console devices */
> +    ret = virChrdevOpen(priv->devs,
> +                         &chr->source,
> +                         st,
> +                         (flags & VIR_DOMAIN_CONSOLE_FORCE) != 0);
>   

Whitespace is off a bit on these parameters.

> +
> +    if (ret == 1) {
> +        virReportError(VIR_ERR_OPERATION_FAILED, "%s",
> +                       _("Active console session exists for this domain"));
> +        ret = -1;
> +    }
> +
> +cleanup:
> +    VIR_FREE(console);
> +    if (vm)
> +        virObjectUnlock(vm);
> +    return ret;
> +}
> +
>  static int
>  libxlDomainSetSchedulerParameters(virDomainPtr dom, virTypedParameterPtr params,
>                                    int nparams)
> @@ -4875,6 +4968,7 @@ static virDriver libxlDriver = {
>      .domainManagedSave = libxlDomainManagedSave, /* 0.9.2 */
>      .domainHasManagedSaveImage = libxlDomainHasManagedSaveImage, /* 0.9.2 */
>      .domainManagedSaveRemove = libxlDomainManagedSaveRemove, /* 0.9.2 */
> +    .domainOpenConsole = libxlDomainOpenConsole, /* 1.1.1 */
>   

We are now in 1.1.1 freeze, so this will have to wait for 1.1.2.

I've tested this patch quite a bit and haven't noticed any problems.  It
is a small patch that actually fills a big hole in the driver, so I'd
like to get it committed for 1.1.2.  Can you rebase, squash in my
changes, and post a V5?

Regards,
Jim


diff --git a/src/libxl/libxl_conf.c b/src/libxl/libxl_conf.c
index b1be91d..827dfdd 100644
--- a/src/libxl/libxl_conf.c
+++ b/src/libxl/libxl_conf.c
@@ -333,82 +333,84 @@ error:
 static int
 libxlMakeChrdevStr(virDomainChrDefPtr def, char **buf)
 {
-    const char *type = virDomainChrTypeToString(def->source.type);
-    int ret;
+    virDomainChrSourceDef srcdef = def->source;
+    const char *type = virDomainChrTypeToString(srcdef.type);
 
     if (!type) {
-        virReportError(VIR_ERR_INTERNAL_ERROR,
-                       "%s", _("unexpected chr device type"));
+        virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
+                       "%s", _("unknown chrdev type"));
         return -1;
     }
 
-    switch (def->source.type) {
-        case VIR_DOMAIN_CHR_TYPE_NULL:
-        case VIR_DOMAIN_CHR_TYPE_STDIO:
-        case VIR_DOMAIN_CHR_TYPE_VC:
-        case VIR_DOMAIN_CHR_TYPE_PTY:
-            if (VIR_STRDUP(*buf, type) < 0)
-                return -1;
-            break;
+    switch (srcdef.type) {
+    case VIR_DOMAIN_CHR_TYPE_NULL:
+    case VIR_DOMAIN_CHR_TYPE_STDIO:
+    case VIR_DOMAIN_CHR_TYPE_VC:
+    case VIR_DOMAIN_CHR_TYPE_PTY:
+        if (VIR_STRDUP(*buf, type) < 0)
+            return -1;
+        break;
 
-        case VIR_DOMAIN_CHR_TYPE_FILE:
-        case VIR_DOMAIN_CHR_TYPE_PIPE:
-            if (virAsprintf(buf, "%s:%s", type,
-                            def->source.data.file.path) < 0)
-                return -1;
-            break;
+    case VIR_DOMAIN_CHR_TYPE_FILE:
+    case VIR_DOMAIN_CHR_TYPE_PIPE:
+        if (virAsprintf(buf, "%s:%s", type, srcdef.data.file.path) < 0)
+            return -1;
+        break;
 
-        case VIR_DOMAIN_CHR_TYPE_DEV:
-            if (VIR_STRDUP(*buf, def->source.data.file.path) < 0)
-                return -1;
-            break;
+    case VIR_DOMAIN_CHR_TYPE_DEV:
+        if (VIR_STRDUP(*buf, srcdef.data.file.path) < 0)
+            return -1;
+        break;
+
+    case VIR_DOMAIN_CHR_TYPE_UDP: {
+        const char *connectHost = srcdef.data.udp.connectHost;
+        const char *bindHost = srcdef.data.udp.bindHost;
+        const char *bindService  = srcdef.data.udp.bindService;
+
+        if (connectHost == NULL)
+            connectHost = "";
+        if (bindHost == NULL)
+            bindHost = "";
+        if (bindService == NULL)
+            bindService = "0";
+
+        if (virAsprintf(buf, "udp:%s:%s@%s:%s",
+                        connectHost,
+                        srcdef.data.udp.connectService,
+                        bindHost,
+                        bindService) < 0)
+            return -1;
+        break;
+    }
 
-        case VIR_DOMAIN_CHR_TYPE_UDP: {
-            const char *connectHost = def->source.data.udp.connectHost;
-            const char *bindHost = def->source.data.udp.bindHost;
-            const char *bindService  = def->source.data.udp.bindService;
-
-            if (connectHost == NULL)
-                connectHost = "";
-            if (bindHost == NULL)
-                bindHost = "";
-            if (bindService == NULL)
-                bindService = "0";
-
-            ret = virAsprintf(buf, "udp:%s:%s@%s:%s",
-                              connectHost,
-                              def->source.data.udp.connectService,
-                              bindHost,
-                              bindService);
-            if (ret < 0)
-                return -1;
-            break;
+    case VIR_DOMAIN_CHR_TYPE_TCP: {
+        const char *prefix;
 
-        }
-        case VIR_DOMAIN_CHR_TYPE_TCP:
-            if (def->source.data.tcp.protocol == VIR_DOMAIN_CHR_TCP_PROTOCOL_TELNET)
-                ret = virAsprintf(buf, "telnet:%s:%s%s",
-                                  def->source.data.tcp.host,
-                                  def->source.data.tcp.service,
-                                  def->source.data.tcp.listen ?  ",server,nowait" : "");
-            else
-                ret = virAsprintf(buf, "tcp:%s:%s%s",
-                                  def->source.data.tcp.host,
-                                  def->source.data.tcp.service,
-                                  def->source.data.tcp.listen ?
",server,nowait" : "");
-
-            if (ret < 0)
-                return -1;
-            break;
+        if (srcdef.data.tcp.protocol == VIR_DOMAIN_CHR_TCP_PROTOCOL_TELNET)
+            prefix = "telnet";
+        else
+            prefix = "tcp";
 
-        case VIR_DOMAIN_CHR_TYPE_UNIX:
-            ret = virAsprintf(buf, "unix:%s%s",
-                              def->source.data.nix.path,
-                              def->source.data.nix.listen ?  ",server,nowait" : "");
-            if (ret < 0)
-                return -1;
-            break;
+        if (virAsprintf(buf, "%s:%s:%s%s",
+                        prefix,
+                        srcdef.data.tcp.host,
+                        srcdef.data.tcp.service,
+                        srcdef.data.tcp.listen ? ",server,nowait" : "") < 0)
+            return -1;
+        break;
+    }
+
+    case VIR_DOMAIN_CHR_TYPE_UNIX:
+        if (virAsprintf(buf, "unix:%s%s",
+                        srcdef.data.nix.path,
+                        srcdef.data.nix.listen ? ",server,nowait" : "") < 0)
+            return -1;
+        break;
 
+    default:
+        virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
+                       _("unsupported chardev '%s'"), type);
+        return -1;
     }
 
     return 0;
@@ -497,8 +499,9 @@ libxlMakeDomBuildInfo(virDomainObjPtr vm,
libxl_domain_config *d_config)
 
         if (def->nserials) {
             if (def->nserials > 1) {
-                virReportError(VIR_ERR_INTERNAL_ERROR,
-                               "%s", _("Only one serial is supported by libxl"));
+                virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
+                               "%s",
+                               _("Only one serial device is supported by libxl"));
                 goto error;
             }
             if (libxlMakeChrdevStr(def->serials[0], &b_info->u.hvm.serial) < 0)
@@ -506,8 +509,9 @@ libxlMakeDomBuildInfo(virDomainObjPtr vm, libxl_domain_config *d_config)
         }
 
         if (def->nparallels) {
-            virReportError(VIR_ERR_INTERNAL_ERROR,
-                           "%s", _("Parallel is not supported"));
+            virReportError(VIR_ERR_CONFIG_UNSUPPORTED,
+                           "%s",
+                           _("Parallel devices are not supported by libxl"));
             goto error;
         }
 
diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index ad1a5d1..4b603b1 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -431,8 +431,8 @@ libxlDomainObjPrivateDispose(void *obj)
     if (priv->deathW)
         libxl_evdisable_domain_death(priv->ctx, priv->deathW);
 
-    libxl_ctx_free(priv->ctx);
     virChrdevFree(priv->devs);
+    libxl_ctx_free(priv->ctx);
 }
 
 static void
@@ -4568,9 +4568,9 @@ libxlDomainOpenConsole(virDomainPtr dom,
 
     /* handle mutually exclusive access to console devices */
     ret = virChrdevOpen(priv->devs,
-                         &chr->source,
-                         st,
-                         (flags & VIR_DOMAIN_CONSOLE_FORCE) != 0);
+                        &chr->source,
+                        st,
+                        (flags & VIR_DOMAIN_CONSOLE_FORCE) != 0);
 
     if (ret == 1) {
         virReportError(VIR_ERR_OPERATION_FAILED, "%s",

2, discuss
1), TYPE_TCP
(1), Jim suggestion
> +        case VIR_DOMAIN_CHR_TYPE_TCP:
> +            if (def->source.data.tcp.protocol == VIR_DOMAIN_CHR_TCP_PROTOCOL_TELNET)
>   

These long lines could be shortened by having a function-local
virDomainChrSourceDef variable.
(2), qemu_command.c
    case VIR_DOMAIN_CHR_TYPE_TCP:
        telnet = dev->data.tcp.protocol == VIR_DOMAIN_CHR_TCP_PROTOCOL_TELNET;
        virBufferAsprintf(&buf,
                          "socket,id=char%s,host=%s,port=%s%s%s",
                          alias,
                          dev->data.tcp.host,
                          dev->data.tcp.service,
                          telnet ? ",telnet" : "",
                          dev->data.tcp.listen ? ",server,nowait" : "");
        break;
 
2), modify it later
(1), Jim:
No need for 'ret' here.  See my attached diff, which contains a bit of
logic simplification here.

3), type to string?
(1), Jim
There should be a default case to report error for unsupported types.
(2), IIRC: there should be a type to string function in libvirt?
virDomainChrTypeToString

4), about console argument
(1), Jim
> +    virCheckFlags(VIR_DOMAIN_CONSOLE_SAFE |
> +                  VIR_DOMAIN_CONSOLE_FORCE, -1);
>   

I verified that 'force' works, but what is 'safe' for?  I'm not quite
sure how that works in the qemu driver either.
(2), should I only preserve FORCE flags?
    virCheckFlags(VIR_DOMAIN_CONSOLE_FORCE, -1);

3, Changes since V4:
1), using proper error instead of VIR_ERR_INTERNAL_ERROR.
2), treat safe as unsupported flags in libxl openConsole api.
3), some format and minor logic changes.

4, (11:28 2013-07-26)
after Jim review last night, he suggest me send it to upstream.
git send-email --no-chain-reply-to --annotate --to libvir-list@redhat.com --cc berrange@redhat.com --cc eblake@redhat.com --cc jfehlig@suse.com patch/0001-add-console-support-in-libxl.patch


12:42 2013-07-25
mailing list, virtualization, xen, libxl, libvirt
1, 65026d72: libxl: Correctly initialize vcpu bitmap
Stefan Bader <stefan.bader@canonical.com>
Date: Wed, 24 Jul 2013 13:43:43 +0200

The avail_vcpu bitmap has to be allocated before it can be used (using the maximum allowed value for that). Then for each available VCPU the
bit in the mask has to be set (libxl_bitmap_set takes a bit position
as an argument, not the number of bits to set).

Without this, I would always only get one VCPU for guests created
through libvirt/libxl.

Signed-off-by: Stefan Bader <stefan.bader@canonical.com>

1), cpu bit map is set by libxl_bitmap_set.


14:24 2013-07-25
mailing list, virtualization, xen, arm, thumb2 encoding, big endian
1, Julien Grall
>> >> +    switch ( len )
>> >> +    {
>> >> +    /* 16-bit instruction */
>> >> +    case 2:
>> >> +        *instr &= 0xffff;
>> >> +        break;
>> >> +    /* 32-bit instruction */
>> >> +    case 4:
>> >> +        *instr = (*instr & 0xffff) << 16 | (*instr & 0xffff0000) >> 16;
>> >
>> > Since you only ever consult bits 12..15 or 0..3 of the result couldn't
>> > you just read two bytes from pc+2 instead of reading 4 bytes and
>> > swapping etc?
>>
>> I was thinking to provide a "high level" function to retrieve an
>> instruction just in case we need it in the future.
>
> I suppose that does sound potentially useful.
>
> Were does this the idea of swapping them come from though? The ARM ARM
> seems (see e.g. section A6.3) to describe things in the order they are
> in memory -- is doing otherwise not going to end up confusing us?

In THUMB set, a 32-bit instruction consisting of two consecutive
halfwords (see section A6.1).
So the instruction is in "big endian", but Xen will read the word as a
"little endian" things.

But in ARM set, a 32-bit instruction is a single word. I will add a
check to handle this case.

2, Julien Grall
http://lists.xen.org/archives/html/xen-devel/2013-07/msg02287.html
The ARM ARM specification describes a THUMB 32 bit instruction with
   HW1 HW2

HW1 => [31:16] => most significant
HW2 => [15:0] => less significant

raw_copy_from_copy will directly read 4 bytes and store in an uint32_t.
As Xen is running in little endian, it ends up in:
HW2 => [31:16]
HW1 => [15:0]

Which is false. If it's more clear, I can do something like this

uint16_t a[2];
rc = raw_copy_from_guest(instr, (void * __user)regs->pc, len);

...

switch ( len )
{
...
case 4:
   instr = a[0] << 16 | a[1];
...
}

> Have you tested and actually observed this case on real h/w?

I tried on the arndale board.

-- 
Julien

16:00 2013-07-25
mailing list, virtualization, xen, arm, device tree
1, put DT at 0.5G system memory, in order to not overlap with linux mapping
http://lists.xen.org/archives/html/xen-devel/2013-07/msg02280.html
On Wed, 2013-07-24 at 14:44 +0100, Julien Grall wrote:
> On 07/23/2013 06:12 PM, Ian Campbell wrote:
> > From: Ian Campbell <ian.campbell@xxxxxxxxxx>
> > 
> > The 32-bit Linux kernel uses its lowmem direct mapping to access the FDT. 
> > The
> > lowmem mapping is around 3/4GiB but varies depending on the kernel's 
> > .config.
> > Use a limit of 1/2G to be safe.
> > 
> > Signed-off-by: Ian Campbell <ian.campbell@xxxxxxxxxx>
> 
> I'm curious, how did you find this value? I can't easily find a specific
> range for the lowmem direct mapping.

There isn't one...

With a standard 3:1 user:kernel split there is ~1G of kernel address
space, but some of that is taken up by vmalloc areas, fixmap areas etc.
My experience is that there is generally around 700-800M of actual 1:1
mapping of RAM, but the precise value depends on the kernel .config
(e.g. how many fixmaps are implied by the settings etc). 512MB is
therefore just a conservative guess...

BTW I asked for confirmation on linux-arm-kernel but I don't see that in
my l-a-k folder or the archives -- did you get the copy I CCd to you?
Subject is "Requirements for FDT load address on ARM".

Ian.

18:23 2013-7-25
reading, linux kernel development, process; software skill, list the priority of real time process
1, ps -eo state,uid,pid,ppid,rtprio,time,comm

2, there are 19 real time process compare with (256 - 19) = 237 normal process.
> ps -eo state,uid,pid,ppid,rtprio,time,comm |grep -v "\-"
S   UID   PID  PPID RTPRIO     TIME COMMAND
S     0     8     2     99 00:00:00 migration/0
S     0    11     2     99 00:00:00 watchdog/0
S     0    12     2     99 00:00:00 watchdog/1
S     0    14     2     99 00:00:00 migration/1
S     0    17     2     99 00:00:00 watchdog/2
S     0    19     2     99 00:00:00 migration/2
S     0    22     2     99 00:00:00 watchdog/3
S     0    24     2     99 00:00:00 migration/3
S     0    27     2     99 00:00:00 watchdog/4
S     0    29     2     99 00:00:00 migration/4
S     0    32     2     99 00:00:00 watchdog/5
S     0    34     2     99 00:00:00 migration/5
S     0    37     2     99 00:00:00 watchdog/6
S     0    39     2     99 00:00:00 migration/6
S     0    42     2     99 00:00:00 watchdog/7
S     0    44     2     99 00:00:00 migration/7
S  1000  1602  1599      0 00:00:00 nepomukservices
S  1000  1866  1599      0 00:00:20 nepomukservices
> ps -eo state,uid,pid,ppid,rtprio,time,comm |wc -l
256
> ps -eo state,uid,pid,ppid,rtprio,time,comm |grep -v "\-" | wc -l
19

8:13 2013-7-26
company, virtualization, suse, xen, regular meeting: US / China Virtualization Sync
1, qa automation for sle12. write test list.

11:13 2013-07-26
GTD
0, 10:50-11:31 12:51-13:26 14:17-17:00

1, today
1), 1h Virtualization, sync. see"8:13 2013-7-26"
2), 10' mailing list. see"11:14 2013-07-26"
3), 10' send patch. see"12:36 2013-07-25"4.
4), 10' week review. see"12:56 2013-07-26", "13:02 2013-07-26", "13:03 2013-07-26"
5), 13:06-13:26 bug.
6), 15:30-16:55 rbd. see"14:50 2013-07-26"

11:14 2013-07-26
mailing list, virtualization, xen, virtualization-xen
1, Jim_email_"Re: [virtualization-xen] "masking down" the host processor on an Intel E5-2640 to E5540 for live migration"
> Looks like there are multiple ways...easiest being to pass the mask on the hypervisor:   syntax like
>
> cpuid_mask_ecx=0x0008E3FD cpuid_mask_edx=0xBFEBFBFF
>   

I think you want to use the 'cpuid' setting to override the cpu model in
the guest instead of changing anything on the host.  See
/etc/xen/examples/xmexample.hvm for notes on using the cpuid setting. 
There's also some blog/wiki entries about cpuid, e.g.

http://intrbiz.com/setting-the-cpuid-of-a-xen-guest/
http://zhigang.org/wiki/XenCPUID

Regards,
Jim

2, bamvor: comparision
http://www.cpu-world.com/Compare/907/Intel_Xeon_E5-2640_vs_Intel_Xeon_E5540.html

11:59 2013-07-26
mailing, arm, linaro, LEG
[LEG] engineering report w30 2013
1, GRUB for v7 was accepted upstream
2, openstack status on exynos5250
https://wiki.linaro.org/DevstackOnX86AndARM#Linaro_2013.04_on_Arndale

12:56 2013-07-26
(10:02 2013-07-29)
(10:39 2013-07-31)
GTD, week review, week plan
1, week review
1), get ao_how work in libxl driver.
only virsh create works. "virsh save" hang.
2), get console patch accepted by upstream.
sent V5 which reviewed by Jim.
3), try rbd on libvirt libxl. 
NOT FINISH. i need try it with lastest xen(4.3 release) and libvirt release in order to including the patch after the discuss in April in xen-devel
4), try exclusive operation on sun6i. try sun6i upstream kernel.
CANCEL
5), opensuse arm bug test and report. CANCEL
(1), ask help for run opensuse arm on cubie.
(2), arndale x11 not start.
6), confirm about arndale early printk init macro bug. and send a email.
CANCEL: it is a minor work for me.
7), other work
(1), sent a very small patch for xen. but it has been denied because Julien sent a better one and several minutes early than me.

2, week plan
1), get console patch commit. WAITING OTHERS COMMENTS -> commit DONE
2), try ao_how: at least work when callback == NULL.  ref"11:00 2013-07-23"3.
THIS IS IMPORTANT.
3), try exclusive operation on sun6i. try sun6i upstream kernel.
4), try rbd on libvirt libxl. 
(1), MINOR: report in week 30. CANCEL
(2), enable rbd cache? i am not sure whether it need or not. NEED. it is ok in current code.
(3), found chance to enhance xenlight rbd support. see"10:27 2013-07-29"5.
5), opensuse arm bug test and report.
(1), ask help for run opensuse arm on cubie.
(2), arndale x11 not start.

13:02 2013-07-26
GTD, year plan
1, year plan
1), write 24 patch in one year. one patch per month is a little bit less.
2), finish xen arm support for sun6i.
3), opensuse arm work:
sr something for sunxi:
(1), sun6i opensuse image.
(2), improve opensuse arm on sun4i. e.g. XMBC and othes.

13:03 2013-07-26
GTD, other todo
1, make allwinner A31 opensuse image in Aug.
2, next
1), arm
(1), do i need to reply the uart discuss in xen-devel? 
2), libxl
(1), blkstatus in libxl.
3), read the xen 4.4 discuss
http://lists.xen.org/archives/html/xen-devel/2013-06/msg01391.html
4), try the patch: [linux-sunxi] [PATCH 00/10] ARM: sunxi: Add support for the Allwinner A31 SoC
Maxime Ripard <maxime.ripard@free-electrons.com>
5), try chen baozi console patch. ?

14:50 2013-07-26
storage, ceph, rbd; virtualization, libxl, qemu
1, qemu command get from libvirt qemu:
/home/bamvor/work/source/virtualization/qemu/upstream/qemu.sle11sp2/x86_64-softmmu/qemu-system-x86_64 -machine accel=kvm -name 05_win7 -S -machine pc-i440fx-1.6,accel=kvm,usb=off -m 3072 -realtime mlock=off -smp 2,sockets=2,cores=1,threads=1 -uuid 34c4af10-b5fc-3547-d430-00a57d9f6b3c -no-user-config -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/05_win7.monitor,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=localtime -no-hpet -no-reboot -device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2 -drive file=/home/bamvor/vm/kvm/images/windowsvistax64/disk0.raw,if=none,id=drive-ide0-0-0,format=raw -device ide-hd,bus=ide.0,unit=0,drive=drive-ide0-0-0,id=ide0-0-0,bootindex=1 -drive file=rbd:rbd/test:auth_supported=none:mon_host=147.2.207.95\:6789,if=none,id=drive-ide0-0-1 -device ide-hd,bus=ide.0,unit=1,drive=drive-ide0-0-1,id=ide0-0-1 -drive file=/home/bamvor/vm/iso/windows7.iso,if=none,id=drive-ide0-1-0,readonly=on,format=raw -device ide-cd,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -netdev user,id=hostnet0 -device e1000,netdev=hostnet0,id=net0,mac=52:54:00:09:3a:9f,bus=pci.0,addr=0x3 -device usb-tablet,id=input0 -vnc 127.0.0.1:0 -device cirrus-vga,id=video0,bus=pci.0,addr=0x2 -device AC97,id=sound0,bus=pci.0,addr=0x4 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x5

2, last time i fail, because i do not use the rbd enabled qemu.
3, try on xen4.3, recompile qemu
1), boot is too small to install new xen image.
enlarge boot. see"15:50 2013-07-26"
2), 
sudo zypper in http://download.opensuse.org/repositories/Virtualization/openSUSE_12.3/x86_64/xen-4.3.0_07-260.4.x86_64.rpm
3), there is no xen4.3 support on 11sp2 x86_64
branch and checkout why?
https://build.opensuse.org/package/show/home:bjzhang:branches:Virtualization/xen
there is comflict between gcc43 and gcc46 for lib...
@@ -30,7 +30,7 @@
 %endif
 # EFI requires gcc46 or newer
 # its available in 12.1 or >= sles11sp2
-%if %suse_version == 1210 || %suse_version == 1110
+%if %suse_version == 1210 || %suse_version == 1120
 %define with_gcc46 1
 %else
 %define with_gcc46 0
4), if it works, discuss with Charles Arnold

15:50 2013-07-26
software skill, storage, disk, partition, lvm
i need using aother partition for boot. my choice is swap.
1, move swap
1), create swap with lvm using "yast2 disk", alloc 6G for swap at /dev/system/swap
# ll /dev/system/swap 
lrwxrwxrwx 1 root root 7 Jul 26 15:44 /dev/system/swap -> ../dm-2
2), update fstab
from
/dev/disk/by-id/ata-WDC_WD3200AAKS-75L9A0_WD-WCAV2U494851-part2    swap    swap    defaults 0 0 
to
/dev/system/swap    swap    swap    defaults 0 0 
2), how to check the swap partition?
http://h30499.www3.hp.com/t5/System-Administration/Best-command-to-display-current-swap-partition-size/td-p/4460478#.UfIpGkAW3d0

# free
             total       used       free     shared    buffers     cached
Mem:       3840324     459888    3380436          0       9836     116164
-/+ buffers/cache:     333888    3506436
Swap:      6291452          0    6291452

# cat /proc/swaps 
Filename                                Type            Size    Used    Priority
/dev/dm-2                               partition       6291452 0       -1

2, move boot
update grub, menu.lst, fstab

09:56 2013-07-29
GTD
0, 9:45-16:17 16:50-18:10

1, today
1), 10:17-16:17 rbd. see"10:27 2013-07-29".
about xen4.3 compile on sle11 sp2.
2), 16:50-17:13 grub2 howto. see"17:13 2013-07-29"
3), 10' work report. see"17:17 2013-07-29"
4), Summary: it would be great, i arrive at company at 9 o'clock.

10:27 2013-07-29
storage, ceph, rbd; virtualization, libxl, qemu
1, add http://download.opensuse.org/repositories/Base:/System/SLE_11_SP2/ for dmidecode.
in the build service dmidecode is list in this project, but in download page, it does not exist. maybe disable the publish flag?
but if i try the branched project
http://download.opensuse.org/repositories/home:/emendonca:/branches:/Base:/System/SLE_11_SP2/
when i install dmidecode, there are lots of deinstalling need to be done, including x11.
1), the dmidecode is for:
%ifarch i386 i586 i686 x86_64 ia64
# For virConnectGetSysinfo
Requires:       dmidecode
%endif
2, compile libvirt local.
implentment a empty dbus_message_set_serial function in test/virsystemdmock.c
diff --git a/tests/virsystemdmock.c b/tests/virsystemdmock.c
index 1f4413c..2e4e254 100644
--- a/tests/virsystemdmock.c
+++ b/tests/virsystemdmock.c
@@ -57,6 +57,11 @@ dbus_bool_t dbus_connection_set_watch_functions(DBusConnection
*connection ATTRI
     return 1;
 }

+void dbus_message_set_serial(DBusMessage *message ATTRIBUTE_UNUSED, int number AT
TRIBUTE_UNUSED)
+{
+    return;
+}
+
 DBusMessage *dbus_connection_send_with_reply_and_block(DBusConnection *connection
 ATTRIBUTE_UNUSED,
                                                        DBusMessage *message,
                                                        int timeout_milliseconds A
TTRIBUTE_UNUSED,

3, modify the configure
http://lists.xen.org/archives/html/xen-devel/2013-04/msg02761.html
  <devices>
    <emulator>/usr/lib/xen/bin/qemu-system-i386</emulator>
    <disk device="disk" type="network">
      <driver name='qemu'/>
      <source protocol="rbd" name="rbd:rbd/ubuntu1204.img"/>
      <target dev="hda"/>
    </disk>
    <graphics type="vnc" port="-1" autoport="yes" listen="0.0.0.0"/>
  </devices>

the final configure for libxl driver, compare with kvm in "16:07 2013-07-18"1
      <disk type='network' device='disk'>
      <driver name='qemu'/>
      <source protocol='rbd' name='rbd:rbd/test'>
      <host name='147.2.207.95' port='6789'/>
      </source>
      <target dev='hdc' bus='ide'/>
    </disk>

4, compare with kvm qemu command in "14:50 2013-07-26"1
/usr/lib/xen/bin/qemu-system-i386 -xen-domid 23 -chardev socket,id=libxl-cmd,path=/var/run/xen/qmp-libxl-23,server,nowait -mon chardev=libxl-cmd,mode=control -name bjz_04_sles11_sp2 -vnc 127.0.0.1:0,to=99 -global isa-fdc.driveA= -vga cirrus -global vga.vram_size_mb=8 -boot order=c -net none -M xenfv -m 504 -drive file=/var/lib/xen/images_2/bjz_04_sles11_sp2/disk0.raw,if=ide,index=0,media=disk,format=raw,cache=writeback -drive file=rbd:rbd/test,if=ide,index=2,media=disk,format=raw,cache=writeback

5, the difference
1), libxl need driver qemu
     <driver name='qemu'/>
2), rbd name is different
libxl
     <source protocol='rbd' name='rbd:rbd/test'>
qemu
     <source protocol='rbd' name='rbd/test'>
unless it will fail at:
libxl: error: libxl_device.c:274:libxl__device_disk_set_backend: Disk vdev=hdc failed to stat: rbd/test: No such file or directory
or 
fail at qemu run:
file=rbd/test,if=ide,index=2,media=disk,format=raw,cache=writeback
3), host name and port is not used in libxl.
     <host name='147.2.207.95' port='6789'/>
4), it might be a patch for enhance the ceph rbd support.
or i could enhance it in xl commands.

17:13 2013-07-29
software skill, bootloader, grub2; boot-repair
1, add new entry(e.g. xen) to /boot/grub2/grub.cfg and backup.
2, grubenv for default bootup.
3, install the grub:
grub2-install /dev/sda
4, notes: if using "yast2 bootloader", the grub.cfg will regenerated.
(17:21 2014-02-19)grub.cfg will be generated by grub2-mkconfg, ref: grub2-mkconfg, http://fedoraproject.org/wiki/GRUB_2"17:21 2014-02-19"end
5, (17:28 2013-07-30)
tools: boot-repair could do the similar thing automatically.
it is a ubuntu iso.
how to burn cd in linux, see"17:17 2013-07-30".
6, (13:14 2013-11-29)
if encounter the following error:
/boot/grub2' is not readable by GRUB on boot. Installation is impossible. Aborting
it is because some fs not mount, try the follows after pivot_root and chroot: ref"10:25 2013-10-11"5.
mount -t sysfs sysfs /sys
mount -t proc proc /proc
mount -t devtmpfs devtmpfs /dev
mount -t devpts devpts /dev/pts
mount -t tmpfs tmps /tmp/

17:17 2013-07-29
work report - week 30
GREEN
1, libvirt libxl console patch modify 2 round and finally got ack from upstream.
2, libvirt libxl async operation: hang in virsh save, try to find out why.
3, Virtualization Sync meeting.

09:58 2013-07-30
GTD
0, 9:40-11:10 13:02-17:28 18:52-20:35

1, today
1), 10:10-11:10 13:02-16:53 18:54-20:30 debug libxl_event_wait. see"10:04 2013-07-30"
2), 16:55-17:28 burn dvd. see"17:17 2013-07-30"
3), Summary: too long time for rest, it should be better less then 1 hour including meal.
work hours = 1.5h + 4.5h + 1.5h = 7.5h
efficiency: 7.5h / 11h = 68%. it should be more than 85%.

10:04 2013-07-30
virtualization, xen, libxl, async, try ao_how, cont2, debug save
1, when complete event(OPERATION_COMPLETE) will send?

egc_run_callbacks -> libxl__ao_complete_check_progress_reports
libxl__ao_complete -> libxl__ao_complete_check_progress_reports

domain_suspend_cb -> libxl__ao_complete

1), physmap
     physmap = ""
      1f800000 = ""
       start_addr = "f0000000"
       size = "800000"
       name = "vga.vram"
2), both pv and hvm will call: libxl__domain_suspend_device_model 
pv call it from libxl__domain_suspend_common_callback, hvm call it from libxl__xc_domain_save_done.

libxl__domain_suspend_device_model will issue the save cmd to qemu.

(1), pv: libxl__domain_suspend_common_callback -> libxl__domain_suspend_device_model 

(2), hvm: libxl__xc_domain_save_done -> libxl__domain_suspend_device_model 
set by libxl__xc_domain_save_done
(15:21 2013-08-28)
i am wrong. only hvm call libxl__domain_suspend_device_model. in pv mode, host send suspend direct to libxl__domain_pvcontrol_write(xenstore thing).
"15:21 2013-08-28"end
3), toolstack_save
by libxl_domain_suspend, set libxl__toolstack_save
by libxl_save_helper, set toolstack_save_cb 4), 
libxl__xc_domain_save 
    toolstack_save(libxl__toolstack_save) 
    dss->shs.recv_callback = libxl__srm_callout_received_save;
    dss->shs.completion_callback = libxl__xc_domain_save_done;
    run_helper

5), 
run_helper
    libxl__ev_fd_register
        helper_stdout_readable
            recv_callback

6), libxl_save_helper.c
libxl_save_msgs_helper.c
helper_stub_suspend

helper_setcallbacks_save -> helper_stub_suspend
it is valid if suspend in parent is exist. it is exists and it is libxl__domain_suspend_common_callback.

complete is called at the end of libxl_save_helper. so libxl__srm_callout_callback_complete and libxl__srm_callout_sendreply will definitly called.

7), how to complete
libxl__srm_callout_callback_complete set completed to 1.
helper_exited check the completed flags.

helper_exited -> helper_done -> completion_callback(libxl__xc_domain_save_done)

libxl_childproc_reaped -> childproc_reaped -> cb->callback()
libxl__fork_selfpipe_woken -> libxl_childproc_reaped 
                           -> reaped_callback(xl_reaped_callback)

xl_reaped_callback belong to childproc_hooks, which set by libxl_childproc_setmode in xl_ctx_alloc.

eventloop_iteration -> afterpoll_internal -> libxl__fork_selfpipe_woken 

8), i need to know who call domain_suspend_cb. after gdb debug:

save_device_model_datacopier_done -> domain_suspend_done -> domain_suspend_cb

save_device_model_datacopier_done is set by libxl__domain_save_device_model
libxl__xc_domain_save_done -> libxl__domain_save_device_model

9), i need to know who called save_device_model_datacopier_done.
datacopier_check_state ->datacopier_callback ->  save_device_model_datacopier_done

10), how the pipe wakeup?
libxl__ev_child_fork -> libxl__sigchld_installhandler: set sigchld_handler

11), need to disable dbus when compile on sle11 sp2. because the dbus is too old. missing DBUS_TYPE_UNIX_FD in dbus/dbus-protocol.h

12), compare the log: 
libxl__fork_selfpipe_woken and the 2nd libxl__ao_complete_check_progress_reports not called.

domain_suspend_cb
#0  domain_suspend_cb (egc=0x7f96603567d0, dss=0x7f96500ae7c0, rc=0) at libxl.c:754
#1  0x00007f96576f7d0a in domain_suspend_done (egc=0x7f96603567d0, dss=0x7f96500ae7c0, rc=0) at libxl_dom.c:1497
#2  0x00007f96576f79c1 in save_device_model_datacopier_done (egc=0x7f96603567d0, dc=0x7f96500ae968, onwrite=0, errnoval=<optimized out>) at libxl_dom.c:1480
#3  0x00007f9657703b8b in datacopier_callback (egc=0x7f96603567d0, dc=0x7f96500ae968, onwrite=0, errnoval=0) at libxl_aoutils.c:45
libxl__ao_complete_check_progress_reports
#0  libxl__ao_complete_check_progress_reports (egc=0x7f96603567d0, ao=0x7f9650014750) at libxl_event.c:1579
#1  0x00007f96577098bf in libxl__ao_complete (egc=0x7f96603567d0, ao=0x7f9650014750, rc=0) at libxl_event.c:1575
#2  0x00007f96576e32c3 in domain_suspend_cb (egc=0x7f96603567d0, dss=<optimized out>, rc=0) at libxl.c:756
#3  0x00007f96576f7d0a in domain_suspend_done (egc=0x7f96603567d0, dss=0x7f96500ae7c0, rc=0) at libxl_dom.c:1497
Detaching after fork from child process 5733.
libxl__fork_selfpipe_woken
#0  libxl__fork_selfpipe_woken (egc=0x7f96603567b0) at libxl_fork.c:282
#1  0x00007f9657709361 in afterpoll_internal (egc=0x7f96603567b0, poller=0x7f96676690a0, nfds=4, fds=0x7f96676725f0, now=...) at libxl_event.c:1008
#2  0x00007f9657709ed7 in eventloop_iteration (egc=0x7f96603567b0, poller=0x7f96676690a0) at libxl_event.c:1440
libxl__ao_complete_check_progress_reports
#0  libxl__ao_complete_check_progress_reports (egc=0x7f96603567b0, ao=0x7f96500c0550) at libxl_event.c:1579
#1  0x00007f96577098bf in libxl__ao_complete (egc=0x7f96603567b0, ao=0x7f96500c0550, rc=0) at libxl_event.c:1575
#2  0x00007f96576e327a in domain_destroy_cb (egc=0x7f96603567b0, dds=0x7f96500ae7c0, rc=0) at libxl.c:1271
#3  0x00007f96576e2ff4 in destr

2, why not wake up when i use the ao_how?
it seems that it hang after domain_suspend_cb. the eventloop_iteration should exit.

17:17 2013-07-30
(13:14 2014-02-20)
software skill, linux, burn cdrom, growisofs; extract audio CD; convert wav to mp3; ffmpeg
1, http://blog.csdn.net/hecssy/article/details/4037464
the equal mark is very important. if missing it will generate the file to iso image. i mean IT WILL NOT burn your original iso.

compare:
growisofs -Z /dev/dvdrw4=./boot-repair-disk-64bit.isogc
growisofs -Z /dev/dvdrw4 boot-repair-disk-64bit.isogc

1), # growisofs -Z /dev/dvdrw4=./boot-repair-disk-64bit.isogc
Executing 'builtin_dd if=./boot-repair-disk-64bit.iso of=/dev/dvdrw4 obs=32k seek=0'
/dev/dvdrw4: "Current Write Speed" is 16.4x1352KBps.gc
          0/532557824 ( 0.0%) @0x, remaining ??:?? RBU 100.0% UBU   0.0%gc
          0/532557824 ( 0.0%) @0x, remaining ??:?? RBU 100.0% UBU   0.0%gc
          0/532557824 ( 0.0%) @0x, remaining ??:?? RBU 100.0% UBU   0.0%gc
          0/532557824 ( 0.0%) @0x, remaining ??:?? RBU 100.0% UBU   0.0%gc
...
  450232320/532557824 (84.5%) @8.0x, remaining 0:15 RBU  99.9% UBU  99.7%
  487817216/532557824 (91.6%) @8.1x, remaining 0:07 RBU 100.0% UBU  99.7%
  525926400/532557824 (98.8%) @8.3x, remaining 0:01 RBU  19.8% UBU  99.7%
builtin_dd: 260048*2KB out @ average 4.3x1352KBps
/dev/dvdrw4: flushing cache
/dev/dvdrw4: closing track
/dev/dvdrw4: closing session
/dev/dvdrw4: reloading tray

2), growisofs -Z /dev/dvdrw4 boot-repair-disk-64bit.isogc
Executing 'genisoimage boot-repair-disk-64bit.iso | builtin_dd of=/dev/dvdrw4 obs=32k seek=0'gc
I: -input-charset not specified, using utf-8 (detected in locale settings)gc
1.92% done, estimate finish Tue Jul 30 17:03:17 2013gc
3.85% done, estimate finish Tue Jul 30 17:03:17 2013gc
5.76% done, estimate finish Tue Jul 30 17:03:17 2013gc
/dev/dvdrw4: "Current Write Speed" is 16.4x1352KBps.
...
96.08% done, estimate finish Tue Jul 30 17:04:57 2013
98.00% done, estimate finish Tue Jul 30 17:04:57 2013
99.92% done, estimate finish Tue Jul 30 17:04:56 2013
Total translation table size: 0
Total rockridge attributes bytes: 0
Total directory bytes: 0
Path table size(bytes): 10
Max brk space used 0
260212 extents written (508 MB)
builtin_dd: 260224*2KB out @ average 3.8x1352KBps
/dev/dvdrw4: flushing cache
/dev/dvdrw4: closing track
/dev/dvdrw4: closing session
/dev/dvdrw4: reloading tray

2, burn audio CD
http://www.linuxquestions.org/questions/slackware-14/creating-an-iso-from-an-audio-cd-with-dd-670913/
1), dd do not work
niels.horn:
    I *think* that theoretically it is impossible to copy directly from an audio CD with dd, as there are no data sectors on it. The format of an audio CD is different, like a stream without checksums etc.
2), how to query the content of audio CD:
# cdparanoia -vsQ
cdparanoia III release 10.2 (September 11, 2008)

Using cdda library version: 10.2
Using paranoia library version: 10.2
Checking /dev/cdrom for cdrom...
        Testing /dev/cdrom for SCSI/MMC interface
                SG_IO device: /dev/sr0

CDROM model sensed sensed: TSSTcorp DVD+-RW SH-216AB D300

Checking for SCSI emulation...
        Drive is ATAPI (using SG_IO host adaptor emulation)

Checking for MMC style command set...
        Drive is MMC style
        DMA scatter/gather table entries: 1
        table entry size: 524288 bytes
        maximum theoretical transfer: 222 sectors
        Setting default read size to 27 sectors (63504 bytes).

Verifying CDDA command set...
        Expected command set reads OK.

Attempting to set cdrom to full speed...
        drive returned OK.

Table of contents (audio tracks only):
track        length               begin        copy pre ch
===========================================================
  1.    19789 [04:23.64]        0 [00:00.00]    no   no  2
  2.    18896 [04:11.71]    19789 [04:23.64]    no   no  2
  3.    17411 [03:52.11]    38685 [08:35.60]    no   no  2
  4.    20249 [04:29.74]    56096 [12:27.71]    no   no  2
  5.    17553 [03:54.03]    76345 [16:57.70]    no   no  2
  6.    16320 [03:37.45]    93898 [20:51.73]    no   no  2
  7.    15102 [03:21.27]   110218 [24:29.43]    no   no  2
  8.    20205 [04:29.30]   125320 [27:50.70]    no   no  2
  9.    17728 [03:56.28]   145525 [32:20.25]    no   no  2
 10.    20695 [04:35.70]   163253 [36:16.53]    no   no  2
 11.    17211 [03:49.36]   183948 [40:52.48]    no   no  2
 12.    22861 [05:04.61]   201159 [44:42.09]    no   no  2
 13.    16397 [03:38.47]   224020 [49:46.70]    no   no  2
 14.    23091 [05:07.66]   240417 [53:25.42]    no   no  2
 15.    20019 [04:26.69]   263508 [58:33.33]    no   no  2
TOTAL  283527 [63:00.27]    (audio only)

3), extract all the cd audio to seperately wave file(output format could be selected by --output-xxx parameters)
# cdparanoia -B
cdparanoia III release 10.2 (September 11, 2008)


Ripping from sector       0 (track  1 [0:00.00])
          to sector  283526 (track 15 [4:26.68])

outputting to track01.cdda.wav

 (== PROGRESS == [                              | 019788 00 ] == :^D * ==)

...
outputting to track15.cdda.wav

 (== PROGRESS == [                              | 283526 00 ] == :^D * ==)

Done.

4), convert to mp3 file(trackxx.cdda.wav to trackxx.mp3):
bamvor@laptop-work:music> for i in `ls --color=none`; do o=`echo $i | sed s/cd
da.wav/mp3/`; lame -V 2 --id3v2-only -b 192 $i $o; done
LAME 3.99.5 64bits (http://lame.sf.net)
Using polyphase lowpass filter, transition band: 18671 Hz - 19205 Hz
Encoding track01.cdda.wav to track01.mp3
Encoding as 44.1 kHz j-stereo MPEG-1 Layer III VBR(q=2)
    Frame          |  CPU time/estim | REAL time/estim | play/CPU |    ETA
 10102/10102 (100%)|    0:18/    0:18|    0:18/    0:18|   14.523x|    0:00
192 [ 9089] %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%******************************
224 [  659] %%%%*
256 [  252] %%
320 [  102] %
-----------------------------------------------------------------------------
   kbps        LR    MS  %     long switch short %
  197.0       55.4  44.6        96.9   1.7   1.4
Writing LAME Tag...done
ReplayGain: -7.5dB
...

5), use ffmpeg convert
http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs

6), or use the rubyripper, it call cdparanoia for extract CD, call lame for convert to mp3.
> sudo zypper ar -c -f http://download.opensuse.org/repositories/home:/Lazy_Kent/openSUSE_12.3/ Lazy_Kent__openSUSE_12.3
> sudo zypper in rubyripper-gui

10:28 2013-07-31
software skill, shell, calculator, bc
> echo "scale=2; 7.5/11" | bc
.68
> bc
bc 1.06
Copyright 1991-1994, 1997, 1998, 2000 Free Software Foundation, Inc.
This is free software with ABSOLUTELY NO WARRANTY.
For details type `warranty'.
scale=2
7.5/11
.68

10:33 2013-07-31
GTD
0, 10:20-11:40 12:41-13:35 14:00-18:05

1, today
1), work status check.
2), 10:46-11:40 14:00-17:50 debug libxl_event_wait. see"10:35 2013-07-31".
3), nap 30'

10:35 2013-07-31
virtualization, xen, libxl, async, try ao_how, cont2, debug save, cont1
1, libxl__domain_suspend_common_callback is called by eventloop_iteration by libxl_event_wait
libxl__srm_callout_callback_complete is called by libvirt event handler.
2, should i use libxl_osevent_afterpoll?
3, \TODO
1), why the first time call libxl__ao_complete_check_progress_reports not report the complete. i need this.
2), try callback.

18:38 2013-7-31
how to enable xen entry in grub2
xen-devel how to install xen with my own kernel on grub2
>Thank you very for your advice! I does not find the config as you said.

That's why grub2 script cannot create the correct entry. You need to copy the .config file to /boot and rename it to config-yourKernelVersion. If there is still no grub entry to that kernel, it means your configuration of the kernel does not have "Xen supported as domain 0".

