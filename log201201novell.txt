
10:00 2012-1-17
(17:07 2012-01-20)
novell入职, 部门介绍
1, 公司情况
sle; appliance(including yast); studio; Suse labs(纯做kernel开发): kernel1, kernel2; qa 

ximian

software appliance 

l3 ptf partner temporary patch 

desktop zhengyu 
server ten members: ha storage , virtualization, openstack: iaas. Python 

ha: dlm, ocfs2
virtualization: qemu, libvirt. virt manager 
storage: ceph, lvm device mapper, flash cache 

virtualization: 杨波kvm ，刘春艳zen ，马林

reiser fs: Jeff Mahoney, Chris Mason(goto Oracle, 甲骨文)
ceph: default using btrfs 

bamvor: 关于分布式文件系统参考: 开源分布式文件系统比较
http://blog.csdn.net/langeldep/article/details/6641682

2, 资源
bugzila, build system,  mail 
innerweb.novell.com
groupwise, Novell messager, im.novell.com,  443.

build: build.suse.de, build.opensuse.org 

内部网
147.2.207.240

配置groupwise.
mail: bjzhang, 7552087620. note that there is not need to input the mail address after "@". 
(13:22 2013-01-22)
group wise, online mode: 147.2.136.11, 1680
"13:22 2013-01-22"end

3, (10:59 2012-06-12)
COBE
1), view the video, finish the quiz after video. 
https://innerweb.novell.com/resources/policy/cobe/cobe_training.html
2), follow the link in the bottom, ask three question. 
https://innerweb.novell.com/resources/policy/cobe/cobe.html

15:18 2012-1-17
envrionment, xen, getting started; suse xen source code, svn, check out; rpm install tools, zypper; info, source code, suse prove svn
1, liuchunyan
https://svn.provo.novell.com/viewsvn/xen/trunk/

svn co https://svn.provo.novell.com/svn/xen/trunk/

but svn not found. run "command-not-found svn": 
sudo zypper install subversion

2, i know zypper from liuchunyan,
it is a usefull tool for install rpm package in suse.
1), search
zypper se xen
"i" mean this package has been installed.
  | xen-doc-html               | Xen Virtualization: HTML documen-> | package   
  | xen-doc-pdf                | Xen Virtualization: PDF document-> | package   
i | xen-kmp-default            | Xen para-virtual device drivers -> | package   
2), install 
zypper in xen-doc-pdf
3), query the installed package
novell@linux:/usr/share/doc> rpm -ql xen-doc-pdf
/usr/share/doc/packages/xen/pdf
/usr/share/doc/packages/xen/pdf/interface.pdf
/usr/share/doc/packages/xen/pdf/user.pdf
/usr/share/doc/packages/xen/pdf/xenapi.pdf

16:17 2012-1-17
virtualization, xen, xen tools, read xen userguide
1, Booting Domain0
To start the xend control daemon, type
      # xend start

2, xm list
linux:/usr/share/doc # xm list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0  3764     4     r-----    684.4
sles11                                          1024     1                 0.0
sles11pv                                        1024     4               127.1
windowsxp                                       1024     2                 4.3

it looks like. there are three virtual machine running. may be it is started automatically.

17:51 2012-1-17
自己安装sles.

xend启动时读取/etc/xen/xend-config.sxp。"xm list -l"可以输出sxp格式的配置。

搞了一下午终于在已有的kernel and filesystem 基础上把虚拟机跑起来。
vncviewer: xm vncviewer domainid 
不是用单独的那个vncviewer.

似乎kernel和文件系统不太搭配，只能进入repair 状态。

9:21 2012-1-18
时间管理
0, 9:15-21:00

1, 本日
1), install sles in physical machine. done
1), install sles in virtual machine. done
2), run auto build image for virtual machine: 这个似乎不需要Chun Yan建议我用vm-install安装。
3), surf xen site done.
4), finish read xen user guide.
5), Chun Yan and Jia ju向我介绍xen基本情况。
6), Lin Ma给出转发了周五会议的电话和密码。见"16:28 2012-1-18".
7), 18:58-19:29 吃饭
8), 19:30-20:30 上网
9), xen source code README. 见"20:17 2012-1-18".

9:56 2012-1-18
suse, sles, install
1, 昨天装的系统怎么也进入不了gnome. 进入的是一个很简单的图形界面。今天重装试试。不管行不行都要继续继续试验虚拟机。
2, 今天重新装直接选择gnome启动后就正常了。比昨天装时多了显卡检测这步。
3, 安装时语言选择英文，结果没有中文输入法，难道又要重新安？等环境熟悉了，再认真从头安装一下。
4, 开始以为vim没法正常支持中文，安装了gvim。后来发现如果用mlterm(multi lingual terminal)下就可以很好支持中文。

10:20 2012-1-18
xen, read books
1, what is xen
xen资料中经常提到的PV, HVM含义如下：
These guests are either run with a special modified operating system referred to as paravirtualizion or un-modified operating systems leveraging special virtualization hardware (Intel VT and AMD-V) referred to as hardware virtual machine (HVM).
2, xen入门文档
http://wiki.xen.org/wiki/Xen_Beginners_Guide
文中提到用xen-tools打包生成pv images

13:54 2012-1-18
suse, novell, software, virtualization environment
1, register: bugzilla
bjzhang
9271I75

tag user as novell employor. 

2, join xen devel maillist
http://lists.xen.org/
http://lists.xen.org/mailman/listinfo/xen-devel

3, install virtual machine via vm-install

14:37 2012-1-18
software, suse, tools, quilt: merge and patch
1, install quilt
zypper se quilt. not found in current repo. so add repo: 

2, run yast add software respositories
1), run yast2 as root. 
2), YaST Control Center -> Software Repositories
3), add repo in "http://147.2.207.240/repo/"
http://147.2.207.240/repo/sle-11-sp1-sdk-x86_64-dvd1/

3, 
fail because of sles11 %xxx not defined. 

14:59 2012-1-18
virtualization, suse, xen, source code exploring; by ChunYan LIU
1. tools:
python, hotplug, firmware(for HVM, provide bios virtualization(mainboard bios, ethernet and vga firmware), qemu-xen, xenstore, libxc. 
note: py-grub is a virtual grub for PV. it is implement by libxc(?).
2, xen/driver
3, deamon process for xen:
xend, xenstored, xensonsoled
4, (14:28 2012-01-19)
1), blktap
The blktap (block tap) userspace toolkit provides a user-level disk I/O interface. 
The key benefit of blktap is that it makes it easy and fast to write arbitrary block backends, and that these user-level backends actually perform very well.
2), xen wiki
http://wiki.xen.org/wiki/Main_Page
(1), books: http://wiki.xen.org/wiki/Books
(2), The book of xen: 
http://wiki.prgmr.com/mediawiki/index.php/Chapter_1:_Xen:_A_High-Level_Overview
3), qemu
(1), for PV: only display need qemu.
(2), for HVM: qemu need virtualize all the device for the guest. 除非也采用前后端的方式做加速。
4), PCI passthrough
PCI passthrough can make domU access the device directly. It will significantly improve the domU performance. Also, you can make domU a driver domain by passing through some device to that domain.

15:39 2012-1-18
virtualization, xen, mail list, xen devel; xen maillist archives
from: http://lists.xen.org/archives/html/xen-devel/
1, [Xen-devel] Questions about attacks on Xen
http://lists.xen.org/archives/html/xen-devel/2012-01/msg00891.html
Among the things I have read include "Xen and the Art of Virtualization" and the XOAR paper.
bamvor: search and find the doc.
1), Xen and the art of virtualization
http://www.cl.cam.ac.uk/research/srg/netos/papers/2003-xensosp.pdf
看起来不错，认真读一读(/home/novell/sda3/home/novell/work/documents/Xen_and_the_art_of_virtualization__2003-xensosp.pdf).

16:28 2012-1-18
company, virtualization, suse, xen, regular meeting: US / China Virtualization Sync
1, 2012-1-20 9:00 - 9:30 virtualization regular meeting
2, Lin Ma forward to me. 
Thursday - January 5, 2012 8:36 AM
From: 	Jason Douglas
To: 	Bo Yang; Chun Yan Liu; Lin Ma; Bruce Rogers; Jim Fehlig; Jason Douglas
CC: 	Jia Ju Zhang; Ihno Krumreich; Xen Team - All
Date: 	Friday - January 20, 2012
Time: 	9:00 AM - 9:30 AM
Location: 	Conferece Call
Subject:	US / China Virtualization Sync

Below is the dial-in information for the semi-monthly conference call with our teammates in China.

Anyone who wishes to attend is welcome to dial in.  Please feel to invite any others that I might have missed.  Thanks.

Jason

CHINA: 86-400-810-4782 or 10800-712-1665
GERMANY: 49-69-2222-4872 or 0800-664-4253
USA: 1-517-466-2153 or 866-692-4541
Passcode: 4899663

2, members
Bo Yang; Chun Yan Liu; Lin Ma; Bruce Rogers; Jim Fehlig; Jason Douglas
1), Jason Douglas 
virtualization team leader. 
2), xen: Jim Fehlig, Chun Yan Liu.
3), kvm: Bruce Rogers, Bo Yang.

3, Jia Ju Zhang
已经给Jason发了邮件，告诉他我已经入职，之前做过arm开发，对于虚拟化没什么经验。

16:55 2012-1-18
suse, virtualization, xen, xen domainU install; xen tools; xen commands
1, vm-install
1), 直接输入vm-install是通过交互方式建立虚拟机.
disk source: file:/var/lib/xen/images/sles11-1/disk0.raw
Operation System Installaiton: http://147.2.207.240/repo/sles-11-sp1-x86_64
configuration file: /etc/xen/vm/sles11, sles11.xml
2), cat /etc/xen/vm/sles11
bjz-dev:/etc/xen/vm # cat sles11
name="sles11"
description="None"
uuid="b024e65b-d9d0-44c5-42a3-749d3dd1940d"
memory=512
maxmem=512
vcpus=4
on_poweroff="destroy"
on_reboot="restart"
on_crash="destroy"
localtime=0
keymap="en-us"
builder="linux"
bootloader="/usr/bin/pygrub"
bootargs=""
extra=" "
disk=[ 'file:/var/lib/xen/images/sles11/disk0.raw,xvda,w', ]
vif=[ 'mac=00:16:3e:4a:f5:76,bridge=br0', ]
vfb=['type=vnc,vncunused=1']

从配置文件可以看到, 这里使用了python grub. 后面用xm启动虚拟机时, 如果-c, 也能看到类似grub的界面.

2, xm
昨天看的xm文档, 今天可以在已有的虚拟机上实验了.
1), xm create sles11 -c
using /etc/xen/vm/sles11 as configuration file.
"-c" means "attach console the domain as soon as it has started.
2), xm vncviewer domain_id
domain_id can get from "xm list":
bjz-dev:/etc/xen/vm # xm list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0  3393     4     r-----   2575.8
sles11                                       7   512     4     -b----     16.4

so, "xm vncviewer 7" can attach to the sles11 screen. 为了简单写一个命令根据配置文件和xm list结果得到domain id, 并打开vncviewer:
CONF=sles11; xm list | grep `cat $CONF | grep ^name | cut -d \= -f 2 | sed s/\"//gi` | sed s/\ \ */\ /gi | cut -d \  -f 2 | xargs xm vncviewer

如果在屏幕有显示之前执行了"xm vncviewer domain_id", vncviewer会block, 直到系统启动到屏幕可用.

3), suspend/resume, save/restore
二者的区别是后者会指定保存和恢复的文件.
bjz-dev:/etc/xen/vm # xm save 8 /home/novell/1842
bjz-dev:/etc/xen/vm # xm restore /home/novell/1842
#after restore command execute, run "xm vncviewer" and "xm console" in order to open framebuffer and console for this virtual machine.
bjz-dev:/etc/xen/vm # CONF=sles11; xm list | grep `cat $CONF | grep ^name | cut -d \= -f 2 | sed s/\"//gi` | sed s/\ \ */\ /gi | cut -d \  -f 2 | xargs xm vncviewer

bjz-dev:/etc/xen/vm # xm console 8
Error: Domain '8' does not exist.
bjz-dev:/etc/xen/vm # CONF=sles11; xm list | grep `cat $CONF | grep ^name | cut -d \= -f 2 | sed s/\"//gi` | sed s/\ \ */\ /gi | cut -d \  -f 2
9
bjz-dev:/etc/xen/vm # xm console 9


Welcome to SUSE Linux Enterprise Server 11 SP1  (x86_64) - Kernel 2.6.32.12-0.7-xen (xvc0).


bjz-sles11-pv-0 login

4, xenstore
今天Chun Yan向我介绍了这个工具, 我只记住了xenstore-ls可以列出所有domain的详细存储情况. 

17:11 2012-1-18
company, self-introduction
1, Chun Yan给我发的参考邮件
Jason asked me to send this email to everyone. My name is Jeff I am the new intern on the virtualization team. I just started here and am looking forward to working with everyone and getting to know you. My email is jallan@suse.com. 

2, Subject: New in virtualization team
hi, all

My name is Bamvor Jian ZHANG. I'm new. 
I have developpd arm/linux in the recently 4 years, including arm processor verification, Linux power management, kernel porting. 
I am a freshman in virtualization area and looking forward to learn from you.
My email is bjzhang@novell.com

Bamvor

20:17 2012-1-18
virtualization, suse, xen, source code, reading
1, 先看看README.SuSE
https://svn.provo.novell.com/viewsvn/xen/branches/SLE11-SP1-Branch/xen/README.SuSE?view=markup
1), 里面提到用domUIloader作为起点。\todo 稍后实验。
Before a new VM is started, this loader automatically copies the kernel and ramdisk into the VM server's filesystem, so that it can be used to bootstrap the new VM. See /etc/xen/examples/xmexample.domUloader for an example.
2), 使用summa代替虚拟机默认的PS/2鼠标。

9:31 2012-1-19
时间管理
0, 9:12

1, 本日
1), 9:12-9:30 news
2), 9:32-10:52 set vim environment. see"16:21 2009-1-21"5, add current time in vim, see "16:21 2009-1-21"-4-3).
3), 10:55-11:39 check the mail. reply. see"10:57 2012-01-19". 
4), 11:44-11:55 try quilt. see"11:44 2012-01-19".
5), 11:55-14:00 午饭
6), xen study. see"14:59 2012-1-18"4. 
7), 14:20－15:05 午休
8), 15:05-18:22 xen code, 不过不得要领。see"11:44 2012-01-19"2.
9), 18:25-18:46 xen doc: interface, xenapi. see"18:21 2012-01-19", "18:42 2012-01-19"
10), 10' check mail and xen digest. 
11), 18:56-19:54 晚饭.
12), 总结；没有邮件客户端还不太习惯，要养成定期check mail的习惯。

10:19 2012-1-19
软件技巧, logAssistant, perl, vim
1, 原来发现的Linux下脚本运行时结果位置问题，其实是由于"^M"影响造成的。输出时使用less过滤一下，"^M"就不会起作用了。
例如
perl logAssistant/perl/find_keyword.pl -f "log*.txt" -k " 软件 logAssistant"
的部分结果
): 软件技巧, vim, logAssistant06 2011-12-2
): 软件技巧, vim, 强制以某种编码方式打开文件; logAssistant
"log201101vimicro.txt"(247,1,10:29 2011-1-10): 软件技巧, 正则表达式, perl, logAssistant, android, sl4a

加less后
perl logAssistant/perl/find_keyword.pl -f "log*.txt" -k " 软件 logAssistant" | less
的部分结果
"log201112vimicro.txt"(9,1,10:06 2011-12-2^M): 软件技巧, vim, logAssistant
"log201111vimicro.txt"(302,1,16:32 2011-11-10^M): 软件技巧, vim, 强制以某种编码
方式打开文件; logAssistant
"log201101vimicro.txt"(247,1,10:29 2011-1-10): 软件技巧, 正则表达式, perl, logAs
sistant, android, sl4a

10:57 2012-01-19
company, virtualization, suse, check reply of my self-introduction mail; server team colleague, 同事信息; 入职
1, Andreas Färber<afaerber@suse.de>
Sounds interesting. You may want to subscribe to our opensuse-arm
mailing list: http://lists.opensuse.org/opensuse-arm/
I assume you actually work for SUSE, too - in the
Innerweb eGuide you can edit your info to switch the email domain to
suse.com.
(14:08 2012-06-14)
Andreas work on qemu and opensuse-arm. according to his work report week 23. 
"14:08 2012-06-14"
2, Bruce Rogers
I work on kvm virtualization where there is an endless supply of
things to learn and do!
I look forward to getting to know you as we rub shoulders in the future.
3, Kirk Allan
It's great to have you on the team.  Welcome aboard.
4, Jim Fehlig <jfehlig@suse.com>
I'm Jim and work primarily on tools - libvirt, libvirt-cim,
vhostmd, xen tools, etc.
Ah, nice.  FYI there is a lot of arm work being done in both upstream
xen and qemu/kvm.
For starters, you should subscribe to the following mailing lists

virtualization-dev@lists.novell.com
virtualization-xen@lists.novell.com
devel-server@suse.de
opensuse-virtual@opensuse.org

And consider these lists as well, depending on your area of focus

devel@suse.de
research@suse.de
kernel@suse.de
kvm@suse.de
opensuse-factory@opensuse.org
xen-devel@lists.xensource.com
qemu-devel@nongnu.org
libvir-list@redhat.com

Probably others that I'm forgetting...

5, reply
thanks all of you. 
I work for SUSE. And I would like to work on xen or management tools.

PS: I have already subscribe some maillist and switch my email domain to suse.com.

6, (18:47 2012-01-19)
Ihno Krumreich <ihno@suse.de>
I am the project manager for virtualisation.
(XEN, KVM, z/VM) and for SLES on Mainframe

leader: Thorsten Kukuk(PrjMgr/Release Manager) 和Jia JU Zhang共同report to Olaf Kirch.

7, (11:19 2012-01-20)
Jason Douglas
Welcome to SUSE and to the team! I apologize for the delayed response.  I have been on vacation until yesterday.

Allow me to introduce myself.  My name is Jason Douglas and I am the engineering manager for the virtualization team, based in Provo Utah.  I joined Novell/SUSE in 2000, and have enjoyed my time here.  I hope you find working for SUSE as enjoyable as I have.

We have a semi-monthly phone call to discuss virtualization issues between the China and US members of my team, and I have delegated those appointments to you.  I look forward to talking with you by phone Friday morning.

I understand that you'll be working with ChunYan to transition some of her work in preparation for her maternity leave.  Please let me know if there is anything you have questions on.  Thanks.

8, (11:28 2012-01-30)
Jan Beulich(software engineer senior, report to Jason Douglas): 今天看xen maillist, 发现这个人也是server team. 但上次sync up邮件里面没有他. 
详见"11:18 2012-01-30"1-2).

11:44 2012-01-19
virtualization, suse, xen, source code, reading, cont; try quilt
1, try quilt
quilt is a patch and diff tools i guess. 
novell@bjz-dev:/usr> rpm -ql quilt | grep doc
/usr/share/doc/packages/quilt
/usr/share/doc/packages/quilt/README
/usr/share/doc/packages/quilt/README.MAIL
/usr/share/doc/packages/quilt/quilt.pdf
query the "quilt" package by "rpm -ql" and search where is the document.

novell@bjz-dev:~/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen> quilt setup xen.spec
### md5sum: .................................................................................................................................................................b.......................................b...................b............................
### rpmbuild:
The %prep section of xen.spec failed; results may be incomplete
The -v option will show rpm's output

novell@bjz-dev:~/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen> quilt setup xen.spec  -v
详细错误如下：
md5sum < /home/novell/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen//xmexample.domUloader

error: line 341: Unknown tag: %suse_kernel_module_package -n xen um xen -f kmp_filelist
The %prep section of xen.spec failed; results may be incomplete

这个错误和Chun Yan昨天遇到的错误一样。

2,(14:04 2012-01-19)
时间不够，先看看代码。

Debugging Xen
http://wiki.xen.org/wiki/XenDebugging

3, 从xm create开始看。 
/home/novell/sda3/home/novell/work/source/xen
1), xen-4.1.2/tools/python/xen/xm/create.py
昨天Chunyan提到: python写的这些脚本好像要用libxc还是libvirt代替？
make_domain:
	dominfo = server.xend.domain.create(config)
似乎会调用到
xen-4.1.2/tools/python/xen/xend/XendDomainInfo.py:
	def create(config)

xen-4.1.2/tools/python/xen/xend/XendDomainInfo.py:
	def start
		xendomains = XendDomain.instance()
def _init_domains(self):

4, 突然觉得我自己找的xen代码和我机器实际使用的xen代码不一样。下载sles11-sp1 xen-src看看。 
zypper si xen
缺少repo，上网找到这个，用Yast加入试试。
http://demeter.uni-regensburg.de/SLES11SP1-x64/DVD2/

5, 下载的同时看看用python跟踪执行过程
http://docs.python.org/library/pdb.html
命令：
python -m pdb myscript.py

http://docs.python.org/library/pdb.html

简单跟踪了"xm list"，看起来没问题。 
s for setp
r for function return. 类似gdb里面的finish

6, 跟踪"xm create -c sles11": 
"python -m pdb /usr/sbin/xm create -c sles11"
1), 确实进入了xen/xm/create.py
跟了半天发现跟的有问题。似乎make_domain里面有些玄机:
1), make_domain会建立sles11的domain
Started domain sles11 (id=13)
此时，通过"xm list"已经可以看到sles11的domain id是13了:
# xm list
Name                                        ID   Mem VCPUs      State   Time(s)
Domain-0                                     0  3393     4     r-----  10532.0
sles11                                      13   512     4                13.6
2), 这是用"xm vncviewer 13"发现早已经进入sels11界面了。
3), 重新跟踪make_domain.
(1), 执行"dominfo = server.xend.domain.create(config)"之后，可以看到domain id.但是console and vfb还没有显示。
(2), 执行"server.xend.domain.unpause(dom)"之后，虚拟机就可以正常运行了。
4), 好像是
/usr/lib64/python2.6/site-packages/xen/util/xmlrpcclient.py(56)make_connection
里面"/usr/lib64/python2.6/httplib.py send()"发送信号后，虚拟机就启动了。
感觉是信号发给了xend。xend启动了虚拟机。
5), xend启动了:
start_xenstored()
start_consoled()
start_xenbackendd() //只有NetBSD才会启动。
start_blktapctrl()

7, 看代码完全没有头绪阿。郁闷。
先看看interface and api文档。

14:16 2012-01-19
company, colleague, 同事信息
王欣: 财务。
刘佳: 前台。
陈日丽: QA. 
刘峰: L3.
高岩: HA, 上次面试我的哥们.
(15:46 2012-01-20)
林培峰: PFLin@novell.com, report to Rock Li.
貌似北京有个哥们也叫zhangjian.

18:21 2012-01-19
virtualization, suse, xen, read document, interface
1, Virtual Architecture
1), CPU state
Guest OSes use hypercalls to invoke operations in Xen; these are analogous to system calls but occur from ring 1 to ring 0.
2), exception, interrupt and events.
3), time: Cycle Counter time; System time; Wall clock time; Domain virtual time.
Xen exports timestamps for system time and wall-clock time to guest operating
systems through a shared page of memory. 
2, Memory
we make a distinction between machine memory and pseudo-physical memory.
Machine frame numbers mean the same within Xen or any domain.
Pseudo-physical memory, on the other hand, is a per-domain abstraction.
In general, only certain specialized parts of the operating system (such as page table management) needs to understand the difference between machine and pseudo-physical addresses.
\todo page tables. 没看懂。
3, Xen Info Pages

18:42 2012-01-19
virtualization, suse, xen, read doc, xenapi
1, writor and contributor
XenSource: 7
IBM: 4
RedHat: 2
FUJITSU: 2
Novell: 1(Jim Fehlig)
Cambridge: 1
NEC: 1

08:50 2012-01-20
时间管理
0, 8:45

1, today
1), 40' join the virtualization regular meeting. see"08:52 2012-01-20"
2), 10' Lin ma: work report. see"10:19 2012-01-20"
3), 10' 总结公司日常注意事项。see"10:26 2012-01-20".
4), 11:04-11:20 看xen邮件。see"11:04 2012-01-20".
5), 11:25-11:55 14:40-15:40 xen code reading. 向Chun Yan请教。see"11:40 2012-01-20".
6), 11:55-14:38 午饭，微博，鲜果新闻。
7), 15:40-15:56 vi搜索yank的内容。see"15:41 2012-01-20".
8), 整理1/17入职那天jiaju对公司的介绍。
9), 17:25-18:28 read ChunYan's doc and read xen's code. "11:40 2012-01-20"5
10), 总结：今天例会没怎么听懂，最近多看看资料；跟代码终于进入了c语言(libxc), 多谢ChunYan的文档。

08:52 2012-01-20
company, virtualization, suse, xen, regular meeting: US / China Virtualization Sync, meeting
0, self-introduction感觉说的不清楚，声音太小了？
大家说的东西基本不懂。

1, preparing
this is my first time join in this meeting. nice to meet you.

CHINA: 86-400-810-4782 or 10800-712-1665
Passcode: 4899663

2, ChunYan
1), 
(1), libvirt. migration. 接口没有实现完成。如果没有做完，需要bamvor继续做。
code almost complete.
(2), help bamvor.
2), 
libvirt和xen upstream代码(unstable)一起编译有问题。

chunyan: two month后休假。

3, Lin Ma
vmdp(Virtual Machine Driver Pack) for windows auto test. using bat file.

4, jim?
bamvor libvirt, xend driver.
function table.

5, next meeting: 3rd, Jan.

10:19 2012-01-20
company, suse, weely report, work report, format
1, Lin Ma send to me
周报发送到"devel-server@suse.de", 发送后，会有管理员把我的帐户加入，这样我就能看到别人的周报了。一般周末发报告。也有人下周一发。
report分为三类
RED, AMBER, GREEN. 正常写在GREEN里面，需要人帮忙的写在AMBER和RED里面。
AMBER: 琥珀, 黄灯.

2, sample
From: 	Peter Varkoly <varkoly@suse.com> 	Monday - January 16, 2012 10:32 PM
To: 	devel-server@suse.de
Subject: 	[devel-server] Work report - week 02
[AMBER]
733744 - dhcpd general protection errors during I/O- and LAN-stresstest
        It is not simple to reproduce the bug. I only can analyze
        the customer's results.

[GREEN]
738900 - cyrus-imapd not receiving mail from postfix
739673 - Problems starting/stopping amavisd-new using systemd
732859 - After updating to openSUSE 12.1, Postfix stopped working
733626 - NTP service starts, but leaves the clock one hour in the future
733080 - dhcpcd does not default gateway
737260 - Change in default Postfix config, alias_maps is empty
740983 - upgrading postfix fails
728308 - warning output after update the postfix package.

-- 
- - -
SUSE LINUX Products GmbH, GF: Jeff Hawn, Jennifer Guild, Felix
Imendörffer, HRB 16746 (AG Nürnberg)
Maxfeldstraße 5                         
90409 Nürnberg
Germany

10:26 2012-01-20
company, regular, 总结公司日常注意事项
1, 来公司后行政
1), 前台帮我半了门卡.
2), HR流程（HR出差了，待补充）
2, Mail: JiaJu ZHANG(my report team leader) forward the mailbox address and initial passwd.
3, Register bugzilla and flag as Novell employee. Chun Yan Liu指导。
4, weekly work report. see"10:19 2012-01-20".
5, virtualization regulator meeting. two weeks friday. see"16:28 2012-1-18".

11:05 2012-01-20
virtualization, suse, xen, maillist; xen-devel maillist archives
from: http://lists.xen.org/archives/html/xen-devel/
1, vpmu:
Dietmar Hahn <dietmar.hahn@ts.fujitsu.com>
Thursday - January 19, 2012 9:54 PM
[Xen-devel] [PATCH 1 of 2] vpmu: separate architecture specific PMU initialisation
This patch moves the architecture specific initialisation of the PMU into
the archicture specific directory. Further the boot variable opt_vpmu_enabled
gets global accessible for using in other files. 

11:40 2012-01-20
virtualization, suse, xen, source code, reading, cont1; sles xen svn repo展开为实际代码; quilt user guide; 代码管理工具, 批量patch diff工具: quilt使用文档, 总结
1, 向ChunYan请教。昨天看xm/create.py跟丢了。 
1), 昨天苦绕的create在什么地方定义，
run()(server/XMLRPCServer.py): 
self.server.register_function(domain_create, 'xend.domain.create')
说明昨天看到的"server.xend.domain.create"实际调用的是domain_create. 
这样就解决了昨天看到的
/usr/lib64/python2.6/site-packages/xen/util/xmlrpcclient.py(56)make_connection
后面调用的应该就是domain_create. \todo 确认。
2), 但是今天ChunYan说的start这里，我昨天直接看代码时也看到了。ChunYan说是会调用libxl(?)
xen-4.1.2/tools/python/xen/xend/XendDomainInfo.py:
	def start
start这部分昨天也看到了，但是里面没看懂。
\todo vim如何搜索已经选中的区域？

2, quilt问题
1), ChunYan建议我更新sles11:
YaST里面加入"Update:"这个repo。
http://dist.suse.de/ibs/SUSE:/SLE-11-SP1:/Update:/Test/standard/
(from http://dist.suse.de/)
其中"Update:"是最新的，"Update"是定期更新的。
然后更新xen和libvirt相关的包。重启，看看行不行。
software manager. view里面选择刚才选择的standard. 
(16:44 2012-02-29)
dist.suse.de is not available, using download.suse.de instead: 
http://download.suse.de/ibs/SUSE:/SLE-11-SP1:/Update:/Test/standard/
http://download.suse.de/ibs/SUSE:/SLE-11-SP2:/Update:/Test/standard/
"16:44 2012-02-29"
2), 重启后，
0), 
注：之前为了和sles11_sp1对应，下载了对应的xen branch.
https://svn.provo.novell.com/viewsvn/xen/branches/SLE11-SP1-Branch/
svn co https://svn.provo.novell.com/svn/xen/branches/SLE11-SP1-Branch/

1), quilt setup xen.spec成功
novell@bjz-dev:~/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen> quilt setup xen.spec
### md5sum: .................................................................................................................................................................b.......................................b...................b............................
### rpmbuild: tttppp
pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp
Unpacking archive xen-4.0.3-testing-src.tar.bz2
Unpacking archive xen-utils-0.1.tar.bz2
Unpacking archive ipxe-git-v1.0.0.tar.gz.bz2
2), 打pach: quilt push有问题
(1), novell@bjz-dev:~/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen> quilt push -a No patches in series
上网查文档。
http://blog.linux.org.tw/~jserv/archives/001841.html
http://blog.linux.org.tw/~jserv/archives/001838.html
How To Survive With Many Patches or Introduction to Quilt, http://www.suse.de/~agruen/quilt.pdf, 这就是我之前看的那篇。

(2), 看着看着，文档里面提到"series"文件。但是在xen目录下没有。后来看到xen-4.0.3-testing里面是有的。于是
novell@bjz-dev:~/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen/xen-4.0.3-testing> quilt push -a 2>&1 | tee quilt_push_log
quilt push log如下（描述了patch文件和修改的source code文件）: 
Applying patch patches/21089-x86-startup-irq-from-setup-gsi.patch
patching file xen/arch/x86/io_apic.c
patching file xen/arch/x86/mpparse.c

Applying patch patches/21235-crashkernel-advanced.patch
patching file xen/arch/x86/setup.c
patching file xen/common/kexec.c
patching file xen/include/xen/kexec.h
...
Applying patch patches/tmp_build.patch
patching file tools/xenstore/Makefile

Now at patch patches/tmp_build.patch

(3), 保存log是想验证一下是否是按照series的顺序打的patch。
novell@bjz-dev:~/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen/xen-4.0.3-testing> cat quilt_push_log | grep Applying\ patch | sed "s/Applying\ patch patches\///i" > series.log
novell@bjz-dev:~/sda3/home/novell/xen/trunk/SLE11-SP1-Branch/xen/xen-4.0.3-testing> diff series series.log
1,5d0
< # Patch series file for quilt, created by quilt setup
< # Sourcedir: xen-4.0.3-testing/tools/firmware/etherboot
< # Source: ipxe-git-v1.0.0.tar.gz.bz2
< # Patchdir: xen-4.0.3-testing
< #
可以看到除了前面的注释不一样，打patch的顺序完全一样。

3, 重新用ctags和cscope做索引。
为了避免受到patch文件影响，只作tools, xen两个目录。
novell@bjz-dev:~/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing> ctags -R -f tags.tools tools
novell@bjz-dev:~/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing> ctags -R -f tags.xen xen
novell@bjz-dev:~/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing/xen> cscope -bR -f cscope.out
novell@bjz-dev:~/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing/tools> cscope -bR -f cscope.out

~/.vimrc修改如下: 
set tags+=/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing/tags.xen
set tags+=/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing/tags.tools
cscope add /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing/xen/cscope.out xen
cscope add /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing/tools/cscope.out tools

4, (16:30 2012-01-20)
继续看代码。今天一定要跟踪到libxc?

5, (17:30 2012-01-20)
1), 接着看前面提到的start
XendTask.log_progress(0, 30, self._constructDomain): 从文档看是执行"self._constructDomain"，并记录log。具体代码没看懂。\todo: 但是这个progress_min, max干啥用的呢？
所以
xendtask.log_progress(0, 30, self._constructdomain)
xendtask.log_progress(31, 60, self._initdomain)
xendtask.log_progress(61, 70, self._storevmdetails)
xendtask.log_progress(71, 80, self._storedomdetails)
xendtask.log_progress(81, 90, self._registerwatches)
xendtask.log_progress(91, 100, self.refreshshutdown)
就是依次执行了XendDomainInfo: _constructdomain, _initdomain, _storevmdetails, _storedomdetails, _registerwatches, refreshshutdown.

(1), _constructDomain
self.domid = xc.domain_create(
                domid = 0,
                ssidref = ssidref,
                handle = uuid.fromString(self.info['uuid']),
                flags = flags,
                target = self.info.target())
我开始直接用ctags跟到了libxc里面的代码。
但是ChunYan的文档写的是调用pyxc_domain_create()
联想到文件前面写着"import xen.lowlevel.xc", 所以应该到这个文件看看。
据ChunYan文档，xc.domain_create调用了pyxc_domain_create()。不太明白为什么。see"14:43 2012-01-29"1-1).
ret = xc_domain_create(self->xc_handle, ssidref, handle, flags, &dom)
ret = xc_domain_set_target(self->xc_handle, dom, target)

(2), 从xc_domain_create开始，就调入libxc了。

15:41 2012-01-20
软件技巧, logAsssistant, vim, paste, 命令中使用剪贴板(register); 跳转快捷键
1, 搜索指定关键字。
我的日志中习惯把同类的日志用相同的关键字开头。
例如"virtualization, suse, xen, source code", 原来想搜索时需要现用鼠标选择，然后贴到命令行里面。
今天发现了快捷键。
http://vim.1045645.n5.nabble.com/Search-a-pattern-contained-in-a-register-td1185695.html
/<C-r>"
就是<C-r>+"是粘贴默认register，就是yank的那个。
按<C-r>时会显示一个", 这时在输入", 就是显示粘贴的内容。
第一次搜索后，用n, N分别表示向后，向前继续搜索。

2, vim快捷键
Ctrl+o, Ctrl+i分别是跳转到old和new位置。

09:45 2012-01-29
时间管理
0, 9:38

1, today
1), 10:07-11:53 check mail. read xen-devel maillist. see"10:07 2012-01-29". 
2), 11:55-11:57 14:19-14:36 Jiaju: subscribe libbvirt maillist. see"11:55 2012-01-29". 
3), 12:30-13:40 饿了, 吃饭. 
4), 30' vim中搜索上一个下一个条目。see"16:21 2009-1-21"6.
5), 10' 修改sles bash下提示符(PS1), see"15:55 2010-8-19"2.
6), read xen source code. see"14:43 2012-01-29".
7), python c语言调用方法。see"16:03 2012-01-29".
8), 总结: 入职以来都是下午效率低. 最近要注意休息, 总是这样不行. 明天继续跟xen代码. 先把create一个分支跟明白. 必要时单步调试看看效果. 

10:07 2012-01-29
virtualization, suse, xen, maillist, xen-devel
1, xen上kernel版本说明
网上有个人根据http://wiki.xen.org/wiki/Compiling_Kernel_2.6.32
文档编译Linux 2.6.32 kernel遇到问题.
Ian Campbell建议使用xen/next-xxx kernel, 因为这个版本的kernel是pre-testing版本, 如果测试通过就会放到xen/stable-xxx. 或者直接使用git://xenbits.xen.org/linux-pvops.git获得xen/stable-xxx版本. 

详细如下:
from: http://lists.xen.org/archives/html/xen-devel/2012-01/msg02507.html
If you really think you need 2.6.32.x then you can either:

Use the xen/next-2.6.32 branch of that tree instead. This is the
pre-testing branch which would become xen/stable-2.6.32.x after
automated testing. There is no development on 2.6.32 any more -- only
merges of upstream longterm 2.6.32.y -- so I think that would be
reasonably safe.

-or-

Use git://xenbits.xen.org/linux-pvops.git branch master which is what
would normally be at xen.git xen/stable-2.6.32.x i.e. it's is the tested
branch. This is actually where the tester pushes to, the kernel.org tree
used to be automatically mirrored but that stopped working after the
kernel.org compromise.

2, 关注oprofile
http://lists.xen.org/archives/html/xen-devel/2012-01/msg02510.html

3, 测试Xen 4.1.3-rc1遇到spinlock请求了两次
from: http://lists.xen.org/archives/html/xen-devel/2012-01/msg02495.html
文中提到可以打出不同cpu上的Xen call trace. 
(12:36 2012-02-02)
这里又有一个spinlock问题, 留存: 
x86: xen: size struct xen_spinlock to always fit in arch_spinlock_t
If NR_CPUS < 256 then arch_spinlock_t is only 16 bits wide but struct
xen_spinlock is 32 bits.  When a spin lock is contended and
xl->spinners is modified the two bytes immediately after the spin lock
would be corrupted.
This is a regression caused by 84eb950db13ca40a0572ce9957e14723500943d6
(x86, ticketlock: Clean up types and accessors) which reduced the size
of arch_spinlock_t.
"12:36 2012-02-02"end.
4, Xen 3.4.4 Update Release
http://blog.xen.org/index.php/2012/01/27/xen-3-4-4-update-release/

5, xenalyze是分析xentrace结果的工具. 
http://lists.xen.org/archives/html/xen-devel/2012-01/msg02322.html
1), 下面的mail里面有个简单的用法
-bash-3.2$ ls -la trace.raw
-rw-r--r-- 1 root root 13238044416 Jul  7 23:02 trace.raw
-bash-3.2$ xenalyze/xenalyze --cpu-hz=2.43G --summary  trace.raw > out
http://lists.xen.org/archives/html/xen-devel/2010-07/msg00376.html
2), xenalyze slide
http://www.slideshare.net/xen_com_mgr/xenalyze
3), 两篇文章都提到在如下地址下载, 但是找不到. 
http://xenbits.xensource.com/ext/xenalyze.hg
浏览整个repo, xenalze在http://xenbits.xensource.com/ext/xenalyze/

6, 关注x86 vMCE
x86's vMCE implementation lets a guest know of as many MCE reporting banks as there are in the host.
http://lists.xen.org/archives/html/xen-devel/2012-01/msg02293.html

7, Xen的工作流程
http://www.xen.org/projects/governance.html
Project Idea -> Formation -> Incubation -> Maturity -> Archived

8, Different network traffic measures (dom0 vs. domU)
dom0和domU网络收发数据不对等，根据xen的文档dom0, domU的网线相当于是交叉线:
"Think of them (vif<id#>.0 @dom0 and eth0 @domU) as two ethernet interfaces connected by an internal crossover ethernet cable."
也就是说dom0 rx and domU tx, dom0 tx and dom0 rx应该一样. 但是作者测试结果却不同.
from: http://lists.xen.org/archives/html/xen-devel/2012-01/msg02061.html

10:53 2012-01-29
软件技巧, sles, software, skill, shortcut; gnome configuration tool: gconf-editor
1, 显示桌面: Ctrl+Alt+d
2, 新建mlterm: Ctrl+Alt+n
1), gconf-editor
2), look up /apps/metacity/keybinding_commands. Set "command_1" to "mlterm".
3), then go to /apps/metacity/global_keybindings, and set "run_command_1" to "<Control><Alt>n".
参考: http://www.linuxforums.org/forum/desktop-x-windows/5688-keyboard-shortcut-open-terminal-window.html
3, (14:13 2012-01-30)
screen lock: "gnome-screensaver-command -l", shortcut: "Ctrl+Alt+l".


11:05 2012-01-29
virtualization, suse, xen, 资料
1, 每天要看xen的两个资料
1), maillist: http://lists.xen.org/archives/html/xen-devel/
2), blog: http://blog.xen.org/
2, 等对xen有了初步了解后, 再加大家推荐的其它maillist: "10:57 2012-01-19"4

11:55 2012-01-29
virtualizaition, suse, xen, libvirt; subscribe libvirt maillist
1, http://libvirt.org/goals.html
Now we can define the goal of libvirt:  to provide a common and stable layer sufficient to securely manage domains on a node, possibly remote.
2, maillist
password: 9271
https://www.redhat.com/mailman/listinfo/libvir-list
https://www.redhat.com/mailman/listinfo/libvirt-users

14:43 2012-01-29
virtualization, suse, xen, source code, reading
1, 接着节前的结果看。
从xc_domain_create开始，调入libxc。
ref "16:03 2012-01-29"很容易看明白. 
1), pyxc_domain_create -> xc_domain_create
可以看到pyxc_methods里面定义了
    { "domain_create",
      (PyCFunction)pyxc_domain_create,
      METH_VARARGS | METH_KEYWORDS, "\n"
      "Create a new domain.\n"
      " dom    [int, 0]:        Domain identifier to use (allocated if zero).\n"
      "Returns: [int] new domain identifier; -1 on error.\n" },
(1), 这里面domain_create就是python调用时的函数名.
(2), METH_VARARGS | METH_KEYWORDS. 表示这个calling convention会被用于c函数. 
Note the third entry (METH_VARARGS). This is a flag telling the interpreter the calling convention to be used for the C function. It should normally always be METH_VARARGS or METH_VARARGS | METH_KEYWORDS; a value of 0 means that an obsolete variant of PyArg_ParseTuple() is used.

2), pyxc_domain_create由pyxc_methods数组定义, 在initxc里面注册.

16:03 2012-01-29
script, python c语言调用方法
1, python document
http://docs.python.org/extending/extending.html
1), Calling C Functions from Python
特别的，如果是调用os通用接口，可以用os:
http://docs.python.org/library/os.html#module-os
2), Calling Python Functions from C

11:06 2012-01-30
时间管理
0, 11:00-21:00

1, today
1), 30' 16:36-17:27 18:43-19:30 19:52-20:54 try to patch kernel, read xen source code. see"16:35 2012-01-30".
2), read xen-devel and libvirt maillist. see"11:18 2012-01-30".
3), 11:40-13:12 午饭.
4), fesco通知我办入职手续, see"14:49 2012-01-30".
5), 1h: 信用卡还款. 
6), 16:05-16:27 vim学习. see"16:11 2012-01-30".
7), 17:28-18:39 吃饭. 
8), 19:30-19:52 睡觉.
9), 总结: 今天感觉看代码逐渐看进去了, 但是还总是困. 尽快调整状态. 

11:18 2012-01-30
virtualization, suse, xen, maillist, xen-devel; libvirt
1, xen-devel
1), 经常看到mini-os: 
引用: http://hi.baidu.com/from2_6_30_1/blog/item/6dc202105cbb2dcca7ef3fe4.html
Mini-OS［1］是跟随Xen hypervisor发布的一款小内核操作系统，目前有一些基于Mini-OS的应用：
HP实验室在2007年发布了基于Mini-OS的Xen Library OS［2］；
2008年剑桥大学进一步完善了HP的工作，完成了HVM stubdom并置于Xen源码树中［3］；
伊利诺伊大学芝加哥分校(UIC)正致力于开发一款基于Mini-OS的小内核系统

2), xen-unstable test
[Xen-devel] [xen-unstable test] 11714: trouble: blocked/broken
People who touched revisions under test:
里面suse有两个人: 
Jan Beulich <jbeulich@suse.com>
Jim Fehlig <jfehlig@suse.com>

14:49 2012-01-30
fesco, 入职手续
1, 汉威大厦 东区5层. 
wu peipei: 65879957
fax(共用): 65879000
入职手续: 白底1寸彩照x2, 身份证, 户口本. 是否转档案(转到fesco没有档案管理费). 2月8日之前. 
公积金? 3月底联系fesco, 开证明, 给原单位. 
2, (11:41 2012-01-31)
1), 今天办理了入职手续, 办了一张长城借记卡(用于社保报销).
复印了两张身份证, 户口本户主页本人页各一张.
两个月后fesco会给我发短信告诉我社保已实做. 此时去办公积金的转移还有提取等事项. 
fesco电话: 400-8000-800, 汉威服务中心: 65879999.
公积金咨询: 85691111.
2), 下一步需要办调档和公积金两个事情. 
3, (11:43 2012-03-15)
1), 前几天已经给我发短信说社保做好了，现在就可以转公积金了。
给wupeipei身份证复印件，等她给我转移还是合并的单子，给原单位做合并。
公积金提取需要重新做，给wupeipei之前的提取记录单和身份证复印件。
2), (16:25 2012-05-18)
公积金提取不能用原来国管那张卡，可以用招行卡。
公积金支取记录单需要原件，身份证和招行卡需要两面的复印件。
fesco一般一个月办一次，15个工作日内完成。

16:35 2012-01-30
virtualization, suse, xen, source code, reading, kernel and xen
1, 根据昨天的分析, 今天看看kernel和xen的代码. 
2, 对kernel打patch, 
1), "/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/README".
    $ git config --global user.name "Your Name"
    $ git config --global user.email your@email
If you ommit the --global option, the setting will only apply to this
clone.
    $ ./scripts/install-git-hooks
    $ ./scripts/sequence-patch.sh --quilt
2), run "./script/sequence-patch.sh --quilt" error: 
novell@bjz-dev:kernel> ./scripts/sequence-patch.sh --quilt
WARNING: not in a GIT working directory, things might break.

SCRATCH_AREA not defined (defaulting to "tmp")
Creating tree in /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32
Warning: could not find linux-2.6.32.tar.bz2, trying to create it from git
alternatively you can put an unpatched kernel tree to /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32.orig
No linux-2.6 git tree found (try setting the LINUX_GIT variable)
tar: This does not look like a tar archive
tar: Error exit delayed from previous errors
3), set LINUX_GIT:
novell@bjz-dev:kernel> export LINUX_GIT=/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel_src/linux-stable
4), rerun, successful
novell@bjz-dev:kernel> ./scripts/sequence-patch.sh --quilt
WARNING: not in a GIT working directory, things might break.

SCRATCH_AREA not defined (defaulting to "tmp")
Creating tree in /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32
Warning: could not find linux-2.6.32.tar.bz2, trying to create it from git
alternatively you can put an unpatched kernel tree to /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32.orig

Linking from /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32.orig
[ patches.kernel.org/patch-2.6.32.1 ]
...
[ patches.xen/xen-amd-ecs.patch ]
[ Tree: /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32 ]
[ Generating Module.supported ]
5), 说明打好patch的kernel在这个目录: 
novell@bjz-dev:linux-2.6.32> pwd
/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32
6), 针对kernel生产ctags和cscope文件(不包括".pc"目录, 也就是patch目录).
(1), novell@bjz-dev:linux-2.6.32> ctags -R --exclude=.pc
(2), 移走patches和".pc"目录. 然后"cscope -bR"
(3), cscope vim快捷键, 原来在vim里面使用cscope都是直接输入的, 今天才知道快捷键. 
http://cscope.sourceforge.net/cscope_maps.vim
<C-\>s or <C-@>s
s可以用gctefid代替:
    "   's'   symbol: find all references to the token under cursor
    "   'g'   global: find global definition(s) of the token under cursor
    "   'c'   calls:  find all calls to the function name under cursor
    "   't'   text:   find all instances of the text under cursor
    "   'e'   egrep:  egrep search for the word under cursor
    "   'f'   file:   open the filename under cursor
    "   'i'   includes: find files that include the filename under cursor
    "   'd'   called: find functions that function under cursor calls
(4), 修改"/.vimrc".
"cross reference for xen kernel
set tags+=/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32/tags
cscope add /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32/cscope.out /home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32/

注意这里cscope需要给出后面这个绝对路径, 如果不给出, 会用相对路径, vim起始位置就必须是/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/kernel/tmp/linux-2.6.32/, 这样不方便. 网上也有人直接在cscope生产cross reference时就按绝对路径生产, 这样的话将来如果目录修改还要重新生成cscope.out

3, (18:43 2012-01-30)
整理从xc_domain_create做的事情.
xc_domain_create -> do_domctl -> do_xen_hypercall -> do_privcmd -> ioctl -> privcmd_ioctl -> _hypercall
1), do_domctl(xc_handle, &domctl)

    hypercall.op     = __HYPERVISOR_domctl;
    hypercall.arg[0] = (unsigned long)domctl;

2), do_xen_hypercall and do_privcmd is wrapper function.
int do_xen_hypercall(int xc_handle, privcmd_hypercall_t *hypercall)
{
	    return do_privcmd(xc_handle, IOCTL_PRIVCMD_HYPERCALL,
			                          (unsigned long)hypercall);
}
tools/libxc/xc_linux.c
do_privcmd(xc_handle, IOCTL_PRIVCMD_HYPERCALL, (unsigned long)hypercall);

static int do_privcmd(int xc_handle, unsigned int cmd, unsigned long data)
{
    return ioctl(xc_handle, cmd, data);
}

3), xen ioctl
privcmd_ioctl位于"drivers/xen/privcmd/privcmd.c", 这里的"_hypercall"会执行hypercall.op, 会调用到哪里呢? 之前已经看到作资料, 说这里的调用类似于kernel ioctl. 
(1), privcmd_ioctl -> _hypercall
#define _hypercall(type, op, a1, a2, a3, a4, a5)                \
({                                                              \
	type __res;                                             \
	HYPERCALL_ARG(a1, 1);                                   \
	HYPERCALL_ARG(a2, 2);                                   \
	HYPERCALL_ARG(a3, 3);                                   \
	HYPERCALL_ARG(a4, 4);                                   \
	HYPERCALL_ARG(a5, 5);                                   \
	asm volatile (                                          \
		"call *%6"                                      \
		: "=a" (__res), "+r" (__arg1), "+r" (__arg2),   \
		  "+r" (__arg3), "+r" (__arg4), "+r" (__arg5)   \
		: "g" (HYPERCALL_LOCATION(op))                  \
		: "memory" );                                   \
	__res;                                                  \
})
call的内容是: (HYPERCALL_LOCATION(op))
arch/x86/include/mach-xen/asm/hypercall.h
#define HYPERCALL_LOCATION(op) (hypercall_page + (op) * 32)

wrmsr_hypervisor_regs -> hypercall_page_initialise
这里可以看到针对是否hvm和是否是32bit(?)作不同的处理. 
void hypercall_page_initialise(struct domain *d, void *hypercall_page)
{
	memset(hypercall_page, 0xCC, PAGE_SIZE);
	if ( is_hvm_domain(d) )
		hvm_hypercall_page_initialise(d, hypercall_page);
	else if ( !is_pv_32bit_domain(d) )
		hypercall_page_initialise_ring3_kernel(hypercall_page);
	else
		hypercall_page_initialise_ring1_kernel(hypercall_page);
}
\todo: 看到这里明显和架构相关, 稍后再详细分析hypercall_page_initialise.

(2), 分析hypercall.op
根据前面的分析: 
hypercall.op     = __HYPERVISOR_domctl;
所以下一步是查找__HYPERVISOR_domctl: 
Cscope tag: __HYPERVISOR_domctl
#   line  filename / context / line
1     93  /home/novell/work/source/xen/sus...testing/xen/include/public/xen.h
<<GLOBAL>>
#define __HYPERVISOR_domctl 36
2    673  /home/novell/work/source/xen/sus...esting/xen/arch/x86/mm/hap/hap.c
<<XEN_GUEST_HANDLE>>
rc = hypercall_create_continuation(__HYPERVISOR_domctl, "h",
3   3915  /home/novell/work/source/xen/sus.../xen/arch/x86/mm/shadow/common.c
<<XEN_GUEST_HANDLE>>
__HYPERVISOR_domctl, "h", u_domctl);
4    260  /home/novell/work/source/xen/sus....0.3-testing/xen/common/domctl.c
<<XEN_GUEST_HANDLE>>
__HYPERVISOR_domctl, "h", u_domctl);
5    178  /home/novell/work/source/xen/sus...ools/debugger/gdbsx/xg/xg_main.c
<<_domctl_hcall>>
hypercall.op = __HYPERVISOR_domctl;
6    151  /home/novell/work/source/xen/sus...testing/tools/libxc/xc_private.h
<<do_domctl>>
hypercall.op = __HYPERVISOR_domctl;
7     98  /home/novell/work/source/xen/sus....32//include/xen/interface/xen.h
<<GLOBAL>>
#define __HYPERVISOR_domctl 36

(3), 这里面1, 5, 6, 7都不是. 234有可能. 
do_domctl ->	"1"
	  ->	arch_do_domctl -> paging_domctl -> hap_domctl -> "2"
						-> shadow_domctl -> "3"
这里到这里的do_domctl有XEN_DOMCTL_createdomain这个case, 这个正是当初"xc_domain_create"里面设置的. 所以arch_do_domctl在这里不会执行. 
(4), 返回来, 再看do_domctl. 
这个do_domtrl肯定不是tools里面调用的, tools里面应该都是在Linux kernel上面的. 
1    224  /home/novell/work/source/xen/sus....0.3-testing/xen/common/domctl.c
<<GLOBAL>>
long do_domctl(XEN_GUEST_HANDLE(xen_domctl_t) u_domctl)
2     35  /home/novell/work/source/xen/sus...ting/xen/include/xen/hypercall.h
<<XEN_GUEST_HANDLE>>
do_domctl(

这两个都不是do_domctl的调用者. 看来是在汇编里面. 
novell@bjz-dev:x86> pwd
/home/novell/work/source/xen/suse_svn/branches/SLE11-SP1-Branch/xen/xen-4.0.3-testing/xen/arch/x86
novell@bjz-dev:x86> grep do_domctl * -R
domctl.c:#include <asm/hypercall.h> /* for arch_do_domctl */
domctl.c:long arch_do_domctl(
x86_32/entry.S:        .long do_domctl
x86_32/entry.S:        .byte 1 /* do_domctl            */
x86_64/compat/entry.S:        .quad do_domctl
x86_64/compat/entry.S:        .byte 1 /* do_domctl                */
x86_64/entry.S:        .quad do_domctl
x86_64/entry.S:        .byte 1 /* do_domctl            */

4), 分析x86_64/entry.S
(1), do_domctl定义在hypercall_table
syscall_enter -> 
(2),
novell@bjz-dev:x86> grep syscall_enter * -R
x86_64/traps.c:asmlinkage void syscall_enter(void);
x86_64/traps.c:    /* movq $syscall_enter,%r11 */
x86_64/traps.c:    *(void **)&stack[23] = (void *)syscall_enter;
x86_64/entry.S:ENTRY(syscall_enter)
(3), 
boot/x86_64.S -> __start_xen -> trap_init -> percpu_traps_init -> subarch_percpu_traps_init -> write_stack_trampoline:
	/* movq $syscall_enter,%r11 */
	stack[21] = 0x49;
	stack[22] = 0xbb;
	*(void **)&stack[23] = (void *)syscall_enter;

4, 搞清了do_domctl的前因后果, 详细看看功能是什么. 
xen/xen-4.0.3-testing/xen/common/domctl.c
do_domctl -> domain_create -> xsm_domain_create
			   -> arch_domain_create
\todo domain_create里面好像还很复杂阿. 感觉现在的重点应该是libxxx之类的东西, 这里面可能不需要看很深入. \todo 明天问问jiaju或ChunYan.

11:40 2012-01-31
时间管理
0, 11:30-18:50

1, today
1), 2h 打印照片, fesco办理入职手续, see"14:49 2012-01-30"2.
2), 11:47-12:02 xen/libvirt maillist. see"11:46 2012-01-31".
3), 12:02-13:09 吃饭. 
4), company新闻: novell suse拿到1M+ USD大单. see"13:18 2012-01-31"
5), 13:30-15:01 看微博: @阿花的伊萨卡岛 
6), 15:10-15:20 16:20-17;20 17:45-18:42 read xen source code. see"15:10 2012-01-31".
7), 15:20-16:02 睡觉. 
8), 文中提到可以打出不同cpu上的Xen call trace. see"18:39 2012-01-31".
9), 查找 李洱 花腔 http://news.sina.com.cn/c/2009-03-20/121717447852.shtml
10), 总结. 昨天试图早睡, 但是没什么效果. 今天下午还是困的要死. 今天晚上继续早睡. 
11:47 2012-01-31
virtualization, suse, xen, maillist, xen-devel; libvirt
1, xen
from: http://lists.xen.org/archives/html/xen-devel/
1), Remus
http://lists.xen.org/archives/html/xen-devel/2012-01/msg02646.html
\todo: What does Remus and libxl mean?
This patch series introduces a basic framework to incorporate Remus into the libxl toolstack. The only functionality currently implemented is memory checkpointing.
These patches depend on "libxl: refactor suspend/resume code" patch series.
Changes since previous version:
* Receiving end of remus is now part of migrate-receive
* Re-use code already present for live migration (refactored in the above mentioned patch series)
2), QMP
http://lists.xen.org/archives/html/xen-devel/2012-01/msg02638.html
libxl: QMP stop/resume & refactor QEMU suspend/resume/save
Implement QMP stop and resume functionality and split
device model save into 3 parts:
	suspend_dm(domid)
	save_dm(domid, fd)
	resume_dm(domid)
3), GPLPV and pci passthrough
http://lists.xen.org/archives/html/xen-devel/2012-01/msg02164.html
\todo search.
没看太懂, 似乎是windows下passthrough driver有什么问题. 

13:18 2012-01-31
1, Sen Ming Chang(schang@novell.com)
我们赢了AVIC (中国航空工业集团公司) IDM 项目， 合约价超过 1M+ USD. 主要的产品是 IDM， AM 和一些 Sentinel，SecureLogin.   当然运行的平台是 SuSe.    这个项目主要贡献者为 Rock 负责全盘销售策略操盘，以及上层客户 coverage, Grace Yuan 对项目组成员的 coverage 有很深的力度，技术方面的总操盘手是 Li Yu Tong, Yu Tong 把他在 State Grid, Haier 所学的经验发挥淋漓尽致，让客户非常 buyin, 石伟也帮了很多忙， 当然我们不能忘记我们的大律师 Vivian 在合同上的把关， 谢谢他们的努力....
我们不止在 Linux 上有超过 1M 大单， IDM 大单也逐渐出现, 让我们继续努力.   我们在龙年是会行大运的....

15:10 2012-01-31
virtualization, suse, xen, source code, reading, python and libxc
1, 接着"11:40 2012-01-20"5-1)看. 
start()(tools/python/xen/xend/XendDomainInfo.py)
xendtask.log_progress(0, 30, self._constructdomain)
xendtask.log_progress(31, 60, self._initdomain)
xendtask.log_progress(61, 70, self._storevmdetails)
xendtask.log_progress(71, 80, self._storedomdetails)
xendtask.log_progress(81, 90, self._registerwatches)
xendtask.log_progress(91, 100, self.refreshshutdown)
看了后面忘前面阿, 已经忘了这个start是怎么回事了. 

2, 先看一下ChunYan的文档. 
ChunYan的当时分析的很深入阿, 从上到下都涉及到了. 自愧不如. 
好好学习. 
下面这篇文章是ChunYan找到的: "xen 添加hypercall"
http://blog.csdn.net/sploving/article/details/4651260

3, _initDomain
1), _configureBootloader
从代码看起来, 这个的结果应该是给出具体选择了哪个bootloader. py grub也是在这个阶段运行的. 但是没看到代码是如何调用到py grub的. 
(1), 实际运行一下看看. 
bjz-dev:/home/novell # python -m pdb /usr/sbin/xm create sles11
break /usr/lib64/python2.6/site-packages/xen/util/xmlrpcclient.py:56
运行到断点的时候, 虚拟机已经建立了, 但是还没有运行bootloader. 
这时"xm console 11"连接到console. 
还是不行, 没看到自己加入的打印. 
没办法单步, 还是继续看吧. 看看今天能不能把create看完. 
2), image.create
xen-4.0.3-testing/tools/python/xen/xend/image.py
Create an image handler for a vm
虽然能看明白是根据arch和image_type选择. 但是不知道参数是从哪里传进来的. \todo. 
3), _createChannels(self): for xenstore and console
4), image.createImage()
ChunYan分析: 
image.createDomain -> image.buildDomain -> (PV) xc.linuxbuild ()
					-> (hvm) xc.hvm_build()
buildDomain是class ImageHandler定义的. 但是没有定义, 需要ImageHandler的继承类定义. 类的继承关系: 
ImageHandler  
	     ->	LinuxImageHandler
				-> X86_Linux_ImageHandler
				-> IA64_Linux_ImageHandler
	     ->	HVMImageHandler
				-> IA64_HVM_ImageHandler
				-> X86_HVM_ImageHandler
和前面的xc.domain_create一样, (hvm) xc.hvm_build调用到pyxc_hvm_build.
\todo 分析pv情况. 
5), pyxc_hvm_build() -> xc_hvm_build_target_mem() -> xc_hvm_build_internal() -> setup_guest() -> loadelfimage()
loadelfimage: 是加载哪个elf文件呢? 
传给buildDomain的image是从self.loader得到的.
(1), xm/create.py
main -> parseCommandLine -> make_config -> configure_image: 把vals.loader赋值给loader. 
但是看起来配置文件里面没有穿过loader这个参数. 难道是bootloader给出的? 也没有找到证据. 郁闷.. 看不懂阿. 如果知道了python的debug信息怎么打出来就方便了. 

18:39 2012-01-31
virtualization, suse, xen, xen命令学习, xm dmsg
1, xm dmsg(xm dm): 打印出xen的log

