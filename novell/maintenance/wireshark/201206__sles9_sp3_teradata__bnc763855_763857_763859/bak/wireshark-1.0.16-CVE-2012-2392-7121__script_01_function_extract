#!/usr/bin/perl

use strict;
use Encode;
use Getopt::Std;    #for getopts
use vars qw($opt_p $opt_s);
use IO::Handle;     #for autoflush
use File::Basename; #for basename

#global variable declaration
my $src;            #source filename
my $patch;          #patch filename
my @func;           #full function list

getopts('p:s:');
if ( $opt_p ) {
    $patch = $opt_p;
    print "patch file is $patch\n";
} else {
    die "no patch file";
}

if ( $opt_s ) {
    $src = $opt_s;
    print "source file is $src\n";
} else {
    die "no source file";
}

open SOURCE_FILE, $src;
open FUNCTION_LIST, ">function_list";

#get the function list
#only extract the func xxx from the line start from "+xxx". 
open PATCH_FILE, $patch;
my $i = 0;
while(<PATCH_FILE>) {
    if ( /^\+.*\b(\w+)\ *\(\ *[\w\ ]+,\ *\w*\ *pinfo/ ) { 
        my $func = $1; 
        print "find: $func\n";
        if ( $func =~ /\w+/ ) { 
            print "func = $func\n";
            push @func, $i, $func;
            $i++;
        }
    }
}
close PATCH_FILE;

my %func = @func;
my @func_full_list = sort values %func;
print "all func: @func_full_list\n";
%func = reverse %func;
@func = keys %func; 
@func = sort @func;
print "result: @func\n";

foreach my $f (@func) {
    print FUNCTION_LIST "$f ";
}

close SOURCE_FILE;
close FUNCTION_LIST;

