#!/usr/bin/perl
#remove the useless patch section(do not contain any "-" or "+" between two 
#different "@@" line. 

use strict;
use Encode;
use Getopt::Std;    #for getopts
use vars qw($opt_p);
use IO::Handle;     #for autoflush
use File::Basename; #for basename

#global variable declaration
my $patch;          #patch file name
my @result;

getopts('p:');
if ( $opt_p ) {
    $patch = $opt_p;
    print "patch file is $patch\n";
} else {
    die "no patch file";
}

my $result = $patch.".result";

open PATCH, $patch;
open RESULT, ">$result";
my $i = 0;
my $line;
my $patch_found = 0; 
my @patch_buffer;
my $patch_header = 1;
while($line=<PATCH>) {

    if ( $i % 100 == 0 ) {
        my $time = `date +%H%M%S`;
        chomp $time;
        print "$time: i = $i\n";
    }
    $i++;

    if ( $line =~ /^@@/ ) {
        print "$i: patch section start\n"; 
        if ( $patch_found == 1 ) {
            print "print patch line\n";
            print RESULT @patch_buffer;
        }
        if ( $patch_header == 1 ) {
            print RESULT @patch_buffer;
            $patch_header = 0;
        }
        @patch_buffer = ();
        $patch_found = 0;
    }

    push @patch_buffer, $line;

    if ( $line =~ /^\+[^+]/ ) {
        $patch_found = 1;
        print "$i: find patch line: $line\n";
        next;
    }

    if ( $line =~ /^\-[^-]/ ) {
        $patch_found = 1;
        print "$i: find patch line: $line";
        next;
    }
}

if ( $patch_found == 1 ) {
    print "print patch line\n";
    print RESULT @patch_buffer;
    @patch_buffer = ();
} 

close SOURCE_FILE;
close RESULT; 

