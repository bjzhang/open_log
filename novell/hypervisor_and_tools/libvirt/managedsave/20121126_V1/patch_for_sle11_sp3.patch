From: Bamvor Jian Zhang <bjzhang@suse.com>
Date: Mon, 26 Nov 2012 11:52:30 +0800
Subject: [PATCH] fix bnc 782311: Snapshots stuck "queued" with Xen as HV

    Implement the domainManagedSave, domainHasManagedSaveImage,
    and domainManagedSaveRemove functions in the legacy libvirt
    xen driver.

---
 src/xen/xen_driver.c | 114 +++++++++++++++++++++++++++++++++++++++++++++++++++
 src/xen/xen_driver.h |   2 +
 2 files changed, 116 insertions(+)

diff -urp libvirt-1.0.0.orig/src/xen//xen_driver.c libvirt-1.0.0/src/xen/xen_driver.c
--- libvirt-1.0.0.orig/src/xen//xen_driver.c	2012-11-26 15:48:54.000000000 +0800
+++ libvirt-1.0.0/src/xen/xen_driver.c	2012-11-26 15:51:08.000000000 +0800
@@ -67,6 +67,7 @@
 #include "nodeinfo.h"
 
 #define VIR_FROM_THIS VIR_FROM_XEN
+#define XEN_SAVE_DIR "/var/lib/xen/save"
 
 static int
 xenUnifiedNodeGetInfo (virConnectPtr conn, virNodeInfoPtr info);
@@ -267,6 +268,7 @@ xenUnifiedOpen (virConnectPtr conn, virC
 {
     int i, ret = VIR_DRV_OPEN_DECLINED;
     xenUnifiedPrivatePtr priv;
+    char ebuf[1024];
 
 #ifdef __sun
     /*
@@ -406,8 +408,19 @@ xenUnifiedOpen (virConnectPtr conn, virC
     }
 #endif
 
+    if (virAsprintf(&priv->saveDir, "%s", XEN_SAVE_DIR) == -1)
+        goto out_of_memory;
+
+    if (virFileMakePath(priv->saveDir) < 0) {
+        VIR_ERROR(_("Failed to create save dir '%s': %s"), priv->saveDir,
+                  virStrerror(errno, ebuf, sizeof(ebuf)));
+        goto fail;
+    }
+
     return VIR_DRV_OPEN_SUCCESS;
 
+out_of_memory:
+    virReportOOMError();
 fail:
     ret = VIR_DRV_OPEN_ERROR;
 clean:
@@ -437,6 +450,7 @@ xenUnifiedClose (virConnectPtr conn)
         if (priv->opened[i])
             drivers[i]->xenClose(conn);
 
+    VIR_FREE(priv->saveDir);
     virMutexDestroy(&priv->lock);
     VIR_FREE(conn->privateData);
 
@@ -1080,6 +1094,86 @@ xenUnifiedDomainSave(virDomainPtr dom, c
     return xenUnifiedDomainSaveFlags(dom, to, NULL, 0);
 }
 
+static char *
+xenUnifiedDomainManagedSavePath(xenUnifiedPrivatePtr priv, virDomainPtr dom) {
+    char *ret;
+
+    if (virAsprintf(&ret, "%s/%s.save", priv->saveDir, dom->name) < 0) {
+        virReportOOMError();
+        return NULL;
+    }
+
+    VIR_DEBUG("managed save image: %s", ret);
+    return ret;
+}
+
+static int
+xenUnifiedDomainManagedSave(virDomainPtr dom, unsigned int flags)
+{
+    GET_PRIVATE(dom->conn);
+    char *name;
+    int ret;
+
+    virCheckFlags(VIR_DOMAIN_SAVE_BYPASS_CACHE |
+                  VIR_DOMAIN_SAVE_RUNNING |
+                  VIR_DOMAIN_SAVE_PAUSED, -1);
+
+    name = xenUnifiedDomainManagedSavePath(priv, dom);
+    if (name == NULL) {
+        ret = -1;
+        goto cleanup;
+    }
+
+    if (priv->opened[XEN_UNIFIED_XEND_OFFSET]) {
+        ret = xenDaemonDomainSave(dom, name);
+    } else {
+        ret = -1;
+    }
+
+cleanup:
+    VIR_FREE(name);
+    return ret;
+}
+
+static int
+xenUnifiedDomainHasManagedSaveImage(virDomainPtr dom, unsigned int flags)
+{
+    GET_PRIVATE(dom->conn);
+    char *name;
+    int ret;
+
+    virCheckFlags(0, -1);
+    name = xenUnifiedDomainManagedSavePath(priv, dom);
+    if (!name)
+        return false;
+
+    ret = virFileExists(name);
+    VIR_FREE(name);
+    return ret;
+}
+
+static int
+xenUnifiedDomainManagedSaveRemove(virDomainPtr dom, unsigned int flags)
+{
+    GET_PRIVATE(dom->conn);
+    char *name;
+    int ret;
+
+    virCheckFlags(0, -1);
+
+    name = xenUnifiedDomainManagedSavePath(priv, dom);
+    if (name == NULL) {
+        ret = -1;
+        goto cleanup;
+    }
+
+    ret = unlink(name);
+
+cleanup:
+    VIR_FREE(name);
+    return ret;
+}
+
 static int
 xenUnifiedDomainRestoreFlags(virConnectPtr conn, const char *from,
                              const char *dxml, unsigned int flags)
@@ -1505,15 +1599,32 @@ xenUnifiedDomainCreateWithFlags (virDoma
 {
     GET_PRIVATE(dom->conn);
     int i;
+    char *name;
+    int ret = -1;
 
     virCheckFlags(0, -1);
 
+    name = xenUnifiedDomainManagedSavePath(priv, dom);
+    if (!name)
+        goto cleanup;
+    if (virFileExists(name)) {
+        if (priv->opened[XEN_UNIFIED_XEND_OFFSET]) {
+            ret = xenDaemonDomainRestore(dom->conn, name);
+            if (ret == 0)
+                unlink(name);
+        }
+        goto cleanup;
+    }
+
     for (i = 0; i < XEN_UNIFIED_NR_DRIVERS; ++i)
         if (priv->opened[i] && drivers[i]->xenDomainCreate &&
             drivers[i]->xenDomainCreate (dom) == 0)
             return 0;
 
     return -1;
+cleanup:
+    VIR_FREE(name);
+    return ret;
 }
 
 static int
@@ -2218,6 +2329,9 @@ static virDriver xenUnifiedDriver = {
     .domainGetState = xenUnifiedDomainGetState, /* 0.9.2 */
     .domainSave = xenUnifiedDomainSave, /* 0.0.3 */
     .domainSaveFlags = xenUnifiedDomainSaveFlags, /* 0.9.4 */
+    .domainManagedSave = xenUnifiedDomainManagedSave, /* 1.0.0 */
+    .domainHasManagedSaveImage = xenUnifiedDomainHasManagedSaveImage, /* 1.0.0 */
+    .domainManagedSaveRemove = xenUnifiedDomainManagedSaveRemove, /* 1.0.0 */
     .domainRestore = xenUnifiedDomainRestore, /* 0.0.3 */
     .domainRestoreFlags = xenUnifiedDomainRestoreFlags, /* 0.9.4 */
     .domainCoreDump = xenUnifiedDomainCoreDump, /* 0.1.9 */
diff -urp libvirt-1.0.0.orig/src/xen//xen_driver.h libvirt-1.0.0/src/xen/xen_driver.h
--- libvirt-1.0.0.orig/src/xen//xen_driver.h	2012-11-26 15:48:54.000000000 +0800
+++ libvirt-1.0.0/src/xen/xen_driver.h	2012-11-26 15:49:52.000000000 +0800
@@ -200,6 +200,8 @@ struct _xenUnifiedPrivate {
     /* Location of config files, either /etc
      * or /var/lib/xen */
     const char *configDir;
+    /* Location of managed save dir, default /var/lib/xen/save */
+    char *saveDir;
 
 # if WITH_XEN_INOTIFY
     /* The inotify fd */
