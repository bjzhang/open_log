From f922f0e64000bb08b38103b110731f6e550af2d2 Mon Sep 17 00:00:00 2001
From: Bamvor Jian Zhang <bjzhang@suse.com>
Date: Tue, 10 Dec 2013 13:01:54 +0800
Subject: [PATCH 3/5] ao improve: avoid use ao in autostart domain


Signed-off-by: Bamvor Jian Zhang <bjzhang@suse.com>
---
 src/libxl/libxl_driver.c | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/src/libxl/libxl_driver.c b/src/libxl/libxl_driver.c
index 9f7b77a..a44800b 100644
--- a/src/libxl/libxl_driver.c
+++ b/src/libxl/libxl_driver.c
@@ -76,7 +76,7 @@ libxlDomainManagedSaveLoad(virDomainObjPtr vm,
 
 static int
 libxlVmStart(libxlDriverPrivatePtr driver, virDomainObjPtr vm,
-             bool start_paused, int restore_fd);
+             bool start_paused, int restore_fd, bool async)
 
 
 /* Function definitions */
@@ -196,7 +196,7 @@ libxlAutostartDomain(virDomainObjPtr vm,
     virResetLastError();
 
     if (vm->autostart && !virDomainObjIsActive(vm) &&
-        libxlVmStart(driver, vm, false, -1) < 0) {
+        libxlVmStart(driver, vm, false, -1, false) < 0) {
         err = virGetLastError();
         VIR_ERROR(_("Failed to autostart VM '%s': %s"),
                   vm->def->name,
@@ -492,7 +492,7 @@ libxlEventHandler(void *data, VIR_LIBXL_EVENT_CONST libxl_event *event)
                 break;
             case LIBXL_SHUTDOWN_REASON_REBOOT:
                 libxlVmReap(driver, vm, VIR_DOMAIN_SHUTOFF_SHUTDOWN);
-                libxlVmStart(driver, vm, 0, -1);
+                libxlVmStart(driver, vm, 0, -1, true);
                 break;
             default:
                 VIR_INFO("Unhandled shutdown_reason %d", xl_reason);
@@ -639,7 +639,7 @@ libxlFreeMem(libxlDomainObjPrivatePtr priv, libxl_domain_config *d_config)
  */
 static int
 libxlVmStart(libxlDriverPrivatePtr driver, virDomainObjPtr vm,
-             bool start_paused, int restore_fd)
+             bool start_paused, int restore_fd, bool async)
 {
     libxl_domain_config d_config;
     virDomainDefPtr def = NULL;
@@ -713,7 +713,7 @@ libxlVmStart(libxlDriverPrivatePtr driver, virDomainObjPtr vm,
         goto error;
     }
 
-    if (ao_how_enable) {
+    if (ao_how_enable && async) {
         ao_how_init(vm);
     }
 
@@ -731,7 +731,7 @@ libxlVmStart(libxlDriverPrivatePtr driver, virDomainObjPtr vm,
 #endif
     }
 
-    if (ao_how_enable) {
+    if (ao_how_enable && async) {
         ao_how_wait(vm);
     }
 
@@ -1314,7 +1314,7 @@ libxlDomainCreateXML(virConnectPtr conn, const char *xml,
     def = NULL;
 
     if (libxlVmStart(driver, vm, (flags & VIR_DOMAIN_START_PAUSED) != 0,
-                     -1) < 0) {
+                     -1, true) < 0) {
         virDomainObjListRemove(driver->domains, vm);
         vm = NULL;
         goto cleanup;
@@ -2058,7 +2058,8 @@ libxlDomainRestoreFlags(virConnectPtr conn, const char *from,
     libxlDriverUnlock(driver);
     def = NULL;
 
-    ret = libxlVmStart(driver, vm, (flags & VIR_DOMAIN_SAVE_PAUSED) != 0, fd);
+    ret = libxlVmStart(driver, vm, (flags & VIR_DOMAIN_SAVE_PAUSED) != 0,
+                       fd, true);
     if (ret < 0 && !vm->persistent) {
         virDomainObjListRemove(driver->domains, vm);
         vm = NULL;
@@ -2770,7 +2771,8 @@ libxlDomainCreateWithFlags(virDomainPtr dom,
         goto cleanup;
     }
 
-    ret = libxlVmStart(driver, vm, (flags & VIR_DOMAIN_START_PAUSED) != 0, -1);
+    ret = libxlVmStart(driver, vm, (flags & VIR_DOMAIN_START_PAUSED) != 0,
+                       -1, true);
 
 cleanup:
     if (vm)
-- 
1.8.1.4

