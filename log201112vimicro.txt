
10:05 2011-12-2
时间管理
1, 本日
1), 10:09-10:50 绩效考核表格
), 看邮件. sara

10:06 2011-12-2
软件技巧, vim, logAssistant
上次写列出文件windows. 后来不好用. 今天发现可以这样用, 也很方便.
1), 启动
D:\software\Vim\vim73\gvim.exe D:\personnal\log
2), ":e ."打开当前目录, 也就是log目录. 

10:09 2011-12-2
公司, 绩效考核, 2011Q3
1, 2011Q3工作
1), 在6层debug AE 882 android MID suspend/resume问题. 写AE工作总结(5.4-9.9). 
2), 编写882 power总结, 并做ICP training. 
3), Linux kernel中加入读arm cp15寄存器的driver, 便于做performance比对. 
4), 外训: arm多核, arm新一代开发环境(DS-5) workshop.  
5), 内训: GongAnmin java培训. Android(binder等)
2, 2011Q4工作
1), 参与SONY游戏机项目, 建立软件环境, 加入NEON jpeg解码功能. 
2), 内训: jiangbo AXI培训. 
3), android研究, 和同事一起移植android4.0到882上, 并了解android启动流程. 
4), 关注linaro工作, linaro对于arm powered system有很多优化, 对于882的优化有帮助. 

10:51 2011-12-5
时间管理
0, 10:40

1, 本日
1), 和xiaotao讨论android4.0移植进展. 见"11:06 2011-12-5".
2), 11:13-11:34 给aiguo发邮件, 绩效面谈. 见"16:07 2011-11-18"3.
3), 11:46 fajue刷机. 见"11:46 2011-12-5".
4), 和aiguo沟通.见"16:07 2011-11-18"4. 

2, 从明天开始看387驱动. 计划
1), 一周时间看看387基本驱动. 
2), 一周看看有没有可能在panda_os下使387能工作(ping通). 验证是否了解387驱动. 
3), 一周看wifi与HAL及上层关系. 

11:06 2011-12-5
预研, android4.0, VC0882上运行android4.0实验
1, 经过xiaotao研究. 
之前修改code的方式去移植android方式不太对. 应该是通过修改makefile控制哪些硬件存在. 
目前所需文件位置: 
/opt/share/liuxiaotao/icp_android4/
控制编译选项的关键makefile是: device/vimicro/vortex/generic/BoardConfig.mk

11:46 2011-12-5
刷机, fajue
1, 好像这个月AE已经不做fajue自动build版本了. 
只好先用11.25的版本. 

2, 刷完
1), 豌豆荚恢复软件. 
2), 需要问问wangweizhong如何设置有限网络. 

10:23 2011-12-6
时间管理
0, 9:25

1, 本日
1), 20' 10:24-10:43 wifi, 向suxin请教. 见"10:24 2011-12-6". 
2), wangweizhong: 150有fajue daily build(/home/share/androidbuilds). 
3), 15:27-17:41 wifi, 浏览387芯片驱动. 见"10:24 2011-12-6"3.

10:24 2011-12-6
预研, wifi, 学习VC0882 android wifi, 了解调试过程; 看代码和资料
1, 上午找suxin聊了聊. 
1), 387 driver主要看了驱动加载和下载firmwire. 没有深入看. 
2), android2.3的wifi移植网上有详细介绍. android2.3和1.6这方面没有什么差异. 但是android4.0变化较大. 
3), wifi测试工具: 
(1), generic Linux: wirelesstools.
(2), android tools: wpa_supplicant
/home/zhangjian/mydroid_f/external/wpa_supplicant_6
(3), 387自己提供的apps, suxin没有用过. 
(4), kernel里面需要打开wireless extension, 用户空间通过这组通用的ioctl控制wireless设备. 

2, 现在没有板子. 只能是先看看代码. 然后看看有没有7寸板可以用用. 

3, 浏览驱动代码, 先看README. 
1), iwpriv
2), 然后还有几个marvell工具. 

4, 简单浏览一下代码: 只看module_init, bus probe相关内容. 
1), 从module_init开始. 
mlinux/moal_main.c:module_init(woal_init_module);
(1), woal_sdio_probe里面的sdio_func需要看看. 因为后面有sdio_enable_func, 通过sdio寄存器读写使能这个func. 
(2), 对sdio不了解. "sdio_claim_host"是啥意思? exclusively claim a bus for a certain SDIO function
2), 没有看到如何下载firmwire, 看代码是通过proc文件系统trigger的firmwire下载. 需要通过android验证. 所以需要先看一下android wifi移植. 

5, 搜索android移植资料. 
1), android wifi模块分析:
自: http://hi.baidu.com/anly%5Fjun/blog/item/8ecb92d593d144cf50da4b6e.html
(1), wifi模块初始化:
WifiStateTracker 会创建WifiMonitor 接收来自底层的事件，WifiService 和WifiMonitor 是整个模块的核心。WifiService 负责启动关闭wpa_supplicant、启动关闭WifiMonitor 监视线程和把命令下发给wpa_supplicant，而WifiMonitor 则负责从wpa_supplicant 接收事件通知。
(2), 用户打开wifi: 
首先装载WIFI 内核模块（该模块的位置硬编码为"/system/lib/modules/wlan.ko" ）， 然后启动wpa_supplicant （ 配置文件硬编码为"/data/misc/wifi/wpa_supplicant.conf"），再通过WifiStateTracker 来启动WifiMonitor 中的监视线程。
当使能成功后，会广播发送WIFI_STATE_CHANGED_ACTION 这个Intent 通知外界WIFI已经成功使能了。WifiEnabler 创建的时候就会向Android 注册接收WIFI_STATE_CHANGED_ACTION，因此它会收到该Intent，从而开始扫描。
a, bamvor: 看wpa_supplicant.conf, 我的882pad上面是:
ctrl_interface=DIR=/data/system/wpa_supplicant GROUP=wifi
update_config=1

network={
	ssid="F5"
	psk="android-2"
	key_mgmt=WPA-PSK
	priority=2
}
可以看出密码是明码保存的. 只是如果没有root权限, 没法访问data目录. 

16:16 2011-12-6
VC0882, SV, AE, SystemUI, vortex magic bar
magic bar是AE XuTao(?)做的, 现在是Liujie维护.  
在SystemUI.apk里面, 搜索magic bar可以搜到. 

16:37 2011-12-7
VC0882, SV, MP, TengZhong板子调试
1, 今天wenlei说tengzhong板子每次启动到这里后都会重启. 
Starting kernel ...

cleanup usb configs

看了看"cleanup usb configs"其实是uboot里面cleanup_before_linux函数打印的. 也就是说kernel刚启动系统就重启了. 我就问wenlei用的什么电源, wenlei用的是usb电源, 我感觉可能是供电不足, 请wenlei接直流电源试试. 
注: TengZhong是7.4v并联电池, charger是12v. 

16:53 2011-12-8
预研, wifi, 学习VC0882 android wifi, 看代码和资料, wpa_supplicant_6
1, wpa_supplicant REAME.
1), developer document
(http://hostap.epitest.fi/wpa_supplicant/devel/)
2, 
/opt/share/zhangjian/android/icp_android/vimicro/wlan
woal_switch_drv_mode()->woal_init_fw()->mlan_dnld_fw()->wlan_check_fw_status()

17:28 2011-12-8
时间管理
1, 本日
1), 16:53-18:36 wifi驱动. 见"16:53 2011-12-8". 
被(2)打断.　
2), 17:00-17:29 支持QiaoWei测试halt->resume是否影响uhost设备. 

10:20 2011-12-9
时间管理
0, 9:40

1, 本日
1), wifi驱动. 见"10:21 2011-12-9".

10:21 2011-12-9
预研, wifi, 学习VC0882 android wifi, 看代码和资料, wifi firmware下载
1, 昨天看到了woal_switch_drv_mode().
r->write_proc(woal_config_write()), 和上次看的一样, 都是通过proc文件系统写入的. 

wlan_dnld_fw()->wlan_prog_fw_w_helper(), 后者是实际下载的函数. 先仔细看看. 

2, wlan_sdio_poll_card_status()
1), wlan_sdio_poll_card_status(): This function polls the card status register.
查询CARD_STATUS_REG, 看bits是否满足. 例如wlan_prog_fw_w_helper()里面会查询CARD_IO_READY | DN_LD_CARD_RDY. 
2), wlan_sdio_poll_card_status()->moal_read_reg()->"pcb->moal_read_reg"(moal_read_reg)->woal_read_reg()->sdio_readb(). 暂时只看到sdio通用部分, 通用部分后面再看. 
pcb: pmlan_callbacks pcb = &pmadapter->callbacks;
3), woal_init_sw()->sdio_claim_host()
                  ->mlan_register(): 注册mlan_device, 其中包括woal_callbacks. 
                    这个callback还是marvell私有的callbacks. 不是Linux wifi通用的. 
                  ->sdio_release_host()

4), 看看寄存器.
最终通过mmc_io_rw_direct_host, 发送命令, 命令是SD_IO_RW_DIRECT, 也就是cmd52. 看看cmd52的格式.  
        cmd.opcode = SD_IO_RW_DIRECT;
        cmd.arg = write ? 0x80000000 : 0x00000000;
        cmd.arg |= fn << 28;
        cmd.arg |= (write && out) ? 0x08000000 : 0x00000000;
        cmd.arg |= addr << 9;
        cmd.arg |= in;
        cmd.flags = MMC_RSP_SPI_R5 | MMC_RSP_R5 | MMC_CMD_AC;
cmd.arg里面没有加上crc7和end bit(1). 所以in就是Write Data or Stuff Bits. 这次命令是read, 所以in是Stuff Bits(都是0). 上面的address, fn看来都是mavell芯片的命令了. 

3, 如果是通过proc文件系统下载的, 我暂时没有看到wpa_supplicant里面有下载fireware的代码. 除非是默认就会下载?
(16:34 2011-12-14)
请教suxin wifi问题: firmware是在moal driver probe时下载的, 通过kernel request_firmwre()把firmware从用户空间copy到kernel空间.
module_init(woal_init_module)->woal_bus_register()->sdio_register_driver()
->woal_sdio_probe()->sdio_claim_host(func)
                  |->sdio_enable_func(func)
                  \->woal_add_card(card)->woal_init_sw()
                                       |->netlink_kernel_create()
                                       |->create_workqueue()
                                       |->woal_create_thread()
                                       |->woal_register_dev()->sdio_claim_host()
                                       .                    |->sdio_claim_irq()
                                       .                    |->sdio_set_block_size()
                                       .                    \->sdio_release_host()
                                       |->woal_init_fw()->sdio_claim_host()
                                       .                ->woal_read_reg()
                                       .                ->sdio_release_host()
                                       .                ->request_firmware()
                                       .                ->sdio_claim_host()
                                       .                ->mlan_dnld_fw()
                                       .                ->sdio_release_host()
                                       .                ->sdio_claim_host()
                                       .                ->mlan_init_fw
                                       .                ->sdio_release_host()
                                       .                ->wait_event_interruptible() 
                                       .                  Wait for mlan_init to 
                                       .                  complete
                                       \->woal_proc_init()
自己还是基本能力有问题. 其实这个woal_init_fw就只有两个函数调用. 一个是woal_add_card(), 一个是woal_switch_drv_mode(). 我当时怎么就没有搜索一下有一个函数调用呢?
从这里可以看到, 每次操作sdio时, 都会调用sdio_claim_host()和sdio_release_host().

10:08 2011-12-12
时间管理
0, 9:40

1, 本日
1), 爬楼梯。
2), -10:05 记日记.
3), 10:08-10:50? 读诗词. 
4), 60' 写辞职信。
5), 40' 找aiguo面谈。
6), 1h arm总结, 见"17:38 2011-12-12".

17:38 2011-12-12
(10:26 2011-12-13)
arm, 总结, 文档, arm总结0-1, 整理之前做的和arm有关的东西, 资料收集帖
原文见"log20091011_arm_vimicro.txt", 是我在882项目上所有arm日志, 笔记, 文档. 相信对于大家解决arm问题有基础的作用. 
1, arm处理器:
0), "16:17 2010-7-22". 列举了arm feature. "11:30 2010-7-24"详述了arm feature. 
1), cache. 
(1), cache maintenaince代价. "11:01 2010-8-17"
(2), 882中发现的与cache有关的问题. "11:30 2010-7-24"15, "20:32 2010-6-25",
(3), cache验证. "10:16 2010-6-13".
2), "17:13 2010-10-9": mmu, tlb
"11:33 2010-9-28": Linux下通过页表查物理地址实例. 
3), arm feature与AXI. 
(1), "13:01 2010-9-28". cache critical word frist用的AXI操作是wrap.
4), coresight:
(1), 稳定性. "21:16 2010-8-31"
5), irq测试, "22:14 2010-4-29"
6), arm验证, 
"13:48 2009-12-22": 用openocd读出OMAP3530 cp15寄存器, 判断该SOC Cortex-A8 L2 cache是否支持parity/ECC. 

2, arm开发工具: arm模拟器
1), "10:22 2011-10-24", linaro qemu + android运行成功(但输入设备无反应). 至少说明除了goldfish这种纯为模拟器设计的SOC模拟器, 在比较真实的硬件上运行android也有现成的环境. 对于需要考虑硬件环境的软件开发, 在linaro qemu上开发应该好于android goldfish模拟器.

3, arm开发工具: 调试器
"14:14 2010-1-22": 调试器比较: RVI, codehammer-a, openocd.
1), arm jtag/coresight
(1), arm11 jtag调试问题记录: "16:07 2009-11-17"-1-1)-(3).
2), debugger.
(1), ICE
CVS目录: D:\VC0882\document\arm\debug\
rvi使用方法.doc(log: "20:43 2010-8-9"), rvdebugger问题集.doc(log: "11:01 2010-6-8").
(2), openocd
"12:30 2010-1-26", openocd介绍, 代码初步浏览. "13:09 2009-3-10": openocd介绍. 
"19:14 2010-1-25", openocd编译使用文档. 
"12:09 2011-4-7", "12:30 2011-4-11": openocd编译过程. 
"14:38 2009-11-11", 在windows下mingW编译openocd. 
"15:05 2010-1-9": usbjtag比并口的优势. 
早期文档: "11:28 2009-11-29": openocd调试OMAP3530. "16:12 2010-1-7": openocd早期实验文档. 
(3), jlink使用文档: "12:37 2009-11-10"
(4), kgdb: "12:36 2010-1-26", kgdb原理和代码分析. 
(5), 杂: "10:50 2009-11-4": openocd, jlink使用. 
3), trace调试, 使用. "17:10 2010-5-7", "10:33 2010-5-19"

4, 环境
1), 移植. 
"9:49 2010-10-11"1: 移植工作从rvds3.0到rvds4.0, 从jlink/multiICE到RVI, arm926ej-s到Cortex-A8, console(aasp)的改进.
"15:39 2010-2-4": 移植笔记. 
"20:35 2010-1-26": 详细移植过程. 
2), "17:09 2011-7-25", arm imprecise data abort可以通过x2p寄存器判断是否是寄存器访问导致的data abort. 
3), 882环境稳定性调试. "10:12 2010-3-9".

5, "9:49 2010-10-11"2: trace的调试
1), 连线. 
2), TPIU timing测试.
3), 配置trace.

6, 文档
1), arm Cortex-A series programming guide, 超全的arm Cortex-A编程手册: DEN0013A_cortex_a_series_PG.pdf, 自"16:01 2011-8-18"
"10:41 2011-2-10"阅读笔记. 
2), huangwei列举了所有arm文档. "15:32 2010-4-19".

7, 总结: 
1), arm完整总结. "00:39 2010-7-2", 基本涉及到了arm移植验证的各个方面. 列出了882arm的主要工作. 希望是按照软件角度去做总结. 
2), 早期总结, 不重要. 
"22:24 2010-2-23".
3), arm入门文档阅读笔记. "12:55 2009-10-16".

10:26 2011-12-13
时间管理
0, 9:30

1, 本日
1), 10:26-11:40 15:38-16:16 arm总结: 浏览已有文档. 见"17:38 2011-12-12". "10:43 2011-12-13".
2), -12:37 -14:46 午饭, 休息, 活动. 
3), 14:47-15:34 支持AE youhai组同事NEON使用. 
4), 16:16-17:23 VC0882竞争对手全志A10分析. 见"16:46 2011-12-13".
5), 17:50-18:33 aiguo挽留: 可以给我提供软件开发机会: android中间件.

10:43 2011-12-13
arm, 总结, 文档, arm总结0-2, 总体思路
标题: 基于Arm SOC的软件开发调试实用技巧
0, 思路: 软件角度讲arm, 涉及到哪些方面? 希望中软件角度, 而不是从芯片/硬件角度介绍arm. 
"17:38 2011-12-12"是资料收集帖, 收集了我arm所有文档. 

1, arm也是个模块, 其实咱们看一个模块. 无非是两个事情. 一个是模块级本身的验证/使用. 一个是做其他模块可能需要了解该模块. arm这个模块比较特殊, 就是所有模块都和arm相关. 所以了解arm的api是很重要的. 
换个说法, arm是我们软件环境的硬件基础. 咱们软件主要是跑在arm上的. 所以软件开发必须对arm这个模块有基本的了解. 
a, memory分配/使用: memory区域划分, cache align, cache maintenance.
882中遇到的与arm模块级编程相关的问题. "11:30 2010-7-24"15.
(a), mengfandong, 非对齐dataabort.
(b), wangzhengwei, pmu normal->sleep, self-modify code.
(c), shuyu cif 0x8xxxxxxx cache,memory一致性问题. 
(d), yuyang dmac部分memory区域没有加cache操作. 
(e), "20:32 2010-6-25" venc问题. 后来是怎么解决的?

b, 中断: irq, fiq(用于performance critical, 可以与cache lockdown结合). 
c, 异常: user space进入kernel space; 系统出错(出错部分见下面"调试部分"). 

2, 说到软件开发, 少不了调试工具.
arm对于调试, 包括断点调试, profiling等都有支持. arm模拟器也是arm调试的重要助手.  

除了硬件断点, 所有调试器的基本原理都是使用指令停止arm运行, 然后由调试器接管arm. 只是这个指令, 在硬件调试器(ICE, jlink)和裸奔的软件调试器(qemu gdb)等都是通过break指令, 在Linux里面通过media的一条未定义指令实现. 
所有的调试器只能暂停arm(通过coresight cross trigger也可能停止其他处理器), 但是其它模块仍然继续运行. 

1), coresight
CoreSight是memory-mapped debug architecture. 通过Cross Trigger机制对多核调试有很好的支持. 
debug mode and monitor mode. 理论上后者说可以在系统运行时通过debugger读回系统状态. 只是没有见到应用. 
2), ICE使用技巧. 
3), openocd和gdb. 
4), arm performance monitor: oprofile, 
5), trace调试, 使用. "17:10 2010-5-7", "10:33 2010-5-19".
6), arm模拟器也是arm调试的重要助手. 可以演示在OMAP3530模拟器上调试aasp. linaro qemu运行android. 

3, 除了上述应用外, 如果项目更换了新的arm处理器, 环境部分需要做些修改. 这里以882为例说明. 见"00:39 2010-7-2". "15:39 2010-2-4"

4, arm模块本身的一些事情. 
我能在882里面有机会更多了解arm，得益于咱们组在ic设计中的深度介入，和公司没有完整购买arm的设计服务，如果在将来a9，a15里面，公司购买了完整的设计服务。不见得要了解这么多。当然，双核的验证环境还是要考虑的。
0), "16:17 2010-7-22". 列举了arm feature. "11:30 2010-7-24"详述了arm feature. 
1), arm feature验证. 
(1), cache, "10:16 2010-6-13". 这里埋一个包袱, 当测试结果数据量很大时, 用脚本和正则表达式处理数据. \todo
(2), interrupt. 
2), wfi与susepnd/resume. 
4), 882发现的bug:
(1), cache memory 行为与arm预期不符.
(2), "11:30 2010-7-24"-3-4)" 
882中寄存器使用的是strongly-ordered属性, 实际更合理的是device属性, 否则可能隐藏IC bug(重要!). kongyingqi就因为这个属性发现了一个IC bug: 配寄存器的时候没有配完就返回ok了. 
5), cross trigger: 只在多核arm中使用. 882是单核, 未验证. 

5, other
(1), arm架构发展. Cortex-A15, armv8.
(2), 国内外基于Arm架构的热门SOC: rk2918, amlogic, via, renses, qualcomm, ti, samsung, 
6, (15:26 2011-12-21)
参考资料
1), 我收集的arm所有资料在
\\10.0.2.36\sqmshare\Document\ARM\arm体系结构
其中debug文档在debug目录, 如下文档对于了解coresight有帮助: 
DDI0314H_coresight_components_trm.pdf
DGI0012B_coresight_technology_r1p0_sdg.pdf

2), VC1600项目上, huangwei上传的文档在
D:\VC1600WCVS\doc\module\CoreSight
D:\VC1600WCVS\doc\module\Cortex-A8

16:14 2011-12-13
arm, 总结, 文档, arm总结, arm对外api
1, 需要画一个arm, coresight, ICE, TRACE, PC在一起的框图. 在讲解时结合框图说明讲解的是哪一部分. 

16:46 2011-12-13
VC0882, SV, MP, 竞争对手, 全志A10
昂达VX610W测试，全志A10方案解析与比较（更新电流，使用体验，总结，基本更新完成）
http://bbs.imp3.net/thread-10445032-1-1.html

1, 初览, 芯片
注意图片中下的晶振，好吧，这种电子表上的两脚晶振好久没看到了……
全志方案周边成本还真是低啊……这样的晶振都能工作
忘记了好像酷比家的极品音质神器C60也是这样的晶振呢。。。

看了下封装尺寸大概有19mm×19mm，跟AML一样大，比RK29的16×16mm要大一圈
边上对比的是高通的QSD8250 Snapdragon初代芯片，大小为15×15mm

DDR3-1333, 512MBytes.

重力感应器，飞思卡尔的mma7660，很常用的型号
WIFI是来自CC&C的，芯片是realtek的8188cus，跟最常见的“外置WIFI模块”是一样的，都是通过USB接口，只是昂达把这玩意焊在机器里罢了（不过话说这WIFI模块上的晶振都比主控A10的用的好啊……）

PMIC: AXP209

像这种桶形的晶振，我怕RK29和AML是跑不稳的……相比之下RK29又是屏蔽罩啥的，显得娇贵不少啊，合志方案则土多了

不过做工这个呢，看看也罢了呵呵，能用就行
同德版的显卡，有的做的比网卡还寒碜，照样能跑还能小超……塞进机箱啥都看不到不是～

2, PMIC(bamvor: 自己找的资料, http://www.x-powers.com/download/AXP209%20Datasheet%20v1.0_cn.pdf)
AXP209 集成了一个自适应的USB-Compatible 的PWM 充电器，2 路降压转换器(Buck DC-DC converter)，5 路线性稳压器(LDO)，电压/电流/温度等多路12-Bit ADC，以及4 路可配置的GPIO。为保证电源系统安全稳定，AXP209 还整合了过/欠压(OVP/UVP)、过温(OTP)、过流(OCP)等保护电路。
1), 宽输入电压范围：
2.9V~6.3V (AMR：-0.3V~11V)
2), 全集成PWM 充电器 (PWM Charger)
最大充电电流可达1.8A
3), 2 路同步降压转换器 (DC-DC)
o DC-DC2：可在0.7-2.275V 之间调节,
25mV/step, 驱动能力1.6A, 支持VRC
o DC-DC3：可在0.7-3.5V 之间调节,
25mV/step, 驱动能力1.2A
4), 5 路线性稳压器 (LDO)
o LDO1：30mA，始终有效
o LDO2：低噪声LDO，1.8V~3.3V 可调节，
100mV/step, 驱动能力200mA
o LDO3：0.7-3.5V 可调节, 25mV/step, 驱
动能力200mA
o LDO4：低噪声LDO，1.8V~3.3V 可调节，
100mV/step, 驱动能力200mA
o LDO5：低噪声LDO, 1.8-3.3V 可调节,
100mV/step, 驱动能力50mA

3, dvfs
1) bamvor: 从楼主图上看, 频率是以12, 24的倍数调整. 
2), 相比之下，RK29的频率调节就比较一般，初步看来只有408MHz和912MHz两档。而AMLogic的主控频率可以在400-800MHz之间以40MHz为步进进行调节
3), dvfs电压
当主频低于400MHz时，电压为最低值，1.2V
主频超过400MHz时，电压上升到1.25V
主频超过600MHz时，电压上升到1.3V
当主频进一步提升超过900MHz时，电压达到了1.4V

相比之下，最低电压并不是很低，三星45nm工艺的蜂鸟/猎户座，运行在200MHz时最低电压为0.95V，并可手动降压到0.85V保持稳定。
考虑到最低电压是1.2V，并没有降太多，因此个人感觉人为设置最低频率到30MHz意义不大

4, A10最高电压可能难以到1.5G
我们并不清楚A10是不是采用了什么高电压的工艺，但不管怎么说，其1GHz主频时，核心工作在1.4V的电压下确实相当高，很难说再通过电压的提升获得更高的频率

以下是一些对比：
AML8726-M： 65nm工艺，600MHz@1.2V， 800MHz@1.28V
RK2918： 55nm工艺， 912MHz/1GHz @ 1.275V
三星S5PC110蜂鸟： 45nm工艺， 1GHz@1.25V，最低1.1V     1.5GHz@1.4V
三星S5PC210猎户座：45nm工艺，1.2GHz@1.275V，最低1.2V   1.6GHz@1.45V

5, DDR3的频率和memory使用
1), ddr频率
<6>[    0.520000] [cpu_freq] INF:sun4i_cpufreq_initclks: clocks pll=1008000000,cpu=1008000000,axi=336000000,ahp=168000000,apb=84000000
复制代码
有点乱，cpu频率1008MHz，AXI总线336MHz（说实话这个是比较高的，一般跑200MHz貌似），AHP总线168MHz，APB总线84MHz。
考虑到AXI总线的频率，猜测DDR3运行在DDR3-1333

这样带宽为5.4GB/s
相比之下：
AML8726-M： DDR2-800， 3.2GB/s
RK2918： DDR3-912，3.6GB/s
中星微VC0882： DDR3-1333， 5.4GB/s
三星蜂鸟：未知，貌似LPDDR2-800，3.2GB/s
三星猎户座：双通道（32bit×2）LPDDR2-800，6.4GB/s
Tegra 2： LPDDR2-600或者DDR2-667，2.7GB/s
TI OMAP4430/4460：双通道（32bit×2）LPDDR2-800，6.4GB/s 
2), memory使用
虽然总RAM是512M，留给安卓系统的是332M左右，比起RK2918（305M）要多些，比起AML（约400M)要少些
Kernel command line: console=ttyS0,115200 root=/dev/nandb rw init=/init mem=448M@0x40000000 fbmem=32M@0x5a000000

6, 视频
总结下，A10方案的本地视频播放可以说几乎完美，常见和冷门的格式都能通吃，太冷门的格式就没能测试。可以说A10方案的视频能力（规格和兼容性）是目前国产乃至国际芯片中最强的。
遗憾的是，自带的播放器很简陋，缺乏字幕和音轨切换的支持。虽然通过mvideoplayer可以实现字幕支持，但音轨切换还是不行。唯一可以硬解视频并软解切换音轨的diceplayer目前在A10方案上不可用。

7, 休眠唤醒
同时我们可以看到A10方案的待机电流约为18mA，比RK2918（27mA）要小
不过也有待机失败的时候，电流维持在100mA下不去

8, 功耗
其实全跑起来不比RK2918省电多少（setcpu压力测试，软解视频测试），但是闲置的时候省电省的多： RK2918在闲置节能上还有不少要做啊

9, 各芯片总体比较
后A8时代：国产芯和外来的鬼子，谁会更吃香

目前国际大厂的主推芯片已经纷纷转向A9双核，NVIDIA的Tegra 2，TI的OMAP4430，三星的Exynos 4210，高通的MSM8x60

本土芯片： 
AMlogic AML-8726M
瑞芯微 RK2918
中星微VC0882
合志 A10

本土平板使用的外来芯片：
三星S5PV210（蜂鸟）
Telechips TCC8803
飞思卡尔 i.MX515/535
TI OMAP36xx

总体情况：A10这个搅局者的加入，导致市场提前进入了价格战：
低端： A8/A9全面下探499元—— 昂达VX610W（A10）首先打出499的价格，配置较高，为1GHz/512 RAM/8G的配置。缺点是没有hdmi，但作为入门机还是挺不错的。
京东的W10 V2.0也打出了499，配置上有所精简，主要是256M 的RAM。但做工不错，附带遥控器hdmi等拿来接电视看片也不错。
原道最新发布的RK2918平板也下探到了499元……好吧，这些都是全志A10惹得。

中端：艾诺novo7将A8电容拉到了699，RK立刻以原道N12反击，直接电容8G 599上市。而7寸AML电容机型缺乏具有价格优势的强力关注机型。

展望下，今年下半年，在国产芯片单双核青黄不接的时候，单核依旧是市场的主力。全志的加入，价格战恐怕会成为一大主题。以VIA为代表的ARM9/ARM11被挤入2xx-3xx元档，A8/A9方案冲向400元大关。中端竞争依旧激烈，围绕着600元电容屏开始干起。差异化进一步减小，类似于之前的MP4市场，厂商能做的差异化，一方面是在模具和做工，另一方面是采用更高规格的显示屏
比如高分辨率，IPS广视角屏等等，这样才能立足于中高端市场。 高端双核，个人感觉下半年还没有厂商敢怎么碰。
总之，个人肤浅的见解：上半年捞够了的厂商，下半年好应付；上半年没捞足的厂商，碰到价格战够呛。

芯片这方面，主要是降低方案成本： A10，RK29和中星微都已支持DDR3，问题不大。AML目前是DDR2，成本较高，M3出来后必然会改用DDR3，甚至可能集成音频codec进一步降低成本。

点评下几款芯片：
合志A10： 集成度高，性能不错，续航优势。GPU中规中矩。在低端冲击AML，在中端冲击RK29。在系统软件的完善度上还要进一步下功夫。全志大概是看中了双核到来前的真空期，想在这后A8时代大卖一把。

RK2918：性能中规中矩，一大优势是GPU，玩游戏在国产芯片里目前拍第一，另一大优势是SDK2.0，软件进一步完善，UI也不错，看曝光视频流畅度挺好。目前把握着中高端市场，现在也想下探低端市场火拼A10。主打游戏是不错的选择，不过发热问题需要好好研究改善下。

AML：基本看M3的表现了，2.3.4，flash优化，这些只是传说不知道啥时候出现。M1会往低端跑。

中星微VC0882：功耗表现不错，性能中规中矩。但视频能力拉了一档，GPU更是悲剧。作为一个纯上网机，7寸低分屏跟A10拼压力大，8寸高分屏更是冲向7xx元。或许只能是对高分屏有爱又囊中羞涩之人的选择了。

三星蜂鸟：游戏老大。视频差一个档次，除去RMVB也基本够用。在中端徘徊，高端搭配IPS屏卖。游戏控的选择吧。

TCC8803：快被人遗忘了……同中星微。但基本搭配低分似乎，于是599电容，看看能从rk29和A10手里抢下多少肉吧……悬。。。

I.MX515/535： 其实视频还不错的……不过冷门了。不知道山寨能不能发扬光大。e人e本啥的就不说了，不是咱的菜

OMAP36xx： 中规中矩，视频差一档，如果没做dsp解码更是悲剧。貌似有搭配10寸ips的便宜机器。其他就冷门了。

17:25 2011-12-13
VC0882L, FPGA
GuYe邮件"882L_ICD mail group"_20111212_1033
谢谢Chen Ying 帮忙建好882L ICD mail group.
同时我们欢迎Wan Hongxing 和Liang Fengbo加入882L的项目组，Wan Hongxin主要负责pad/padc/pmu的工作，Liang Fengbo 会跟Fan Zhijun一起负责FPGA的工作。
882L的HPCC load 方法：
Command:
Setenv CVSROOT  /doing/project/vc0882L/cvsdb
Cvs co vc0882L
882L的相关文档可参考882的部分，which is located at:
\VC1600WCVS\doc\mas\VC0882
882L改动和新加的部分请完成并check into:
\VC1600WCVS\doc\mas\VC0882L
Zhifeng,
请你把Wan Hongxing and Liang Fengbo加入VC1600上，谢谢！

17:36 2011-12-13
android, 个人开发总结分享：Android学习及如何利用android来赚钱
http://topic.csdn.net/u/20111016/17/029e55b4-593b-4f00-9740-08c1101c166b.html
广告平台: 万普平台, 有米广告, 多盟, 安沃, 力美广告, 百度联盟, admob.

回帖: 
http://droid.so/analyze/ (智能手机应用软件分析平台)

shyidong:
还有一个比较出名的第三方平台没有提到吧？就是亿动广告smartmad,地址是www.smartmad.com,单价在0.15元左右，数据实时，现在貌似有视频广告，是按cpm结算的，每千次展示在70元，这个目前是比较高的，但是目前的视频广告可能会影响用户的体验。

9:56 2011-12-14
时间管理
0, 9:40

1, 本日
1), 9:00-10:39 诗词. 
期间下地铁走路，到公司杂事共30'. 
2), 10:40-11:40 建立dlist git目录.
3), 中午-15:40 caijin, yihongyu, zhaoyuan交流. 
4), 20' 18:20-19:09 请教suxin wifi问题, 结合代码理解. "10:21 2011-12-9"3.
5), 10' 17:05-17:31 支持xiaotao在发掘板子上跑panda_os, 并写文档. 见"17:05 2011-12-14". 
6), 17:31-18:18 加餐.

11:01 2011-12-14
软件技巧, git, 如何建立git server
liuxiaotao邮件"答复: 882 SV 工作总结 - 刘小涛"_20110829
如何建立 git server
//user1 git客户端登陆后的，用户名   //该用户将作为所有代码仓库和用户权限的管理者
//user2 git管理员
//创建名为user1的用户，
//指定其主目录为/opt/user1
sudo useradd -m user1 -d /opt/user1
sudo passwd user1
//创建git管理员账户user2并生成公私钥
sudo adduser user2
su - user2
// /home/user2/.ssh/id_rsa
ssh-keygen -t rsa       
一、自动生成gitosis-admin项目        
//初始化git仓库，初始化时会自动生成gitosis-admin项目，
//用于项目及用户的权限控制
cd /opt/user1
su - user1
gitosis-init < /home/user2/.ssh/id_rsa.pub
//客户端通过user2获取gitosis-admin项目
su user2
git clone user1@10.0.13.244:gitosis-admin.git
二、方法二：server端添加，代码从其他代码服务器取得
// server端从其他代码服务器取得项目
cd /opt/user1/repositories
su - user1
git clone --bare git://10.0.12.140/android/u-boot.git u-boot.git
cd u-boot.git
git --bare update-server-info
mv hooks/post-update.sample hooks/post-update
//本地修改 gitosis-admin 项目（增加u-boot）
cd /home/user2/gitosis-admin
vi gitosis.conf
//本地提交 gitosis-admin 项目
git commit -a -m "123"  或者 git update-index
git push
//本地获取代码
git clone user1@10.0.13.244:u-boot.git
三、方法二：代码在服务器上建立一个空仓库，本地add、push
//服务器上建立一个空仓库
mkdir teamwork.git
cd teamwork.git
git init --bare
//本地修改 gitosis-admin 项目（增加teamwork）
cd /home/user2/gitosis-admin
vi gitosis.conf
//本地提交 gitosis-admin 项目
git commit -a -m "123"  或者 git update-index
git push
//本地获取teamwork（空的项目）
git clone user1@10.0.13.244:teamwork.git
//本地推送代码到服务器
echo "" > main.c
git add .
git config --global user.name "name"
git config --global user.email "myemail"
git commit -am "initial version"
git remote add oringin user1@10.0.13.244:teamwork.git
git push origin master

17:05 2011-12-14
VC0882, SV, MP, 支持xiaotao在发掘板子上跑panda_os, 总结: 在fajue板子上跑panda_os要点; 文档, \todo 与CVS保持同步
CVS目录: "D:\VC0882\882bootloader\document\AE板子跑panda_os要点.txt"

1, 882和7882一样. 主要是方案不同导致, clock, power, 外围硬件不同. 至少要修改打包脚本. 
1), 打包脚本: 
(1), address: 如下三个地址需要改为panda_os链接地址(0x80000000). 
[AddrInfo]
loadPlainTextAddr = 0x80e80000 	// 	程序镜像明文装载地址，一般是0x80000000
loadCipherTextAddr = 0x80e80000	//	程序镜像密文装载地址
goAddr = 0x80e80000				//	Power on流程中，装载完程序镜像后，跳转运行的地址,一般设置为0。
(2), clock, 至少要修改clock info中clkBypassCtrl, 使其不修改storage pll和usb mclk, phy clock(以下统称三者为usb clock). 因为882 bootloader设计缺陷, 如果512info中usb clock变化, usb下载会失败, 现象是bootloader log反复循环打印几次, 最终PC提示下载失败. 
具体说来clkBypassCtrl可以改为0x001fffc8, 足够panda_os启动了. 
发掘的info: 
[CLKRSTInfor]
clkBypassCtrl = 0x001fe608

2), 下载/烧写: 
panda_os的sd/nand烧写工具和AE vortex不同. 所以用usb下载方式直接运行比较方便. 
(1), 下载
开机时按usb按键启动, 强制882弹出优盘. 如果不知道按键, 可以拿出sd卡或把sd/nand的data pin短路, 让882 sd/nand读取失败从而进入usb boot. 
usb启动和power一起可能会有个问题: panda_os里面如果编译了GPU和PMU, 为了GPU上电流程需要两次启动, 包括一次重启. 重启前usb按键也要按下, 否则系统会从sd/nand启动u-boot. 
(2), 烧写
panda_os的sd烧写工具在AE产品板上可以正确使用. 因为sd卡本身是通用的. 但是nand工具是集成在panda_os下的, 支持的nand芯片有限, 如果不支持此型号, 需要改写panda_os代码, 然后用usb下载panda_os. 

3), 如上所述, 由于power不同, panda_os下power控制可能会导致系统工作不正常. 这个问题我没有遇到过. 如果遇到, 如果必须有PMU模块. 考虑注释InitVC0882()(appsentry\init_src\appstart.c)的ifdef PMU部分, BootScript(aasp\Bootscript.c)的"power 1 1 1 1 1 1". 上电时不打开任何电源. 

10:16 2011-12-14
公司, 运营, 晋升/入职
1, 20100129
晋升吴岳先生为Deputy director of IT，负责公司IT部门管理工作，从2010年01月01日起生效。 
吴岳自加入中星微担任高级IT经理以来，工作认真，业绩优异。
2, 20100226
晋升高峻先生为模拟电路设计经理，Lead project plan and Design mixed-signal IP for SOC ，从2010年02月01日起生效。 
高峻自加入中星微担任高级模拟电路设计工程师以来，理论扎实，作风严谨，具备优秀的分析和设计能力，在高性能sinma-delta data convertor方面积累了丰富的设计经验，贡献突出。
3, 20100325
晋升王骝先生为IC设计经理，从2010年03月01日起生效。 
王骝自加入中星微担任IC设计工程师以来，工作扎实，对于新的方案和方法能够迅速展开评估调研，在VC0715项目中独立承担部分系统工作，成绩突出。
4, 20100430
晋升孔英祁先生为IC验证软件经理，从2010年04月01日起生效。 
孔英祁自加入中星微担任高级IC验证工程师以来，不断进步，在IC验证环境中是实现多种有效软件尝试，做出了很大的贡献。
晋升李栋梁先生为软件研发经理，从2010年04月01日起生效。 
李栋梁自加入中星微担任软件工程师以来，工作勤奋积极，勇于承担重任，在598项目的管理和协调中做出了很大贡献。
晋升蔡进先生为软件研发经理，从2010年04月01日起生效。 
蔡进自加入中星微担任软件工程师以来，积极认真，勇于探索，特别是在Video codec和3XX项目中做出了很大的贡献。
晋升凌明先生为软件研发经理，从2010年04月01日起生效。 
凌明自加入中星微担任软件工程师以来，工作负责认真，勇于创新，在项目的关键技术中承担重要任务，做出了很大的贡献。
晋升杜洁女士为财务分析经理，从2010年04月01日起生效。 
杜洁自加入中星微担任高级财务分析以来，对工作专心、踏实稳定，专业能力有很大提高，工作积极主动。 
5, 20100528
晋升张倩女士为IC设计经理，从2010年05月01日起生效。 
张倩自加入中星微担任IC设计工程师以来，工作认真努力，积极主动；参加了多个芯片的开发，在负责的USB、芯片时钟方案等各项任务中取得了出色的成绩。
晋升郦文其先生为IC设计经理，从2010年05月01日起生效。 
郦文其自加入中星微担任资深IC设计工程师以来，工作勤奋积极，在项目的关键技术中承担重任，成绩突出，做出了很大贡献。
晋升寿建能先生为IC设计经理，从2010年05月01日起生效。 
寿建能自加入中星微担任高级IC设计工程师以来，工作积极努力，认真钻研，在audio和视频编解码方面积累了很多经验。
晋升赵萍女士为人力资源经理，从2010年05月01日起生效。 
赵萍自加入中星微担任资深招聘专员以来，工作负责认真，具备良好的职业素质和招聘领域的专业技能，并有很大潜力承担更多的HR管理工作。
6, 20100630
经公司研究决定，特对常虹给予晋升奖励。
晋升常虹女士为PR经理，从2010年06月01日起生效。 
常虹女士自加入中星微担任资深PR专员以来，工作认真努力，积极主动，成功地完成了多项媒体活动的策划与执行，取得了出色的成绩。
希望她在新的岗位上，再接再厉，为公司的发展创造出更大的业绩！
7, 20100827
晋升温小勇先生为IC设计副总监，从2010年07月01日起生效。 
温小勇自加入中星微担任资深IC设计经理以来，工作积极主动，经验丰富，成功组建了现有团队，业绩突出；他目前领导的718设计团队承担了公司极为重要的监控产品芯片的开发工作。
晋升由海先生为项目经理，从2010年08月01日起生效。 
由海自加入中星微担任资深软件工程师以来，工作认真负责，积极主动，吃苦耐劳，善于钻研，积累了经验丰富，成绩突出。
晋升王亮先生为IC设计经理，从2010年08月01日起生效。 
王亮自加入中星微担任资深IC设计工程师以来，工作积极努力，参加了公司多个系列项目的后端设计工作，出色完成任务；思路清晰，具有较强的沟通、协调能力。能够积极应用并改进现有流程，大大提高了后端设计流程的效率。
晋升李肃刚先生为IC设计经理，从2010年08月01日起生效。 
李肃刚自加入中星微担任IC设计工程师以来，先后承担了VC0947、VC0332、VC0336B等项目的系统验证工作，出色完成本职工作并对其他项目提供了有力的技术支持；同时主动维护验证环境和相关文档，对验证组的整体发展做出了贡献。
晋升崔云飞先生为IC设计经理，从2010年08月01日起生效。 
崔云飞自加入中星微担任IC设计工程师以来，工作主动、热情、细致，是公司自主研发的memory controller的核心设计人员，表现出色。
8, 20100930
晋升黄小明先生为软件经理，从2010年09月01日起生效。 
黄小明自加入中星微担任嵌入式软件工程师以来，工作认真负责，责任感强；经验丰富，技术好，擅长软件算法和优化，能领导工程师完成较复杂的项目。
9, 20110316
晋升黄辰先生为系统经理，从2011年01月01日起生效。 
黄晨自加入中星微担任系统工程师以来，工作积极主动，注重细节，业绩突出，在手机硬件和系统设计，智能手机硬件和系统设计方面积累了丰富的经验。
晋升李平先生为内审总监，从2011年03月01日起生效。 
李平自加入中星微担任内审高级经理以来，工作认真负责，积极主动，吃苦耐劳，为公司内控和运营以及流程改善和推广做出巨大贡献。
晋升赵启旭先生为内审经理，从2011年03月01日起生效。 
赵启旭自加入中星微担任内审专员以来，工作积极努力，对工作充满激情，出色完成任务，具有较强的沟通、协调能力。在日常审计，咨询以及新业务流程建立方面，做出突出贡献。
晋升杨磊先生为IC架构经理，从2011年03月01日起生效。 
杨磊自加入中星微担任IC架构程师以来，在多个soc项目组中，以优异的表现，赢得了ICD/ICV工程师的尊敬。在882的设计过程中，不仅负责架构的性能，还深入一线从事DDRC的验证，为今后架构工作打下扎实基础。
晋升杨修涛先生为IC CAD经理，从2011年03月01日起生效。 
杨修涛自加入中星微担任CAD工程师以来，工作主动、热情、细致，及时响应项目进展中提出的工具要求，并按时完成，表现出色。
晋升戴春泉先生为IC设计经理，从2011年03月01日起生效。 
戴春泉自加入中星微担任资深IC设计工程师以来，工作积极主动、善于沟通，工作中多方面都能独当一面，具有一定的IC项目管理能力。
晋升陆东瑛先生为IC设计经理，从2011年03月01日起生效。 
戴春泉自加入中星微担任资深IC设计工程师以来，从事RTL设计与仿真验证，FPGA设计与调试，系统软硬件划分等工作。注重细节、踏实勤奋，表现出色。
晋升腰健勋先生为IC设计经理，从2011年03月01日起生效。 
腰健勋自加入中星微担任资深IC设计工程师以来，在若干领域经验丰富，在工作中，熟悉各种数字视频及静态图像压缩与解压协议，掌握许多存储管理器的设计要点，能快速搭建FPGA环境，工作认真负责，具有较强的沟通、协调能力，能出色完成任务。
晋升王陆冰先生为产品硬件设计经理，从2011年03月01日起生效。 
王陆冰自加入中星电子担任系统硬件工程师以来，工作主动认真，胜任公司交给的系统硬件相关工作；是公司从IC产品向监控产品转化过程中磨砺出的胜任监控产品化要求的人才；具备带领设计团队，承担Vilar系列产品硬件设计任务的能力，成绩突出。
晋升周如辉先生为产品硬件设计经理，从2011年03月01日起生效。 
周如辉自加入中星电子担任系统硬件工程师以来，工作认真负责，胜任公司交给的系统硬件相关工作，吃苦耐劳，善于钻研，经过了多个项目的锻炼，积累了经验丰富，成绩突出。
10, 20110527
经公司研究决定，从2011年6月1日起晋升行政总监俞楠为总裁助理，负责公司行政、
人力资源管理及其它工作，特此通知。
11, 20110616
晋升杜珊珊为资深知识产权专员，自2011年5月1日起生效。
杜珊珊自加入中星微担任专利工程师以来，工作踏实认真，服从大局，业务范围拓展到多个专业领域，公司同事都对她给予高度评价。
晋升苏磊为高级软件开发经理，自2011年5月1日起生效。
苏磊自加入中星电子担任软件开发经理以来，管理能力强，沟通能力强，执行能力强，对团队开展工作起到了重要作用。
晋升张智宇为平台开发经理，自2011年5月1日起生效。
张智宇自加入中星电子担任软件工程师以来，技术扎实，掌握核心模块，设备兼容接入，平台管理研发，有很强的工作能力。
晋升魏庆为开发经理，自2011年5月1日起生效。
魏庆自加入中星电子担任高级工程师以来，开发经验丰富，管理能力强，踏实稳定，完成了客户端开发，智能特性开发等较多工作，解决了大量的工作，表现优异。
晋升李海菊为高级软件工程师兼项目组长，自2011年5月1日起生效。
李海菊自加入中星电子担任软件工程师以来，完成了对平台SIP协议等关键模块的开发，对生产加密程序的开发，对VISS对接的开发，踏实肯干，勤奋务实。
晋升柳文凭为技术经理，自2011年5月1日起生效。
柳文凭自加入中星电子担任工程师以来，工作认真负责，胜任公司交给的相关工作，吃苦耐劳善于钻研，经过项目的锻炼积累了丰富的经验，成绩突出。 
晋升刘清泉为技术经理，自2011年5月1日起生效。
刘清泉自加入中星电子担任高级软件工程师以来，在规定的时间内出色的完成了公司的任务，表现优异，对产品的后续发展有个人独到的见解。
晋升宋家扬为专利经理，自2011年5月1日起生效。
宋家扬自加入中星微担任专利工程师以来，工作踏实认真，业务能力突出，且具有很强的责任感，具有承担更多工作职责的潜力。
晋升孙敏为薪酬福利经理，自2011年6月1日起生效。
孙敏自加入中星微担任人事专员以来，工作量较大，工作内容繁多，但她在工作中耐心细致，工作有条不紊，条理清晰，出色完成工作，成绩优异。
12, 20110627
经公司研究决定，从2011年6月13日起，晋升杨树华女士为Acting CFO兼财务总监，负责公司财务部的管理工作，特此通知。
13, 20110725
晋升陈峰为中星电子办公室主任，自2011年8月1日起生效。
陈峰自加入中星电子担任办公室副主任以来，工作认真负责，工作成绩突出，对公司各部门的支持配合积极有效。
14, 20110727
晋升彭斌为销售总监，自2011年8月1日起生效。
彭斌自加入中星微电子有限公司以来，工作认真负责，工作成绩突出。
15, 20110804
晋升李建平为软件部经理，自2011年8月1日起生效。
李建平自加入中星微电子有限公司以来，工作踏实敬业，贡献突出，是核心的主力工程师，也是一个合格的带头人员。
晋升胡欣为软件副经理，自2011年8月1日起生效。
胡欣自加入中星微电子有限公司以来，工作踏实认真，服从大局，技术范围扩展到多个专业领域，公司同事都对他给予高度评价。
16, 20110817
晋升 邱嵩 为高级总监，自2011年8月1日起生效。
邱嵩自加入中星微电子有限公司以来，工作踏实敬业，贡献突出，希望 邱嵩 在新的岗位上，再接再厉，为公司的发展创造出更大的业绩！ 
17, 20110830
晋升 易宏宇 为 软件经理，自2011年7月1日起生效。
易宏宇 自加入中星电子股份有限公司以来，工作踏实敬业，贡献突出，希望 易宏宇 在新的岗位上，再接再厉，为公司的发展创造出更大的业绩！ 
18, 20110901
晋升付娅丽为测试经理，自2011年8月1日起生效。
晋升王旭为IC Verification Manager，自2011年8月1日起生效。
19, 20110915
晋升 杨慧岗 为硬件测试经理，自2011年 9 月15日起生效。
晋升 姜  博 为IC设计经理， 自2011年 9 月15日起生效。
20, 20110916
晋升 刘利剑 为IC验证经理，自2011年8月1日起生效。
21, 20110919
晋升 苏新 为软件研发经理，自2011年9月1日起生效。
晋升 曹敏峰 为软件产品副总监，自2011年9月1日起生效。
22, 20110920
晋升 赵原 为软件总监，自2011年9月1日起生效。
23, 20111026
晋升 陈海涛 为 AE部门总监 ，自2011年10月12日起生效。
晋升  吳啟瑞 为 AE 經理，自2011年10月12日起生效。
晋升 廖建伯 为 FAE 副理 ，自2011年10月12日起生效。
晋升 連宏明 为 AE 副理 ，自2011年10月12日起生效。
晋升 王鵬鈞 为 FAE 副理 ，自2011年10月12日起生效。
晋升 谢  荣 为软件部经理，自2011年10月12日起生效。
晋升 田宝增 为硬件AE经理，自2011年10月12日起生效。
24, 20111110
晋升 南月香 为 集团预算控制及 IC 事业部财务副总监，自2011年11月10日起生效。
晋升 曹海鹰 为 集团财报及中星电子事业部财务副总监，自2011年11月10日起生效。
25, 20111122
晋升 李国新 为 青岛中星微研发副总经理，自2011年11月 22日起生效。
晋升 霍晓芳 为 青岛中星微IC设计总监，自2011年11月 22日起生效。
晋升 侯华敏 为 青岛中星微IC后端总监，自2011年11月 22日起生效。
晋升 董欣 为 青岛中星微IC设计总监，自2011年11月 22日起生效。
晋升 王欣 为 青岛中星微IC验证副总监，自2011年11月 22日起生效。
晋升 李树杰 为 青岛中星微IC验证副总监，自2011年11月 22日起生效。
晋升 艾国 为 青岛中星微IC原型副总监，自2011年11月 22日起生效。
晋升 顾页 为 青岛中星微IC设计高级经理，自2011年11月 22日起生效。
晋升 刘子熹 为 青岛中星微IC设计高级经理，自2011年11月 22日起生效。
晋升 万红星 为 青岛中星微IC设计经理，自2011年11月 22日起生效。
bamvor: 成立青岛中星微后, 原来老的经理, 总监都升了一级.
26, 20111201
晋升 陳智明 为  資深業務經理，自2011年12月1日起生效。
晋升 張豐敏 为  資深行政經理，自2011年12月1日起生效。
27, 20111205
晋升 蔡斐 为 法务经理，自2011年12月1日起生效。
蔡斐 自加入中星微担任法务专员以来，处事积极热情认真，工作态度严谨，来公司三年进度很快，业务能力有很大提升。
28, 20111208
晋升 陈华 为 法务副经理，自2012年1月 1日起生效。
晋升 陆城滨 为 销售财务经理，自2012年1月 1日起生效。
晋升 潘晓芳 为 费用财务经理，自2012年1月 1日起生效。
晋升 董蕊  为 上海分公司会计主管，自2012年1月 1日起生效。
晋升 潘蔚芬 为 深圳分公司会计主管，自2012年1月 1日起生效。

17:08 2011-12-16
VC0882, SV, MP, 竞争对手, A9, A15; Qualcomm Krait
0, 引自"16:46 2011-12-13": 目前国际大厂的主推芯片已经纷纷转向A9双核，NVIDIA的Tegra 2，TI的OMAP4430，三星的Exynos 4210，高通的MSM8x60.

我自己知道的双核A15有TI OMAP5和Samsung Exynos 5250. 

我自己打算看看这几个处理器。 Tegra2和OMAP4430之前我已经有了解了。后者有开源社区PandaBoard支持。

1, Samsung SOC, Exynos共有三代
型号 	半导体技术 	CPU 指令集 	CPU 	GPU 	内存技术 	可达性 	应用装置
S5L8900 90 nm 	        ARMv6 	        412 MHz Single-Core ARM11 	PowerVR MBX Lite 	eDRAM 	2007 	Apple iPhone, Apple iPhone 3G, Apple iPod touch 1G, Apple iPod touch 2G
S3C6410 65 nm 	        ARMv6 	        533/667/800 MHz Single-core ARM11 	2D/3D Graphics Acceleration 	DDR 	2009 	Samsung GT-i5510 Galaxy 551, Samsung GT-i5700 Galaxy Spica, Samsung M910 Intercept
S5PC100 65 nm 	        ARMv7 	        667/833 MHz Single-core ARM Cortex-A8 	PowerVR SGX535 	LPDDR2, DDR2 	2009 	Apple iPhone 3GS, Apple iPod touch 3G
Exynos 3110 45 nm 	ARMv7 	        1 GHz Single-core ARM Cortex-A8 	PowerVR SGX540 	LPDDR1, LPDDR2, or DDR2 	2010 	Samsung Galaxy S line, Samsung GT-S8500 Wave, Nexus S, Meizu M9, Samsung Galaxy Tab, Samsung Droid Charge, Exhibit 4G, Samsung Infuse
Exynos 4210 45 nm 	ARMv7 	        1-1.4 GHz Dual-core ARM Cortex-A9 	ARM Mali-400 MP4 	LPDDR2, DDR2 or DDR3 	2011 	Samsung Galaxy S II, Samsung Galaxy Note, Samsung Galaxy Tab 7.0 Plus, Hardkernel ODROID-A
Exynos 4212 32 nm 	ARMv7 	        1.5 GHz Dual-core ARM Cortex-A9 	ARM Mali-400 MP4 	LPDDR2, DDR2 or DDR3 	2011 	
Exynos 5250 32 nm 	ARMv7 	        2.0 GHz Dual-core ARM Cortex-A15 MPCore 			2012 	

2, Samsung Exynos 4210
1), Exynos 4210 is a system-on-a-chip (SoC) based on the 32-bit RISC processor for smartphones, tablet PCs, and Netbook markets. Exynos 4210 provides the best performance features such as dual core CPU, highest memory bandwidth, world's first native triple display, 1080p video decode and encode hardware, 3D graphics hardware, and high-speed interfaces such as SATA and USB.  	 	
Exynos 4210 uses the CortexA9 dual core, which is 25% DMIPS faster than the CortexA8 core. It provides 6.4GB/s memory bandwidth for heavy traffic operations such as 1080p video en/decoding, 3D graphics display, and native triple display. The application processor supports dynamic virtual address mapping. This feature will help the software engineers to fully utilize the memory resources with ease.
Exynos 4210 provides the best 3D graphics performance and native triple display. The native triple display, in particular, supports WSVGA resolution of two main LCD displays and 1080p HDTV display throughout HDMI, simultaneously. This is possible due to the capability of Exynos 4210 to support separate post processing pipelines.
Exynos 4210 lowers the Bill of Materials (BOM) by integrating the following IPs: world's first DDR3 interfaces that will prepare bit cross with DDR2; 8 channels of I2C for a variety of sensors; SATA2; the GPS baseband; and a variety of USB derivatives (USB Host 2.0, Device 2.0, and HSIC interfaces with PHY transceivers to be connected with 802.11n, Ethernet, HSPA+, and 4G LTE modem). The application processor also supports industry's first DDR based eMMC 4.4 interfaces to increase the file system's performance.
Exynos 4210 is available as FCMSP Package on Package (PoP), which has a 0.45mm ball pitch with LPDDR2 configuration. The MCP will depend upon the customer's requirement.
2), 详细feature
(1), cache size: 
- 32KB (Instruction)/32KB (Data) L1 Cache and 1MB L2 Cache
- 1.2Hz and 1.0GHz Core Frequency: Voltage 1.2V
(2), 双口memory，带宽会更大。
- 2-ports 32-bit 800Mbps LPDDR2/DDR2/DDR3 Interfaces
(3), usb支持HSIC, 这个原来不知道.  
- USB 2.0 Device 1-channel, supporting FS/HS (12Mbps/480Mbps) with on-chip PHY
- USB 2.0 Host 1-channel, supporting LS/FS/HS (1.5Mbps/12Mbps/480Mbps) with on-chip PHY
- USB HSIC 2-channel, supporting (480Mbps) with on-chip PHY

bamvor: synopsys描述HSIC: 
http://www.synopsys.com.cn/information/white-paper/usb-design-integrated-solution
高速InterChip USB
作为一种较新的USB接口，高速InterChip USB（HSIC）正在成为与上文所述控制器/PHY分离方式不同的另一种“分散集成”方法的基础。HSIC USB不是用于支持USB本身的“分散集成”，而是更容易地将其它原先分隔在多个芯片内的其它功能互连起来。此标准充分发挥了现有USB基础设施的可用性和知识，能够在同一印刷电路板或在同一多芯片模块内的各芯片之间达成互连。

除了“分散集成”概念以外，HSIC USB还提供了一种简易的方法，能够将许多种不同类型的功能连接到同一个系统内。由于USB接口已经广泛地应用在PC机内，一种较好的方法是成为其它协议的标准接口，例如WiFi、Bluetooth、闪存读卡器以及其它设备。例如，HSIC USB可以用于在尺寸小巧的PC机或智能手机内连接内嵌式的网络摄像头或闪存读卡器。

这一标准能够让USB协议用于各芯片之间的信息交流，而无需采用传统的USB电缆和插头。HSIC还能够绕开PHY所面临的最大难题，让接口从总体上成为数字电路式接口。

HSIC支持很高的数据传输速率，所以可以通过提供USB PHY实现来达成芯片间互连，并同时避免采用PHY内所使用的电缆和模拟部件。这种标准可以运行在较低的CMOS电平下，而且接口相当简单——只有2根导线。这一标准还能通过避免采用模拟元器件而节省功耗、最大程度地降低成本，并有助于降低风险。HSIC将于2008年开始应用于设计领域。

2, Qualcomm最新的SOC是基于Krait核心. Krait核心感觉是和A15有正面竞争, 达到3.3DMIPS.
自: http://www.cnblogs.com/huaping-audio/archive/2011/10/18/2216731.html

17:51 2011-12-16
时间管理
0, 14:30

1, 本日
1), 支持xiaotao查ADC测电压不准的问题. 
2), 17:00-17:51 关注A9, A15, 见"17:08 2011-12-16".

15:13 2011-12-19
时间管理
0, 9:35

1, 本日
1), 2h+1h, 和zhaoyuan讨论是否离职(含午饭).
2), 15:16-15:32 整理工作交接. 见"15:16 2011-12-19".
3), 15:33-17:41 882L sd卡稳定性. 见"15:33 2011-12-19".
4), 30' 对公司的看法. 见"18:19 2011-12-19".

15:16 2011-12-19
公司, 离职, 工作交接, 整理工作交接内容
1, aiguo邮件 
Hi，all
Zhangjian最近要离职，大家尽快看看需要zhangjian给大家training什么或者结交工作给谁。
Hi，Zhangjian
你把你初步的结交工作的list发给大家，看看大家还需要什么。

2, LiDongLiang邮件
Zhangjian 给大家再讲一次 contex A8 吧
比较一下与arm926 的区别
Zhangjian以前写的linux 启动文档，就是start_kernel() 那截
能够也给讲一下

3, zhangjian邮件
hi, all

计划整理的内容包括arm/环境, 工作日志/perl脚本两部分. 估计总结需要2周, 总结后交接还需要一周. 

详情如下: 
1, arm和环境: 内容较多, 计划分三方面介绍(估计需要两个半天). 介绍的时候会存在很多和arm9对比的地方. 
1), arm api: memory, 中断, 异常..., 也就是所有软件开发人员的arm编程模型. 
2), 调试: coresight, ICE/gdb, qemu...
3), 环境移植: 如果更换了arm, 环境需要做哪些修改? 
4), arm详细架构介绍: 这部分比较暧昧, 如果像我一样类似882 arm验证工作, 就需要了解. 其他情况不需要了解. 
2, power: 这部分已经做过总结了, 是否就不再讲了. 看看由谁交接工作, 有问题我们可以直接讨论. 
3, Linux porting: 这部分xiaotao, dongliang比较清楚. 之前大家也写过文档, 而且我最近也没做什么具体工作, 我看是不是不需要再讲了. 
至于dongliang说的Linux启动部分, 其实我没有完整看过start_kernel部分, 只是看了与SOC移植有关的地方. 

另外, 我在工作日志和脚本使用方面有些心得想和大家分享.

15:33 2011-12-19
VC0882L, FPGA, 稳定性, sd稳定性; FPGA设计问题导致不稳定
1, fuyali邮件
No.	 preview sd copy
1#	 pass 3M file pass；20M file fail
2#	 fail(fpga板子video子板接口fail) 700k file fail
3#	 pass 700k file fail
4#	 pass 700k file fail
5#	 pass 700k file fail
6#	 pass fail，找不到sd卡
目前看来所有sd都有问题，Sd copy的问题还需要进一步看看是否软件问题。
2, 看看板子. sd copy死在_VIM_SD_IntStatusInquireACmd, status是0x80.
[7]	DMA_BOUNDARY	1'h0	"DMA Address Boundary state, this bit is set to 1 if host detect the system memory boundary after running out of all linked list iterm registers (up to 4) during DMA transfer, it's used to request software to update new value in DMA address and length registers. Software write 1 will clear this bit, but write 0 is ignored.
0: No DMA address boundary interrupt happended
1: DMA address boundary interrput happended"

重新跑, 看看是否一开始就死在"_VIM_SD_IntStatusInquireACmd"?
的确是第一次进去(sd write)就没出来. 而且如果强制跳过, 下次sd读的时候, get dma idle fail, 说明是sd write没有正确完成. 

3, 拔掉多余的子板实验. 仍然不行. 
用fuyali说3M copy正确的#1板子, 没法认出卡. 还不如#5. 
如果在#5上实验sd speed multi, read是对的. write才没法完成.
sd  SD0:/>speed
[SD_MODULE]->do_sd_Speed()
Single/Multi : (Int)/[1]
sd number 0, 1, 2, 3: (Int)/[0]
[43m[37m[SD   MSG][0m	do_sd_Speed arg input succeed!
[43m[37m[SD   MSG][0m	time1-time0(ms)=510
[43m[37m[SD   MSG][0m	total=5242880
[43m[37m[SD   MSG][0m	Multi Read Speed is: 10280156 bytes/second
降频后, 也是一样的. 

换用#1板子, 这次sd卡可以正常mount. sd speed, fatspeed(写读1Mbytes文件)都正确. 
cmp 1Mbytes文件正确, cmp 20Mbyte文件hang在get dma idle. 
0x60033024: 0x00050F04
用1Mbytes文件测试cp, 测试到第十次, hang在_VIM_SD_SetDmaCfg. 
copy 20Mbytes文件, 通过ICE在_VIM_SD_SetDmaCfg设置断点(遇到断点后打印提示, 然后继续运行), 可以正确复制20MBytes文件, 文件比较无误. 
在0x6000008c寄存器里面设置divider为0xf0f0f0f, copy和cmp也正确. 也就是说sd卡跑6M clock时正确. 
说明是频率问题? 

PS: fanzhijun说考虑底座高低.#5板子是底座是低的, 可能是接触问题. 

4, 这样能否说明不是软件问题?
先试试别的板子, 看看现象是否一致. 
1), #5仍然不行. 死在_VIM_SD_IntStatusInquireACmd.
2), #3不行, 同#5.

本次测试的cf code, axf等: \\10.0.13.101\share\zhangjian\projects\VC0882L\20111219_sd

5, 发信:
Hi, beizhan

#1降频后copy, 20Mbytes文件比较正确.  
降频的命令是: memwrite 0x6000008c 0x0f0f0f0f

其余板子(#3, #5)降频后仍然不行, 怀疑是板子问题. 

Zhangjian

6, (11:26 2011-12-21)
fanzhijun想起原来在882 FPGA上遇到的sd不稳定问题是由于sd没有用bufg. 重新做了一版FPGA(sd使用bufg), 之前不稳定的6个FPGA, 不需要降频也可以了. 
bamvor: 问题是原来zhanglu用的FPGA CF code不应该有sd不稳定的问题吧. 这个并没有记录. 说不清. 

9:47 2011-12-20
时间管理
0, 9:40

1, 本日
1), 9:45-10:22 和bianyingfeng讨论suspend/resume问题. 
2), 10:23-10:41 dairy. 
3), 10:54-11:34 30'(外面) arm总结: arm external api. 见"10:54 2011-12-20". 
4), 午饭, 杂. 
5), 30' 午休. 
6), 20' 简单运动. 
7), 15:45-15:59 取劳动合同. 
8), 15:59-18:20(实际40') arm总结: arm debugger, simulator. 见"16:05 2011-12-20".
被9), 10)打断. 
9), 10' 支持xiaotao调试板子. 
10), 16:37-17:02 dairy.
11), 17:33-17:40 取保密协议. 
12) 18:20-18:30 抢电脑, 抢到dell 620电脑. 

10:54 2011-12-20
(8:59 2011-12-21)
(14:24 2011-12-27)
arm, 总结, 文档, arm总结1, arm external api
1, 这次总结我自己的立意就是希望和大家分享一些, 软件上用的到的东西. 
就是说在arm soc上大家验证各自的模块功能时, 可能会遇到的一些和arm相关的问题. 

换个说法, arm是我们软件环境的硬件基础. 咱们软件主要是跑在arm上的. 所以软件开发必须对arm这个模块有基本的了解. 

a8的编程模型，后面要对应这个框图说明每部分。尤其是cache maintenance这类需要了解数据流的情况。
"D:\VC0882\document\arm\VC0882_A8_CPU_Wrapper.vsd".

arm在soc中的位置。arm是一个模块，各模块之间需要交互，arm 停，其它模块可能还在运行，所以debugger只能停arm，不要误以为arm 停其它模块也跟着停。
从总线角度看arm是一个master。系统里面也有其它processor: gpu(arm mali有mmu,  cache), dsp(vc0718 vdsp有cache)。

2, 代码在arm上运行, 首先是memory分配/使用, mmu, cache, tlb对于软件的影响
涉及到: memory区域划分, cache align, cache maintenance.
1), arm架构是统一寻址的, 不像x86一样有memory, I/O不同的区域, 也没有要兼容ISA 16bit总线需要保留的DMA区域. 
所有memory, 包括模块寄存器都是统一寻址的. 物理地址怎么分配的看mas(\todo 插图), Nucleus咱们是平映射. Linux怎么用见lingming的文档. 
这里我想说的是, 要区分软件(也就是arm)能看到的memory和模块能看到的memory. 例如882里面0x000000000开始的128MBytes只有arm能看到. 模块看不到. 所以我们有一个remap bit mask. 
要区分访问了不能访问的memory是什么行为. 对于arm来说如果是访问default slave不会出错. 访问不存在的寄存器会导致data abort(apt timeout, 详见X2P). 对于模块来说, 可能都不会出错. 882里面很多模块可以查到DMA status是里面有错. 但是done也会有. 所以模块driver要注意. 不是有了done就没错. 

882里面由于pmu映射的关系, 可能存在两个memory实际指向同一个物理内容. 这样导致的一个问题. 就是同一个ddr区域, 对于arm来说以两个区域的地址分别进入了cache. cache一致性就没法保证了. 

cache align: 我在882上在dongliang 598基础上, 改为了更为通用的方式. cache maintanence operation只能以cache line为单位. 如果cache line没有对齐, 可以导致多余的操作. 

cache maintenance: memory分配由OS管理. 但是cache maintenance在nucleus里面需要自己做. Linux里面部分也需要软件自己做. 

3), 882中遇到的与arm模块级编程相关的问题. "11:30 2010-7-24"15.
(1), mengfandong, 非对齐dataabort.
(2), wangzhengwei, pmu normal->sleep, self-modify code.
(3), shuyu cif 0x8xxxxxxx cache,memory一致性问题. 
(4), yuyang dmac部分memory区域没有加cache操作. 
(5), "20:32 2010-6-25" venc问题. 后来是怎么解决的?

这里要再次提一下yangxing的arm cache debug tool. 

4), 除了一致性问题，cache属性对软件的影响，emi norflash。
非对齐访问。

3, 中断和异常
中断: irq, fiq(用于performance critical, 可以与cache lockdown结合，598 gpio模拟usb). 
中断大家都很熟悉了，os一般会有提供好的接口。
考虑一个是中断嵌套。首先a8不支持嵌套。nucleus里面lisr是在irq模式处理的，所以也不会有嵌套。hisr时已经退出了中断模式，所以有可能嵌套? 待确认。

by the way，a8本身也有出去的中断：performance monitor, cross trigger，这些留到后面介绍。

异常: 也许是正常的 也许是出错了。
882 fpga阶段需要在Linux 下进一步测试vivante gpu。但AE开始移植Linux 后，发现Linux 非常慢，top 命令几秒才能刷出一次。后来zhangpu 发现是rvdebugger打开了semihost：linux运行很慢。原因是rvdebugger 在每次arm 进入svc状态时判断是否有semihost操作。

semihost demo, semi host 下的aasp. \todo: 包袱：882环境修改的一部分：使aasp仅依赖标准库。

user space进入kernel space; 系统出错(出错部分见下面"调试部分"). 
reset, undefine instruction, data abort, prefetch abort, supervision call, irq, fiq.
异常和处理器模式对应关系。
除了中断，reset其余的und, dabt, pabt三种咱们在这里讨论。
pabt一定是出错了（?）。

首先exception不一定表示系统出错。
像linux里面user space, kernel space切换，缺页异常。ice/gdb调试。都会导致异常，这些异常是正常的异常。

4, \todo
performance monitor, 在这次介绍么? 如果介绍就一起把bus performance monitor 一起介绍？这个内容其实适合单独讲，可以结合sysfs介绍，最好结合youhai gpu 实例。可以请wenlei 帮我看看。

16:05 2011-12-20
arm, 总结, 文档, arm总结2, arm debug tool: realview ICE, gdb, qemu, ftrace, profile
这部分讲座要有demo. 
1, 调试
arm对于调试, 包括断点调试, profiling等都有支持. arm模拟器也是arm调试的重要助手.  
1), 调试工具其实包括很多, 像realview ICE, jlink, openocd都是硬件调试器, 此外还有profiling工具, 例如realview trace, trace32等等. 
2), 类似oprofile这种调试工具, 我用的不多, 不会详细介绍. \todo 最好能在arm模拟器上把profile跑起来. 
3), Linux kernel里面的调试工具, kgdb, ftrace(\todo 这个之前有文档). 
4), 像valgrind这种纯软件debug工具(memory溢出检测, profile), 就不详细介绍了. 我之前试用过, 可以简单说说?
5), 此外, 还有模拟器. 模拟器其实是提供了一个理想的硬件, 便于大家调试软件. 
比较有名的例如google提供的android模拟器(goldfish). 这个模拟器是基于qemu进一步开发的, 在android4.0里面, 通过qemu还做了3D加速. 
这里希望介绍qemu这个模拟器. 我在vimicro期间, 借助qemu做了一些事情, 对我提供效率有很大帮助. 
此外还有arm提供的ISSM, RTSM等模拟器. 在最新的arm DS5开发环境里面. 可以用RTSM做应用程序调试的demo. 只是这个RTSM似乎没有开源的kernel版本, 所以自己做有些困难(当然也可以自己移植, 工作量就是大一些). 

2, coresight, jtag
这里只是简单说一下原理. 不深入说明? 本节介绍trace的时候再说明完整的coresight. 
\todo: 与VC0882(Cortex-A8) coresight, arm11 jtag验证相关部分留到arm验证部分详细说明. 
1), coresight
CoreSight是memory-mapped debug architecture. 通过Cross Trigger机制对多核调试有很好的支持. 
debug mode and monitor mode. 理论上后者说可以在系统运行时通过debugger读回系统状态. 只是没有见到应用. 

3, ICE
除了硬件断点, 所有调试器的基本原理都是使用指令停止arm运行, 然后由调试器接管arm. 只是这个指令, 在硬件调试器(ICE, jlink)和裸奔的软件调试器(qemu gdb)等都是通过break指令, 在Linux里面通过media的一条未定义指令实现. 
所有的调试器只能暂停arm(通过coresight cross trigger也可能停止其他处理器), 但是其它模块仍然继续运行. 

CVS目录: D:\VC0882\document\arm\debug\
rvi使用方法.doc(log: "20:43 2010-8-9"), rvdebugger问题集.doc(log: "11:01 2010-6-8").
都是882项目期间整理的, 开始遇到问题是直接支持, 后来发现时间不够用, 所以写成文档, 建议大家先看文档. 再找我. 

\todo 写文档, 加入到"rvi使用方法.doc"
1), ICE demo: 需要一个异常调试的过程. 
2), 设置条件断点, 断点事件. \todo 联想: gdb调试也有类似技巧. 举例子. 

4, qemu:
qemu是一个开源的模拟器. 支持x86, arm, mips等架构. 支持完全模拟和直接运行Linux application两种模式. 我使用的是第一个方式. 
1), 之前和LiaoZhiCheng一起做Linux porting时, 当时是希望完全独立完成. 所以基本功能ok之前没有考虑AE zhaoyuan team的移植. 
Linux porting已经总结过文档, 包括使用low level debug等方式调试. 
当时kernel运行起来以后, 文件系统的helloworld迟迟没有打印.
为了便于调试, 制作了一个在qemu realview和830sv通用的文件系统(rootfs, cpio压缩, 只是inittab里面支持两个realview和830的串口). 然后同步对比kernel加载文件系统的完整过程, 后来发现其实文件系统helloworld已经执行了, 只是没有打印. 
2), linaro优化了qemu, 保证linaro编译的beagle和realview Cortex-A9 MP的影响在qemu和实际板子都可以运行. 
我实验过linaro提供的image, 可以正确运行到android启动, 但是usb鼠标键盘, usbnet有问题. 看起来是可以的. 在beagle board qemu开发其实比goldfish好一些. 因为前者是有实际硬件的. 
\todo: demo. 我自己编译的linaro beagle kernel 3.1, 正确运行. 
\todo 希望可以和DS5的profile实验. 
"10:22 2011-10-24", linaro qemu + android运行成功(但输入设备无反应). 至少说明除了goldfish这种纯为模拟器设计的SOC模拟器, 在比较真实的硬件上运行android也有现成的环境. 对于需要考虑硬件环境的软件开发, 在linaro qemu上开发应该好于android goldfish模拟器.
3), qemu调试beagle board aasp. 
其实如果稍加修改, 可以在qemu上测试panda_os软件是否可用. 有没有什么纯软件的bug. 

5, openocd
openocd是一套开源的调试工具. openocd详细介绍"13:09 2009-3-10".
\todo openocd要不要demo? 因为openocd是我比较看好的, 希望将来可以用上. 
\todo 我在882项目期间, 针对openocd花了很大精力, 所以肯定要整理成文档. 这个文档看起来需要单独准备了. 

openocd与arm验证: 
"13:48 2009-12-22": 用openocd读出OMAP3530 cp15寄存器, 判断该SOC Cortex-A8 L2 cache是否支持parity/ECC. 

6, kgdb原理, 和gdb使用swi指令不同, kgdb使用未定义指令. 
"12:36 2010-1-26", kgdb原理和代码分析. 

7, trace调试, 使用. 
"17:10 2010-5-7", "10:33 2010-5-19".
这里再介绍完整的coresight? 
D:\VC0882\document\arm\debug\cortex-a8_debug_architechture.gif"

8, demo: 
debugger要有demo. 
debugger调试中如何手动恢复现场. 

9, 其它: 
), arm performance monitor: oprofile, 
), arm jtag/coresight
), arm11 jtag调试问题记录: "16:07 2009-11-17"-1-1)-(3).
), jlink使用文档: "12:37 2009-11-10"
), 杂: "10:50 2009-11-4": openocd, jlink使用. 

10:20 2011-12-21
时间管理
0, 9:45

1, 本日
1), 10:20-10:33 beizhan找我. 见"10:24 2011-12-21"
2), 5' VC0882L sd稳定性解决 by fanzhijun. 见"15:33 2011-12-19"6
3), 30' 电话, dairy.
4), 2.5h 午饭, 休息. 
5), 30'(-14:43) 支持AE L2 cache enable, timing. 见"14:39 2011-12-21". 
6), 支持xiaotao解决ADC问题. 
7), 20' arm总结. "17:46 2011-12-21".

10:24 2011-12-21
VC0882, 工作安排, fengbeizhan
1, 希望帮xiaotao尽快把ADC问题解决. 见"10:30 2011-12-21". 
2, trace交接给caijin.
3, clk, padc, pmu交接给hanchen和liuxiaotao. 

10:30 2011-12-21
VC0882, SV, MP, fajue, 电池电压检测不准, 发现是LCD配置问题
1, 上午
1), 和xiaotao讨论, 修改下面两个寄存器就会有问题. 
(1), 修改lcd为18bit. 
memwrite 0x600230a0 0x00012483
(2), lcd0改为function模式. 
注: 24bit情况下都可以. 18bit下必须是lcd0改为function才会不行. 
2), xiaotao正在做uboot实验. 我建议在u-boot里面直接加入这两条命令. 实验到底在哪儿会遇到这个问题. 
3), 要不然我实验一个sram小环境? 这样可以更快确定是否是寄存器配置问题. 
2, (15:11 2011-12-21)
adc问题, 开始以为是lcd pin配置问题, clock频率问题. 
今天单步时又怀疑是de, lcdc配置问题. 
现在从实验上看, 似乎是sso问题. 用0xff可以. 用默认图片就不对. 
0xaa会调到0.9v以下. 0x55会调到1.7v. 0x00不调. 正常是2v左右. 
3, (10:56 2011-12-23)
该问题的部分历史邮件
1), fengbeizhan邮件"20111216_2050
今天和xiaotao、laobian 对这个问题进行了debug，目前找到的现象如下：
现象一： dpi panel 配置为24bit 模式 则正常，配置为18bit模式则被拉低；
现象二： dpi panel 配置为18bit 模式：当把 pin data0 配置为function 被拉低，配置为gpio 则正常； 
此时，把pin data0通过板级断开，然后配置为function，则同样被拉低；
说明，目前的板子上，panel没有接，且没有焊接hdmi芯片；
估计需要icd来具体分析了。

14:39 2011-12-21
VC0882, SV, MP, AE android4.0; L2 cache disable影响了android性能
1, 支持AE L2 cache enable, timing.
viewvsonic版本速度慢, 做LMbench, 发现L2性能很差, youhai怀疑L2没有打开. 我看了看代码的确如此. 另外发现AE u-boot里面L2 cache timing是0xcc, 不是0x82, 这个也有影响一点性能. 

2, zhangjian邮件1
在arch/arm/kernel/head.S里面的__enable_mmu()最开始, 需要加入
#ifndef CONFIG_CPU_L2_CACHE_DISABLE
        mrc p15, 0, r5, c1, c0, 1
        orr r5, r5, #CR_L2
        mcr p15, 0, r5, c1, c0, 1
#endif
保证L2 cache打开. 因为882 bootloader设计上为了保险关闭了L2 cache. 所以需要在kernel中enable mmu之前重新打卡. 

3, zhangjian邮件2: 
L2 cache timing应是0x82(data ram latency和tag ram latency都是3cycle). 
在今年2月13日(见下)版本后被改回了0xcc. 
代码: _l2_auxctrl_init()(arch/arm/cpu/arm_cortexa8/vc088x/board.c)
update build system 
author
 suxin <suxin@vimicro.com>
 Sun, 13 Feb 2011 03:06:39 +0000 (11:06 +0800)
committer
 suxin <suxin@vimicro.com>
 Sun, 13 Feb 2011 03:06:39 +0000 (11:06 +0800)
commit
 fdeb7921b3c51b56c52caf355706093135b8a98c
tree
 1bc8b8f96f3a50684a2b69bea497426a1e2c785b
 tree | snapshot
parent
 be82ca9235260889780a77b4e410d91f0e2f7934
 commit | diff

17:46 2011-12-21
arm, 总结, 文档, arm总结3, 环境升级, arm启动代码: assemaby, library init; VC0882 bootloader启动代码; 提纲
1, 环境. 
这里介绍VC0882项目环境修改的内容. 大的方便是说为了一个新项目准备环境需要做哪些事情, 具体还是以arm为主, 兼顾其它(FPGA稳定性等).
882项目从之前830项目的arm926ej-s升级到Cortex-A8, 为了支持Cortex-A8, 同时开发工具从rvds3.0升级到rvds4.0, 又由于rvds4.0只支持Realview ICE, 所以debugger从multiICE, jlink升级到RealviewICE. 
这里主要说软件的修改, panda_os, mini_env. 
semihost对于环境升级调试的帮助. 
ICE和rvdebugger已经在上次的介绍用介绍了. 

3, 除了上述应用外, 如果项目更换了新的arm处理器, 环境部分需要做些修改. 这里以882为例说明. 见"00:39 2010-7-2". "15:39 2010-2-4"

22:35 2011-12-21
公司, 工作总结, 中星微三年工作总结
1, 技术，解决问题的方法，英语
英语不能丢下。我一直觉得做embedded/Linux英语是重要工具，不能绕着英语走。
在中星微三年，英语有提高，专业上一般的英语讨论没有问题。这也为我英语面试打下了基础。

9:41 2011-12-22
时间管理
0, 9:35

1, 本日
1), 9:42-12:30 13:58-15:20 adc电压, 见"9:42 2011-12-22".
被2)打断. 
2), 10' bianyingfeng了解我的arm training内容. 
3), 30' 支持beihua看蓝魔ddr training有无问题: 程序正常结束后跑飞. 只是没有打印, 只能直接通过rvi看结果.

9:42 2011-12-22
VC0882, SV, MP, fajue, 电池电压检测不准, 对比u-boot和panda_os
1, rvi dump u-boot寄存器. 
1), usb boot, 用rvi直接下载u-boot, 然后dump寄存器. 

2, rvi dump寄存器. 
1), 首先想到是通过breakaccess命令, 但是不会设置address-range
BREAKACCESS [,qualifier...] {address|address-range} [;macro-call]

Specifies a single address or an address range in target memory. The address can also be a memory mapped register (see Memory mapped registers on page 2-47). For details on how to specify an address range, see Specifying address ranges on page 2-2.

但是下面两个命令都不行, 
> baccess,message:"hello_1",continue 0x60000000..0x60001000
Error V10031 (Vehicle): Break type not supported
> baccess,message:"hello_1",continue 0x60000000..+0x1000
Error V10031 (Vehicle): Break type not supported

2), 只好试试定义memeory mapped register.
Memory mapped registers
You can set a breakpoint that activates when a memory-mapped registers is accessed in
any way. To specify a memory mapped register, enter the following expression for the
address:
register:expression
The register is identified by expression. For example:
BREAKACCESS register:PR1
or
BREAKACCESS register:@PR

3), memory mapped register又需要bcd的知识. 
看rvdebugger target configuration guide, 4.1 About configuring custom memory maps, registers, and peripherals
(1), 建立名为VC0882的CHIP.
(2), 在connect=VC0882里面选择Board chip name为VC0882.

4), 经过, 从上午到下午的实验, 感觉rvds并不支持在A8上面设置hw access range断点. 
看来还是得用mmu映射的方式抓寄存器. 

2, 实验在发生异常时打印寄存器地址.  
可是我现在才发现, 即使这样, 能得到的也仅仅是所有寄存器的地址, 如果想知道要写入的值, 还是需要分析代码. 

3, 直接运行u-boot, 然后dump出所有的寄存器算了. 这个和xiaotao用md读是一样的. 

4, (16:53 2011-12-22)
xiaotao建议我在panda_os下配置和u-boot一样的clock和pad. 
1), 建立一个合适的env. 
build -m=ddr,de,fat,i2c,pmu,sd,tools -dram=128M -define=CACHE_L2_ON=1 -define=CACHE_OFF=1 -define=ICACHE_ON=1 -sv
2), (18:39 2011-12-22)
u-boot需要把ddrc降频到166MHz, cpu降到375MHz才能正常启动. 
用同样脚本实验panda_os.

5, 晚上实验. 大家觉得一时解决不了, 所以实验RGB665看看效果, 在我的fajue8寸上实验, 看不出效果差异. beizhan会建议客户先这样用. 这边继续查原因. 
我个人感觉是电的问题可能性比较大. 

9:53 2011-12-23
VC0882L, FPGA, VC0882L人员安排
GuYe邮件"882L ICD 人员安排"20111122_1052
\todo: 882L的video codec为什么重新综合? 

10:07 2011-12-23
时间管理
0, 9:30

1, 本日
1), 10:09- fajue adc问题. 见"10:09 2011-12-23". 
被2)打断. 
2), 20 支持ZhaoBeiHua, HanChen, XiaoYu调试蓝魔板子, 告诉hanchen如何调试data abort情况. 

10:09 2011-12-23
VC0882, SV, MP, fajue, 电池电压检测不准, 对比u-boot和panda_os, 续
1, fengbeizhan邮件"882 ADC电压检测的问题"_20111223_1037
Hi,  minfeng、jinyang
ADC的问题，确实比较诡异，新的debug进展是甚至和DE刷屏的Pattern 都有关系，所以目前现象还是比较发散， xiaotao和zhangjian还在对clkrst、padc、gpu上电等检查，还在继续找root原因。
鉴于客户比较着急，我们昨天晚上讨论了，先给出一种Workaround的方案，让客户先用着。
方案：       在Uboot 或其他配置panel padc pin时，目前lcd_data0 配置是function，仅仅把这个lcd_data0 配置为Gpio； 即 原来 0x60051920 = 0x02000000，修改为  0x60051920 = 0x02000001；
该方案在原来发掘的8寸板子上调试显示过效果，昨天晚上几个同事都看了，眼睛看不出来（相当于原来输出的666，现在改成665）。
由于在北京找了一圈，都没有找到这次发掘给的这个板子对应的Panel，所以目前是在空载下测试的。
请深圳尽快安排，在深圳把panel接上试试该问题是否也解决了， 即插上panel和空载是否一致。
882 ADC电压检测的问题

2, 继续昨天工作, 昨天已经把panda_os跑起来了. 今天先把clkrst和padc配置为一样的. 然后移植屏的初始化(含上电流程). 

3, 昨天去掉DDR其实没有必要, 因为VIM_DDR_Init里面并没有什么对系统运行有影响的代码. 
另外用宏"AE_FAJUE"表示Ae fajue板子的clkrst和padc配置. 编译选型改为: 
build -m=ddr,de,fat,i2c,pmu,sd,tools -dram=128M -define=CACHE_L2_ON=1 -define=CACHE_OFF=1 -define=ICACHE_ON=1 -define=AE_FAJUE=1 -sv

4, 事情很诡异. huangchen找客户确认了屏是24bit. 我找jinyang也确认了屏是24bit TFT屏(不是之前fajue的lvds屏). 
说明u-boot里面配置为18bit是配错了. 等于是自摆乌龙, 应该早一点在有屏的情况下实验. 

5, (16:20 2011-12-23)
1), jinyang发来的u-boot和kernel都是24bit模式. 并没有问题. 
2), 在android界面启动之前发现电压下降. 用logcat看, 打印是audio和awsomeplayer. 
3), 还是发现降低lcd频率有效果. 降到0x3f05时电压到1.8,1.9v. 
4), 改lcd data0为gpio模式也可以. 

6, 和jinyang沟通.
jinyang说fajue没法给出坏板子. 会请fajue做批量测试. 
jinyang怀疑是adc电路有风险; 同时客户的错误使用可能导致adc工作不正常. 因为我和jinyang都看到过adc电压跳变, 但是电池电压不可能跳变. 
这个底板第一次量产, 核心板原来是用过的. 

7, 发信
jinyang发来的u-boot和kernel都是24bit的(和ICP之前拿到的18bit配置不同), 用此image, 只有在kernel里面能看到电压明显下降(详细现象附后).
1), 经过空载实验验证, 建议暂时用beizhan之前发的work around方案: 
在Uboot 或其他配置panel padc pin时，目前lcd_data0 配置是function，仅仅把这个lcd_data0 配置为Gpio； 即 原来 0x60051920 = 0x22000000，修改为  0x60051920 = 0x22000001；该方案在原来发掘的8寸板子上调试显示过效果，昨天晚上几个同事都看了，眼睛看不出来（相当于原来输出的666，现在改成665）。 
2), 从现象看, 约接近纯黑的图像对电压下降越不明显: 反复实验发现u-boot里面显示logo时电压会小幅下降(<1v), 在kernel启动gpu后, 电压会回升, 在android锁屏界面显示时电压掉到1.1v左右. 
显示不同的图像是否对电源有影响? 和jinyang沟通, 这个板子主要是底板(包括adc的接法)和原来不同. 是否可以怀疑是硬件设计有风险导致个别882工作不正常或失效? 

14:59 2011-12-23
VC0882, SV, MP, 客户量产发现系统不稳定; 通过今天判断是ddr不稳定
1, 给zhangyanhong发频率
1), 
ChenWeiMin邮件"答复: 答复: 转发: BJ Hynix FAE info for 26nm MLC NAND"_20111223_1447
>不是说不能跑在300M以下么。
这样修改是用333Mhz的参数, 降频使用, 这样是有风险的, 只是帮助定位问题. ddrc参数还是需要beihua给出. 
2), 
回复zhangyanhong邮件_20111223_1447
根据zhangjian的配置，将DDR配置到166M，系统启动十几遍均正常完成启动。
下面有3个方向去Debug：
（1）zhangjian会给300M的DDR配置，测试稳定性。
ZJ: BOOTINFO.ini中ddrcPllCfg改为: 
600MHz: 0x02570019
500MHz: 0x01f30019
也就是使bus和ddrc分别运行在300MHz, 250MHz, 看看稳定性. 
busPllCfg在当前配置没有用到, 请注释或删除. 
（2）检查DDR相关供电的电压情况。
ZJ: 我个人认为需要量arm, core, pmu, ddr(1.5v)这几个. 看看是否正常. beihua看呢? 
（3）请zhaobeihua帮助调整DDR的timing。

13:57 2011-12-27
时间管理
0, 9:45

1, 本日
1), 地理。 
2), 和beizhan讨论我的工作: 882量产问题我暂时不参与, 集中精力做交接. 本周五介绍第一次arm, 元旦后介绍第二次. 另外尽快让xingjie和caijin实验trace. 
3), 14:05-14:55 arm training发信. 见"14:05 2011-12-27".
4), 14:58-17:18 arm training. arm external api(arm和环境注意事项)初稿。
5), 18:08-18:35 arm training: arm debug tools, 草稿.

14:05 2011-12-27
arm, 总结, 文档, training提纲
1, 发信. 周五讲座. 
arm training之一: 软件开发中实用arm/debugger技巧
hi, all

暂定周五下午14:00-18:00在第六, 七会议室向大家介绍arm. 
我在882上花了很大精力在arm, 自己感觉对arm的了解对于开发其它模块也有很大的帮助. 所以希望和大家分享一些我的心得. 

arm training会分为两部分, 和上次的power类似, 第一次介绍基本概念, 以及开发中会用到的一些arm和调试器技巧. 第二次会深入介绍882环境build up过程; Cortex-A8相关的一些feature. 
讲稿会稍候发出, 大家对内容有什么建议欢迎随时提出, 谢谢. 

arm training提纲如下(一, 二是本周五介绍, 其余元旦后介绍): 
一, arm external api
从软件角度需要了解arm哪些东西? 
1, 代码在arm上运行, 首先是memory分配/使用; mmu, cache, tlb对于软件的影响. 
cache debug tools.
2, 中断和异常处理. 异常不等出出错. 

二, arm debug tool
1, 这里重点介绍两个工具, 一个是调试器ICE, 一个是模拟器qemu. 用这两个工具如何更快的定位问题. 这里会有一些实际操作的demo. 
2, 还会介绍arm hardware trace. 
3, 其它提到的工具: gdb, ftrace, profile. 

三, 环境build up
以882为例说明, 软件的修改(包括panda_os, mini_env), semihost对于环境升级调试的帮助. 
882项目从之前830项目的arm926ej-s升级到Cortex-A8, 为了支持Cortex-A8, 同时开发工具从rvds3.0升级到rvds4.0, 又由于rvds4.0只支持Realview ICE, 所以debugger从multiICE, jlink升级到RealviewICE. 

四, Cortex-A8 teature介绍. 
这次是完全从arm内部说一说Cortex-A8相比arm9, arm11, 都有哪些改进. 
包括指令集的变化, mmu, cache的变化. Cortex-A8新增的irq, Cortex-A8新增的其它功能, Cortex-A8如何利用AMBA协议的新feature. 

五, other
1), arm架构发展. Cortex-A15, Cortex-A7(大小核), armv8.
2), 国内外基于Arm架构的热门SOC对比(rk2918, amlogic, via, renses, qualcomm, ti, samsung).

zhangjian

16:37 2011-12-27
arm, 总结, 文档, arm总结4, Cortex-A feature
1, exception
1), 2.15.9 Software Monitor Instruction
When the processor executes the Secure Monitor Call (SMC) instruction, the core enters Monitor mode to request a Monitor function.  
2), break指令会导致prefetch abort
3), Cortex-A8 TRM 2.15.13 Exception priorities.

19:16 2011-12-27
arm, 总结, 文档, 讲稿
1, arm and environment.
arm soc architecture. arm soc体系结构。
是我看到的介绍arm处理器比较易懂的一本书。里面提到arm对于高级语言的支持，对于操作系统的支持，对于调试的支持。这三个支持其实是一个很好的学习arm的思路。对于咱们软件来说可以看成写汇编的注意事项，开发arm 上软件的注意事项，以及调试软件如何利用arm的feature.
2, (9:00 2011-12-28)
arm programming model: 说明数据流，功能。
列出arm feature看看那些放到一讲。
arm debug tool, 对rvds的基本介绍，逐个面板结合实例介绍。

10:07 2011-12-28
时间管理
0, 9:46

1, 本日
1), 10' 支持AE shenzhen jingyang: fajue ADC拉低问题客户量产暂无问题; wifi 30分钟唤醒问题(alarm_suspend()(kernel/drivers/rtc/alarm.c)具体追查. 
2), 10' 支持380项目工程师. 考虑到自己快要离职了, 建议咨询其他同事, 但是这个同事又推给了ICV, ICD. 关键是ICD也没有人对于clkrst和ddrc都熟悉, 感觉这位同事一时还搞不清楚, 觉得自己的工作没有做好, 应该是支持完这次之后再建议他找其他人. 
3), 10:46-11:20 13:44-14:20 15:18-15:37 15:45-16:50 17:40-18:43 arm总结, 
4), 40' 支持caijin做DS-5 profiler. 
5), 20' 支持yinqingjie VC0882 trace抓数据. 
6), 10' 看380 lishugang仿真问题, semihost.
7), 总结: 之前没什么事情时觉得还行. 这两天集中精力写arm文档. 觉得还挺累的.

2, 次日
1), 继续写周五讲座文档. 同时写出后面的草稿. 这样才能前后呼应。
2), rvdebugger demo: macro, script读写变量, 手工恢复异常现场.

2, 次日
), 用RVI dump寄存器, 然后在独立的环境中验证. 
), 中午: 和芸芸讨论休假的问题. 如果是节前休假. 需要周一, 周二把arm讲完才行. 
定了时间需要和aiguo等确认时间. 定会议室. 
1), arm和环境总结，提高工作效率。计划1.5周完成arm和环境。然后training。
2), 做今年工作总结。
3), 之前yanglei有说过performanc monitor需要加入ddrc两个属性. 
4), 去知春路买jlink.

17:11 2011-12-28
软件技巧, samba, smbpasswd, 添加samba用户
1, 在/etc/samba/smb.conf
里面的"valid users"加入所需用户. 
2, smbpasswd -a username
设置步骤一用户名的密码.
3, 重启samba服务. 
restart smbd

19:06 2011-12-28
arm, 总结, 文档
cache: timing.
mmu: on/off sequence.

9:53 2011-12-30
时间管理
0, 9:35

1, 本日
1), arm总结.
2), 和xingjie一起看trace. 似乎是timing问题, 需要联示波器确认. 
3), 下午: arm_training. arm debug tool没有讲完: 讲完了rvds. 

10:14 2011-12-31
arm, 总结
1, 发信
arm training续: 环境, Cortex-A8 features

hi, all

暂定1月5日(周四下午, 710 sync后), 1月6日(周五下午)继续介绍arm. 
1月5日: arm环境移植, Cortex-A features: core, cache, mmu. 
1月6日: Cortex-A其它feature, trace demo, DS-5 demo, qemu demo, performance monitor. 

应大家要求, cache和mmu会详细介绍. 大家看看还有什么需要介绍的内容? 

zhangjian


10:48 2011-12-31
时间管理
1, 本日
1), 20' 发信arm环境. 
2), 30' 和caijin, bianyingfeng讨论arm. 
3), 中午, 1h: 支持xingjie调试trace, 把ldo0升到3.3v. 
4), 14:00-17:20 power交接: android/kernel suspend/resume. 
5), trace, 见"17:29 2011-12-31"

17:29 2011-12-31
trace
1, SV上还是抓不对数据. 在fpga上实验. 
ref: "10:33 2010-5-19".
cf code:
\\10.0.2.36\sqmshare\Projects\Mobile BU\VC0882\fpga\cf\2FPGA\0505_to_0531\vc0882_20100516_0800_fpgac0402_a8_20100517_L1_32_L2_0_No_Neon_Trace_Drive4_2fpga_noFdTv.ace
2, trace问题讨论
hi, xingjie

SV上的问题和我之前vtref没有接的问题类似. VTref是JP2的12pin, 咱们没接错吧. 

FPGA上也可以继续实验, 分线:蓝线接到JP2的12pin. 白线接到黄线上面松香上面的铜线. 
我估计是蓝线断了, 造成vtref没有参考. 

zhangjian

23:37 2011-12-31
arm, 总结, 讲稿
arm的学习让我提高了英语和沟通能力。和其他同事沟通，给arm发邮件解决问题 。

