
15:25 2016-01-04
----------------
GTD
1.  today
    1.  -18:57 reply three email.

10:13 2016-01-07
----------------
GTD
1.  today
    1.  10:15-11:40 14:55- GPIO warning: send patch base on arnd's patch.
    2.  GPIO mockup.
    3.  Summary:
        1.  中午午睡之后，用了一个小时多的时间才开始工作.
        2.  是一种很难受的状态，没法集中精力，我都怀疑我是不是病了。

11:45 2016-01-07
----------------
ask in stackoverflow.
1.  show file instead of the diff.
git show gpio-mockup-v2~2:drivers/gpio/gpio-mockup.c

2.  show the log in gpio-mockuo-v2 branch for drivers/gpio/gpio-mockup.c
git log gpio-mockup-v2 --  drivers/gpio/gpio-mockup.c

3.  diff the two versions of gpio-mockup.c
git diff gpio-mockup-v2~1:drivers/gpio/gpio-mockup.c  gpio-mockup-v2~2:drivers/gpio/gpio-mockup.c

14:22 2016-01-07
----------------
software skill, network, route, irccloud.com
--------------------------------------------
1.  the route need to add for irccloud.com
    ```
    # history | grep route.add |grep 01.07 | sed "s/^\ *[0-9][0-9][0-9]\ *2016.01.07.14:[0-9][0-9]:[0-9][0-9]\ //g"
    route add -net 74.125.204.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 93.184.35.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 192.184.9.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 203.208.48.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 51.28.100.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 51.28.102.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 216.58.221.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 192.229.237.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 52.230.249.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 54.192.127.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 54.230.249.0 netmask 255.255.255.0 gw 192.168.199.1
    route add -net 107.22.192.0 netmask 255.255.255.0 gw 192.168.199.1
    ```

18:15 2016-01-07
----------------
software skill, audio, alsa, arecord, aplay
-------------------------------------------
ref: <http://ted.is-programmer.com/posts/4403>
arecord -Dplughw:1,0 -f cd -d 10 k.wav
aplay k.wav

14:19 2016-01-08
----------------
GTD
---
1.  today
    1.  14:40 gpio warning.
        I send one patch twice!!!
    1.  14:40-15:27 ksleftest mergeconfig
    1.  15:38-15:54 ppdev.

10:07 2016-01-14
----------------
1.  <http://www.howtogeek.com/119815/htg-explains-what-is-a-zombie-process-on-linux/>
```
Getting Rid of Zombie Processes
You can’t kill zombie processes as you can kill normal processes with the SIGKILL signal — zombie processes are already dead. Bear in mind that you don’t need to get rid of zombie processes unless you have a large amount on your system – a few zombies are harmless. However, there are a few ways you can get rid of zombie processes.

One way is by sending the SIGCHLD signal to the parent process. This signal tells the parent process to execute the wait() system call and clean up its zombie children. Send the signal with the kill command, replacing pid in the command below with the parent process’s PID:

kill -s SIGCHLD pid

However, if the parent process isn’t programmed properly and is ignoring SIGCHLD signals, this won’t help. You’ll have to kill or close the zombies’ parent process. When the process that created the zombies ends, init inherits the zombie processes and becomes their new parent. (init is the first process started on Linux at boot and is assigned PID 1.) init periodically executes the wait() system call to clean up its zombie children, so init will make short work of the zombies. You can restart the parent process after closing it.

If a parent process continues to create zombies, it should be fixed so that it properly calls wait() to reap its zombie children. File a bug report if a program on your system keeps creating zombies.
```

2.  <http://www.linuxnix.com/how-to-kill-defunct-or-zombie-process/>
```
How can I kill a defunct process?
And : Just use kill command
#kill defunct-pid

Still not able to kill?
Ans : Then use kill -9 to force kill that process
#kill -9 defunct-pid

Still have an issue in killing it?
Ans : Then try to kill its parent id and then defunct.
#kill parent-id-of-defunct-pid
Then
#kill -9 parent-id-of-defunct-pid
```

10:19 2016-01-15
----------------
GTD
---
1.  today
    1.  16:38- gpio mockup.
    1.  gpio warning: send it out now or after v4.5-rc1?
        Linus reply: I could send it now.
    1.  Summary:
        1.  10:20-10:40 又晃悠了20分钟，一天能有多少个20分钟阿。

17:09 2016-01-15
----------------
kernel, gpio, gpio-mockup
-------------------------
1.  use range instead of base and ngpio in both gpio-mockup driver and test code.

10:59 2016-01-19
----------------
GTD
---
1.  today
    1.  say farewell to kevin Hilman.
    2.  Reply to Romain who is interested in my ilp32 patches for buildroot.
    3.  12:09- gpio-mockup
    1.  Summary:
        1.  每天记录下实际工作开始时间。
        2.  11点到12点一个小时，产出很低。

17:50 2016-01-19
----------------
Ryan Arnold <ryan.arnold@linaro.org>
Maxim Kuvyrkov <maxim.kuvyrkov@linaro.org>

Hi, Ryan, Maxim

Someone in France is intertested in ILP32 toolchain from linaro. I could find
a toolchain built by Maxim[1] which (I guess) base on the v3 of patches of
kernel headers and corressponding glibc.

I am also take a look at this wiki[2], But I do not find the toolchain.

Where could I find ilp32 toolchain or is there a plan to provide (not for
release, just for the developer or who is interested in it) with recently
glibc[3](Although it may be not consistent with the lastest patches from
kernel).

Regards

Bamvor

[1] http://people.linaro.org/~maxim.kuvyrkov/bench-ilp32/
[2] https://wiki.linaro.org/Platform/arm64-ilp32
[3] https://github.com/norov/glibc

16:38 2016-01-21
----------------
GTD
---
1.  today
    1.  Summary:
        1.  I finally sit down here at 16:38. It is too late for me for starting to work.

10:20 2016-01-22
----------------
GTD
---
0.  10:20-
1.  today
    1.  gpio mockup
        10:20-
        17:25-
    2.  huawei: 内核memory特性串讲.
        15:00-17:20
    3.  Summary:
        1.  今天听了内核特性串讲，感觉内存这部分还是不太熟悉，要多话时间看看。

16:44 2016-01-21
----------------
1:1 with Mark
1.  Kevin left.
2.  gpio mockup is in test.
3.  ILP32
    1.  toolchain.

10:36 2016-01-26
----------------
GTD
---
1.  today

11:21 2016-01-27
----------------
GTD
---
0.  11:37-

1.  today
    1.  gpio-mockup: script version.
        11:40-
    2.  Huawei: feature review.
                talk with engineer in product line.

13:19 2016-01-27
----------------
kernel, perf, build
-------------------
Need install the follow package according to <https://build.opensuse.org/package/view_file/devel:tools/perf/perf.spec?expand=1>
"zypper in asciidoc gtk2-devel xmlto audit-devel binutils-devel bison flex libdw-devel libelf-devel libnuma-devel libunwind-devel newt-devel openssl-devel zlib-devel"

But I do not install the three packages to save disk in my qemu: asciidoc gtk2-devel xmlto.

16:48 2016-01-28
----------------
software, skill, SCM, git
-------------------------
<http://til.developingego.com/post/2957163251/using-git-log-with-line-numbers>
When inside the git log, type -N or --LINE-NUMBERS if you’re feeling particularly masochistic (source). This will make the line numbers appear, and you’ll lose half your terminal window to leading whitespace on those numbers.

10:55 2016-01-29
----------------
GTD
---
0.  9:55-18:54
1.  today
    1.  ilp32: DONE: send email to LKML.
               DONE: discuss with my arm64 pm and send email to cavium: just discuss in community for now.
               DONE: discuss and evaluate internally in huawei.
    1.  Huawei；learn perf callgraph.
    1.  Huawei: application crash after jump to plt.
    1.  gpio: read and reply Linus. I hope I could I send out v2 gpio-mockup this week.
        18:08-18:26 read and reply email to Linus.
        18:26-18:54 gpio-mockup.


14:47 2016-01-29
----------------
arm, kernel, perf, backtrace
----------------------------
Some notes on try to get callgraph for an arm application on arm64 kernel.
TODO: I could get the backtrace for an aarch64 app. but fail for aarch32 app. And I do not know why.

1.  If I want to enable frame pointer I need to enable it explicitly. Because It is disabled by default after gcc 4.6 according to gcc manpage.
```
       Starting with GCC version 4.6, the default setting (when not optimizing for size) for 32-bit GNU/Linux x86 and 32-bit Darwin x86 targets has been
       changed to -fomit-frame-pointer.  The default can be reverted to -fno-omit-frame-pointer by configuring GCC with the --enable-frame-pointer configure
       option.
```

2.  perf save the stack with perf perf_callchain_user.

3.  Behavior of pop and push.
    1.  push:
        At the end: sp will be located at the lowest address with register value stored.
        sp = sp - 4 * number_of_reg
        from lowest address, store reg from i = 0 to 14 and save pc as the last register

    2.  pop:
        At the end: sp will above the highest address with register value stored.

16:25 2016-02-03
---------------
GTD
---
1.  today
    1.  DONE: reply to buildroot.
    1.  gpio:
        16:25-
    1.  send gpio-mockup driver.

12:54 2016-02-19
----------------
GTD
---
1.  today
    1.  Huawei: arm64 regular meeting.
    2.  Huawei: glibc and bigendian.
    3.  Huawei: arm64 compat ioctl, network.

18:04 2016-02-24
----------------
GTD
---
1.  today
    1.  send email about abi changes for sysfs of gpio.

18:06 2016-02-24
----------------
kernel, driver, gpio, sysfs
---------------------------
1.  title: [RFD] does abi of sysfs of gpio change?
```
Hi, guys

I am working on writing a gpio mockup driver(for test the gpio framework).
I found that in the lastest for-next branch of linux-gpio, the path of gpiochip
in device directory is changed from
`/sys/devices/platform/gpio-mockup/gpio/gpiochip*`
to
`/sys/devices/platform/gpio-mockup/gpiochip*/gpio`.

And secondly, the name of gpiochip in the devices directory is changed from
gpiochipBASE to gpiochipSEQ, e.g. there are two gpiochip([0,31],[32,63]) in my
device. It changed from
`/sys/devices/platform/gpio-mockup/gpio/gpiochip0`
`/sys/devices/platform/gpio-mockup/gpio/gpiochip32`
to
`/sys/devices/platform/gpio-mockup/gpiochip0/gpio`
`/sys/devices/platform/gpio-mockup/gpiochip1/gpio`

IIUC, this change may break the script which depend on it.
Is it intended to do it?

And it could be fix by reverting one line from commit 5031fbdf5365
("gpio: move sysfs mock device to the gpio_device").

Regards

Bamvor

From be7699ddea0fd0e2b0712cc8f50318595cad553c Mon Sep 17 00:00:00 2001
From: Bamvor Jian Zhang <bamvor.zhangjian@linaro.org>
Date: Wed, 24 Feb 2016 22:17:19 +0800
Subject: [PATCH] fix abi changes of sysfs

Signed-off-by: Bamvor Jian Zhang <bamvor.zhangjian@linaro.org>
---
 drivers/gpio/gpiolib-sysfs.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/gpio/gpiolib-sysfs.c b/drivers/gpio/gpiolib-sysfs.c
index c563094..db39464 100644
--- a/drivers/gpio/gpiolib-sysfs.c
+++ b/drivers/gpio/gpiolib-sysfs.c
@@ -721,6 +721,7 @@ EXPORT_SYMBOL_GPL(gpiod_unexport);
 int gpiochip_sysfs_register(struct gpio_device *gdev)
 {
 	struct device	*dev;
+	struct device	*parent;
 	struct gpio_chip *chip = gdev->chip;
 
 	/*
@@ -733,7 +734,12 @@ int gpiochip_sysfs_register(struct gpio_device *gdev)
 		return 0;
 
 	/* use chip->base for the ID; it's already known to be unique */
-	dev = device_create_with_groups(&gpio_class, &gdev->dev,
+	if (chip->parent)
+		parent = chip->parent;
+	else
+		parent = &gdev->dev;
+
+	dev = device_create_with_groups(&gpio_class, parent,
 					MKDEV(0, 0),
 					chip, gpiochip_groups,
 					"gpiochip%d", chip->base);
-- 
2.6.2
```

10:29 2016-02-25
----------------
GTD
---
1.  today
    1.  Linaro: ask its@linaro.org: it seems that I lost some email.
        5'
    2.  Huawei ilp32 quick discuss.
        15'
    3.  Gpio rewrite gpiodev_add_to_list.
        11:30

15:37 2016-02-26
----------------
GTD
1.  today
    1.  gpio:
        read the patch in ML after 4.5 rc1 agiain.
        send out the refcount issue.

16:49 2016-02-26
----------------
美国, 汪金辉
------------
德州: 500k house.
加州: 800k-1000k house.
明尼苏达州.附近  fargo。租房两居600, 三居800。加州要翻一倍。
美国房子: zillow.com
网站：文学城, 北美华人网。mitbbs。

麻省，纽约州。

21:05 2016-02-26
----------------
iitvrghcfflnmroa

09:40 2016-02-27
----------------
GTD
---
1.  today
    1.  reply Mark email: gpio and linaro works.
        09:44-11:09 gpio
    2.  send activity this week.
    3.  gpio mockup pinctrl?
    4.  gpio irq.
        11:39-12:42
    5.  personal:
        走神10分钟.
        11:16-11:39
        走神10分钟.

10:08 2016-02-29
----------------
GTD
---
1.  today
    0.  A day should be started by read the mailing list or write the email/documents.
    1.  send activity.

    1.  gpio interrupt(2 hours).
    2.  add chardev support for gpio mockup.
    3.  wrote document: how to read optimized value in gdb.

    4.  install shadowsocks in my router.

    1.  gpio fix.
    1.  write ilp32 documents.

    1.  ask KBUILD_OUTPUT in #armlinux.
    1.  try git-work-newdir and write article.
    1.  finish hackweek project.
    2.  gpio fix sparse warning.
    1.  huawei:
        1.  update latest ilp32 patch to hulk.
        2.  接口变更说明。

1.  TODO
    1.  pending:
        1.  y2038: ppdev: how should I send the patch for fs/compat_ioctl.c?
        1.  y2038: lp.c: need a macro in uapi to determine the 32bit/64bit time_t for 32bit application.

    3.  状态不好也不能晃悠过去.

    1.  效率低的时候
        1.  write blog for hikey share and hackweek on the way to work and on the way home.
        1.  write hikey reply doc on my github.
        1.  move all my documents to bjzhang.github.io
        1.  push to github and gitcafe at the same time.

    1.  状态不好也不能晃悠过去.

    1. reading:
        1.  memory, memory reverse.

2.  Priority:
    1. discuss and update the gpio mockup driver.
    2. discuss about other woks in gpio-mockup driver. I mean the email I sent to you and Linus.
    5. fix the kselftest failure on hikey mainline rebase branch.

2.  TODO work
    1.  read Linux performance analysis in my wechat.
    1.  huawei
        1.  discuss with chenfeng: how do they use the kselftest.
        2.  try the failure in the mainline rebase kernel in hikey board.
    1.  update my status in linkedin and stackoverflow.

    1.  make use of chardev in gpio test.sh
    1.  try kselftest on hikey 3.18
    1.  read and epoll_wait?
    1.  gpio: add pinctl support in mockup driver and gpio.sh and send new version to Linus and Mark.
    1.  ilp32: review and test: ask linaro: if there is a toolchain with kernel v6 patches.
                                discuss with linaro.
    1.  y2038: fs/compat_ioctl.c
    1.  syscall documents.
    1.  why I could not send email through hiwifi when pptp vpn is enabled.
    1.  try gcc 5.1
    1.  install windows on my chromebook(need large sd card).

3.  next week
    1.  kselftest KBUILD_OUTPUT fix.

4.  learn
    1.  asmlinkage?
    1.  gpio fix.
    1.  gpio warning: send it out now or after v4.5-rc1.
    1.  write ilp32 documents.

    1.  ask KBUILD_OUTPUT in #armlinux.
    1.  try git-work-newdir and write article.
    1.  finish hackweek project.
    1.  gpio fix issue in gpiod_get_direction called sysfs.
        cancelled: it is not a issue. It will be correct after direction_store.
    2.  gpio fix sparse warning.
    1.  ping lp.c to libc-alpha?
    1.  huawei:
        1.  update latest ilp32 patch to hulk.
        2.  接口变更说明。

1.  TODO
    1.  pending:
        1.  y2038: ppdev: how should I send the patch for fs/compat_ioctl.c?
        1.  y2038: lp.c: need a macro in uapi to determine the 32bit/64bit time_t for 32bit application.

    3.  状态不好也不能晃悠过去.

    1.  效率低的时候
        1.  write blog for hikey share and hackweek on the way to work and on the way home.
        1.  write hikey reply doc on my github.
        1.  move all my documents to bjzhang.github.io
        1.  push to github and gitcafe at the same time.

    1.  状态不好也不能晃悠过去.

    1. reading:
        1.  memory, memory reverse.

2.  Priority:
    1. discuss and update the gpio mockup driver.
    2. discuss about other woks in gpio-mockup driver. I mean the email I sent to you and Linus.
    5. fix the kselftest failure on hikey mainline rebase branch.

2.  TODO work
    1.  read Linux performance analysis in my wechat.
    1.  huawei
        1.  discuss with chenfeng: how do they use the kselftest.
        2.  try the failure in the mainline rebase kernel in hikey board.
    1.  update my status in linkedin and stackoverflow.

    1.  make use of chardev in gpio test.sh
    1.  try kselftest on hikey 3.18
    1.  read and epoll_wait?
    1.  gpio: add pinctl support in mockup driver and gpio.sh and send new version to Linus and Mark.
    1.  ilp32: review and test: ask linaro: if there is a toolchain with kernel v6 patches.
                                discuss with linaro.
    1.  y2038: fs/compat_ioctl.c
    1.  syscall documents.
    1.  why I could not send email through hiwifi when pptp vpn is enabled.
    1.  try gcc 5.1
    1.  install windows on my chromebook(need large sd card).

3.  next week
    1.  kselftest KBUILD_OUTPUT fix.

4.  learn
    1.  asmlinkage?

10:45 2016-03-02
$njoy!

13:10 2016-03-21
1.  write the summary of ilp32 debugging in recent 3 days.

09:12 2016-03-22
----------------
GTD
---
1.  today
    1.  send activity

10:13 2016-06-04
----------------
昨天又看了看syzkaller, 它包括了对系统调用参数的随机注入, 但是它不是从glibc层次注入的. 而且不是侧重于做系统调用本身的单元测试. 根据这个情况调整了一些描述.

An efficiency unit test and fuzz tools for kernel/libc porting

Choose a submission type (Presentation)
Choose the category for your proposal (Developer)
Select the experience level (Any).

1.  Biography

Bamvor Jian Zhang is software engineer in Huawei who focus on in linux kernel relative area, especially migrate software from arm(32bit) to arm64, such as ILP32, interface changes and so on.
He give a presentation in opensuse asia summit, also take some presentations in local open source activities in Beijing, China.

2.  Abstract

Bamvor encounter lots of syscall issues such as wrong number of arguments, different data type in binary interface when work on ILP32 in recent two years. He realize that the correctnes of argument passing between the c library and core kernel code is a common problem when porting new architecture or abi to kernel and libc. The existence fuzz test such as trinity, skzkaller could only generate the random or boundary value of function parameter and inject into kernel and will not check whether these parameter are passed correctly to the core function of kernel. Thus they could not act as a unit test for porting.
Bamvor Jian Zhang would like to share how does he improve the trinity for unit test including parameter and return value test. E.g. the tools recursively randomize the each base type and inject from libc, and they check the corrsponding value in kernel side.

3.  Describe who the audience is and what you expect them to gain from your presentation

The audience is anyone interested in Kernel/libc porting and/or testing. Attendees can understand how fuzz tools works and how to use these fuzz tools. And the developer could enhance or extend the functionality without stuck at hundreds of syscall and dozens of complex date type because such fuzz tools could automatically generated function parameter with full random in each base types, and provide the jprobe function hook for monitor all the syscall.

4.  Tell us how the content of your presentation will help better the Linux and open source ecosystem

The existence fuzzer rely on the correctness of syscall which is stable for specific architecture while it is varies cross architecture. It is hard for new player to port new architecture or abi to kernel and/or libc. The fuzz tools improved by bamvor is a essential unit test for kernel and libc porting.
Bamvor also talk about why it is a painful work when syscall or data type changes between kernel and libc. How could we improve it.

5.  useless
It could provide the correctness check of syscall from glibc library to kernel syscall implementation.
It is important for porting and do the real fuzz to the system.

10:13 2016-06-04
----------------
An efficiency fuzz tools for syscall development and test.

How To Submit Your Proposal
We have done our best to make the submission process as simple as possible. Here is what you will need to prepare:

Choose a submission type (Presentation)
Choose the category for your proposal (Developer)
Provide a biography, including your previous speaking experience (900 characters maximum).
Provide us with an abstract about what you will be presenting at the event (900 characters maximum).
Describe who the audience is and what you expect them to gain from your presentation (900 characters maximum).
Tell us how the content of your presentation will help better the Linux and open source ecosystem (900 characters maximum).
Select the experience level (Beginner, Intermediate, Advanced, Any).
List any technical requirements that you have for your presentation over and above the standard projector, screen and wireless Internet.
Guidelines:

1.  Biography
Bamvor Jian Zhang is software engineer in Huawei. He focus on in linux kernel relative area, especially migrate software from arm(32bit) to arm64, Such as ILP32, interface changes and so on.
He give a presentation named "opensuse on arm64" in opensuse asia submit, aslo take some presentations in local open source activity in Beijing, China.

2.  Abstract

This is your chance to *sell* your talk to the program committee, so do your best to highlight the problem/contribution/work that you are addressing in your presentation. The technical details are still important, but the relevance of what you are presenting will help the program committee during the selection process.

This is the abstract that will be posted on the website schedule, so please ensure that it is in complete sentences (and not just bullet points) and that it is written in the third person (use your name instead of I).

Example: Kernel Weather Report (Jon Corbet, LWN.net) - The Linux kernel is at the core of any Linux system; the performance and capabilities of the kernel will, in the end, place an upper bound on what the system can do as a whole. In this presentation, Jon Corbet will review recent events in the kernel development community, discuss the current state of the kernel, the challenges it faces, and look forward to how the kernel may address those challenges.

The correctness, stability, robustness of syscall is very important to the system, especially for porting new architecture or abi to kernel and glibc. The existence fuzz test such as trinity, skzkaller could only generate the random or boundary value of function parameter and inject into system and will not check whether these parameter are passed to the real function of kernel(not the wrapper of syscall).
Bamvor Jian Zhang would like to share how does he improve the trinity for parameter and return value test. The tools generate the each base type in the complex data type and check the corrsponding value in kernel side in order to know whether all the parameter pass correctly. It is important for porting and do the real fuzz to the system which may potentially increasing the coverage of kernel. On the other side, a better return value fuzzer is introduced which could random test all the value including error number and normal return value.

2.  Describe who the audience is and what you expect them to gain from your presentation

Example: Kernel Weather Report (Jon Corbet, LWN.net) - The audience is anyone interested in Linux kernel development. Attendees can expect a detailed update on the upcoming kernel release, including recent release history, highlighted features, active employer statistics and much more.

The audience is anyone interested in Kernel/libc porting and/or testing. Attendees can understand how fuzz tools works and how to use these fuzz tools in their environment. Such fuzz tools provide automatically generated function parameter with full random in each base types, and the jprobe function hook for monitor all the syscall given by the syscall list in kernel. The QA engineer could integrated those tools into continuous integration. And the developer could enhance or extend the functionality without stuck at hundreds of syscall and dozens of struct.

Tell us how the content of your presentation will help better the Linux and open source ecosystem

*Note: We realize that this can be a difficult question to answer, but as with the abstract, the relevance of your presentation is just as important as the content.

Example: Kernel Weather Report (Jon Corbet, LWN.net) - This presentation will help existing and new kernel developers better understand the state of the Linux kernel and will hopefully encourage them, and the companies that they work for, to participate more in upstream kernel development.

This presentation will help developper to evaluate the changes of syscall in kernel or changes of syscall wrapper in glibc. whether the changes is safe. It will help on porting kernel and/or glibc to new architecture or abi.
The fuzz tools is good addition to current syscall fuzzer, could help on improving the fuzz tools with the real case from ILP32.
The idea behind these fuzz tools grows up when bamvor encounter lots of glibc issue of current aarch64 ILP32 implementation. It is indeed a painful work when checking the parameter passing from libc library to real kernel syscall function. It is hard to evaluate such porting due to lack of the unit test of syscall.

The fuzz tools introduced by bamvor make it possible by adding the unit test in an automically way. Idealy, it could support any architecture/abi without any changes.

assume the well designed porting of kernel and glibc.

The syscall is the basic interface between kernel and userspace. And the fuzz tools is powerful tools for testing.
This presentation will help existing and new kernel/libc developers/testers to improve the coverage and stability of syscall. Such tools could provide unit test of each syscall which is a good addition for exiting ltp and fuzz test.
Bamvor hope get more input in linuxcon in order to improving the fuzz tools.


Panel Discussions

If you are proposing a panel discussion, please make sure that you list all of your potential panelists in your abstract. We will request full biographies if a panel is accepted.

Tutorials

For technical tutorials, please keep in mind that your material needs to cover a 2-hour time-slot and should be focused on giving attendees the ability to walk away with skills and/or knowledge that they can use immediately.

13:31 2016-06-11
----------------
My email address is ijc (AT) hellion (DOT) org (DOT) uk.
Greating from Bamvor Jian Zhang

Hi, Ian

This is Bamvor Jian Zhang. It is long time not ping you after I left SUSE. I do not find you in irc, hope I could reach you through this email.
I am working on arm64 kernel in Huawei/linaro in recent two years, based on latest generation cpu and soc designed by Huawei. I heard from Julien that you join unikernel in Linaro connect in Bangkok. Congratulations, I think unikernel is very cool libOS ideas and I heard that people are looking forward to use unikernl in production environment. Maybe this is why the Docker acquires unikernel:)
Recently, my wife and I plan to move Europe(Germany, UK and so on), we hope try another life, I will work hard and dig into technologies and my wife will take care of our two daughters. Do you know some opportunities in Linux, arm and virtualization relative areas?

Best wishes

Bamvor

13:03 2016-06-14
----------------
2333413 arm64: ilp32: fix wrong ELF_ET_DYN_BASE

> git branch -D foo
Deleted branch foo (was 2333413).
> git checkout -f -b foo bar/foo
Warning: you are leaving 3 commits behind, not connected to
any of your branches:

  8a0e6e1 arm64: ilp32: fix ELF_PLATFORM for ilp32
  de69fc2 arm64: ilp32: fix the wrong print when signal stack is wrong
  c888b7d arm64: ilp32: fix TASK_SIZE_OF for ilp32

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch new_branch_name 8a0e6e1

Branch foo set up to track remote branch foo from bar by rebasing.
Switched to a new branch 'foo'
> git branch new_branch_name 8a0e6e1

21:43 2016-06-14
----------------
fuzz, syzkaller
-------------
1.  Here is a bug found by syzkaller. The sendfile syscall is not killable in a long time.
    The method of fix is check signal before action and add schedule point before action.
    <https://groups.google.com/forum/#!topic/syzkaller/zfuHHRXL7Zg>
    <https://patchwork.kernel.org/patch/7680761/>
    <https://patchwork.kernel.org/patch/7680771/>

13:03 2016-06-14
----------------
2333413 arm64: ilp32: fix wrong ELF_ET_DYN_BASE

> git branch -D foo
Deleted branch foo (was 2333413).
> git checkout -f -b foo bar/foo
Warning: you are leaving 3 commits behind, not connected to
any of your branches:

  8a0e6e1 arm64: ilp32: fix ELF_PLATFORM for ilp32
  de69fc2 arm64: ilp32: fix the wrong print when signal stack is wrong
  c888b7d arm64: ilp32: fix TASK_SIZE_OF for ilp32

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch new_branch_name 8a0e6e1

Branch foo set up to track remote branch foo from bar by rebasing.
Switched to a new branch 'foo'
> git branch new_branch_name 8a0e6e1

12:58 2016-06-15
----------------
fuzz, syzkaller
---------------
1.  syzkaller use generateArg to generate the parameter recursively. The type is defined in "sys/sys.txt".
    e.g. "stat(file filename, statbuf ptr[out, stat])" declare a function stat with two arguments, the first one is file, and the second one is statbuf, is a pointer.
stat is defined in the same file:
    stat {
            dev     int16
            ino     int32
            mode    int16
            nlink   int16
            uid     uid
            gid     gid
            rdev    int16
            size    int32
            blksize int32
            blocks  int32
            atime   int32
            ansec   int32
            mtime   int32
            mnsec   int32
            ctime   int32
            cnsec   int32
            pad     int32
            pad     int32
    }


int16, filename is the type defined in generateArg:
```
func generateArg(name, typ string, a []string, structs map[string]Struct, unnamed map[string][]string, flags map[string][]string, flagVals map[string]string, isField bool, out io.Writer) {
        [...]
        case "int8", "int16", "int32", "int64", "intptr":
                if want := 0; len(a) != want {
                        failf("wrong number of arguments for %v arg %v, want %v, got %v", typ, name, want, len(a))
                }
                fmt.Fprintf(out, "IntType{%v, TypeSize: %v}", common(), typeToSize(typ))
        [...]
        case "filename":
                if want := 0; len(a) != want {
                        failf("wrong number of arguments for %v arg %v, want %v, got %v", typ, name, want, len(a))
                }
                commonHdr := common()
                opt = false
                fmt.Fprintf(out, "PtrType{%v, Dir: DirIn, Type: FilenameType{%v}}", commonHdr, common())
```

14:41 2016-06-15
----------------
understanding c code in asm way
-------------------------------
disassemble the ILP32 syscall wrapper.

