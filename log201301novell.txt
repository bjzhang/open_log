.LOG
21:27 2013-01-01
opensuse, arm, build sun4i image, cont1, build u-boot
1, ref u-boot build doc on git hub
https://github.com/linux-sunxi/u-boot-sunxi/wiki

10:59 2013-01-04
GTD
0, 10:45-19:55

1, today
1), 10:59-11:40 mail.
2), Jim email. "11:00 2013-01-04"
3), debug libvirt libxl console. see"16:50 2013-01-04"

11:00 2013-01-04
virtualization, libvirt, xen, xenlight, libxl, xen4.2 support, cont17, Jim's email
1, Jim
Jim Fehlig wrote:
> Bamvor Jian Zhang wrote:
>   
>> i patch u two patches to libvirt upstream code. and test hvm start, shutdown, save and pv start.
>> hvm shutdown, hvm save and pv start fail. hvm shutdown and pv start both fail at seqfault in the pthread_mutex_lock in which lock is 0. and called from libxlFDDeregisterEventHook.
>>   
>>     
>
> That is interesting.  I haven't seen this problem, but I'm back to
> testing on our Xen 4.2 packages (which include backports of Ian's
> patches).  I'll have to remove our Xen packages and try xen-untable again.
>   
>   
>> at first, i thought the failure in pv start is because libxlDomainObjPrivateFree is called before libxlFDDeregisterEventHook, but it is not happened from code or from gdb log.
>> So, what if libxlFDDeregisterEventHook is failed at the first time? it is in the pv start. and it will be failed while libxlFDDeregisterEventHook is called before libxlDomainObjPrivateAlloc. test it in gdb, gdb log approve it.
>> from gdb log, the priv is 0x712d60 same in fd register and deregister. the but virMutex is different:
>> in fd register: 0x717d60
>> in fd deregister: 0x712d70
>>   
>>     
>
> I'm testing another version of my libvirt patch that seems to work with
> Xen 4.2.  I'll try it with xen-unstable and if all goes well, I'll send
> you the updated patch for testing on your side.
>   

Ok, I've tested the attached patches on xen-unstable and do not see the
races.  I don't see any problem with hvm guests, but there is a problem
with the console on pv guests.  When viewing the guest's vnc console, I
see "serial0 console" and nothing else.  Seems like the guest is waiting
for the console to initialize before continuing booting.  The vfb setup
in xenstore is quite strange too.  xenstore-ls shows a backend vfb path
of '/local/domain/0/backend/vfb/11/-1' with the following contents

       frontend = "/local/domain/11/device/vfb/-1"
       frontend-id = "11"
       online = "1"
       state = "4"
       domain = "sles11sp2-pv"
       vnc = "1"
       vnclisten = "127.0.0.1"
       vncdisplay = "0"
       vncunused = "0"
       sdl = "0"
       opengl = "0"
       feature-resize = "1"
       hotplug-status = "connected"
       request-update = "1"

The '-1' is odd.  I haven't looked into this problem yet, but don't
think it is related to these patches.  IMO this problem is related to
some console initialization bug.

Can you review and test these patches?  I'd like to get the race issues
resolved and patches committed upstream soon.

Thanks!
Jim
2, 
Jim Fehlig wrote:
> Jim Fehlig wrote:
>   
>> Bamvor Jian Zhang wrote:
>>   
>>     
>>> i patch u two patches to libvirt upstream code. and test hvm start, shutdown, save and pv start.
>>> hvm shutdown, hvm save and pv start fail. hvm shutdown and pv start both fail at seqfault in the pthread_mutex_lock in which lock is 0. and called from libxlFDDeregisterEventHook.
>>>   
>>>     
>>>       
>> That is interesting.  I haven't seen this problem, but I'm back to
>> testing on our Xen 4.2 packages (which include backports of Ian's
>> patches).  I'll have to remove our Xen packages and try xen-untable again.
>>   
>>   
>>     
>>> at first, i thought the failure in pv start is because libxlDomainObjPrivateFree is called before libxlFDDeregisterEventHook, but it is not happened from code or from gdb log.
>>> So, what if libxlFDDeregisterEventHook is failed at the first time? it is in the pv start. and it will be failed while libxlFDDeregisterEventHook is called before libxlDomainObjPrivateAlloc. test it in gdb, gdb log approve it.
>>> from gdb log, the priv is 0x712d60 same in fd register and deregister. the but virMutex is different:
>>> in fd register: 0x717d60
>>> in fd deregister: 0x712d70
>>>   
>>>     
>>>       
>> I'm testing another version of my libvirt patch that seems to work with
>> Xen 4.2.  I'll try it with xen-unstable and if all goes well, I'll send
>> you the updated patch for testing on your side.
>>   
>>     
>
> Ok, I've tested the attached patches on xen-unstable and do not see the
> races.

Hmm, spoke too soon.  When doing save/restore in a loop, I eventually
hit a race between libxlEventHandler() and domain cleanup in
libxlDoDomainSave().

>   I don't see any problem with hvm guests, but there is a problem
> with the console on pv guests.  When viewing the guest's vnc console, I
> see "serial0 console" and nothing else.  Seems like the guest is waiting
> for the console to initialize before continuing booting.  The vfb setup
> in xenstore is quite strange too.  xenstore-ls shows a backend vfb path
> of '/local/domain/0/backend/vfb/11/-1' with the following contents
>
>        frontend = "/local/domain/11/device/vfb/-1"
>        frontend-id = "11"
>        online = "1"
>        state = "4"
>        domain = "sles11sp2-pv"
>        vnc = "1"
>        vnclisten = "127.0.0.1"
>        vncdisplay = "0"
>        vncunused = "0"
>        sdl = "0"
>        opengl = "0"
>        feature-resize = "1"
>        hotplug-status = "connected"
>        request-update = "1"
>
> The '-1' is odd.  I haven't looked into this problem yet, but don't
> think it is related to these patches.  IMO this problem is related to
> some console initialization bug.
>   

I sent a patch to xen-devel to fix this issue

http://lists.xen.org/archives/html/xen-devel/2013-01/msg00137.html

The devid field of vfb and vkb could also have been initialized in the
libxl driver, similar to how we set it in libxlMakeNicList().  But libxl
already sets devid for other devices, so seems the right place to do it
for vfb and vkb devices too.

> Can you review and test these patches?  I'd like to get the race issues
> resolved and patches committed upstream soon.
>   

No need to test the patches.  Maybe we need to rethink this whole
problem and see if there isn't a more elegant solution...

Jim

11:01 2013-01-04
company, colleague, QA, Yoonsuk Cho, report to Sebastian Vollath
"Sebastian Vollath <svollath@suse.de>"_email
it's my pleasure to announce a new team member.
Yoonsuk Cho joined the QA-EMEA team in Nuremberg today. Yoonsuk - also called
Brian - has a strong background in IBM's System Z/s390, where he will focus on
within QA.
Please join me in giving him a warm welcome and support him in getting used to
SUSE and QA.

Thanks,
  Sebastian

16:50 2013-01-04
suse, virtualization, libvirt, qemu, xen, libxlDomainOpenConsole, base on xen4.2, cont1, debug
1, seqfault
#0  0x00007f16f80e9c80 in __errno_location@plt () from /usr/lib64/libvirt.so.0
#1  0x00007f16f8217410 in virNetServerFatalSignal (sig=11,
    siginfo=0x7f16f03be570, context=0x7f16f03be440) at rpc/virnetserver.c:337
#2  <signal handler called>
#3  __pthread_mutex_lock (mutex=0x0) at pthread_mutex_lock.c:50
#4  0x00007f16f817eaec in virConsoleOpen (cons=0x0, pty=0x706b40 "/dev/pts/4",
    st=0x705900, force=false) at conf/virconsole.c:345

and the mutex is empty:
(gdb) frame 3
#3  __pthread_mutex_lock (mutex=0x0) at pthread_mutex_lock.c:50
(gdb) p mutex
$7 = (pthread_mutex_t *) 0x0
1), this is because of missing alloc and free in private alloc and free.
add virConsoleAlloc and VirConsoleFree to libxlDomainObjPrivateAlloc and libxlDomainObjPrivateFree.
2), successful in pv. add console and test it in hvm.

2, even xl and xenconsole could not got it
# xl console 5
xenconsole: Could not read tty from store: No such file or directory
1), test it on xen4.1.2
linux-work:~ # xenstore-read /local/domain/1/serial/0/tty
/dev/pts/1
2), it is not exist in xen4.2

