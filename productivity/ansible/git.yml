
# Write my first ansible configuration file with enough messages. PLEASR DO THE
# JUST ENOUGH comments when introducting new things in ansible configurations(
# Such as *.yml, ansible.cfg and inventory.ini"
# Use the machines in defined in inventory.ini which is specified in ansible.cfg
- hosts: git
  # Get the minimal facts through setup. Otherwise, these tasks will fail at
  # ansible_env.HOME and raise the error The fatal error was: "'ansible_env' is
  # undefined"
  # <http://docs.ansible.com/ansible/latest/setup_module.html>
  gather_facts: no
  pre_tasks:
   - setup:
     gather_subset: min
  tasks:
    # Call curl directly is not suggested by ansible. But I do not know how to
    # check the network connection when the url need to follow the location:
    # -L, --location
    #   (HTTP)  If  the server reports that the requested page
    #   has moved to a different location (indicated with a Location: header and a 3XX response code),
    - name: detect network
      shell: >
          curl -s --connect-timeout 2 baidu.com 2>/dev/null >/dev/null
    - name: detect GFW
      shell: >
          curl -s --connect-timeout 2 google.com 2>/dev/null >/dev/null
    # fetch. I called the git with --work-tree, but somethings it is
    # not worked. Use "cd" at the monment.
    # TODO: better exit messages when local changes exists.
    - name: git fetch
      shell:
        cd {{ ansible_env.HOME }}/works/open_log;
        git fetch
    - name: check if git tree clean
      shell:
        cd {{ ansible_env.HOME }}/works/open_log;
        ret=`git status --porcelain --untracked-files=no`;
        if [ "$ret" != "" ]; then
            exit 1;
        fi
      ignore_errors: true
      register: git_status_result
    - name: git tree unclean
      fail:
        msg: "git tree unclean. please commit then retry"
      when: "git_status_result.rc == 1"
    - name: git rebase
      shell:
        cd {{ ansible_env.HOME }}/works/open_log;
        git rebase;
      ignore_errors: true
      register: git_rebase_result
      when: "git_status_result.rc == 0"
    # Output the git rebase output user may need the information
    - name: git rebase result
      debug:
        msg: "{{ git_rebase_result.stdout }}"
      when: "git_rebase_result.rc == 0"
    - name: git push
      shell:
        cd {{ ansible_env.HOME }}/works/open_log;
        git push;
      when: "git_rebase_result.rc == 0"
