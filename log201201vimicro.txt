.LOG
16:41 2012-1-4
时间管理
1, 本日
1), 上午: 半天年假. 
2), VC0882L sync up.
3), 支持xiaotao和hancheng做android cpufreq测试. 
4), 16:44- arm总结: 环境. 

2, 次日
1), arm环境文档准备. 
log system, regular expression时间关系可能没法单独介绍. 放在arm training里面一起介绍.
2), 整理电脑上面的资料. 


17:22 2012-1-4
arm, 总结, 文档, arm总结3, 环境升级, arm启动代码: assemaby, library init; VC0882 bootloader启动代码; 详细
1, 开发工具准备. 
rvds4.0 install, license设置. rvdebugger试用. rvds4.0与rvds3.0共存(见: D:\VC0882\document\arm\debug\与VC0598环境共存.doc). 

2, VC0882 FPGA ready之前, 在OMAP3530上跑通AASP. 
1), Cortex-A8最小环境实验. 
(1), 更换了Cpu和工具链, 从最小环境开始实验, 最终使nucleus在环境上运行正常. 
最小环境参考"RealView Compilation Tools Developer Guide.pdf"Chapter 3 Embedded Software Development, 原始代码见"C:\Program Files\ARM\RVDS\Examples\4.0\77\windows\emb_sw_dev"
一步一步针对VC0830, OMAP3530, VC0882实验了. 代码见"D:\VC0882\mini_env\mini_c_env_base", 工程说明见"readme.txt", 使用方法见"userguide.doc". 

(2), 增量开发.
时间关系只是说明build1和build_aasp. 编译规则见Makefile. 
build1: 纯semihost方式, 除了arm和memory不使用板子上的其它硬件. 
build2: 实现uart基本操作函数以实现printf, scanf等. 
build3, 增加了"__user_initial_stackheap"(source\uish.s). 
build4: 增加了vector和$Sub$$main(), 使用了timer.
build5: 更灵活的链接脚本: 链接脚本中指定寄存器基址. 这个和panda_os不同, 所以没有实验. 
build_aasp: 支持aasp(见下一节"2"). 

(3), 其它小环境. 
为了便于使用, 还建立了其它小环境. 
mini_c_env_nolib是不使用库的小环境. 主要用于32k sram等memory很小的情况. 
由于armcc要求, 如果有library, 实际代码的入口地址是0x8000(gcc相同). 
此外这个环境里面加入了"data abort handler", 当时是为了ddr training加入. 

2), 移植AASP到OMAP3530. 
aasp改进: 支持标准库(所以也支持semihost), 支持其他终端(退格和DEL功能相同, 支持上下键翻页).

3, VC0882 FPGA环境准备. 
详见FPGA环境总结: "D:\VC0882\document\fpga\VC0882_FPGA注意事项.txt", "VC0882 FPGA环境稳定性总结.txt". 
csat调试工具, 参加issue8853, 9228. 

4, VC0882 FPGA跑通Nucleus.
1), 首先把OMAP3530上面跑过的软件都跑通("2-1)"). 
2), 跑通Nucleus. 
rvds4.0不在支持"--apcs /adsabi"这个参数
初始化代码：调用库的方式，进入c的方式直接调用main函数. 
os支持：tick(64 bit continueus timer), irq(64bit), malloc(cache line对齐).
mmu, cache：对a8的部分支持。mmu attribute的选择。page table attribute修改函数。
建议VC0718使用device而不是strongly-ordered, 这样更接近实际情况, 有可能测出更多问题. \todo 加入ic bug, kongyingqi dsb 问题. 
irq
  根据"VC1600_MAS_Interrupt_Controller_V0.93"5.4更新寄存器. 
  根据VC0882数量更新: panda_init.s的INT_IRQ_Vectors.
修改cache,mmu代码为cortex-a8. copy from TI uboot
为修改"main"做准备:
1), aasp shell: 
task_aasp_func()->cyg_user_start()->aasp_shell(). 其中task_aasp_func是nucleus task. \todo 到底怎么启动的. 需要看.
2), 原有"main"函数中硬件初始化部分: 
INC_Initialize()->Application_Initialize()->InitVC0598()
3), 需要理解nucleus如何管理memory. rvds4.0文档提到如果OS管理memory分配, 有些注意事项. 

5, 其它:
1), emi bootloader. 
2), ddrc script.
脚本: regdef script.

14:53 2012-1-6
arm, training
1, thumb-2里面如何区分是16bit, 32bit指令? 用特定的bit区分?
2, cache clean 会不会过write buffer? 

23:54 2012-1-9
performance monitor结合mas介绍。
脚本先show log assistant 和bootloader info 处理脚本。
然后从正则表达式说起。
应该说是主要分享正则表达式。
vc aasp 脚本，如果按正则表达式parser会更准备。
如果有时间试一下cscope python脚本工具。

请小涛把Android performance monitor 跑起来。

16:27 2012-1-10
total commander: shift+F12. 同步时间戳.
hanchen: kernel会存默认log? 

1:14 2012-1-11
android, 自动测试
看起来之前想的模拟点击是可行的，只是当时没有分析触摸屏设备的操作流程，明天中午试试。

16:47 2012-1-11
同事留言：
FanZhiJun: 外表IT民工，内在文艺青年。

16:51 2012-1-11
昨天请同事吃饭，聊到说我在882 arm上英语也提高了。我还举例说去年arm年会我和一个baseband方案的外国人用英语交流。结果caijin说，那人其实汉语说的挺好的，我和他交流后，看到他和别人用汉语交流。我觉我太逗了。

15:11 2012-2-3
arm, trace
今天蔡进终于把trace调通了，原因是trace转接板坏了。
